
&НаКлиенте
Процедура РасписаниеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Форма = Новый ДиалогРасписанияРегламентногоЗадания(Расписание);
	//Чуров
	Форма.Показать(Новый ОписаниеОповещения("ДиалогРасписанияРегламентногоЗаданияЗавершение", ЭтаФорма));
	//Если Форма.ОткрытьМодально() = Истина Тогда
	//	Расписание = Форма.Расписание;
	//КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДиалогРасписанияРегламентногоЗаданияЗавершение(РасписаниеРЗ, ДополнительныеПараметры) Экспорт
	Если РасписаниеРЗ <> Неопределено Тогда
		Расписание = РасписаниеРЗ;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПриОткрытиНаСервере();
	Элементы.ТаблицаДействийВидКИ.ОграничениеТипа = Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.ДополнительныеРеквизитыИСведения");
КонецПроцедуры

&НаСервере
Процедура ПриОткрытиНаСервере()
	СправочникОбъект = РеквизитФормыВЗначение("Объект");
	Расписание = СправочникОбъект.ВернутьСодержимоеХранилища();
	Если Расписание = Неопределено Тогда
		Расписание = Новый РасписаниеРегламентногоЗадания();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПоместитьВХранилищеДанные()
	СправочникОбъект = РеквизитФормыВЗначение("Объект");                  
	СправочникОбъект.ЗаписатьСодержимоеХранилища(Расписание);
	СправочникОбъект.Записать();
	ЗначениеВРеквизитФормы(СправочникОбъект, "Объект");
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	ПоместитьВХранилищеДанные();
КонецПроцедуры
	
&НаКлиенте
Процедура КатегорииПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	СинхронизироватьТаблицы(Элементы.Действия.ТекущиеДанные.Действие, 
			Элементы.Действия.ТекущиеДанные.Шаблон);	
КонецПроцедуры

&НаКлиенте
Процедура КатегорииПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
КонецПроцедуры

&НаСервере
Процедура СинхронизироватьТаблицы(Действие, Шаблон)
	//НаборСтрок = Объект.ТаблицаДействий.НайтиСтроки(Новый Структура("Действие, Шаблон", Действие, Шаблон)); 
	//Для Каждого Элемент Из НаборСтрок Цикл
	//	Объект.ТаблицаДействий.Удалить();
	//КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаДействийПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока Тогда
		Элемент.ТекущиеДанные.Используется = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаДействийПередНачаломИзменения(Элемент, Отказ)
	ТекСтрока = Элементы.ТаблицаДействий.ТекущиеДанные;
	Если ТекСтрока.Действие = ПредопределенноеЗначение("Перечисление.ВариантыДействийДляСкоринга.ПроизвольноеДействие") Тогда        
		Если ТипЗнч(ТекСтрока.Шаблон) <> Тип("СправочникСсылка.ФункцииБизнесПроцессов") Тогда
			ТекСтрока.Шаблон = ПредопределенноеЗначение("Справочник.ФункцииБизнесПроцессов.ПустаяСсылка");
		КонецЕсли;
	ИначеЕсли ТекСтрока.Действие = ПредопределенноеЗначение("Перечисление.ВариантыДействийДляСкоринга.ЗапускБП") Тогда			
		Если ТипЗнч(ТекСтрока.Шаблон) <> Тип("СправочникСсылка.ОперацииБП") Тогда
			ТекСтрока.Шаблон = ПредопределенноеЗначение("Справочник.ОперацииБП.ПустаяСсылка");
		КонецЕсли;	
	ИначеЕсли ТекСтрока.Действие = ПредопределенноеЗначение("Перечисление.ВариантыДействийДляСкоринга.ЗавершениеБП") Тогда
		Если ТипЗнч(ТекСтрока.Шаблон) <> Тип("СправочникСсылка.ОперацииБП") Тогда
			ТекСтрока.Шаблон = ПредопределенноеЗначение("Справочник.ОперацииБП.ПустаяСсылка");
		КонецЕсли;	
	Иначе
		Если ТипЗнч(ТекСтрока.Шаблон) <> Тип("СправочникСсылка.ШаблоныТекстаДляАвтоинформирования") Тогда
			ТекСтрока.Шаблон = ПредопределенноеЗначение("Справочник.ШаблоныТекстаДляАвтоинформирования.ПустаяСсылка");
		КонецЕсли;	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаДействийДействиеПриИзменении(Элемент)
	ТекСтрока = Элементы.ТаблицаДействий.ТекущиеДанные;
	Если ТекСтрока.Действие = ПредопределенноеЗначение(
			"Перечисление.ВариантыДействийДляСкоринга.ПроизвольноеДействие") Тогда
		Если ТипЗнч(ТекСтрока.Шаблон) <> Тип("СправочникСсылка.ФункцииБизнесПроцессов") Тогда
			ТекСтрока.Шаблон = ПредопределенноеЗначение("Справочник.ФункцииБизнесПроцессов.ПустаяСсылка");
		КонецЕсли;
	ИначеЕсли ТекСтрока.Действие = ПредопределенноеЗначение("Перечисление.ВариантыДействийДляСкоринга.ЗапускБП") Тогда
		Если ТипЗнч(ТекСтрока.Шаблон) <> Тип("СправочникСсылка.ОперацииБП") Тогда
			ТекСтрока.Шаблон = ПредопределенноеЗначение("Справочник.ОперацииБП.ПустаяСсылка");
		КонецЕсли;		
	ИначеЕсли ТекСтрока.Действие = ПредопределенноеЗначение("Перечисление.ВариантыДействийДляСкоринга.ЗавершениеБП") Тогда
		Если ТипЗнч(ТекСтрока.Шаблон) <> Тип("СправочникСсылка.ОперацииБП") Тогда
			ТекСтрока.Шаблон = ПредопределенноеЗначение("Справочник.ОперацииБП.ПустаяСсылка");
		КонецЕсли;		
	Иначе
		Если ТипЗнч(ТекСтрока.Шаблон) <> Тип("СправочникСсылка.ШаблоныТекстаДляАвтоинформирования") Тогда
			ТекСтрока.Шаблон = ПредопределенноеЗначение("Справочник.ШаблоныТекстаДляАвтоинформирования.ПустаяСсылка");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьСейчас(Команда)
	Записать();
	ФоновыеЗаданияМодуль.РегламентныеДействияПоКатегориямСкоринга(Объект.Ссылка);
КонецПроцедуры
