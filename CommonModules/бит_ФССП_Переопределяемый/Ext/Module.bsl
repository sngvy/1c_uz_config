Процедура ЗаполнитьЗапрос(Контрагент_Ссылка,Фамилия,Имя,Отчество,ДатаРождения,КодРегиона) Экспорт
	//По Значениею Контрагент_Ссылка получаем необходимую информацию для Запроса	
	ФИО = Контрагент_Ссылка.Наименование;
	Фамилия = Лев(ФИО, СтрНайти(ФИО, " ") - 1);
	Имя = Сред(ФИО, СтрНайти(ФИО, " ") + 1, СтрНайти(ФИО, " ", ,,2) -СтрНайти(ФИО, " ") );
	Имя = СтрЗаменить(Имя," ","");
	Отчество = СтрЗаменить(Сред(ФИО, СтрНайти(ФИО, " ", ,,2), стрДлина(ФИО) -СтрНайти(ФИО, " ", ,,2) + 1)," ","");
	Рег = ПолучитьКодРегионаПоДолжнику(Контрагент_Ссылка);
	Если Рег = Неопределено Тогда
		Сообщить("Не удалось определить регион физического лица!");
		КодРегиона = 0;
	Иначе	
		КодРегиона = Рег;
	КонецЕсли;
	ДР = ПолучитьДатуРожденияДолжника(Контрагент_Ссылка);
	Если ДР = Неопределено Тогда
		Сообщить("Не удалось определить дату рождения физического лица!");
		ДатаРождения = Дата(1,1,1);
	Иначе	
		ДатаРождения = ДР;
	КонецЕсли;
КонецПроцедуры

Функция ПолучитьТекущегоПользователя() Экспорт
	Возврат ПараметрыСеанса.ТекущийПользователь;
	//Возврат Справочники.ФССП_Пользователи.НайтиПоКоду("000000001",Истина,,);
КонецФункции

Функция ПолучитьИмяСправочникаСлужбыСудебныхПриставов() Экспорт
	Возврат "ФССП_СлужбыСудебныхПриставов";
КонецФункции	

Функция ПолучитьИмяСправочникаСудебныеПриставы() Экспорт
	Возврат "СудебныеПриставы";
КонецФункции	

Функция ПолучитьВидТелефонаРабочий()Экспорт
	Возврат Справочники.ВидыТелефонов.Рабочий;
	//Возврат "Рабочий";
КонецФункции

Функция ПолучитьВидТелефонаФакс()Экспорт
	//Возврат "Факс";
	Факс = Справочники.ВидыТелефонов.НайтиПоНаименованию("Факс",Истина,,);
	Если Факс = Неопределено Тогда
		ФаксОб = Справочники.ВидыТелефонов.СоздатьЭлемент();
		ФаксОб.Наименование = "Факс";
		ФаксОб.Записать();
		Факс = ФаксОб.Ссылка;
	КонецЕсли;	
	Возврат Факс;
	
КонецФункции

Функция ПолучитьКолонкуТЧТелефоны()Экспорт
	Возврат "Номер";
КонецФункции

//Функции для парсинга приставов и ОСП

Функция ПолучитьДолжника(ФИО, ДатаРождения) Экспорт
	ДатаРожденияДопСвойство = бит_ФССП_Переопределяемый.ПолучитьКонстантуДатаРожденияДолжникаФССП();
	Запрос = Новый запрос("ВЫБРАТЬ
	| Контрагенты.Ссылка КАК Ссылка,
	| ДополнительныеСведения.Значение КАК Значение
	|ИЗ
	| Справочник.Контрагенты КАК Контрагенты
	|         ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
	|         ПО Контрагенты.Ссылка = ДополнительныеСведения.Объект
	|                 И (ДополнительныеСведения.Свойство = &Свойство)
	|ГДЕ
	| Контрагенты.Наименование = &Наименование
	| И Контрагенты.ПометкаУдаления = ЛОЖЬ
	| И ДополнительныеСведения.Значение = &Значение");
	
	Запрос.УстановитьПараметр("Наименование", ФИО);
	Запрос.УстановитьПараметр("Значение", ДатаРождения);
	Запрос.УстановитьПараметр("Свойство", ДатаРожденияДопСвойство);

	Результат = Запрос.Выполнить().Выбрать();
	Если Результат.Следующий() Тогда
		Возврат Результат.Ссылка;
	Иначе
		Возврат Справочники.Контрагенты.ПустаяСсылка();
	КонецЕсли;

	//Возврат Справочники.ФССП_Контрагенты.НайтиПоНаименованию(ФИО,Истина);
КонецФункции

Функция ПолучитьКонстантуАдресДолжникаФССП()Экспорт
	СвойствоАдрес = Константы.АдресДолжникаФССП.Получить();
	Возврат СвойствоАдрес; 
КонецФункции

Функция ПолучитьКонстантуДатаРожденияДолжникаФССП()Экспорт
	СвойствоДР = Константы.ДатаРожденияДолжникаФССП.Получить();
	Возврат СвойствоДР; 
КонецФункции



Функция ПолучитьКодРегионаПоИндексу(Индекс) Экспорт
	//Индекс = "127549"
	Значение = 0;
	Значение = ФЗ_230.ПолучитьКодРегионаПоИндексуКЛАДР(Индекс);
	Если Значение = 0 Тогда
		Значение = ФЗ_230.ПолучитьКодРегионаПоИндексуФИАС(Индекс);
	КонецЕсли;
	Если Значение = 0 Тогда
		Значение = ФЗ_230.ПолучитьКодРегионаПоИндексуЭталонныйСправочник(Индекс);
	КонецЕсли;
	Возврат Значение;	
		
	//Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 100
	//|АдресныйКлассификатор.КодАдресногоОбъектаВКоде КАК КодАдресногоОбъектаВКоде,
	//|       ВЫРАЗИТЬ(АдресныйКлассификатор.Индекс КАК СТРОКА(3)) КАК стрИндек
	//|ИЗ
	//|       РегистрСведений.АдресныйКлассификатор КАК АдресныйКлассификатор
	//|ГДЕ
	//|       (ВЫРАЗИТЬ(АдресныйКлассификатор.Индекс КАК СТРОКА(3))) = &Индекс");
	//
	//
	//Запрос.УстановитьПараметр("Индекс", Лев(Индекс, 3));
	//Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
	//|       АдресныйКлассификатор.КодАдресногоОбъектаВКоде КАК КодАдресногоОбъектаВКоде,
	//|       АдресныйКлассификатор.Индекс КАК стрИндекc
	//|ИЗ
	//|       РегистрСведений.АдресныйКлассификатор КАК АдресныйКлассификатор
	//|ГДЕ
	//|       АдресныйКлассификатор.Индекс = &Индекс");
	//
	//Запрос.УстановитьПараметр("Индекс", Индекс);
	//
	//Результат = Запрос.Выполнить().Выбрать();
	//Если Результат.Следующий() Тогда
	//	Значение = Результат.КодАдресногоОбъектаВКоде;
	//Иначе
	//	Запрос1 = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 100
	//	|       АдресныйКлассификатор.КодАдресногоОбъектаВКоде КАК КодАдресногоОбъектаВКоде,
	//	|       ВЫРАЗИТЬ(АдресныйКлассификатор.Индекс КАК СТРОКА(3)) КАК стрИндек
	//	|ИЗ
	//	|       РегистрСведений.АдресныйКлассификатор КАК АдресныйКлассификатор
	//	|ГДЕ
	//	|       (ВЫРАЗИТЬ(АдресныйКлассификатор.Индекс КАК СТРОКА(3))) = &Индекс");
	//	Запрос1.УстановитьПараметр("Индекс", Лев(Индекс, 3));
	//	Результат1 = Запрос1.Выполнить().Выбрать();
	//	Если Результат1.Следующий() Тогда
	//		Значение = Результат1.КодАдресногоОбъектаВКоде;
	//	Иначе
	//		Значение = 0;
	//	КонецЕсли;
	//КонецЕсли;
	//Возврат Значение;

	
КонецФункции

Функция ПолучитьРОСП(Наименование, КодРегиона) Экспорт
	ИмяСправочникаССП = бит_ФССП_Переопределяемый.ПолучитьИмяСправочникаСлужбыСудебныхПриставов();
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	СлужбыСудебныхПриставов.Ссылка КАК Ссылка,
	|	СлужбыСудебныхПриставов.Наименование КАК Наименование,
	|	СлужбыСудебныхПриставов.КодРегиона КАК КодРегиона,
	|	СлужбыСудебныхПриставов.НаименованиеПолное КАК НаименованиеПолное
	|ИЗ
	|	Справочник."+ИмяСправочникаССП+" КАК СлужбыСудебныхПриставов
	|ГДЕ
	|	СлужбыСудебныхПриставов.ЭтоГруппа = ЛОЖЬ
	|	И СлужбыСудебныхПриставов.НаименованиеПолное = &Наименование
	|	И СлужбыСудебныхПриставов.КодРегиона = &КодРегиона
	|	И СлужбыСудебныхПриставов.ПометкаУдаления = ЛОЖЬ";
	
	Запрос.УстановитьПараметр("Наименование",Наименование);
	Запрос.УстановитьПараметр("КодРегиона",Число(КодРегиона));
	//Запрос.УстановитьПараметр("КодТерриториальногоАгенства",КодОСП);
	
	Результат = Запрос.Выполнить().Выбрать();
	
	Если Результат.Следующий() Тогда
		Возврат Результат.Ссылка;
	Иначе
		Возврат Справочники[ИмяСправочникаССП].ПустаяСсылка();
	КонецЕсли;	
КонецФункции

Функция ПоискПриставаВБазе(Регион, ИмяПристава,НазваниеОСП) Экспорт
	
	ИмяСправочникаПриставов = бит_ФССП_Переопределяемый.ПолучитьИмяСправочникаСудебныеПриставы();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СудебныеПриставы.Ссылка КАК Ссылка
	               |ИЗ
	               |	Справочник."+ИмяСправочникаПриставов+" КАК СудебныеПриставы
	               |ГДЕ
	               |	СудебныеПриставы.ФамилияИО = &Наименование
	               |	И СудебныеПриставы.Родитель.Наименование = &ОСП
	               |	И СудебныеПриставы.Родитель.Родитель.КодРегиона = &КодРегиона
	               |	И СудебныеПриставы.ПометкаУдаления = ЛОЖЬ
	               |	И СудебныеПриставы.ЭтоГруппа = ЛОЖЬ";
	
	Запрос.УстановитьПараметр("Наименование",ИмяПристава);
	Запрос.УстановитьПараметр("КодРегиона",Число(Регион));
	Запрос.УстановитьПараметр("ОСП",НазваниеОСП);
	
	Результат = Запрос.Выполнить().Выбрать();
	
	Если Результат.Следующий() Тогда
		Возврат Результат.Ссылка;
	Иначе
		Возврат Справочники[ИмяСправочникаПриставов].ПустаяСсылка();
	КонецЕсли;	

КонецФункции

Функция ПоискПапкиРегион(КодРегиона) экспорт
	ИмяСправочникаПриставов = бит_ФССП_Переопределяемый.ПолучитьИмяСправочникаСудебныеПриставы();
	 
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СудебныеПриставы.Ссылка КАК Ссылка,
	               |	СудебныеПриставы.КодРегиона КАК КодРегиона,
	               |	СудебныеПриставы.Наименование КАК Наименование
	               |ИЗ
	               |	Справочник."+ИмяСправочникаПриставов+" КАК СудебныеПриставы
	               |ГДЕ
	               |	СудебныеПриставы.ЭтоГруппа = ИСТИНА
				   | 	И СудебныеПриставы.Родитель = &Родитель
				   |	И СудебныеПриставы.КодРегиона = &КодРегиона
	               |	И СудебныеПриставы.ПометкаУдаления = ЛОЖЬ";
	
	Запрос.УстановитьПараметр("КодРегиона",Число(КодРегиона));
	Запрос.УстановитьПараметр("Родитель",Справочники[ИмяСправочникаПриставов].ПустаяСсылка());
	Результат = Запрос.Выполнить().Выбрать();
	Если Результат.Следующий() Тогда
		Возврат Результат.Ссылка;
	Иначе
		Возврат Справочники[ИмяСправочникаПриставов].ПустаяСсылка();
	КонецЕсли;	
КонецФункции

Функция ПоискПапкиОСП(Наименование, Родитель) экспорт
	ИмяСправочникаПриставов = бит_ФССП_Переопределяемый.ПолучитьИмяСправочникаСудебныеПриставы();
	ЗапросПапкаОСП = Новый Запрос;
	ЗапросПапкаОСП.Текст =
	"ВЫБРАТЬ
	|        СудебныеПриставы.Ссылка КАК Ссылка
	|ИЗ
	|        Справочник."+ИмяСправочникаПриставов+" КАК СудебныеПриставы
	|ГДЕ
	|        СудебныеПриставы.ЭтоГруппа = ИСТИНА
	|        И СудебныеПриставы.ПометкаУдаления = ЛОЖЬ
	|        И СудебныеПриставы.Наименование = &Наименование
	|        И СудебныеПриставы.Родитель = &Родитель";
	
	ЗапросПапкаОСП.УстановитьПараметр("Наименование", Наименование);
	ЗапросПапкаОСП.УстановитьПараметр("Родитель", Родитель);	
	РезультатЗапроса = ЗапросПапкаОСП.Выполнить().Выгрузить();
	Если РезультатЗапроса.Количество() > 0 Тогда
		Возврат РезультатЗапроса[0].Ссылка;
	Иначе
		Возврат Справочники[ИмяСправочникаПриставов].ПустаяСсылка();
	КонецЕсли;
КонецФункции

процедура ОбработатьНомерТелефона(СтрокаТЧ,НомерБезСимволов) Экспорт
	//ТипСтрокаТЧ =  Строка(Тип("СправочникТабличнаяЧастьСтрока.СудебныеПриставы.Телефоны"));
	//ТипВходящейСтроки = Строка(ТипЗнч(СтрокаТЧ));
	//Если ТипВходящейСтроки = ТипСтрокаТЧ Тогда
	//	УправлениеКонтактнойИнформацией.РазбитьНомерТелефонаНаСоставляющие(СтрокаТЧ,НомерБезСимволов);
	//Иначе	
	//	СтрокаТЧ.Номер = НомерБезСимволов;
	//КонецЕсли;
	УдалитьУправлениеКонтактнойИнформацией.РазбитьНомерТелефонаНаСоставляющие(СтрокаТЧ,НомерБезСимволов);
	

КонецПроцедуры

Процедура СвернутьДублиТЧтелефоны(ТЧ) экспорт
	//ТипТЧ =  Строка(Тип("СправочникТабличнаяЧасть.СудебныеПриставы.Телефоны"));
	//ТипВходящейТЧ = Строка(ТипЗнч(ТЧ));
	//Если ТипВходящейТЧ = ТипТЧ Тогда
	//	ТЧ.Свернуть("ВидТелефона,Номер,НомерТелефона,НомерДляПоиска,КодГорода,КодСтраны,Добавочный,Комментарий");
	//Иначе
	//	ТЧ.Свернуть("ВидТелефона,Номер");
	//КонецЕсли;
	ТЧ.Свернуть("ВидТелефона,Номер,НомерТелефона,НомерДляПоиска,КодГорода,КодСтраны,Добавочный,Комментарий");
КонецПроцедуры	

Функция ПолучитьРОСПКодТерриториальногоАгенства(КодТерриториальногоАгенства, КодРегиона) Экспорт
	ИмяСправочникаССП = бит_ФССП_Переопределяемый.ПолучитьИмяСправочникаСлужбыСудебныхПриставов();
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	СлужбыСудебныхПриставов.Ссылка КАК Ссылка,
	|	СлужбыСудебныхПриставов.Наименование КАК Наименование,
	|	СлужбыСудебныхПриставов.КодРегиона КАК КодРегиона,
	|	СлужбыСудебныхПриставов.НаименованиеПолное КАК НаименованиеПолное
	|ИЗ
	|	Справочник."+ИмяСправочникаССП+" КАК СлужбыСудебныхПриставов
	|ГДЕ
	|	СлужбыСудебныхПриставов.ЭтоГруппа = ЛОЖЬ
	|	И СлужбыСудебныхПриставов.КодТерриториальногоАгенства = &КодТерриториальногоАгенства
	|	И СлужбыСудебныхПриставов.КодРегиона = &КодРегиона
	|	И СлужбыСудебныхПриставов.ПометкаУдаления = ЛОЖЬ";
	
	Запрос.УстановитьПараметр("КодТерриториальногоАгенства",КодТерриториальногоАгенства);
	Запрос.УстановитьПараметр("КодРегиона",КодРегиона);
	//Запрос.УстановитьПараметр("КодТерриториальногоАгенства",КодОСП);
	
	Результат = Запрос.Выполнить().Выбрать();
	
	Если Результат.Следующий() Тогда
		Возврат Результат.Ссылка;
	Иначе
		Возврат Справочники[ИмяСправочникаССП].ПустаяСсылка();
	КонецЕсли;	
КонецФункции

Функция ПолучитьКодРегионаПоДолжнику(Должник) Экспорт
	АдресДопСвойство = Константы.АдресДолжникаФССП.Получить();
	Адрес = "";
	Регион = 0;
	ВидСтроки = АдресДопСвойство.ВидСтроки;
	Если не ЗначениеЗаполнено(АдресДопСвойство) Тогда
		Возврат Регион;
	Иначе 
		КодСвойства = АдресДопСвойство.Код;     
		Если Не ЗначениеЗаполнено(ВидСтроки) Тогда
			Регион = ОбъектыСервер.ПолучитьЗначениеСвойства(Должник,КодСвойства);
			Возврат Регион;
		КонецЕсли;	
		Адрес = ОбъектыСервер.ПолучитьЗначениеСвойства(Должник,КодСвойства);
		Индекс = ФЗ_230.ПолучитьИндексПоАдресу(Адрес,"Индекс",ВидСтроки);
		Если Не ЗначениеЗаполнено(Индекс) и ВидСтроки = Перечисления.ВидыТипаСтрока.Строка Тогда  
			Регион = ФЗ_230.ПолучитьКодРегионаПоСтроке(Адрес); 
		Иначе
			Регион = ФЗ_230.ПолучитьКодРегионаПоИндексу(Индекс,ВидСтроки); 
		КонецЕсли;
		Возврат Регион;
	КонецЕсли;
КонецФункции

Функция ПолучитьДатуРожденияДолжника(Должник) Экспорт
	ДатаРожденияДопСвойство  = Константы.ДатаРожденияДолжникаФССП.Получить();
	ДатаРождения = Дата(1,1,1);
	Если  Не ЗначениеЗаполнено(ДатаРожденияДопСвойство) Тогда
		Возврат ДатаРождения;
	Иначе
		КодСвойства = ДатаРожденияДопСвойство.Код;
		ДатаРождения = ОбъектыСервер.ПолучитьЗначениеСвойства(Должник, КодСвойства);
		Возврат ДатаРождения;
	КонецЕсли;
КонецФункции

Функция  ПолучитьИмяСправочникаКонтрагенты() Экспорт
	Возврат "Контрагенты";
КонецФункции	

Функция СформироватьСписокДолжников() Экспорт
	//ИмяСправочникаКонтрагенты = бит_ФССП_Переопределяемый.ПолучитьИмяСправочникаКонтрагенты();
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	Контрагенты.Ссылка КАК ОбъектДолжник
	//	|ИЗ
	//	|	Справочник."+ИмяСправочникаКонтрагенты+" КАК Контрагенты
	//	| ГДЕ Контрагенты.Родитель = &Родитель
	//	|
	//	|УПОРЯДОЧИТЬ ПО
	//	|	Контрагенты.Наименование";
	//
	//Запрос.УстановитьПараметр("Родитель", Справочники.Контрагенты.НайтиПоНаименованию("ФизЛица",Истина,,));
	//РезультатЗапроса = Запрос.Выполнить();
	//
	//ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	//Возврат ВыборкаДетальныеЗаписи;
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ 
	                      |	ОбъектыВРаботеОстатки.Объект.Должник КАК ОбъектДолжник
	                      |ИЗ
	                      |	РегистрНакопления.ОбъектыВРаботе.Остатки КАК ОбъектыВРаботеОстатки
	                      |ГДЕ
	                      |	ЕСТЬNULL(ОбъектыВРаботеОстатки.Объект.Должник, 0) <> 0
	                      |	И ОбъектыВРаботеОстатки.Объект.Должник.ЮрФизЛицо = &ЮрФизЛицо
	                      |	И ОбъектыВРаботеОстатки.Объект.Должник.ПометкаУдаления = ЛОЖЬ
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	ОбъектыВРаботеОстатки.Объект.Должник.Наименование");
	Запрос.УстановитьПараметр("ЮрФизЛицо", Справочники.ЮрФизЛицо.ФизЛицо);
	Результат = Запрос.Выполнить().Выбрать();
	
	Возврат Результат; 
	
КонецФункции 