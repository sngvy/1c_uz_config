
&НаКлиенте
Процедура Подбор(Команда)
	ОбъектыКлиент.Подбор(ЭтаФорма);
КонецПроцедуры

&НаСервере
Процедура СоздатьСписокНаСервере()
	
	Если ВидыТелефонов = 1 Тогда
		//Выгружаем все телефоны
		Объект.СписокДляАО.Очистить();
		ТЗ_ДО = Объект.Объекты.Выгрузить();
		Долговые = ТЗ_ДО.ВыгрузитьКолонку("Объект");
		Запрос = Новый Запрос("ВЫБРАТЬ
		|	Объекты.Объект КАК ДО
		|ПОМЕСТИТЬ СписокДО
		|ИЗ
		|	&Объекты КАК Объекты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СписокДО.ДО КАК ДО,
		|	КонтрагентыТелефоны.ВидТелефона КАК ВидТелефона,
		|	КонтрагентыТелефоны.Номер КАК Номер,
		|	КонтрагентыТелефоны.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ПервыеТелефоны
		|ИЗ
		|	СписокДО КАК СписокДО
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Контрагенты.Телефоны КАК КонтрагентыТелефоны
		|		ПО СписокДО.ДО.Должник = КонтрагентыТелефоны.Ссылка ;
		|
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПервыеТелефоны.ДО.Наименование КАК СтрокаАвтообзвона,
		|	ПервыеТелефоны.ВидТелефона КАК ВидТелефона,
		|	ПервыеТелефоны.Номер КАК НомерТелефона,
		|	ПервыеТелефоны.Ссылка КАК Должник
		|ИЗ
		|	ПервыеТелефоны КАК ПервыеТелефоны");
		Запрос.УстановитьПараметр("Объекты", тЗ_ДО);
		Результат = Запрос.Выполнить().Выбрать();
		//Объект.СписокДляАО.Загрузить(Запрос.Выполнить().Выгрузить());
	Пока Результат.Следующий() Цикл
			НовСтр = Объект.СписокДляАО.Добавить();
			НовСтр.Должник = Результат.Должник;
			НовСтр.ВидТелефона = Результат.ВидТелефона;
			НовСтр.НомерТелефона =  бит_ТелефонияКлиентСервер.ОчиститьНомерТолькоЦифры(Результат.НомерТелефона);
			НовСтр.СтрокаАвтообзвона = Результат.СтрокаАвтообзвона;
		КонецЦикла;

		
	ИначеЕсли ВидыТелефонов = 2 Тогда
		//Выгружаем по типу
		Если ПервыйНомер = Ложь Тогда
			//Выгружаем все заданного типа
			Объект.СписокДляАО.Очистить();
			ТЗ_ДО = Объект.Объекты.Выгрузить();
			Долговые = ТЗ_ДО.ВыгрузитьКолонку("Объект");
			Запрос = Новый Запрос("ВЫБРАТЬ
			|	Объекты.Объект КАК ДО
			|ПОМЕСТИТЬ СписокДО
			|ИЗ
			|	&Объекты КАК Объекты
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СписокДО.ДО КАК ДО,
			|	КонтрагентыТелефоны.ВидТелефона КАК ВидТелефона,
			|	КонтрагентыТелефоны.Номер КАК Номер,
			|	КонтрагентыТелефоны.Ссылка КАК Ссылка
			|ПОМЕСТИТЬ ПервыеТелефоны
			|ИЗ
			|	СписокДО КАК СписокДО
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Контрагенты.Телефоны КАК КонтрагентыТелефоны
			|		ПО СписокДО.ДО.Должник = КонтрагентыТелефоны.Ссылка
			|			И (КонтрагентыТелефоны.ВидТелефона = &ВидТелефона)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ПервыеТелефоны.ДО.Наименование КАК СтрокаАвтообзвона,
			|	ПервыеТелефоны.ВидТелефона КАК ВидТелефона,
			|	ПервыеТелефоны.Номер КАК НомерТелефона,
			|	ПервыеТелефоны.Ссылка КАК Должник
			|ИЗ
			|	ПервыеТелефоны КАК ПервыеТелефоны");
			Запрос.УстановитьПараметр("ВидТелефона", Тип);
			Запрос.УстановитьПараметр("Объекты", тЗ_ДО);
			Результат = Запрос.Выполнить().Выбрать();
			//Объект.СписокДляАО.Загрузить(Запрос.Выполнить().Выгрузить());
			Пока Результат.Следующий() Цикл
				НовСтр = Объект.СписокДляАО.Добавить();
				НовСтр.Должник = Результат.Должник;
				НовСтр.ВидТелефона = Результат.ВидТелефона;
				НовСтр.НомерТелефона =  бит_ТелефонияКлиентСервер.ОчиститьНомерТолькоЦифры(Результат.НомерТелефона);
				НовСтр.СтрокаАвтообзвона = Результат.СтрокаАвтообзвона;
			КонецЦикла;

			
		ИначеЕсли ПервыйНомер = Истина Тогда
			//Выгружаем первые номера заданного типа
			// Данная процедура загружает первый номер выбранного типа, в случае отсутствия номера выбранного типа - удаляет строку.
			Объект.СписокДляАО.Очистить();
			ТЗ_ДО = Объект.Объекты.Выгрузить();
			Долговые = ТЗ_ДО.ВыгрузитьКолонку("Объект");
			Запрос = Новый Запрос("ВЫБРАТЬ
			|	Объекты.Объект КАК ДО
			|ПОМЕСТИТЬ СписокДО
			|ИЗ
			|	&Объекты КАК Объекты
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СписокДО.ДО КАК ДО,
			|	КонтрагентыТелефоны.ВидТелефона КАК ВидТелефона,
			|	МАКСИМУМ(КонтрагентыТелефоны.Номер) КАК Номер,
			|	КонтрагентыТелефоны.Ссылка КАК Ссылка
			|ПОМЕСТИТЬ ПервыеТелефоны
			|ИЗ
			|	СписокДО КАК СписокДО
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Контрагенты.Телефоны КАК КонтрагентыТелефоны
			|		ПО СписокДО.ДО.Должник = КонтрагентыТелефоны.Ссылка
			|			И (КонтрагентыТелефоны.ВидТелефона = &ВидТелефона)
			|
			|СГРУППИРОВАТЬ ПО
			|	СписокДО.ДО,
			|	КонтрагентыТелефоны.ВидТелефона,
			|	КонтрагентыТелефоны.Ссылка
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ПервыеТелефоны.ДО.Наименование КАК СтрокаАвтообзвона,
			|	ПервыеТелефоны.ВидТелефона КАК ВидТелефона,
			|	ПервыеТелефоны.Номер КАК НомерТелефона,
			|	ПервыеТелефоны.Ссылка КАК Должник
			|ИЗ
			|	ПервыеТелефоны КАК ПервыеТелефоны");
			Запрос.УстановитьПараметр("ВидТелефона", Тип);
			Запрос.УстановитьПараметр("Объекты", тЗ_ДО);
			Результат = Запрос.Выполнить().Выбрать();
			//Объект.СписокДляАО.Загрузить(Запрос.Выполнить().Выгрузить());
			Пока Результат.Следующий() Цикл
				НовСтр = Объект.СписокДляАО.Добавить();
				НовСтр.Должник = Результат.Должник;
				НовСтр.ВидТелефона = Результат.ВидТелефона;
				НовСтр.НомерТелефона =  бит_ТелефонияКлиентСервер.ОчиститьНомерТолькоЦифры(Результат.НомерТелефона);
				НовСтр.СтрокаАвтообзвона = Результат.СтрокаАвтообзвона;
			КонецЦикла;
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Функция СписокДолговыхКонтрагента(Контрагент)
	стр = "";
	Для Каждого стрОбъект из Объект.Объекты Цикл
		Если стрОбъект.Объект.Должник = Контрагент Тогда
			стр = стр + стрОбъект.Объект.Наименование + ";";
		КонецЕсли;
	КонецЦикла;
	Возврат стр;
КонецФункции

&НаКлиенте
Процедура СоздатьСписок(Команда)
	СоздатьСписокНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ВидыТелефоновПриИзменении(Элемент)
	Если ВидыТелефонов = 1 Тогда
		Элементы.Тип.Доступность = Ложь;
		Элементы.ПервыйНомер.Доступность = Ложь;
	ИначеЕсли ВидыТелефонов = 2 Тогда
		Элементы.Тип.Доступность = Истина;
		Элементы.ПервыйНомер.Доступность = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ВидыТелефонов = 1;
	Элементы.Тип.Доступность = Ложь;
	Элементы.ПервыйНомер.Доступность = Ложь;
	ПроверитьID();
	Элементы.ПодборДО.Видимость = ОбъектыСервер.ПолучитьЗначениеКонстанты("ИспользоватьНастройкиПодбораОбъектовУчета");
	#Если ВебКлиент Тогда
		Элементы.Загрузить.Доступность = Ложь;
		Элементы.Удалить.Доступность = Ложь;
		Элементы.Обновить.Доступность = Ложь;
	#КонецЕсли	
КонецПроцедуры
&НаСервере
Процедура ПроверитьID()
	Если Объект.IDSQL = 0 Тогда
		Элементы.Удалить.Доступность = Ложь;
		Элементы.Обновить.Доступность = Ложь;
		Элементы.Загрузить.Доступность = Истина;
	Иначе
		Элементы.Удалить.Доступность = Истина;
		Элементы.Обновить.Доступность = Истина;
		Элементы.Загрузить.Доступность = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Если НЕ ПроверитьЗаполнение() тогда
		Отказ = Истина;
	КонецЕсли;		
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьНаСервере()
	Если ПроверитьЗаполнение() тогда
		СтрокаСоединения   =  ПолучитьСоединение();	
		Соединение = Новый COMОбъект("ADODB.Connection");
		Соединение.ConnectionString = (СтрокаСоединения);
		Попытка
			Соединение.Open();
			Сообщить("Производится добавление списка в АТС...");
		Исключение
			Сообщить("Добавление списка в АТС не может быть осуществлено!");
		КонецПопытки;
		Попытка	
			СтрPhoneList = "REPLACE INTO `autodialer_phonelists` SET `name`  ="+""""+Объект.Наименование+""""+"";
			Соединение.Execute(СтрPhoneList);
			//Сообщить(СтрPhoneList);
			ЗаписиSQL = Новый ComObject("ADODB.RecordSet"); 
			ЗаписиSQL.ActiveConnection = Соединение; 
			ЗапросНомерСписка  = "SELECT max(id) from autodialer_phonelists";
			ЗаписиSQL = Соединение.Execute(ЗапросНомерСписка);
			// Получить ID целым числом
			НомерСписка = СтрЗаменить(ЗаписиSQL.Fields(0).Value, Символы.НПП, "");
			Для к = 0 по Объект.СписокДляАО.Количество()-1 цикл
				СтрNumbers = "REPLACE INTO `autodialer_phones` SET `phonelist_id`="+""""+НомерСписка+""""+",`client`="+""""+Объект.СписокДляАО[к].СтрокаАвтообзвона+""""+",`number`  ="+""""+Объект.СписокДляАО[к].НомерТелефона+""""+" "; 
				Соединение.Execute(СтрNumbers);
				//Сообщить(СтрNumbers);
			КонецЦикла;
			Объект.IDSQL = НомерСписка;
    		Сообщить("Список добавлен на АТС");
			Соединение.Close();
			ЭтотОбъект.Записать();
		Исключение
			Сообщить("Произошла ошибка добавления списка на АТС");
		КонецПопытки;
	Иначе
		Сообщить("Заполните обязательные поля!");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Загрузить(Команда)
	ЗагрузитьНаСервере();
	ПроверитьID();
	Оповестить("ОбновлениеСпискаСписковАвтообзвона");
КонецПроцедуры

&НаСервере
Функция ПолучитьСоединение();

	Настройки = Константы.ПрофильПодключенияКАТС.Получить();
	
	Если Не ЗначениеЗаполнено(Настройки) Тогда
		Возврат "";
	КонецЕсли;
	
	ОДБС = Настройки.ODBCDriver;
	Сервер = Настройки.Сервер;
	БД = Настройки.НазваниеБазыДанных;
	
	// Автообзвон = ОбработкаБезопасноеХранилище.ПолучитьВсеЗначения("Автообзвон");
	// Получить пользователя и пароль из профиля подключения
	Пользователь = Настройки.Пользователь;
	Пароль = Настройки.Пароль;
	
	СтрОДБС = "{" + ОДБС + "}";
	
	Стр = "
	|DRIVER=" + СтрОДБС + ";
	|SERVER=" + Сервер + ";
	|DATABASE=" + БД + ";
	|UID=" + Пользователь + ";
	|PWD=" + Пароль + "";
	
	Возврат Стр;

КонецФункции

&НаСервере
Процедура ОбновитьНаСервере()
	// Получить ID целым числом
	НомерСписка = СтрЗаменить(Объект.IDSQL, Символы.НПП, "");
	СтрокаСоединения   =  ПолучитьСоединение();	
	Соединение = Новый COMОбъект("ADODB.Connection");
	Соединение.ConnectionString = (СтрокаСоединения);
	Попытка
		Соединение.Open();
	Исключение
		Сообщить("Обновление списка в АТС не может быть осуществлено!");
	КонецПопытки;
	Попытка
		ЗаписиSQL = Новый ComObject("ADODB.RecordSet"); 
		ЗаписиSQL.ActiveConnection = Соединение; 
		ЗапросНомерСписка  = "SELECT id from autodialer_phonelists WHERE `id`  ="+""""+НомерСписка+ """"+"";
		ЗаписиSQL = Соединение.Execute(ЗапросНомерСписка);
		// Получить ID целым числом
		НомерСпискаSQL = СтрЗаменить(ЗаписиSQL.Fields(0).Value, Символы.НПП, "");
		Если НомерСпискаSQL = НомерСписка Тогда 
			СтрPhoneList = "UPDATE `autodialer_phonelists` SET `name`  ="+""""+Объект.Наименование+""""+" WHERE `id`  ="+""""+НомерСписка+ """"+"";
			Соединение.Execute(СтрPhoneList);
			//Сообщить(СтрPhoneList);
			СтрNumbersDEL = "DELETE from`autodialer_phones` WHERE `phonelist_id`  ="+""""+НомерСписка+ """"+""; 
			Соединение.Execute(СтрNumbersDEL);
			//Сообщить(СтрNumbersDEL);
			Для к = 0 по Объект.СписокДляАО.Количество()-1 цикл
				СтрNumbers = "REPLACE INTO `autodialer_phones` SET `phonelist_id`="+""""+НомерСписка+""""+",`client`="+""""+Объект.СписокДляАО[к].СтрокаАвтообзвона+""""+",`number`  ="+""""+Объект.СписокДляАО[к].НомерТелефона+""""+" "; 
				Соединение.Execute(СтрNumbers);
				//Сообщить(СтрNumbers);
			КонецЦикла;
			Сообщить("Список обновлен на АТС");
		Иначе
			Сообщить("Списка с таким номером уже не существует!");
		КонецЕсли;	
		Соединение.Close();
	Исключение
		Сообщить("Произошла ошибка обновления списка на АТС");
	КонецПопытки;
	////ОБНОВЛЕНИЕ
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	ОбновитьНаСервере();
	ПроверитьID();
	Оповестить("ОбновлениеСпискаСписковАвтообзвона");
КонецПроцедуры

&НаСервере
Процедура УдалитьНаСервере()
	// Получить ID целым числом
	НомерСписка = СтрЗаменить(Объект.IDSQL, Символы.НПП, "");
	СтрокаСоединения   =  ПолучитьСоединение();	
	Соединение = Новый COMОбъект("ADODB.Connection");
	Соединение.ConnectionString = (СтрокаСоединения);
	Попытка
		Соединение.Open();
	Исключение
		Сообщить("Удаление списка из АТС не может быть осуществлено!");
	КонецПопытки;
	Попытка
		ЗаписиSQL = Новый ComObject("ADODB.RecordSet"); 
		ЗаписиSQL.ActiveConnection = Соединение; 
		ЗапросНомерСписка  = "SELECT id from autodialer_phonelists WHERE `id`  ="+""""+НомерСписка+ """"+"";
		ЗаписиSQL = Соединение.Execute(ЗапросНомерСписка);
		// Получить ID целым числом
		НомерСпискаSQL = СтрЗаменить(ЗаписиSQL.Fields(0).Value, Символы.НПП, "");
		Если НомерСпискаSQL = НомерСписка Тогда 
			СтрPhoneList = "DELETE from `autodialer_phonelists` WHERE `id`  ="+""""+НомерСписка+ """"+"";
			Соединение.Execute(СтрPhoneList);
			//Сообщить(СтрPhoneList);
			Для к = 0 по Объект.СписокДляАО.Количество()-1 цикл
				СтрNumbers = "DELETE from`autodialer_phones` WHERE `phonelist_id`  ="+""""+НомерСписка+ """"+""; 
				Соединение.Execute(СтрNumbers);
				//Сообщить(СтрNumbers);
			КонецЦикла;
			Сообщить("Список удален из АТС");
		КонецЕсли;	
		Соединение.Close();
	Исключение
		Сообщить("Списка с таким номером уже не существует!");
	КонецПопытки;	
	Объект.IDSQL = 0;
КонецПроцедуры

&НаКлиенте
Процедура Удалить(Команда)
	УдалитьНаСервере();
	ПроверитьID();
	Оповестить("ОбновлениеСпискаСписковАвтообзвона");
КонецПроцедуры

&НаКлиенте
Процедура ПодборПоНастройкам(Команда)
	ОбъектыКлиент.ПодборПоНастройкам(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ПодборИзФайла(Команда)
	ОбъектыКлиент.ПодборИзДОК(ЭтаФорма);
КонецПроцедуры

//!!Необходимые Комменты
	//Для счетчикДО = 0 по Долговые.Количество()-1 Цикл
	//	//Сообщить(Долговые[счетчикДО].Ссылка);
	//	Запрос.УстановитьПараметр("СписокДО",Долговые[счетчикДО].Ссылка);
	//	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	//	Для счетчикРез = 0 по РезультатЗапроса.Количество()-1 Цикл
	//		НовСтр = Объект.СписокДляАО.Добавить();
	//		НовСтр.Должник = РезультатЗапроса[счетчикРез].Должник;
	//		НовСтр.ВидТелефона = РезультатЗапроса[счетчикРез].ВидТелефона;
	//		НовСтр.НомерТелефона = РезультатЗапроса[счетчикРез].НомерТелефона;
	//		//Объект.СписокДляАО.Вставить(счетчикРез);
	//		//Объект.СписокДляАО.ЗагрузитьКолонку
	//		//Объект.СписокДляАО.Загрузить(РезультатЗапроса);
	//	КонецЦикла;
	//	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	//КонецЦикла;
	//
	//Объект.СписокДляАО.Вставить(счетчикРез);
	//Объект.СписокДляАО.ЗагрузитьКолонку
	//Объект.СписокДляАО.Загрузить(РезультатЗапроса);
	
//&НаСервере
//Процедура СоздатьСписокНаСервере()
//	Объект.СписокДляАО.Очистить();
//	ТЗ_ДО = Объект.Объекты.Выгрузить();
//	Долговые = ТЗ_ДО.ВыгрузитьКолонку("Объект");
//	Запрос = Новый Запрос;
//	Запрос.Текст = 
//	"ВЫБРАТЬ РАЗЛИЧНЫЕ
//	|	ДолговыеОбязательства.Должник КАК Должник,
//	|	КонтрагентыТелефоны.ВидТелефона КАК ВидТелефона,
//	|	КонтрагентыТелефоны.Номер КАК НомерТелефона
//	|ИЗ
//	|	Справочник.Контрагенты.Телефоны КАК КонтрагентыТелефоны
//	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДолговыеОбязательства КАК ДолговыеОбязательства
//	|		ПО КонтрагентыТелефоны.Ссылка = ДолговыеОбязательства.Должник
//	|ГДЕ
//	|	ДолговыеОбязательства.Ссылка = &СписокДО";
//	Если ВидыТелефонов = 1 Тогда
//		Для счетчикДО = 0 по Долговые.Количество()-1 Цикл
//			//Сообщить(Долговые[счетчикДО].Ссылка);
//			Запрос.УстановитьПараметр("СписокДО",Долговые[счетчикДО].Ссылка);
//			РезультатЗапроса = Запрос.Выполнить().Выгрузить();
//			Для счетчикРез = 0 по РезультатЗапроса.Количество()-1 Цикл
//				НовСтр = Объект.СписокДляАО.Добавить();
//				НовСтр.Должник = РезультатЗапроса[счетчикРез].Должник;
//				НовСтр.ВидТелефона = РезультатЗапроса[счетчикРез].ВидТелефона;
//				НовСтр.НомерТелефона = РезультатЗапроса[счетчикРез].НомерТелефона;
//			КонецЦикла;
//		КонецЦикла;
//	ИначеЕсли ВидыТелефонов = 2 Тогда
//		Для счетчикДО = 0 по Долговые.Количество()-1 Цикл
//			//Сообщить(Долговые[счетчикДО].Ссылка);
//			Запрос.УстановитьПараметр("СписокДО",Долговые[счетчикДО].Ссылка);
//			РезультатЗапроса = Запрос.Выполнить().Выгрузить();
//			Для счетчикРез = 0 по РезультатЗапроса.Количество()-1 Цикл
//				Если РезультатЗапроса[счетчикРез].ВидТелефона = Тип и ПервыйНомер = Ложь Тогда
//					НовСтр = Объект.СписокДляАО.Добавить();
//					НовСтр.Должник = РезультатЗапроса[счетчикРез].Должник;
//					НовСтр.ВидТелефона = РезультатЗапроса[счетчикРез].ВидТелефона;
//					НовСтр.НомерТелефона = РезультатЗапроса[счетчикРез].НомерТелефона;
//				ИначеЕсли РезультатЗапроса[счетчикРез].ВидТелефона = Тип и ПервыйНомер = Истина Тогда
//					НовСтр = Объект.СписокДляАО.Добавить();
//					НовСтр.Должник = РезультатЗапроса[счетчикРез].Должник;
//					НовСтр.ВидТелефона = РезультатЗапроса[счетчикРез].ВидТелефона;
//					НовСтр.НомерТелефона = РезультатЗапроса[счетчикРез].НомерТелефона;
//					Прервать;
//				КонецЕсли;	
//			КонецЦикла;
//		КонецЦикла;
//	КонецЕсли;
//	УдалитьДубли = Объект.СписокДляАО.Выгрузить();
//	УдалитьДубли.Свернуть("Должник, ВидТелефона,НомерТелефона,СтрокаАвтообзвона");
//	Объект.СписокДляАО.Очистить();
//	Объект.СписокДляАО.Загрузить(УдалитьДубли);
//		
//	Для Каждого строка из Объект.СписокДляАО Цикл
//		строка.СтрокаАвтообзвона = СписокДолговыхКонтрагента(строка.Должник);	
//	КонецЦикла;

//	//Для СчетчикАО = 0 по Объект.СписокДляАО.Количество()-1 Цикл
//	//	Для СчетчикДО = 0 по ТЗ_ДО.Количество()-1 Цикл
//	//		Строка = Строка(ТЗ_ДО[СчетчикДО].Объект);
//	//		Если ТЗ_ДО[СчетчикДО].Объект.Должник = Объект.СписокДляАО[СчетчикАО].Должник Тогда
//	//			Объект.СписокДляАО[СчетчикАО].СтрокаАвтообзвона = Строка;
//	//		КонецЕсли;
//	//	КонецЦикла;
//	//КонецЦикла;
//КонецПроцедуры



	//// Данная процедура загружает первый номер выбранного типа, в случае отсутствия номера выбранного типа - удаляет строку.
	//Объект.СписокДляАО.Очистить();
	//ТЗ_ДО = Объект.Объекты.Выгрузить();
	//Долговые = ТЗ_ДО.ВыгрузитьКолонку("Объект");
	//Запрос = Новый Запрос("ВЫБРАТЬ
	//                      |	Объекты.Объект КАК ДО
	//                      |ПОМЕСТИТЬ СписокДО
	//                      |ИЗ
	//                      |	&Объекты КАК Объекты
	//                      |;
	//                      |
	//                      |////////////////////////////////////////////////////////////////////////////////
	//                      |ВЫБРАТЬ
	//                      |	СписокДО.ДО КАК ДО,
	//                      |	КонтрагентыТелефоны.ВидТелефона КАК ВидТелефона,
	//                      |	МАКСИМУМ(КонтрагентыТелефоны.Номер) КАК Номер,
	//                      |	КонтрагентыТелефоны.Ссылка КАК Ссылка
	//                      |ПОМЕСТИТЬ ПервыеТелефоны
	//                      |ИЗ
	//                      |	СписокДО КАК СписокДО
	//                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Контрагенты.Телефоны КАК КонтрагентыТелефоны
	//                      |		ПО СписокДО.ДО.Должник = КонтрагентыТелефоны.Ссылка
	//                      |			И (КонтрагентыТелефоны.ВидТелефона = &ВидТелефона)
	//                      |
	//                      |СГРУППИРОВАТЬ ПО
	//                      |	СписокДО.ДО,
	//                      |	КонтрагентыТелефоны.ВидТелефона,
	//                      |	КонтрагентыТелефоны.Ссылка
	//                      |;
	//                      |
	//                      |////////////////////////////////////////////////////////////////////////////////
	//                      |ВЫБРАТЬ
	//                      |	ПервыеТелефоны.ДО.Наименование КАК СтрокаАвтообзвона,
	//                      |	ПервыеТелефоны.ВидТелефона КАК ВидТелефона,
	//                      |	ПервыеТелефоны.Номер КАК НомерТелефона,
	//                      |	ПервыеТелефоны.Ссылка КАК Должник
	//                      |ИЗ
	//                      |	ПервыеТелефоны КАК ПервыеТелефоны");
	//Запрос.УстановитьПараметр("ВидТелефона", Тип);
	//Запрос.УстановитьПараметр("Объекты", тЗ_ДО);
	//Объект.СписокДляАО.Загрузить(Запрос.Выполнить().Выгрузить());
	
//!! 	


