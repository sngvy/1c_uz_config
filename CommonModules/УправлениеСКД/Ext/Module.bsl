Функция ПолучитьТаблицуЗначений(Отчет, Макет, Параметры = Неопределено) Экспорт

	ТипГенератора = Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений");
	Попытка
	
		ПроцессорКомпоновки = НастройкаСКД(Отчет, Макет, Параметры, ТипГенератора);
	
	Исключение
		ВызватьИсключение "Не удалось произвести настройку: " + ОписаниеОшибки();
	КонецПопытки;
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ТЗ = Новый ТаблицаЗначений;
	ПроцессорВывода.УстановитьОбъект(ТЗ);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	Возврат ТЗ;

КонецФункции // ()

Функция ПолучитьТабличныйДокумент(Отчет, Макет, Параметры = Неопределено) Экспорт

	ТипГенератора = Тип("ГенераторМакетаКомпоновкиДанных");
	Попытка
	
		ПроцессорКомпоновки = НастройкаСКД(Отчет, Макет, Параметры, ТипГенератора);
	
	Исключение
		ВызватьИсключение "Не удалось произвести настройку: " + ОписаниеОшибки();
	КонецПопытки;
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ТабличныйДокумент);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	Возврат ТабличныйДокумент;

КонецФункции // ()

Функция ПреобразоватьТабличныйДокументВТаблицуЗначений(ТабличныйДокумент) Экспорт

	Попытка
	
		ОбластьЯчеек = ТабличныйДокумент.Область(
			1, 1, ТабличныйДокумент.ВысотаТаблицы, ТабличныйДокумент.ШиринаТаблицы
		);
		ИсточникДанных = Новый ОписаниеИсточникаДанных(ОбластьЯчеек);
	
	Исключение
		ВызватьИсключение "Не удалось обработать данные: " + Тип(ТабличныйДокумент)
						+ Символы.ПС + ОписаниеОшибки();
	КонецПопытки;
	
	ПостроительОтчета = Новый ПостроительОтчета;
	ПостроительОтчета.ИсточникДанных = ИсточникДанных;
	
	Попытка
	
		ПостроительОтчета.Выполнить();
	
	Исключение
		ВызватьИсключение "Не удалось получить таблицу значений: " + ОписаниеОшибки();
	КонецПопытки;

	ТЗ = ПостроительОтчета.Результат.Выгрузить();

	Возврат ТЗ;

КонецФункции // ()

// <Описание функции>
//
// Параметры:
//  Отчет  - Строка, Менеджер - Менеджер макета, допусткается описание Строкой,
//                 для Отчета можно передать только имя
//  Макет  - Строка - Макет менеджера
//  НомерНабораДанных  - Число - Номер набора данных макета по которому надо получить поля
//
// Возвращаемое значение:
//   ТаблицаЗначений   - Таблица описывающая поля Запроса в макете
//
Функция ПолучитьПоляМакета(Отчет, Макет, НомерНабораДанных = 0) Экспорт

	ТекстОшибки = "Ошибка получения полей макета: ";
	
	Попытка
	
		СКД = ПолучитьМакет(Отчет, Макет);
	
	Исключение
		ВызватьИсключение ТекстОшибки + ОписаниеОшибки();
	КонецПопытки;
	
	Попытка
	
		ПоляОтчета = ПолучитьПоляНабораДанныхМакета(СКД, НомерНабораДанных);
	
	Исключение
		ВызватьИсключение ТекстОшибки + ОписаниеОшибки();
	КонецПопытки;
	
	Результат = Новый ТаблицаЗначений;
	Для каждого ДанныеПоля Из ПоляОтчета Цикл
	
		Результат.Колонки.Добавить(ДанныеПоля.Поле, ДанныеПоля.ТипЗначения);
	
	КонецЦикла;
	
	Возврат Результат;

КонецФункции // ()


Функция НастройкаСКД(Отчет, Макет, Параметры = Неопределено, ТипГенератора)

	Попытка
	
		СКД = ПолучитьМакет(Отчет, Макет);
	
	Исключение
		ВызватьИсключение "Передаваемые данные не корректны: " + ОписаниеОшибки();
	КонецПопытки;
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;

	Попытка
	
		МакетКомпоновки = КомпоновщикМакета.Выполнить(
			СКД,
			СКД.ВариантыНастроек.Основной.Настройки,
			,
			,
			ТипГенератора
		);
	
	Исключение
		ВызватьИсключение "Не удалось создать макет компановки данные: " + ОписаниеОшибки();
	КонецПопытки;
	
	Если Параметры <> Неопределено Тогда
	
		ПараметрыОтчета = МакетКомпоновки.НаборыДанных[0].ЗначенияПараметров;
		ПараметрыКомпоновки = МакетКомпоновки.ЗначенияПараметров;
		Для каждого Параметр Из Параметры Цикл
		
			ДобавитьПараметр(ПараметрыОтчета, Параметр);
			ДобавитьПараметр(ПараметрыКомпоновки, Параметр)
		
		КонецЦикла;
	
	КонецЕсли;
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	Попытка
	
		ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	
	Исключение
		ВызватьИсключение "Не удалось скомпоновать данные: " + ОписаниеОшибки();
	КонецПопытки;
	
	Возврат ПроцессорКомпоновки;

КонецФункции // ()

#Область Настройка

Функция ПолучитьМакет(ИмяОтчета, ИмяМакета)

	Отчет = ИмяОтчета;
	Если ТипЗнч(Отчет) = Тип("Строка") Тогда
	
		Отчет = ПолучитьМенеджерПоСтроке(Отчет);
	
	КонецЕсли;
	
	Попытка
	
		Макет = Отчет.ПолучитьМакет(ИмяМакета);
	
	Исключение
		ВызватьИсключение "Макета не существует: " + ИмяМакета;
	КонецПопытки;
	
	Возврат Макет;

КонецФункции // ()

Функция ПолучитьПоляНабораДанныхМакета(СКД, НомерНабора = 0)

	Попытка
	
		Поля = СКД.НаборыДанных[НомерНабора].Поля;
	
	Исключение
		ВызватьИсключение "Не удалось получить поля набора";
	КонецПопытки;
	
	Возврат Поля;

КонецФункции // ()

Функция ДобавитьПараметр(Параметры, Параметр)

	ПараметрМакета = Параметры.Добавить();
	ПараметрМакета.Значение = Параметр.Значение;
	ПараметрМакета.Имя = Параметр.Ключ;

КонецФункции // ()

Функция ПолучитьМенеджерПоСтроке(Имя)

	ПутьОтчета = Имя;
	Если СтрНайти(Имя, ".") = 0 Тогда
	
		ПутьОтчета = "Отчеты." + Имя;
	
	КонецЕсли;
	
	Попытка
	
		Отчет = Неопределено;
		Выполнить("Отчет = " + ПутьОтчета);
	
	Исключение
		ВызватьИсключение "Отчета не существует: " + Имя;
	КонецПопытки;
	
	Возврат Отчет;

КонецФункции // ()




#КонецОбласти




