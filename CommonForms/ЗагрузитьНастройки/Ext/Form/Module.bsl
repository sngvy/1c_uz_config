// Удалить весь модуль
&НаКлиенте
Процедура ЗагрузитьНастройки(Команда)
	//проверка на обязательность заполнения
	Если ВариантНастройки = ПредопределенноеЗначение("Перечисление.ВариантыНастроек.ЮрСлужба") Тогда
		Если ЮрСлужба_Рук.Пустая() ИЛИ ЮрСлужба_Отв.Пустая() ИЛИ ЮрСлужба_Рег.Пустая() Тогда
			Сообщить("Не заполнены обязательные поля!");
			Возврат;
		КонецЕсли;
	Иначе
		Сообщить("Не указан вариант настройки!");
		Возврат;
	КонецЕсли;
	
	//
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.Заголовок = "Выберите файл загрузки...";
	Диалог.ПолноеИмяФайла = "";
	Диалог.ПредварительныйПросмотр = Ложь;
	//Диалог.Каталог = ТекКаталог;
	Диалог.МножественныйВыбор = Ложь;
	Диалог.Фильтр = "XML (*.xml)|*.xml";
	
	Если Диалог.Выбрать() Тогда
		Данные = Новый ДвоичныеДанные(Диалог.ПолноеИмяФайла);	
		ВыполнитьЗагрузку(Данные);
		ОбновитьИнтерфейс();
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьЗагрузку(Данные)
    ИмяФайла = ПолучитьИмяВременногоФайла();
    Данные.Записать(ИмяФайла);
	
	Если ПопробоватьПрочитатьФайл(ИмяФайла) <> Истина Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Неверный формат файла выгрузки! Ошибка загрузки!!!";
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;	
	ЗаменитьСсылки(ИмяФайла);
	Если ПопробоватьПрочитатьФайл(ИмяФайла) <> Истина Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Неверный формат файла выгрузки! Ошибка загрузки!!!";
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
	//Без сообщений 1 !!!!!!!!
	ЧтениеXML = Новый ЧтениеXML();		
	ЧтениеXML.ОткрытьФайл(ИмяФайла);
	// проверка формата файла обмена
	Если Не ЧтениеXML.Прочитать() ИЛИ ЧтениеXML.ТипУзла <> ТипУзлаXML.НачалоЭлемента ИЛИ
			ЧтениеXML.ЛокальноеИмя <> "_1CV8DtUD" ИЛИ ЧтениеXML.URIПространстваИмен <> "http://www.1c.ru/V8/1CV8DtUD/" Тогда 
		Возврат;
	КонецЕсли;
	
	Если Не ЧтениеXML.Прочитать() ИЛИ ЧтениеXML.ТипУзла <> ТипУзлаXML.НачалоЭлемента ИЛИ 
			ЧтениеXML.ЛокальноеИмя <> "Data" ИЛИ ЧтениеXML.URIПространстваИмен <> "http://www.1c.ru/V8/1CV8DtUD/" Тогда 
		Возврат;
	КонецЕсли;
	
	// чтение и запись в ИБ записанных в выгрузке объектов
	Если Не ЧтениеXML.Прочитать() Тогда 
		Возврат;
	КонецЕсли;
		
	Пока ВозможностьЧтенияXML(ЧтениеXML) Цикл	
		
		Прочитано = Истина;
		Попытка
			ЗаписанноеЗначение = ПрочитатьXML(ЧтениеXML);
		Исключение
			Прочитано = Ложь;
		КонецПопытки;
		
		Если Прочитано Тогда
		
			Попытка
				ЗаписанноеЗначение.Записать();
			Исключение
				Продолжить;
			КонецПопытки;	
		
		КонецЕсли;
	
	КонецЦикла;
				
	ЧтениеXML.Закрыть();
	
	//Без сообщений 2 !!!!!!!!
	ЧтениеXML = Новый ЧтениеXML();		
	ЧтениеXML.ОткрытьФайл(ИмяФайла);
	// проверка формата файла обмена
	Если Не ЧтениеXML.Прочитать() ИЛИ ЧтениеXML.ТипУзла <> ТипУзлаXML.НачалоЭлемента ИЛИ
			ЧтениеXML.ЛокальноеИмя <> "_1CV8DtUD" ИЛИ ЧтениеXML.URIПространстваИмен <> "http://www.1c.ru/V8/1CV8DtUD/" Тогда 
		Возврат;
	КонецЕсли;
	
	Если Не ЧтениеXML.Прочитать() ИЛИ ЧтениеXML.ТипУзла <> ТипУзлаXML.НачалоЭлемента ИЛИ 
			ЧтениеXML.ЛокальноеИмя <> "Data" ИЛИ ЧтениеXML.URIПространстваИмен <> "http://www.1c.ru/V8/1CV8DtUD/" Тогда 
		Возврат;
	КонецЕсли;
	
	// чтение и запись в ИБ записанных в выгрузке объектов
	Если Не ЧтениеXML.Прочитать() Тогда 
		Возврат;
	КонецЕсли;
		
	Пока ВозможностьЧтенияXML(ЧтениеXML) Цикл	
		Прочитано = Истина;
		Попытка
			ЗаписанноеЗначение = ПрочитатьXML(ЧтениеXML);
		Исключение
			Прочитано = Ложь;
		КонецПопытки;
		
		Если Прочитано Тогда
		
			Попытка
				ЗаписанноеЗначение.Записать();
			Исключение
				Продолжить;
			КонецПопытки;	
		
		КонецЕсли;
	КонецЦикла;
				
	ЧтениеXML.Закрыть();
	
	//С сообщениями !!!!!!!!
	ЧтениеXML = Новый ЧтениеXML();		
	ЧтениеXML.ОткрытьФайл(ИмяФайла);
	// проверка формата файла обмена
	Если Не ЧтениеXML.Прочитать() ИЛИ ЧтениеXML.ТипУзла <> ТипУзлаXML.НачалоЭлемента ИЛИ
			ЧтениеXML.ЛокальноеИмя <> "_1CV8DtUD" ИЛИ ЧтениеXML.URIПространстваИмен <> "http://www.1c.ru/V8/1CV8DtUD/" Тогда 
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Неверный формат файла выгрузки! Ошибка загрузки!!!";
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
	Если Не ЧтениеXML.Прочитать() ИЛИ ЧтениеXML.ТипУзла <> ТипУзлаXML.НачалоЭлемента ИЛИ 
			ЧтениеXML.ЛокальноеИмя <> "Data" ИЛИ ЧтениеXML.URIПространстваИмен <> "http://www.1c.ru/V8/1CV8DtUD/" Тогда 
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Неверный формат файла выгрузки! Ошибка загрузки!!!";
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
	// чтение и запись в ИБ записанных в выгрузке объектов
	Если Не ЧтениеXML.Прочитать() Тогда 
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Неверный формат файла выгрузки! Ошибка загрузки!!!";
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
	Загружено = 0;
	СОшибкой = 0;
	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = "Начало загрузки: " + ТекущаяДатаСеанса();
	Сообщение.Сообщить();
	
	Пока ВозможностьЧтенияXML(ЧтениеXML) Цикл	
		Попытка
			ЗаписанноеЗначение = ПрочитатьXML(ЧтениеXML);
		Исключение
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = ОписаниеОшибки();
			Сообщение.Сообщить();
		КонецПопытки;
				
		Попытка
			ЗаписанноеЗначение.Записать();
		Исключение		
			ТекстОшибки = ОписаниеОшибки();		
			Попытка
				Сообщить("Ошибка при загрузке данных. Объект: " + ЗаписанноеЗначение + ", Тип: " + ТипЗнч(ЗаписанноеЗначение) + 
						" Ошибка : " + ТекстОшибки);
			Исключение
				Сообщить("Ошибка при загрузке данных! Ошибка : " + ТекстОшибки);
			КонецПопытки;
			
			Загружено = Загружено - 1;
			СОшибкой = СОшибкой + 1;
		КонецПопытки;	
		
		Загружено = Загружено + 1;	
	КонецЦикла;
			
	// проверка формата файла обмена
	Если ЧтениеXML.ТипУзла <> ТипУзлаXML.КонецЭлемента Или 
		ЧтениеXML.ЛокальноеИмя <> "Data" Или 
		ЧтениеXML.URIПространстваИмен <> "http://www.1c.ru/V8/1CV8DtUD/" Тогда 
		Сообщить("Неверный формат файла выгрузки! Ошибка загрузки!!!");
		Возврат;
	КонецЕсли;
	
	Если Не ЧтениеXML.Прочитать() Или
		ЧтениеXML.ТипУзла <> ТипУзлаXML.КонецЭлемента Или 
		ЧтениеXML.ЛокальноеИмя <> "_1CV8DtUD" Или 
		ЧтениеXML.URIПространстваИмен <> "http://www.1c.ru/V8/1CV8DtUD/" Тогда 
		Сообщить("Неверный формат файла выгрузки! Ошибка загрузки!!!");
		Возврат;
	КонецЕсли;
	
	ЧтениеXML.Закрыть();
	
	Попытка
	
		УдалитьФайлы(ИмяФайла);
	
	Исключение
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ОписаниеОшибки();
		Сообщение.Сообщить();
	КонецПопытки;
	
	ТекстСообщения = "Загружено объектов: " + Загружено + Символы.ПС
					+ "Не загружено из-за ошибки: " + СОшибкой + Символы.ПС
					+ "Окончание загрузки: " + ТекущаяДатаСеанса() + Символы.ПС
					+ "Загрузка данных успешно завершена.";
					
	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = ТекстСообщения;
	Сообщение.Сообщить();
	
КонецПроцедуры

&НаСервере
Функция ПопробоватьПрочитатьФайл(ИмяФайла)
	ЧтениеXML = Новый ЧтениеXML();	
	
	ЧтениеXML.ОткрытьФайл(ИмяФайла);
	// проверка формата файла обмена
	Если Не ЧтениеXML.Прочитать() ИЛИ ЧтениеXML.ТипУзла <> ТипУзлаXML.НачалоЭлемента ИЛИ
			ЧтениеXML.ЛокальноеИмя <> "_1CV8DtUD" ИЛИ ЧтениеXML.URIПространстваИмен <> "http://www.1c.ru/V8/1CV8DtUD/" Тогда 
		Сообщить("Неверный формат файла выгрузки! Ошибка загрузки!!!");
		Возврат Ложь;
	КонецЕсли;
	
	Если Не ЧтениеXML.Прочитать() ИЛИ ЧтениеXML.ТипУзла <> ТипУзлаXML.НачалоЭлемента ИЛИ 
			ЧтениеXML.ЛокальноеИмя <> "Data" ИЛИ ЧтениеXML.URIПространстваИмен <> "http://www.1c.ru/V8/1CV8DtUD/" Тогда 
		Сообщить("Неверный формат файла выгрузки! Ошибка загрузки!!!");
		Возврат Ложь;
	КонецЕсли;
	
	// чтение и запись в ИБ записанных в выгрузке объектов
	Если Не ЧтениеXML.Прочитать() Тогда 
		Сообщить("Неверный формат файла выгрузки! Ошибка загрузки!!!");
		Возврат Ложь;
	КонецЕсли;
		
	Пока ВозможностьЧтенияXML(ЧтениеXML) Цикл
		Попытка
			ЗаписанноеЗначение = ПрочитатьXML(ЧтениеXML);
		Исключение
			Сообщить("Ошибка в объекте, следующем за типом: " + Строка(ТипЗнч(ЗаписанноеЗначение)));
			Возврат Ложь;
		КонецПопытки;
	КонецЦикла;
			
	// проверка формата файла обмена
	Если ЧтениеXML.ТипУзла <> ТипУзлаXML.КонецЭлемента Или 
		ЧтениеXML.ЛокальноеИмя <> "Data" Или 
		ЧтениеXML.URIПространстваИмен <> "http://www.1c.ru/V8/1CV8DtUD/" Тогда 
		Сообщить("Неверный формат файла выгрузки! Ошибка загрузки!!!");
		Возврат Ложь;
	КонецЕсли;
	
	Если Не ЧтениеXML.Прочитать() Или
		ЧтениеXML.ТипУзла <> ТипУзлаXML.КонецЭлемента Или 
		ЧтениеXML.ЛокальноеИмя <> "_1CV8DtUD" Или 
		ЧтениеXML.URIПространстваИмен <> "http://www.1c.ru/V8/1CV8DtUD/" Тогда 
		Сообщить("Неверный формат файла выгрузки! Ошибка загрузки!!!");
		Возврат Ложь;
	КонецЕсли;
	
	ЧтениеXML.Закрыть();
	Возврат Истина;
КонецФункции

&НаСервере
Процедура ЗаменитьСсылки(ИмяФайла)
	Список = Новый СписокЗначений();
		  //УникальныйИдентификатор(ЮрСлужба_Рук)                     
	Если ВариантНастройки = Перечисления.ВариантыНастроек.ЮрСлужба Тогда
		Список.Добавить("99616b60-d459-40c9-8c26-30ea49532675", Строка(ЮрСлужба_Рук.УникальныйИдентификатор()));
		Список.Добавить("d22c7c36-5c05-11e1-9ed8-005056b00047", Строка(ЮрСлужба_Отв.УникальныйИдентификатор()));
		Список.Добавить("d22c7c37-5c05-11e1-9ed8-005056b00047", Строка(ЮрСлужба_Рег.УникальныйИдентификатор()));
		Список.Добавить("ю_Отв_По_Делу", Строка(ЮрСлужба_Отв.Код));
		Список.Добавить("ю_Сотр_В_Регионе", Строка(ЮрСлужба_Рег.Код));
	КонецЕсли;
	
	ЗаменитьСсылкиВФайле(ИмяФайла, Список);	
КонецПроцедуры

&НаСервере
Процедура ЗаменитьСсылкиВФайле(ИмяФайла, Список)
	Если Список.Количество() > 0 Тогда
	    ТД = Новый ТекстовыйДокумент();
		ТД.Прочитать(ИмяФайла);
		Стр = ТД.ПолучитьТекст();
		Для Каждого Элемент Из Список Цикл 
			Стр = СтрЗаменить(Стр, Элемент.Значение, Элемент.Представление);
		КонецЦикла;
		ТД.УстановитьТекст(Стр);
		ТД.Записать(ИмяФайла);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Для Каждого Элемент Из Элементы.ГруппаСтраницы.ПодчиненныеЭлементы Цикл
		Элемент.Видимость = Ложь;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ВариантНастройкиПриИзменении(Элемент)
	Для Каждого Элемент Из Элементы.ГруппаСтраницы.ПодчиненныеЭлементы Цикл
		Элемент.Видимость = 
				(Элемент = Элементы.Группа_ЮрСлужба И 
					ВариантНастройки = ПредопределенноеЗначение("Перечисление.ВариантыНастроек.ЮрСлужба"));
	КонецЦикла;
КонецПроцедуры
