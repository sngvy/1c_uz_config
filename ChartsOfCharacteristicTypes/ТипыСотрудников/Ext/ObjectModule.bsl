
Процедура ПередЗаписью(Отказ)
	Отказ = (Родитель_.Пустая() И Не Предопределенный) ИЛИ Родитель_ = Ссылка;
	РодителиШаблон = Родители + "%";
КонецПроцедуры

Процедура ЗаполнитьУровниРодители(Отказ) Экспорт
	Массив = Новый Массив();
	Глубина = 0;
	Массив.Добавить(ПланыВидовХарактеристик.ТипыСотрудников.ПустаяСсылка());
	Запрос = Новый Запрос("ВЫБРАТЬ
		                      |	ТипыСотрудников.Ссылка
		                      |ИЗ
		                      |	ПланВидовХарактеристик.ТипыСотрудников КАК ТипыСотрудников
		                      |ГДЕ
		                      |	ТипыСотрудников.Родитель_ В(&Массив)");
	
	Пока Массив.Количество() > 0 Цикл							  
		Запрос.УстановитьПараметр("Массив", Массив);
		Массив = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
		Глубина = Глубина + 1;
		Для Каждого Элемент Из Массив Цикл
			Родители = ?(Элемент.Ссылка.Родитель_.Пустая(), "", Элемент.Ссылка.Родитель_.Родители) + Элемент.Ссылка.Код + ";";
			Если Элемент.Ссылка.Глубина = Глубина И Элемент.Ссылка.Родители = Родители Тогда
				//Продолжить; //для восстановления только хвоста последовательности
			КонецЕсли;
			
			Если Элемент.Ссылка <> Ссылка Тогда
				Об = Элемент.Ссылка.ПолучитьОбъект();
			Иначе
				Об = ЭтотОбъект;
			КонецЕсли;
			
			Об.Глубина = Глубина;
			Об.Родители = Родители;
			Попытка
				Об.Записать()
			Исключение
				Отказ = Истина;
			    Сообщить("Ошибка записи ПВХ ТипыСотрудников!");
			КонецПопытки;			
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

Процедура ПередУдалением(Отказ)
	Отказ = Не ПланыВидовХарактеристик.ТипыСотрудников.НайтиПоРеквизиту("Родитель_", Ссылка).Пустая();
	Если Отказ Тогда
		Сообщить("Нельзя удалить элемент! На него есть ссылки в других элементах дерева!");
	КонецЕсли;
КонецПроцедуры
