
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если ТипЗнч(ЭтаФорма.ВладелецФормы) = Тип("ТаблицаФормы") И
			ТипЗнч(ЭтаФорма.ВладелецФормы.Родитель) = Тип("УправляемаяФорма") И
			ЭтаФорма.ВладелецФормы.Родитель.ИмяФормы = "ПланВидовХарактеристик.ВидыСкоринга.Форма.ФормаЭлемента" Тогда
		
		Для Каждого Элемент Из ЭтаФорма.ВладелецФормы.Родитель.Компоновщик.Настройки.ПользовательскиеПоля.Элементы[0].
				Варианты.Элементы Цикл
			Если Элемент.Значение = Объект.Код Тогда	
				Объект.Отбор = Элемент.Отбор;
				Прервать;			
			КонецЕсли;
		КонецЦикла;
	Иначе
		Элементы.Отбор.ТолькоПросмотр = Истина;
		Элементы.Используется.ТолькоПросмотр = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДействияПередНачаломИзменения(Элемент, Отказ)
	ТекСтрока = Элементы.Действия.ТекущиеДанные;
	Если ТекСтрока.Действие = ПредопределенноеЗначение(
			"Перечисление.ВариантыДействийДляСкоринга.ПроизвольноеДействие") Тогда        
		Если ТипЗнч(ТекСтрока.Шаблон) <> Тип("СправочникСсылка.ДействияДляКатегорийСкоринга") Тогда
			ТекСтрока.Шаблон = ПредопределенноеЗначение(
					"Справочник.ДействияДляКатегорийСкоринга.ПустаяСсылка");
		КонецЕсли;		
	Иначе
		Если ТипЗнч(ТекСтрока.Шаблон) <> Тип("СправочникСсылка.ШаблоныТекстаДляАвтоинформирования") Тогда
			ТекСтрока.Шаблон = ПредопределенноеЗначение(
					"Справочник.ШаблоныТекстаДляАвтоинформирования.ПустаяСсылка");
		КонецЕсли;	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДействияДействиеПриИзменении(Элемент)
	ТекСтрока = Элементы.Действия.ТекущиеДанные;
	Если ТекСтрока.Действие = ПредопределенноеЗначение(
			"Перечисление.ВариантыДействийДляСкоринга.ПроизвольноеДействие") Тогда
		Если ТипЗнч(ТекСтрока.Шаблон) <> Тип("СправочникСсылка.ДействияДляКатегорийСкоринга") Тогда
			ТекСтрока.Шаблон = ПредопределенноеЗначение(
					"Справочник.ДействияДляКатегорийСкоринга.ПустаяСсылка");
		КонецЕсли;	
	Иначе
		Если ТипЗнч(ТекСтрока.Шаблон) <> Тип("СправочникСсылка.ШаблоныТекстаДляАвтоинформирования") Тогда
			ТекСтрока.Шаблон = ПредопределенноеЗначение(
					"Справочник.ШаблоныТекстаДляАвтоинформирования.ПустаяСсылка");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДействияПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока Тогда
		Элемент.ТекущиеДанные.Используется = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОтборНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Если Объект.Ссылка.Пустая() Тогда
		Записать();
		//СтандартнаяОбработка = Ложь;
		//Сообщить("Необходимо записать объект!");
		//Возврат;
	КонецЕсли;
	
	Форма = ПолучитьФорму("Справочник.Категории.Форма.ФормаНастройкиОтбора",, ЭтаФорма);
	ЭлементОтборНайден = Ложь;
	Для Каждого ЭлементОтбор Из ЭтаФорма.ВладелецФормы.Родитель.Компоновщик.Настройки.ПользовательскиеПоля.Элементы[0].
			Варианты.Элементы Цикл
		Если ЭлементОтбор.Значение = Объект.Код Тогда
			ЭлементОтборНайден = Истина;
			Форма.Настройка.Добавить().Отбор = ЭлементОтбор.Отбор;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если Не ЭлементОтборНайден Тогда
		ЭлементОтбор = ЭтаФорма.ВладелецФормы.Родитель.Компоновщик.Настройки.ПользовательскиеПоля.Элементы[0].
				Варианты.Элементы.Добавить();
		ЭлементОтбор.Значение = Объект.Код;
		Форма.Настройка.Добавить().Отбор = ЭлементОтбор.Отбор;
	КонецЕсли;
	
	Если Форма.ОткрытьМодально() = Истина Тогда
		Объект.Отбор = Форма.Настройка[0].Отбор;
		Если Объект.Отбор = "" Тогда
			ЭлементОтбор.Использование = Ложь;
		Иначе
			ЭлементОтбор.Использование = Истина;
		КонецЕсли;
		Записать();
		ЭтаФорма.ВладелецФормы.Родитель.Записать();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Объект.Ссылка.Пустая() Тогда
		Объект.Используется = Истина;
	КонецЕсли;
	
	Если Параметры.Свойство("ОткрываемоеЗначение") Тогда
		ЗначениеВРеквизитФормы(Параметры.ОткрываемоеЗначение.ПолучитьОбъект(), "Объект");
	КонецЕсли;
КонецПроцедуры
