
Функция РассчитатьСписокПлатежей(Договор) Экспорт 
	СписокПлатежей = Новый ТаблицаЗначений; 
	СписокПлатежей.Колонки.Добавить("ДатаПлатежа", Новый ОписаниеТипов("Дата"));
	СписокПлатежей.Колонки.Добавить("НачалоПериода", Новый ОписаниеТипов("Дата"));
	СписокПлатежей.Колонки.Добавить("СуммаПлатежа", Новый ОписаниеТипов("Число"));  
	Если ТипЗнч(Договор) = Тип("ДокументСсылка.РеструктуризацияМикрозайма") 
		И Договор.ВидРеструктуризации = Перечисления.ВидыРеструктуризацииЗадолженности.ДополнительноеСоглашение Тогда
		СуммаЗайма = Договор.ОстатокОДФактический; 
	Иначе  
		СуммаЗайма = Договор.СуммаВыданногоЗайма; 
	КонецЕсли;  
	ПроцентнаяСтавкаЗаПериод = ПроцентнаяСтавкаАннуитет(Договор); //КонвертацияПроцентнойСтавки(Договор, Неопределено, Неопределено);
	Если Договор.ВидПлатежа = Перечисления.ВидыПлатежей.Дифференцированный Тогда
		Если Договор.СпособПогашения = Перечисления.СпособыПогашенияЗаймов.Равномерно Тогда
			НачалоПериода = Договор.ДатаВыдачиЗайма;
			Срок = Договор.Срок;
			СуммаОД = РасчетЗадолженностиМФО.ОкруглитьЧисло(СуммаЗайма/Срок, Договор.ПрограммаРасчета.ПорядокОкругления);
			СписокПлатежей.Колонки.Добавить("ОстаткиОсновнойДолг", Новый ОписаниеТипов("Число"));
			СписокПлатежей.Колонки.Добавить("ОстаткиПроценты", Новый ОписаниеТипов("Число"));
			СписокПлатежей.Колонки.Добавить("Проценты", Новый ОписаниеТипов("Число")); 
			СписокПлатежей.Колонки.Добавить("Дата", Новый ОписаниеТипов("Дата"));
			Вчера = ПустаяСтруктура();
			Вчера.ОстаткиОсновнойДолг = СуммаЗайма;
			Вчера.Дата = Договор.ДатаВыдачиЗайма;
			Для к = 1 по Срок Цикл 
				Сегодня = СписокПлатежей.Добавить(); 
				Сегодня.НачалоПериода = НачалоПериода; 
				Сегодня.ДатаПлатежа = РасчетЗадолженностиМФО.ДобавитьПериодКДате(НачалоПериода, Договор.ПериодичностьСрокаЗайма, Договор.КоличествоПериодичностей);
			   	Сегодня.Дата = Сегодня.ДатаПлатежа;
				Сегодня.Проценты = ПроцентыГрафикПогашения(Договор, Вчера, Сегодня);              
        		Сегодня.СуммаПлатежа = СуммаОД + Сегодня.Проценты;
				Сегодня.ОстаткиПроценты = 0;      
				Сегодня.ОстаткиОсновнойДолг = Вчера.ОстаткиОсновнойДолг - СуммаОД;        
				НачалоПериода = Сегодня.ДатаПлатежа;    
				Вчера = Сегодня;   
			КонецЦикла;  
		ИначеЕсли Договор.СпособПогашения = Перечисления.СпособыПогашенияЗаймов.НаДатуОкончанияДоговора Тогда
			ДатаПлатежа = РасчетЗадолженностиМФО.РассчитатьДатуПогашения(Договор);   
			СуммаПлатежа = СуммаЗайма + СуммаЗайма * Договор.Срок*ПроцентнаяСтавкаЗаПериод/100;       
			стр = СписокПлатежей.Добавить();   
			стр.ДатаПлатежа = ДатаПлатежа;   
			стр.СуммаПлатежа = РасчетЗадолженностиМФО.ОкруглитьЧисло(СуммаПлатежа, Договор.ПрограммаРасчета.ПорядокОкругления);   
			стр.НачалоПериода = Договор.ДатаВыдачиЗайма;  
		КонецЕсли;   
	ИначеЕсли Договор.ВидПлатежа = Перечисления.ВидыПлатежей.Аннуитетный Тогда
		ПроцентнаяСтавка = ПроцентнаяСтавкаЗаПериод/100;  
		//СуммаЗайма = Договор.СуммаВыданногоЗайма;  
		Срок = Договор.Срок;  		
		//При процентной ставке 0
		Если ПроцентнаяСтавка = 0 Тогда
			
			СуммаПлатежа = СуммаЗайма / Срок;
			
		Иначе
			Если Договор.ОстаткиПроценты = 0 И Договор.ОстаткиПросроченныеПроценты = 0 И Договор.ОстаткиПросроченныеПроценты = 0 И Договор.ОстаткиШтрафы = 0  И Договор.ОстаткиПени = 0 Тогда
				
				СуммаПлатежа = СуммаЗайма * (ПроцентнаяСтавка * pow((1 + ПроцентнаяСтавка), Срок) /(pow((1 + ПроцентнаяСтавка), Срок) - 1));
			Иначе
				СуммаПлатежа = СуммаЗайма / Срок;
			КонецЕсли;
			
		КонецЕсли;
		//
		//СуммаПлатежа = СуммаЗайма * (ПроцентнаяСтавка * pow((1 + ПроцентнаяСтавка), Срок) /(pow((1 + ПроцентнаяСтавка), Срок) - 1));  
		НачалоПериода = Договор.ДатаВыдачиЗайма;  
		Для к = 1 по Срок Цикл   
			стр = СписокПлатежей.Добавить();   
			стр.СуммаПлатежа = РасчетЗадолженностиМФО.ОкруглитьЧисло(СуммаПлатежа, Договор.ПрограммаРасчета.ПорядокОкругления);   
			стр.НачалоПериода = НачалоПериода;   
			стр.ДатаПлатежа = РасчетЗадолженностиМФО.ДобавитьПериодКДате(
				НачалоПериода,
				Договор.ПериодичностьСрокаЗайма,
				Договор.КоличествоПериодичностей
			);
			НачалоПериода = стр.ДатаПлатежа;  
		КонецЦикла; 
	КонецЕсли;   
	Возврат СписокПлатежей; 
КонецФункции

Функция РассчитатьГрафикПлановыхПогашений(Договор, ТаблицаПлатежей) Экспорт 
	График = Новый ТаблицаЗначений; 
	Для Каждого Реквизит Из Метаданные.Документы.РеструктуризацияМикрозайма.ТабличныеЧасти.ГрафикПлатежей.Реквизиты Цикл
		График.Колонки.Добавить(Реквизит.Имя, Реквизит.Тип); 
	КонецЦикла;  
	Вчера = ПустаяСтруктура();  
	Если ТипЗнч(Договор) = Тип("ДокументСсылка.РеструктуризацияМикрозайма") И Договор.ВидРеструктуризации = Перечисления.ВидыРеструктуризацииЗадолженности.ДополнительноеСоглашение Тогда  
		СуммаЗайма = Договор.ОстатокОДФактический; 
	Иначе  
		СуммаЗайма = Договор.СуммаВыданногоЗайма;  
	КонецЕсли;  
	Вчера.ОстаткиОсновнойДолг = СуммаЗайма; 
	Вчера.Дата = Договор.ДатаВыдачиЗайма;  
	ТекДата = Договор.ДатаВыдачиЗайма;    
	Срок = Договор.Срок; 
	Для к = 1 по Срок Цикл  
		Сегодня = График.Добавить();  
		ТекДата = РасчетЗадолженностиМФО.ДобавитьПериодКДате(ТекДата, Договор.ПериодичностьСрокаЗайма, Договор.КоличествоПериодичностей);  
		Сегодня.Дата = ТекДата;         
		Сегодня.ОстаткиОсновнойДолг = ОсновнойДолг(Договор, Вчера, Сегодня);        
		Сегодня.Проценты =     ПроцентыГрафикПогашения(Договор, Вчера, Сегодня);        
		Сегодня.ОстаткиПроценты = Вчера.ОстаткиПроценты + Сегодня.Проценты;        
		Если к < Срок ИЛИ Договор.ВидПлатежа = Перечисления.ВидыПлатежей.Индивидуальный Тогда // Последним платежом гасим все остатки   
			РазнестиПлатеж(Договор, ТаблицаПлатежей, Сегодня);     
		Иначе   
			Сегодня.ОплатаОсновнойДолг = Сегодня.ОстаткиОсновнойДолг;   
			Сегодня.ОплатаПроценты = Сегодня.ОстаткиПроценты;   
			Сегодня.СуммаПлатежа = Сегодня.ОплатаОсновнойДолг + Сегодня.ОплатаПроценты;   
			Сегодня.ОстаткиОсновнойДолг = 0;   
			Сегодня.ОстаткиПроценты = 0;  
		КонецЕсли;  
		Сегодня.КУплате = Сегодня.ОстаткиОсновнойДолг + Сегодня.ОстаткиПроценты;  
//		Сегодня.КУплате = Вчера.КУплате + Сегодня.ОплатаОсновнойДолг + Сегодня.ОплатаПроценты;
		Вчера = Сегодня;  
	КонецЦикла;   
	Возврат График;         
КонецФункции

Функция РасчитатьГрафикПлатежейИНачислений(Договор, ДатаРасчета, ТаблицаПлатежей, Остатки) Экспорт 
	График = СформироватьТаблицуЗначенийГрафикНачислений(Договор, ДатаРасчета, ТаблицаПлатежей, Остатки);	
	Вчера = График[0]; 
	
	СуммаПроцентовКНачислению = 0;
	НачислятьПроцентыПоГрафику = Истина;
	
	ГрафикПлатежей = Договор.ГрафикПлатежей;
	НачалоПериода = Договор.ДатаВыдачиЗайма;
	ФлагНаличияПросрочки = Ложь;
	Сдвиг = 0;
	СуммаПредстоящихПлановыхПлатежейПоПроцентам = СуммаПроцентовКУплате(Договор);
	Для Каждого ПлановыйПлатеж Из ГрафикПлатежей Цикл
		ДлинаПериода = (ПлановыйПлатеж.Дата - НачалоПериода) / СекундВСутках();
		ПроцентовВДень = РасчетЗадолженностиМФО.ОкруглитьЧисло(ПлановыйПлатеж.ОплатаПроценты/ДлинаПериода, Договор.ПрограммаРасчета.ПорядокОкругления);
		СуммаПроцентовКНачислению = 0;
		НачислятьПроцентыПоГрафику = Истина;
		д = 1;
		Для к = 1 По ДлинаПериода Цикл 
			Попытка
				Сегодня = График[к+Сдвиг];
			Исключение
				Продолжить;
			КонецПопытки;
			Сегодня.Договор = Договор;
			Сегодня.ОстаткиНачисленияЗаВесьПериод = Вчера.ОстаткиНачисленияЗаВесьПериод;
			Сегодня.ОстаткиПроцентыЗаВесьПериод = Вчера.ОстаткиПроцентыЗаВесьПериод;
			
			Сегодня.ФлагНаличияПросрочки = ФлагНаличияПросрочки(Договор, Вчера, Сегодня);     
			ОсновнойДолг =  Сегодня.ПлановыйГрафик_ОплатаОсновнойДолг;          
			Сегодня.ОстаткиОсновнойДолг = Вчера.ОстаткиОсновнойДолг + ОсновнойДолг;   
			
			Если Сегодня.ФлагНаличияПросрочки Тогда
				НачислятьПроцентыПоГрафику = Ложь;
				Проценты = ПроцентыГрафикНачисления(Договор, Вчера, Сегодня, Вчера.ОстатокОДФактический);
				Сегодня.ПросроченныеПроценты = Проценты;
				д = к;
			Иначе
				СуммаПроцентовКНачислению = СуммаПроцентовКНачислению + ПроцентовВДень;
			КонецЕсли;
			
			Если НачислятьПроцентыПоГрафику Тогда
				Сегодня.ОстатокПроцентовФактический = СуммаПредстоящихПлановыхПлатежейПоПроцентам;
			Иначе
				Сегодня.ОстатокПроцентовФактический = СуммаПредстоящихПлановыхПлатежейПоПроцентам - ПлановыйПлатеж.ОплатаПроценты + (ДлинаПериода - д)*ПроцентовВДень + Вчера.ОстаткиПроценты + Вчера.ОстаткиПросроченныеПроценты + Сегодня.ПросроченныеПроценты;
			КонецЕсли;
			Сегодня.КорректировкаПроценты = Сегодня.ОстатокПроцентовФактический - Вчера.ОстатокПроцентовФактический;
			
			Если к = ДлинаПериода Тогда
				Если НачислятьПроцентыПоГрафику Тогда
					Сегодня.Проценты = ПлановыйПлатеж.ОплатаПроценты;
				Иначе
					Сегодня.Проценты = СуммаПроцентовКНачислению;
				КонецЕсли;
				СуммаПредстоящихПлановыхПлатежейПоПроцентам = СуммаПредстоящихПлановыхПлатежейПоПроцентам - ПлановыйПлатеж.ОплатаПроценты;
			КонецЕсли;
			Доначислить(Договор, Вчера, Сегодня);
			Вчера = Сегодня;
		КонецЦикла;  
		Сдвиг = Сдвиг + ДлинаПериода;
		НачалоПериода = ПлановыйПлатеж.Дата;		
	КонецЦикла;
	
	ДлинаПериода = (ДатаРасчета - НачалоПериода) / СекундВСутках();
	Для к = 1 По ДлинаПериода Цикл
		Попытка
			Сегодня = График[к+Сдвиг];
		Исключение
			Прервать;
		КонецПопытки;
		Сегодня.Договор = Договор;
		Сегодня.ОстаткиНачисленияЗаВесьПериод = Вчера.ОстаткиНачисленияЗаВесьПериод;
		Сегодня.ОстаткиПроцентыЗаВесьПериод = Вчера.ОстаткиПроцентыЗаВесьПериод;
		
		Сегодня.ОстаткиОсновнойДолг = Вчера.ОстаткиОсновнойДолг;
		Сегодня.ФлагНаличияПросрочки = ФлагНаличияПросрочки(Договор, Вчера, Сегодня);
		Если Сегодня.ФлагНаличияПросрочки Тогда
			Проценты = ПроцентыГрафикНачисления(Договор, Вчера, Сегодня, Вчера.ОстатокОДФактический);
			Сегодня.ПросроченныеПроценты = Проценты;
			Сегодня.КорректировкаПроценты = Проценты;
		КонецЕсли;
		Сегодня.ОстатокПроцентовФактический = Вчера.ОстатокПроцентовФактический + Сегодня.ПросроченныеПроценты;
		Доначислить(Договор, Вчера, Сегодня);
		Вчера = Сегодня;
	КонецЦикла;
	Возврат График; 
КонецФункции

Процедура Доначислить(Договор, Вчера, Сегодня)
	Сегодня.ОстаткиНачисленияЗаВесьПериод = Сегодня.ОстаткиНачисленияЗаВесьПериод + Сегодня.Проценты + Сегодня.ПросроченныеПроценты;  
	Сегодня.ОстаткиПроценты = Вчера.ОстаткиПроценты + Сегодня.Проценты;        
	Сегодня.ОстаткиПросроченныеПроценты = Вчера.ОстаткиПросроченныеПроценты + Сегодня.ПросроченныеПроценты;      
	Сегодня.ОстатокОДФактический = Вчера.ОстатокОДФактический; 
	//Сегодня.ОстатокПроцентовФактический = Вчера.ОстатокПроцентовФактический;
	Сегодня.ОстаткиШтрафы =    Вчера.ОстаткиШтрафы;        
	Сегодня.ОстаткиПени =      Вчера.ОстаткиПени;    
	Сегодня.Переплата = Вчера.Переплата + Сегодня.СуммаПлатежа; 
	
	СписатьСуммуНаСчете(Договор, Сегодня.Переплата, Сегодня, Ложь); 
	
	Сегодня.ОстатокОДФактический = Сегодня.ОстатокОдФактический - Сегодня.ОплатаОсновнойДолг;
	Сегодня.ОстатокПроцентовФактический = Сегодня.ОстатокПроцентовФактический - Сегодня.ОплатаПроценты - Сегодня.ОплатаПросроченныеПроценты;
	Сегодня.КУплате = КУплате(Договор, Вчера, Сегодня);  
	
	Если Сегодня.ФлагНаличияПросрочки И Сегодня.КУплате > 0 Тогда        
		Сегодня.Штрафы =     Штрафы(Договор, Вчера, Сегодня);   
		Сегодня.ОстаткиНачисленияЗаВесьПериод = Сегодня.ОстаткиНачисленияЗаВесьПериод + Сегодня.Штрафы;         
		Сегодня.Пени =    Пени(Договор, Вчера, Сегодня);   
		Сегодня.ОстаткиНачисленияЗаВесьПериод = Сегодня.ОстаткиНачисленияЗаВесьПериод + Сегодня.Пени;  
	КонецЕсли;         
	Сегодня.ОстаткиШтрафы = Сегодня.ОстаткиШтрафы + Сегодня.Штрафы;             
	Сегодня.ОстаткиПени = Сегодня.ОстаткиПени + Сегодня.Пени;            
	Сегодня.СуммаПроцентов = Сегодня.ОстаткиПроценты + Сегодня.ОстаткиПросроченныеПроценты;  
	Сегодня.ОстаткиПроцентыЗаВесьПериод = Вчера.ОстаткиПроцентыЗаВесьПериод + Сегодня.Проценты + Сегодня.ПросроченныеПроценты;    
	Сегодня.КУплате = КУплате(Договор, Вчера, Сегодня);    
	Сегодня.ДниПросрочки = ДниПросрочки(Договор, Вчера, Сегодня); 
	Сегодня.ДниПросрочки_ФИФО = ДниПросрочкиФИФО(Договор, Вчера, Сегодня);	
КонецПроцедуры

Функция ПлатежиДоЦессии(СуммаКредита, ДатаЦессии, ОстатокОД, ТаблицаПлатежей)

	СуммаОплатДоЦессии = 0;
	Для каждого Платеж Из ТаблицаПлатежей Цикл
	
		Если Платеж.ДатаПлатежа < ДатаЦессии Тогда
		
			СуммаОплатДоЦессии = СуммаОплатДоЦессии + Платеж.СуммаПлатежа;
		
		КонецЕсли;
	
	КонецЦикла;
	
	ОплатаПоОД = СуммаКредита - ОстатокОД;
	ОплатаПоПроцентам = СуммаОплатДоЦессии - ОплатаПоОД;
	
	Возврат ОплатаПоПроцентам;

КонецФункции // ()

Функция РасчитатьОстаткиЗаВесьПериод(СтрокаГрафикаНачалоЦессии, ОплатаДоЦессии)

	Возврат СтрокаГрафикаНачалоЦессии.ОстатокПроцентовФактический
			+ СтрокаГрафикаНачалоЦессии.ОстаткиШтрафы
			+ СтрокаГрафикаНачалоЦессии.ОстаткиПени
			+ ОплатаДоЦессии;

КонецФункции // ()

Функция СформироватьТаблицуЗначенийГрафикНачислений(Договор, ДатаРасчета, ТаблицаПлатежей, Остатки) 
	График = Новый ТаблицаЗначений;  

	Для Каждого Реквизит Из Метаданные.Обработки.РасчетГрафикаПлатежейИНачислений.ТабличныеЧасти.ГрафикНачисленияИПогашения.Реквизиты Цикл  
		График.Колонки.Добавить(Реквизит.Имя, Реквизит.Тип);  
	КонецЦикла; 
 
	Если Остатки <> Неопределено И ЗначениеЗаполнено(Остатки.ОстаткиДата) Тогда
		
		Вчера = График.Добавить();
		Для Каждого Колонка Из График.Колонки Цикл
			Попытка
				Вчера[Колонка.Имя] = Остатки[Колонка.Имя];
			Исключение
			КонецПопытки;
		КонецЦикла;
		
		Вчера.Дата = Остатки.ОстаткиДата;
		Вчера.ОстаткиОсновнойДолг = Остатки.ОстаткиОсновнойДолг;
		Вчера.ОстатокОДФактический = Остатки.ОстаткиОсновнойДолг;
		Вчера.ОстатокПроцентовФактический = Остатки.ОстаткиПроценты + Остатки.ОстаткиПросроченныеПроценты;
		Вчера.ОстаткиПроцентыЗаВесьПериод = Вчера.ОстатокПроцентовФактический;
		ОплатаДоЦессии = ПлатежиДоЦессии(
			Договор.СуммаВыданногоЗайма,
			Остатки.ОстаткиДата,
			Вчера.ОстаткиОсновнойДолг,
			ТаблицаПлатежей
		);
		Вчера.ОстаткиНачисленияЗаВесьПериод = РасчитатьОстаткиЗаВесьПериод(Вчера, ОплатаДоЦессии);
		
		Вчера.КУплате = Вчера.ОстатокОДФактический + Вчера.ОстатокПроцентовФактический + Вчера.ОстаткиШтрафы + Вчера.ОстаткиПени;

	Иначе
		Вчера = График.Добавить();  
		Вчера.ОстатокОДФактический = Договор.СуммаВыданногоЗайма;  
		Вчера.ОстатокПроцентовФактический = СуммаПроцентовКУплате(Договор);
		Вчера.Дата = Договор.ДатаВыдачиЗайма; 
	КонецЕсли;
	Вчера.Договор = Договор;
	ТекДата = Вчера.Дата + СекундВСутках();
	Пока ТекДата <= ДатаРасчета Цикл
		Сегодня = График.Добавить();
		Сегодня.Дата = ТекДата;
		ТекДата = ТекДата + СекундВСутках();
	КонецЦикла;  
	Для Каждого Стр из ТаблицаПлатежей Цикл  
		Строки = График.НайтиСтроки(Новый Структура("Дата", Стр.ДатаПлатежа));
		Если Строки.Количество() > 0 Тогда   
			Строка = Строки[0];   
			Строка.СуммаПлатежа = стр.СуммаПлатежа;     
		КонецЕсли; 
	КонецЦикла;                       
	
	к = 0;
	НачалоПериода = Договор.ДатаВыдачиЗайма;
	Для Каждого Стр из Договор.ГрафикПлатежей Цикл  
		Строки = График.НайтиСтроки(Новый Структура("Дата", Стр.Дата));  
		Если Строки.Количество() > 0 Тогда   
			Строка = Строки[0];
			Строка.ПлановыйГрафик_ОплатаПроценты = Стр.ОплатаПроценты;
			Строка.ПлановыйГрафик_ОплатаОсновнойДолг = Стр.ОплатаОсновнойДолг;  
			Строка.ПлановыйГрафик_СуммаПлатежа = Стр.СуммаПлатежа;
			Строка.ПлановыйГрафик_КУплате = Стр.КУплате;
			НачалоПериода = Строка.Дата;
		КонецЕсли; 
	КонецЦикла; 

	Если Договор.ВидПроцентнойСтавки = Перечисления.ВидыПроцентнойСтавки.ФиксированнаяПроцентнаяСтавка Тогда
		Для Каждого стр из График Цикл
			стр.ПроцентнаяСтавка = Договор.ПроцентнаяСтавка;
		КонецЦикла;
	ИначеЕсли Договор.ВидПроцентнойСтавки = Перечисления.ВидыПроцентнойСтавки.ПлавающаяПроцентнаяСтавкаЗависимаяОтСрока Тогда
		Для Каждого Интервал Из Договор.ИнтервалыПроцентнойСтавки Цикл
			ИнтервалНачалоИнтервала = РасчетЗадолженностиМФО.ДобавитьПериодКДате(
				Договор.ДатаВыдачиЗайма + СекундВСутках(),
				Договор.ПериодичностьСрокаЗайма,
				Интервал.ИнтервалОт
			);
			ИнтервалКонецИнтервала = ?(Интервал.ИнтервалДо = 0,
				ДатаРасчета,
				РасчетЗадолженностиМФО.ДобавитьПериодКДате(Договор.ДатаВыдачиЗайма, Договор.ПериодичностьСрокаЗайма, Интервал.ИнтервалДо)
			);
			Пока ИнтервалНачалоИнтервала < ИнтервалКонецИнтервала + СекундВСутках() Цикл
				стр = График.НайтиСтроки(Новый Структура("Дата", ИнтервалНачалоИнтервала))[0];
				стр.ПроцентнаяСтавка = Интервал.ПроцентнаяСтавка;
				ИнтервалНачалоИнтервала = ИнтервалНачалоИнтервала + СекундВСутках();
			КонецЦикла;
		КонецЦикла;
	ИначеЕсли Договор.ВидПроцентнойСтавки = Перечисления.ВидыПроцентнойСтавки.ПлавающаяПроцентнаяСтавкаЗависимаяОтСтавки Тогда
		
	КонецЕсли;	
	
	Возврат График; 
КонецФункции

Функция СформироватьТаблицуЗначенийГрафикПогашений(Договор, ТаблицаПлатежей) 
	График = Новый ТаблицаЗначений; 
	Для Каждого Реквизит Из Метаданные.Документы.РеструктуризацияМикрозайма.ТабличныеЧасти.ГрафикПлатежей.Реквизиты Цикл   
		График.Колонки.Добавить(Реквизит.Имя, Реквизит.Тип); 
	КонецЦикла;  
	Вчера = График.Добавить(); 
	ТекДата = Договор.ДатаВыдачиЗайма;    
	Срок = Договор.Срок;    
	Возврат График; 
КонецФункции

Функция СуммаПроцентовКУплате(Договор)
	Сумма = 0;
	Для Каждого Платеж из Договор.ГрафикПлатежей Цикл
		Сумма = Сумма + Платеж.ОплатаПроценты;
	КонецЦикла;
	Возврат Сумма;
КонецФункции

Процедура СписатьСуммуНаСчете(Договор, СуммаНаСчете, Сегодня, Просрочка) 
	СуммаПлатежа = СуммаНаСчете;  
	Если СуммаПлатежа = 0 Тогда  
		Возврат; 
	КонецЕсли;   
 
	ПорядокГашения = ПолучитьПорядокГашения(Договор);
 
 	Для Каждого Элемент Из ПорядокГашения Цикл
  		Сегодня["Оплата" + Элемент] = мин(СуммаПлатежа, Сегодня["Остатки" + Элемент]);  
		Сегодня["Остатки" + Элемент] = Сегодня["Остатки" + Элемент] - Сегодня["Оплата" + Элемент];  
		СуммаПлатежа = СуммаПлатежа - Сегодня["Оплата" + Элемент];
	КонецЦикла;
	СуммаНаСчете = СуммаПлатежа;
КонецПроцедуры

Функция ОсновнойДолг(Договор, Вчера, Сегодня) 
	Возврат Вчера.ОстаткиОсновнойДолг; 
КонецФункции

Функция ФлагНаличияПросрочки(Договор, Вчера, Сегодня) 
	Если Договор.ПрограммаРасчета.СпособРазнесенияПлатежа = Перечисления.СпособыРазнесенияПлатежа.НаДатуОплатыПоГрафику Тогда
		Возврат Вчера.КУплате > 0; 
	Иначе  
		Возврат Вчера.КУПлате > Вчера.ПлановыйГрафик_КУплате; 
	КонецЕсли; 
	//Возврат Вчера.КУплате > 0;
КонецФункции

Функция Штрафы(Договор, Вчера, Сегодня) 
	Если Не ДопустимыйПериодНачисленийШтрафы(Договор, Вчера, Сегодня) Тогда  
		Возврат 0; 
	КонецЕсли; 
	
	Сегодня.БазаНачисленияШтрафовНаОД = Сегодня.ОстаткиОсновнойДолг;
	
	Если Договор.ПрограммаРасчета.ИзменитьСтавкуШтрафа Тогда
		Если Вчера.ДниПросрочки < Договор.ПрограммаРасчета.ПрекращатьНачисления_ДеньПросрочки - 1 Тогда  
			Ставка = ПолучитьСтавкуШтрафаПокаНачисляютсяПроценты(Договор, Сегодня.Дата); 
		Иначе  
			Ставка = ПолучитьСтавкуШтрафаПослеНачисленияПроцентов(Договор, Сегодня.Дата); 
		КонецЕсли;		
	Иначе
		Если Сегодня.Проценты + Сегодня.ПросроченныеПроценты > 0 Тогда  
			Ставка = ПолучитьСтавкуШтрафаПокаНачисляютсяПроценты(Договор, Сегодня.Дата); 
		Иначе  
			Ставка = ПолучитьСтавкуШтрафаПослеНачисленияПроцентов(Договор, Сегодня.Дата); 
		КонецЕсли; 
	КонецЕсли;
	
	Сегодня.БазаНачисленияШтрафовНаПроценты = Сегодня.ОстаткиПроценты + Сегодня.ОстаткиПросроченныеПроценты;  
	СтавкаПроценты = ПолучитьСтавкуШтрафаНаПроценты(Договор, Сегодня.Дата);
	
	СуммаШтрафы = Сегодня.БазаНачисленияШтрафовНаОД*Ставка/100 + Сегодня.БазаНачисленияШтрафовНаПроценты*СтавкаПроценты/100; 
	СуммаШтрафы = РасчетЗадолженностиМФО.ОкруглитьЧисло(СуммаШтрафы, Договор.ПрограммаРасчета.ПорядокОкругления);  
	
	Если СпецифичныйПериодНачисления(Договор.ДатаДоговора) Тогда
		Штрафы = СуммаШтрафы; 
	Иначе  
		к = ПолучитьКоэффициентОграниченияНачисленияПроцентовНаСуммуЗайма(Договор.ДатаДоговора, Договор.ПрограммаРасчета.БанковскаяПрограмма);  
		Штрафы = Мин(СуммаШтрафы, к*Договор.СуммаВыданногоЗайма - Сегодня.ОстаткиНачисленияЗаВесьПериод);    
	КонецЕсли;                               
	Возврат Штрафы; 
КонецФункции

Функция ДниПросрочки(Договор, Вчера, Сегодня) 
	Если Сегодня.ФлагНаличияПросрочки Тогда  
		ДниПросрочки = Вчера.ДниПросрочки + 1;  
		Если Сегодня.ОплатаОсновнойДолг > 0 Тогда   
			//ДниПросрочки = 0;  
		КонецЕсли; 
	Иначе  
		ДниПросрочки = 0;  
	КонецЕсли; 
	Возврат ДниПросрочки; 
КонецФункции

Функция ДниПросрочкиФИФО(Договор, Вчера, Сегодня) 
	ДатаВозникновенияПросрочки = Неопределено;
	Для Каждого Платеж из Договор.ГрафикПлатежей Цикл
		Если Вчера.ОстатокОДФактический > Платеж.КУплате Тогда
			ДатаВозникновенияПросрочки = Платеж.Дата;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Если ДатаВозникновенияПросрочки = Неопределено Тогда
		Возврат 0;
	Иначе
		Возврат (Сегодня.Дата - ДатаВозникновенияПросрочки) / СекундВСутках();
	КонецЕсли;
КонецФункции

Функция Пени(Договор, Вчера, Сегодня) 
	Если Не ДопустимыйПериодНачислений(Договор, Вчера, Сегодня) Тогда  
		Возврат 0;  
	КонецЕсли; 
	СуммаПени = 0; 
	к = ПолучитьКоэффициентОграниченияНачисленияПроцентовНаСуммуЗайма(Договор.ДатаДоговора,Договор.ПрограммаРасчета.БанковскаяПрограмма); 
	//Пени = Мин(СуммаПени, к*Договор.СуммаВыданногоЗайма - Вчера.НачисленияЗаВесьПериод); 
	Пени = СуммаПени; 
	Возврат Пени; 
КонецФункции

Функция КУплате(Договор, Вчера, Сегодня) 
	Возврат Сегодня.ОстаткиОсновнойДолг + Сегодня.ОстаткиПроценты + Сегодня.ОстаткиПросроченныеПроценты + Сегодня.ОстаткиШтрафы + Сегодня.ОстаткиПени; 
КонецФункции

Функция ПустаяСтруктура() 
	Начисление = Новый Структура; 
	Начисление.Вставить("Дата", Неопределено); 
	Начисление.Вставить("ОстаткиОсновнойДолг", 0); 
	Начисление.Вставить("Проценты", 0); 
	Начисление.Вставить("ОстаткиПроценты", 0); 
	Начисление.Вставить("ФлагНаличияПросрочки", Ложь); 
	Начисление.Вставить("ДниПросрочки", 0); 
	Начисление.Вставить("ПросроченныеПроценты", 0); 
	Начисление.Вставить("ОстаткиПросроченныеПроценты", 0); 
	Начисление.Вставить("СуммаПроцентов", 0); 
	Начисление.Вставить("БазаНачисленияШтрафовНаОД", 0); 
	Начисление.Вставить("БазаНачисленияШтрафовНаПроценты", 0); 
	Начисление.Вставить("Штрафы", 0); 
	Начисление.Вставить("ОстаткиШтрафы", 0); 
	Начисление.Вставить("Пени", 0);  
	Начисление.Вставить("ОстаткиПени", 0); 
	Начисление.Вставить("СуммаПлатежа", 0); 
	Начисление.Вставить("ОплатаОсновнойДолг", 0); 
	Начисление.Вставить("ОплатаПроценты", 0); 
	Начисление.Вставить("ОплатаПросроченныеПроценты", 0); 
	Начисление.Вставить("ОплатаШтрафы", 0); 
	Начисление.Вставить("ОплатаПени", 0); 
	Начисление.Вставить("Переплата", 0); 
	Начисление.Вставить("КУплате", 0); 
	Начисление.Вставить("ОстаткиПроцентыЗаВесьПериод", 0); 
	Начисление.Вставить("ОстатокОДФактический", 0); 
	Начисление.Вставить("ОстатокПроцентовФактический", 0);
	Возврат Начисление; 
КонецФункции
    
Функция ПолучитьПорядокГашения(Договор) 
	Массив = Новый Массив;  
	Если Договор.ПрограммаРасчета.ЗадатьПорядокГашения Тогда  
		Для Каждого Элемент из Договор.ПрограммаРасчета.ПорядокГашения Цикл   
			Массив.Добавить(Элемент.Гашение.ИмяПредопределенныхДанных);  
		КонецЦикла; 
	Иначе  
		Массив.Добавить("ПросроченныеПроценты");  
		Массив.Добавить("Проценты");  
		Массив.Добавить("Штрафы");  
		Массив.Добавить("Пени");  
		Массив.Добавить("ОсновнойДолг"); 
	КонецЕсли;  
	Возврат Массив; 
КонецФункции
 
Процедура РазнестиПлатеж(Договор, ТаблицаПлатежей, Сегодня) 

	СуммаПлатежа = ПолучитьСуммуПлатежа(ТаблицаПлатежей, Сегодня.Дата);
	Если СуммаПлатежа = 0 Тогда
		
		//Если НЕ ЗначениеЗаполнено(Договор.СуммаПлатежа) Тогда 
		// Нерабочая конструкция
		
			Возврат;
		
		//КонецЕсли;
		
		//СуммаПлатежа = Договор.СуммаПлатежа;
		
	Конецесли;
	
	Сегодня.СуммаПлатежа = СуммаПлатежа;
	ПорядокГашения = ПолучитьПорядокГашения(Договор);
	Для Каждого Элемент Из ПорядокГашения Цикл
		Сегодня["Оплата" + Элемент] = мин(СуммаПлатежа, Сегодня["Остатки" + Элемент]);  
		Сегодня["Остатки" + Элемент] = Сегодня["Остатки" + Элемент] - Сегодня["Оплата" + Элемент];  
		СуммаПлатежа = СуммаПлатежа - Сегодня["Оплата" + Элемент];
	КонецЦикла;

	Сегодня.Переплата = СуммаПлатежа;

КонецПроцедуры

Функция ПолучитьСуммуПлатежа(ТаблицаПлатежей, Дата) 
	//Запрос = Новый Запрос("ВЫБРАТЬ  
	//                      |ТаблицаПлатежей.ДатаПлатежа КАК ДатаПлатежа,  
	//                      |ТаблицаПлатежей.СуммаПлатежа КАК СуммаПлатежа 
	//                      |ПОМЕСТИТЬ ВТ_Платежи 
	//                      |ИЗ  
	//                      |&ТаблицаПлатежей КАК ТаблицаПлатежей 
	//                      |; 
	//                      | 
	//                      |/////////////////////////////////////////////////////////////////////////////// / 
	//                      |ВЫБРАТЬ  
	//                      |СУММА(ВТ_Платежи.СуммаПлатежа) КАК СуммаПлатежа,  
	//                      |ВТ_Платежи.ДатаПлатежа КАК ДатаПлатежа 
	//                      |ИЗ  
	//                      |ВТ_Платежи КАК ВТ_Платежи 
	//                      |ГДЕ  
	//                      |ВТ_Платежи.ДатаПлатежа = &ДатаПлатежа 
	//                      |  
	//                      |СГРУППИРОВАТЬ ПО  
	//                      |ВТ_Платежи.ДатаПлатежа"); 
	//Запрос.УстановитьПараметр("ТаблицаПлатежей", ТаблицаПлатежей); 
	//Запрос.УстановитьПараметр("ДатаПлатежа", Дата); 
	//Результат = Запрос.Выполнить().Выбрать(); 
	//Если Результат.Следующий() Тогда  
	//Возврат Результат.СуммаПлатежа; 
	//Иначе  //Возврат 0; 
	//КонецЕсли; 
	Сумма = 0; 
	Строки = ТаблицаПлатежей.НайтиСтроки(Новый Структура("ДатаПлатежа", Дата)); 
	Для Каждого Строка Из Строки Цикл  
		Сумма = Сумма + Строка.СуммаПлатежа; 
	КонецЦикла; 
	Возврат Сумма; 
КонецФункции
 
Функция ПолучитьКоэффициентОграниченияНачисленияПроцентовНаСуммуЗайма(ДатаДоговора, БанковскаяПрограмма)
	
	Если БанковскаяПрограмма Тогда
		Возврат 99999;
	КонецЕсли;	
	
	Если ДатаДоговора <= Дата(2016, 03, 15) Тогда  
		Возврат 99999; 
	ИначеЕсли ДатаДоговора > Дата(2016, 03, 15) И ДатаДоговора <= Дата(2016, 12, 31) Тогда
		Возврат 4;
	ИначеЕсли ДатаДоговора > Дата(2016, 12, 31) И ДатаДоговора <= Дата(2019, 01, 27) Тогда  
		Возврат 3; 
	ИначеЕсли ДатаДоговора > Дата(2019, 01, 27) И ДатаДоговора <= Дата(2019, 06, 30) Тогда  
		Возврат 2.5; 
	ИначеЕсли ДатаДоговора > Дата(2019, 06, 30) И ДатаДоговора <= Дата(2019, 12, 31) Тогда  
		Возврат 2; 
	ИначеЕсли ДатаДоговора > Дата(2019, 12, 31) И  ДатаДоговора <= Дата(2023, 07, 01) Тогда 
		Возврат 1.5;  	
	ИначеЕсли ДатаДоговора > Дата(2023, 07, 01) Тогда  
		Возврат 1.3;  
	КонецЕсли;
	
КонецФункции

Функция ПолучитьКоэффициентОграниченияНачисленияПроцентовНаТекущийОД(ДатаДоговора,БанковскаяПрограмма)
	
	Если БанковскаяПрограмма Тогда
		Возврат 99999;
	КонецЕсли;	

	
	Если ДатаДоговора <= Дата(2016, 12, 31) Тогда  
		Возврат 99999; 
	ИначеЕсли ДатаДоговора > Дата(2016, 12, 31) И ДатаДоговора <= Дата(2019, 01, 27) Тогда  
		Возврат 2; 
	ИначеЕсли ДатаДоговора > Дата(2019, 01, 27) Тогда  
		Возврат 99999; 
	КонецЕсли;
	
КонецФункции
 
Функция ДопустимыйПериодНачислений(Договор, Вчера, Сегодня) 
	ПрограммаРасчета = Договор.ПрограммаРасчета; 
	Если ПрограммаРасчета.ПрекращатьНачисления Тогда  
		Если ЗначениеЗаполнено(ПрограммаРасчета.ПрекращатьНачисления_ДеньПросрочки) 
			И Вчера.ДниПросрочки >= ПрограммаРасчета.ПрекращатьНачисления_ДеньПросрочки - 1 Тогда   
			Возврат Ложь;  
		КонецЕсли;  
		Если ЗначениеЗаполнено(ПрограммаРасчета.ПрекращатьНачисления_Количество) Тогда   
			Если ПрограммаРасчета.ПрекращатьНачисления_Период = "Дней" Тогда    
				ДатаПрекращения = Договор.ДатаВыдачиЗайма + ПрограммаРасчета.ПрекращатьНачисления_Количество*СекундВСутках();
			ИначеЕсли ПрограммаРасчета.ПрекращатьНачисления_Период = "Месяцев" Тогда    
				ДатаПрекращения = ДобавитьМесяц(Договор.ДатаВыдачиЗайма,ПрограммаРасчета.ПрекращатьНачисления_Количество);
			ИначеЕсли ПрограммаРасчета.ПрекращатьНачисления_Период = "Лет" Тогда    
				ДатаПрекращения = ДобавитьМесяц(Договор.ДатаВыдачиЗайма,ПрограммаРасчета.ПрекращатьНачисления_Количество*12);   
			Иначе 
				ДатаПрекращения = Договор.ДатаВыдачиЗайма;   
			КонецЕсли;   
			Если Сегодня.Дата > ДатаПрекращения Тогда    
				Возврат Ложь;   
			КонецЕсли;  
		КонецЕсли;  
	КонецЕсли; 
	Возврат Истина; 
КонецФункции

Функция ДопустимыйПериодНачисленийШтрафы(Договор, Вчера, Сегодня) 
	ПрограммаРасчета = Договор.ПрограммаРасчета; 
	Если ПрограммаРасчета.ПрекращатьНачисления Тогда   
		Если ЗначениеЗаполнено(ПрограммаРасчета.ПрекращатьНачисления_Количество) Тогда   
			Если ПрограммаРасчета.ПрекращатьНачисления_Период = "Дней" Тогда    
				ДатаПрекращения = Договор.ДатаВыдачиЗайма + ПрограммаРасчета.ПрекращатьНачисления_Количество*СекундВСутках();
			ИначеЕсли ПрограммаРасчета.ПрекращатьНачисления_Период = "Месяцев" Тогда    
				ДатаПрекращения = ДобавитьМесяц(Договор.ДатаВыдачиЗайма,ПрограммаРасчета.ПрекращатьНачисления_Количество);   
			ИначеЕсли ПрограммаРасчета.ПрекращатьНачисления_Период = "Лет" Тогда    
				ДатаПрекращения = ДобавитьМесяц(Договор.ДатаВыдачиЗайма,ПрограммаРасчета.ПрекращатьНачисления_Количество*12);   
			Иначе 
				ДатаПрекращения = Договор.ДатаВыдачиЗайма;   
			КонецЕсли;   
			Если Сегодня.Дата > ДатаПрекращения Тогда    
				Возврат Ложь;   
			КонецЕсли;  
		КонецЕсли;  
	КонецЕсли; 
	Возврат Истина; 
КонецФункции

Функция ПроцентыГрафикПогашения(Договор, Вчера, Сегодня) 
	д = ?(Договор.ПрограммаРасчета.НачислятьПроценты, Договор.ПрограммаРасчета.НачислятьПроценты_Количество, 0);
	Если Сегодня.Дата <= Договор.ДатаВыдачиЗайма + д*СекундВСутках() Тогда
		Возврат 0;
	КонецЕсли;
		
	МассивПериодов = МассивПериодов(Договор, Вчера.Дата, Сегодня.Дата);
	НачалоПериода = Вчера.Дата;
	Сумма = 0;
	Для Каждого Период Из МассивПериодов Цикл
		ПроцентнаяСтавкаЗаПериод = КонвертацияПроцентнойСтавки(Договор, НачалоПериода, Период.КонецИнтервала, Период.ПроцентнаяСтавка);
		Сумма = Сумма + РасчетЗадолженностиМФО.ОкруглитьЧисло(Вчера.ОстаткиОсновнойДолг*ПроцентнаяСтавкаЗаПериод/100, Договор.ПрограммаРасчета.ПорядокОкругления);
		НачалоПериода = Период.КонецИнтервала;
	КонецЦикла;
	
	к = ПолучитьКоэффициентОграниченияНачисленияПроцентовНаСуммуЗайма(Договор.ДатаДоговора,Договор.ПрограммаРасчета.БанковскаяПрограмма); 

	Проценты = Мин(Сумма, к*Договор.СуммаВыданногоЗайма - Вчера.ОстаткиПроценты); 
	Возврат Проценты; 
КонецФункции
	
Функция ПроцентыГрафикНачисления(Договор, Вчера, Сегодня, БазаНачисления) 
	Если Не ДопустимыйПериодНачислений(Договор, Вчера, Сегодня) Тогда  
		Возврат 0; 
	КонецЕсли;  
	д = ?(Договор.ПрограммаРасчета.НачислятьПроценты, Договор.ПрограммаРасчета.НачислятьПроценты_Количество, 0);  
	Если Сегодня.Дата <= Договор.ДатаВыдачиЗайма + д*СекундВСутках() Тогда  
		Возврат 0; 
	КонецЕсли; 
		
	МассивПериодов = МассивПериодов(Договор, Вчера.Дата, Сегодня.Дата);
	НачалоПериода = Вчера.Дата;
	Сумма = 0;
	Для Каждого Период Из МассивПериодов Цикл
		ПроцентнаяСтавкаЗаПериод = КонвертацияПроцентнойСтавки(Договор, НачалоПериода, Период.КонецИнтервала, Период.ПроцентнаяСтавка);
		Сумма = Сумма + РасчетЗадолженностиМФО.ОкруглитьЧисло(БазаНачисления*ПроцентнаяСтавкаЗаПериод/100, Договор.ПрограммаРасчета.ПорядокОкругления);
		НачалоПериода = Период.КонецИнтервала;
	КонецЦикла;	
	
	к = ПолучитьКоэффициентОграниченияНачисленияПроцентовНаСуммуЗайма(Договор.ДатаДоговора, Договор.ПрограммаРасчета.БанковскаяПрограмма);  
	Если СпецифичныйПериодНачисления(Договор.ДатаДоговора) Тогда  
		Проценты = Мин(Сумма, макс(к*Договор.СуммаВыданногоЗайма - Сегодня.ОстаткиПроцентыЗаВесьПериод, 0), макс(2*Вчера.ОстатокОДФактический - Вчера.ОстаткиПроценты - Вчера.ОстаткиПросроченныеПроценты, 0));  
	Иначе  
		Проценты = Мин(Сумма, к*Договор.СуммаВыданногоЗайма - Сегодня.ОстаткиНачисленияЗаВесьПериод); 
	КонецЕсли; 
	Возврат Проценты; 
КонецФункции

Функция МассивПериодов(Договор, НачалоПериода, КонецПериода)
	ТЗ = Новый ТаблицаЗначений;
	ТЗ.Колонки.Добавить("КонецИнтервала", Новый ОписаниеТипов("Дата"));
	ТЗ.Колонки.Добавить("ПроцентнаяСтавка", Новый ОписаниеТипов("Число"));
	
	НачалоИнтервала = НачалоПериода + СекундВСутках();
	КонецИнтервала = КонецПериода;
	
	КонецГода = НачалоДня(КонецГода(НачалоИнтервала));
	
	Если Договор.ВидПроцентнойСтавки = Перечисления.ВидыПроцентнойСтавки.ФиксированнаяПроцентнаяСтавка Тогда
		Если КонецГода < КонецИнтервала Тогда
			стр = ТЗ.Добавить();
			стр.КонецИнтервала = КонецГода;
			стр.ПроцентнаяСтавка = Договор.ПроцентнаяСтавка;
		КонецЕсли;		
		стр = ТЗ.Добавить();
		стр.КонецИнтервала = КонецИнтервала;
		стр.ПроцентнаяСтавка = Договор.ПроцентнаяСтавка;
	ИначеЕсли Договор.ВидПроцентнойСтавки = Перечисления.ВидыПроцентнойСтавки.ПлавающаяПроцентнаяСтавкаЗависимаяОтСрока Тогда
		Для Каждого Интервал Из Договор.ИнтервалыПроцентнойСтавки Цикл
			ИнтервалНачалоИнтервала = РасчетЗадолженностиМФО.ДобавитьПериодКДате(
				Договор.ДатаВыдачиЗайма + СекундВСутках(),
				Договор.ПериодичностьСрокаЗайма, Интервал.ИнтервалОт
			);
			ИнтервалКонецИнтервала = ?(Интервал.ИнтервалДо = 0, макс(Договор.ДатаПогашения, КонецИнтервала), РасчетЗадолженностиМФО.ДобавитьПериодКДате(Договор.ДатаВыдачиЗайма, Договор.ПериодичностьСрокаЗайма, Интервал.ИнтервалДо));
			Если НачалоИнтервала >= ИнтервалНачалоИнтервала И НачалоИнтервала <= ИнтервалКонецИнтервала Тогда
				стр = ТЗ.Добавить();
				стр.КонецИнтервала = мин(КонецИнтервала, ИнтервалКонецИнтервала);
				стр.ПроцентнаяСтавка = Интервал.ПроцентнаяСтавка;
				
				НачалоИнтервала = стр.КонецИнтервала + СекундВСутках();
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли Договор.ВидПроцентнойСтавки = Перечисления.ВидыПроцентнойСтавки.ПлавающаяПроцентнаяСтавкаЗависимаяОтСтавки Тогда
		
	КонецЕсли;
	Возврат ТЗ;
КонецФункции   
   
Функция КонвертацияПроцентнойСтавки(Договор, НачалоПериода, КонецПериода, ПроцентнаяСтавка) 
	Если ПроцентнаяСтавка = Неопределено Тогда
		 ПроцентнаяСтавка = Договор.ПроцентнаяСтавка;
	КонецЕсли;	 
	ПериодичностьСрокаЗайма = Договор.ПериодичностьСрокаЗайма;  
	ПериодичностьПроцентнойСтавки = Договор.ПериодичностьПроцентнойСтавки;   
	Если ПериодичностьСрокаЗайма = Перечисления.ПериодичностьСрокаЗайма.День Тогда  
		Если ПериодичностьПроцентнойСтавки = Перечисления.ПериодичностьПроцентнойСтавки.День Тогда   
			Возврат ПроцентнаяСтавка*(КонецПериода-НачалоПериода) / СекундВСутках();
		ИначеЕсли ПериодичностьПроцентнойСтавки = Перечисления.ПериодичностьПроцентнойСтавки.Год Тогда   
			Возврат ПроцентнаяСтавка*(КонецПериода-НачалоПериода) / СекундВСутках() /365;
		ИначеЕсли ПериодичностьПроцентнойСтавки = Перечисления.ПериодичностьПроцентнойСтавки.Месяц Тогда      
			Возврат ПроцентнаяСтавка*(КонецПериода-НачалоПериода) / СекундВСутках() /30;
		КонецЕсли; 
	ИначеЕсли ПериодичностьСрокаЗайма = Перечисления.ПериодичностьСрокаЗайма.Неделя Тогда  
		Если ПериодичностьПроцентнойСтавки = Перечисления.ПериодичностьПроцентнойСтавки.День Тогда   
			СтавкаГод = ПроцентнаяСтавка*365;   
		ИначеЕсли ПериодичностьПроцентнойСтавки = Перечисления.ПериодичностьПроцентнойСтавки.Год Тогда   
			СтавкаГод = ПроцентнаяСтавка;  
		ИначеЕсли ПериодичностьПроцентнойСтавки = Перечисления.ПериодичностьПроцентнойСтавки.Месяц Тогда      
			Возврат ПроцентнаяСтавка/4;   
		КонецЕсли;  
		Если НачалоПериода = Неопределено Тогда   
			Возврат СтавкаГод/52;  
		Иначе 
			Возврат СтавкаГод*(КонецПериода-НачалоПериода) / СекундВСутках() / КоличествоДнейВГоду(КонецПериода);  
		КонецЕсли;		
	ИначеЕсли ПериодичностьСрокаЗайма = Перечисления.ПериодичностьСрокаЗайма.Месяц Тогда  
		Если ПериодичностьПроцентнойСтавки = Перечисления.ПериодичностьПроцентнойСтавки.День Тогда   
			СтавкаГод = ПроцентнаяСтавка*365;   
		ИначеЕсли ПериодичностьПроцентнойСтавки = Перечисления.ПериодичностьПроцентнойСтавки.Год Тогда   
			СтавкаГод = ПроцентнаяСтавка;  
		ИначеЕсли ПериодичностьПроцентнойСтавки = Перечисления.ПериодичностьПроцентнойСтавки.Месяц Тогда      
			Возврат ПроцентнаяСтавка;   
		КонецЕсли; 
		Если НачалоПериода = Неопределено Тогда   
			Возврат СтавкаГод/12;  
		Иначе   
			Возврат СтавкаГод*(КонецПериода-НачалоПериода) / СекундВСутках() / КоличествоДнейВГоду(КонецПериода);  
		КонецЕсли; 
	ИначеЕсли ПериодичностьСрокаЗайма = Перечисления.ПериодичностьСрокаЗайма.Год Тогда  
		Если ПериодичностьПроцентнойСтавки = Перечисления.ПериодичностьПроцентнойСтавки.День Тогда   
			СтавкаГод = ПроцентнаяСтавка*КоличествоДнейВГоду(КонецПериода);   
		ИначеЕсли ПериодичностьПроцентнойСтавки = Перечисления.ПериодичностьПроцентнойСтавки.Год Тогда   
			СтавкаГод = ПроцентнаяСтавка;  
		ИначеЕсли ПериодичностьПроцентнойСтавки = Перечисления.ПериодичностьПроцентнойСтавки.Месяц Тогда      
			Возврат ПроцентнаяСтавка*12;   
		КонецЕсли;  
		Если НачалоПериода = Неопределено Тогда   
			Возврат СтавкаГод;  
		Иначе 
			Возврат СтавкаГод*(КонецПериода-НачалоПериода) / СекундВСутках() / КоличествоДнейВГоду(КонецПериода);  
		КонецЕсли;  
	КонецЕсли;  
	Возврат ПроцентнаяСтавка; 
КонецФункции
   
Функция ПроцентнаяСтавкаАннуитет(Договор)      
	ПроцентнаяСтавка = Договор.ПроцентнаяСтавка;    
	ПериодичностьСрокаЗайма = Договор.ПериодичностьСрокаЗайма;  
	ПериодичностьПроцентнойСтавки = Договор.ПериодичностьПроцентнойСтавки;
	к = Договор.КоличествоПериодичностей;
	Если ПериодичностьСрокаЗайма = Перечисления.ПериодичностьСрокаЗайма.День Тогда  
		Если ПериодичностьПроцентнойСтавки = Перечисления.ПериодичностьПроцентнойСтавки.День Тогда   
			Возврат к*ПроцентнаяСтавка;   
		ИначеЕсли ПериодичностьПроцентнойСтавки = Перечисления.ПериодичностьПроцентнойСтавки.Год Тогда   
			Возврат к*ПроцентнаяСтавка/365;  
		ИначеЕсли ПериодичностьПроцентнойСтавки = Перечисления.ПериодичностьПроцентнойСтавки.Месяц Тогда      
			Возврат к*ПроцентнаяСтавка/30;  
		КонецЕсли; 
	ИначеЕсли ПериодичностьСрокаЗайма = Перечисления.ПериодичностьСрокаЗайма.Неделя Тогда  
		Если ПериодичностьПроцентнойСтавки = Перечисления.ПериодичностьПроцентнойСтавки.День Тогда   
			Возврат к*ПроцентнаяСтавка*7;   
		ИначеЕсли ПериодичностьПроцентнойСтавки = Перечисления.ПериодичностьПроцентнойСтавки.Год Тогда   
			Возврат к*ПроцентнаяСтавка/52;  
		ИначеЕсли ПериодичностьПроцентнойСтавки = Перечисления.ПериодичностьПроцентнойСтавки.Месяц Тогда      
			Возврат к*ПроцентнаяСтавка/4;   
		КонецЕсли;
	ИначеЕсли ПериодичностьСрокаЗайма = Перечисления.ПериодичностьСрокаЗайма.Месяц Тогда  
		Если ПериодичностьПроцентнойСтавки = Перечисления.ПериодичностьПроцентнойСтавки.День Тогда   
			СтавкаГод = к*ПроцентнаяСтавка*365;  
		ИначеЕсли ПериодичностьПроцентнойСтавки = Перечисления.ПериодичностьПроцентнойСтавки.Год Тогда  
			СтавкаГод = к*ПроцентнаяСтавка; 
		ИначеЕсли ПериодичностьПроцентнойСтавки = Перечисления.ПериодичностьПроцентнойСтавки.Месяц Тогда    
			Возврат к*ПроцентнаяСтавка; 
		КонецЕсли;  
		Возврат СтавкаГод/12; 
	ИначеЕсли ПериодичностьСрокаЗайма = Перечисления.ПериодичностьСрокаЗайма.Год Тогда 
		Если ПериодичностьПроцентнойСтавки = Перечисления.ПериодичностьПроцентнойСтавки.День Тогда  
			СтавкаГод = к*ПроцентнаяСтавка*365;  
		ИначеЕсли ПериодичностьПроцентнойСтавки = Перечисления.ПериодичностьПроцентнойСтавки.Год Тогда   
			СтавкаГод = к*ПроцентнаяСтавка;  
		ИначеЕсли ПериодичностьПроцентнойСтавки = Перечисления.ПериодичностьПроцентнойСтавки.Месяц Тогда     
			Возврат к*ПроцентнаяСтавка*12;   
		КонецЕсли;  
		Возврат СтавкаГод;  
	//ИначеЕсли ПериодичностьСрокаЗайма = Перечисления.ПериодичностьСрокаЗайма.Период Тогда
	//	Если ПериодичностьПроцентнойСтавки = Перечисления.ПериодичностьПроцентнойСтавки.День Тогда   
	//		Возврат к*ПроцентнаяСтавка;   
	//	ИначеЕсли ПериодичностьПроцентнойСтавки = Перечисления.ПериодичностьПроцентнойСтавки.Год Тогда   
	//		Возврат к*ПроцентнаяСтавка/365;  
	//	ИначеЕсли ПериодичностьПроцентнойСтавки = Перечисления.ПериодичностьПроцентнойСтавки.Месяц Тогда      
	//		Возврат к*ПроцентнаяСтавка/30;    
	//	КонецЕсли; 		
	КонецЕсли;    
	Возврат ПроцентнаяСтавка;
КонецФункции

Функция Ставка(ПроцентнаяСтавка, НачалоПериода, КонецПериода) 
	кг1 = НачалоДня(КонецГода(НачалоПериода)); 
	кг2 = НачалоДня(КонецГода(КонецПериода)); 
	дн1 = КоличествоДнейВГоду(кг1); 
	дн2 = КоличествоДнейВГоду(кг2); 
	Если кг1 = кг2 Тогда  
		Ставка = ПроцентнаяСтавка*(КонецПериода-НачалоПериода) / СекундВСутках() / дн1; 
	Иначе  
		Ставка = ПроцентнаяСтавка*(кг1-НачалоПериода)/ СекундВСутках() /дн1 + ПроцентнаяСтавка*(КонецПериода - кг1)/ СекундВСутках() /дн2; 
	КонецЕсли; 
	Возврат Ставка; 
КонецФункции

Функция КоличествоДнейВГоду(Дата) 
	Возврат ДеньГода(КонецГода(Дата)); 
КонецФункции
 
Функция ПолучитьСтавкуШтрафаПокаНачисляютсяПроценты(Договор, Дата)  
	Ставка = Договор.ПрограммаРасчета.СтавкаШтрафаПокаНачисляютсяПроценты; 
	Периодичность = Договор.ПрограммаРасчета.ПериодичностьСтавкиШтрафаПокаНачисляютсяПроценты; 
	Если Периодичность = Перечисления.ПериодичностьПроцентнойСтавки.Год Тогда  
		Ставка = Ставка/КоличествоДнейВГоду(Дата); 
	КонецЕсли; 
	Возврат Ставка; 
КонецФункции

Функция ПолучитьСтавкуШтрафаПослеНачисленияПроцентов(Договор, Дата)   
	Ставка = Договор.ПрограммаРасчета.СтавкаШтрафаПослеНачисленияПроцентов; 
	Периодичность = Договор.ПрограммаРасчета.ПериодичностьСтавкиШтрафаПослеНачисленияПроцентов; 
	Если Периодичность = Перечисления.ПериодичностьПроцентнойСтавки.Год Тогда  
		Ставка = Ставка/КоличествоДнейВГоду(Дата); 
	КонецЕсли;  
	Возврат Ставка; 
КонецФункции

Функция ПолучитьСтавкуШтрафаНаПроценты(Договор, Дата)
	Ставка = Договор.ПрограммаРасчета.СтавкаШтрафаНаПроценты; 
	Периодичность = Договор.ПрограммаРасчета.ПериодичностьСтавкиШтрафаПослеНачисленияПроцентов; 
	Если Периодичность = Перечисления.ПериодичностьПроцентнойСтавки.Год Тогда  
		Ставка = Ставка/КоличествоДнейВГоду(Дата); 
	КонецЕсли;  
	Возврат Ставка; 
КонецФункции

#Область Техническая

Функция СекундВСутках()

	Возврат 86400;

КонецФункции // ()

Функция СпецифичныйПериодНачисления(ДатаДоговора)

	Возврат ДатаДоговора > Дата(2017, 01, 01) И ДатаДоговора <= Дата(2019, 01, 28)

КонецФункции // ()


#КонецОбласти