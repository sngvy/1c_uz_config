Функция ГлавнаяНормализоватьАдресаПочтаРФ(МассивТелоЗапроса) Экспорт 
	//id
	//originaladdress
    //КоннекторHTTP.ВызватьМетод(,,,  
	Сессия = КоннекторHTTP.СоздатьСессию();
	URL = ВернутьУРЛНормализации();
	ПараметрыЗаписиJS = ВернутьПараметрыЗаписиJSНормализации();
	ПараметрыЗапроса = ВернутьПараметрыЗапросаJSНормализации();
	
	JSТелоЗапроса = КоннекторHTTP.ОбъектВJson(МассивТелоЗапроса, Неопределено, ПараметрыЗаписиJS); 
		
	РезультатНормализации = КоннекторHTTP.Post(URL, JSТелоЗапроса, ПараметрыЗапроса, Сессия);
	РезультатНормализацииJS = КоннекторHTTP.КакJson(РезультатНормализации);
	
	Возврат РезультатНормализацииJS;

КонецФункции   
   

Функция ВернутьУРЛНормализации() Экспорт 
	Возврат Строка("https://otpravka-api.pochta.ru/1.0/clean/address");
КонецФункции 

Функция ВернутьПараметрыЗаписиJSНормализации() Экспорт
	ПараметрыЗаписиJS = Новый Структура;    
	ПараметрыЗаписиJS.Вставить("ПереносСтрок", ПереносСтрокJSON.Нет);
	Возврат ПараметрыЗаписиJS;
КонецФункции  

Функция ВернутьПараметрыЗапросаJSНормализации() Экспорт 
	
	ЗаголовкиЗапроса = ВернутьЗаголовкиЗапросаНормализации(); 
	
	ПараметрыЗапросаJS = Новый Структура;    
	ПараметрыЗапросаJS.Вставить("Заголовки", ЗаголовкиЗапроса);
	//ПараметрыЗапросаJS.Вставить("ПроверятьSSL", Ложь);
   	Возврат ПараметрыЗапросаJS;
КонецФункции 

Функция ВернутьЗаголовкиЗапросаНормализации() Экспорт  
	
	token = бит_ИнтеграцияПочтаРФ.ПолучитьТокенИлиКлюч("токен");
	Logkey = бит_ИнтеграцияПочтаРФ.ПолучитьТокенИлиКлюч("ключ");
	
	Заголовки = Новый Соответствие;
	Заголовки.Вставить("Content-Type", "application/json;charset=UTF-8");
	Заголовки.Вставить("Authorization","AccessToken " + token);
	Заголовки.Вставить("X-User-Authorization","Basic " + Logkey);   
	
	Возврат Заголовки;
КонецФункции   

Функция СформироватьМассивАдресовНормализация(тзМассивОбъектов) Экспорт  
	ТелоЗапроса = Новый Массив;
	Для каждого Стр Из тзМассивОбъектов Цикл	
		тДанные = Новый Соответствие;
		тДанные.Вставить("id", Стр.ИдентификаторЗапроса);
		тДанные.Вставить("original-address", Стр.АдресДляНормализации);
		ПеременнаяСтруктура = тДанные;
		ТелоЗапроса.Добавить(ПеременнаяСтруктура);
	КонецЦикла;
		
	Возврат ТелоЗапроса;
КонецФункции  

Функция ВернутьИдентификаторЗапроса(КодОбъекта) Экспорт
	стрИндентификатор = Строка(КодОбъекта);
	стрИндентификатор = СтрЗаменить(стрИндентификатор, " ", "");
	стрИндентификатор = СтрЗаменить(стрИндентификатор, "/", "");
	стрИндентификатор = СтрЗаменить(стрИндентификатор, "\", "");
	стрИндентификатор = СтрЗаменить(стрИндентификатор, ".", "");

	Возврат стрИндентификатор;
КонецФункции   

Процедура ЗаполнитьПользовательскуюТаблицуРезультатов(ТаблицаИзОбработки, РезультатНормализацииJS) Экспорт
	Для Каждого РезультатНормализации из РезультатНормализацииJS Цикл  
		
		
		//ТемпСтруктура = ОбъектыСервер.ПреобразоватьСоответствиеВСтруктуру(РезультатНормализации); 
						
		СтрокаИзТаблицыОбработки = ТаблицаИзОбработки.Найти(РезультатНормализации["id"], "ИдентификаторЗапроса");
		Если ЗначениеЗаполнено(СтрокаИзТаблицыОбработки) Тогда 
			СтрокаИзТаблицыОбработки.Страна = "РОССИЯ";
			СтрокаИзТаблицыОбработки.КодСтраныОКСМ = "643";  
			СтрокаИзТаблицыОбработки.Индекс = РезультатНормализации["index"];
			СтрокаИзТаблицыОбработки.Регион = РезультатНормализации["region"]; 
			СтрокаИзТаблицыОбработки.Район = РезультатНормализации["area"];
			СтрокаИзТаблицыОбработки.Город = РезультатНормализации["place"];
			СтрокаИзТаблицыОбработки.НаселенныйПункт = РезультатНормализации["place"];
			СтрокаИзТаблицыОбработки.Микрорайон = РезультатНормализации["location"];
			СтрокаИзТаблицыОбработки.Улица = РезультатНормализации["street"];
			СтрокаИзТаблицыОбработки.Дом = РезультатНормализации["house"];
			СтрокаИзТаблицыОбработки.Владение = РезультатНормализации["vladenie"]; 
			СтрокаИзТаблицыОбработки.Корпус = РезультатНормализации["corpus"];
			СтрокаИзТаблицыОбработки.Строение = РезультатНормализации["building"];
			СтрокаИзТаблицыОбработки.Литера = РезультатНормализации["letter"];   
			СтрокаИзТаблицыОбработки.Дробь = РезультатНормализации["slash"];
			СтрокаИзТаблицыОбработки.Квартира = РезультатНормализации["room"];
			СтрокаИзТаблицыОбработки.Комната =  РезультатНормализации["room"];
			СтрокаИзТаблицыОбработки.ДополнительныеПараметрыСервиса = РезультатНормализации["address-type"] + " " + РезультатНормализации["quality-code"] + " " + РезультатНормализации["validation-code"];	
		КонецЕсли;	 
		
	КонецЦикла;	
	
КонецПроцедуры 

Функция ПроверитьРезультатПоКодамКачества(ПолученныеКодыКачества) Экспорт 
	Валиден = Истина;
	КодПроверки = "NOT_VALIDATED";
	КодКачества = "UNDEF";
	ПараметрыКачества = ПолученныеКодыКачества;
	Если СтрНайти(ПараметрыКачества, КодПроверки) <> 0 ИЛИ СтрНайти(ПараметрыКачества, КодКачества) <> 0 Тогда 
		Валиден = Ложь;
	КонецЕсли;	
	Возврат Валиден;	               
КонецФункции

 

 



