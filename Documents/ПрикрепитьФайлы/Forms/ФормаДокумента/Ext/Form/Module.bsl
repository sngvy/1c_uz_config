
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если Параметры.Свойство("Об") Тогда
		ЭтаФорма.Объект.Объект = Параметры.Об;
	КонецЕсли;
	
	НастройкиФормы();

КонецПроцедуры

&НаСервере
Процедура НастройкиФормы()

	НужноОграничитьТип = НЕ (ЗначениеЗаполнено(Объект.Объект)
		И (ТипЗнч(Объект.Объект) = Тип("СправочникСсылка.ВходящаяКорреспонденция")
			ИЛИ ТипЗнч(Объект.Объект) = Тип("СправочникСсылка.ИсходящаяКорреспонденция")));
	Если НужноОграничитьТип Тогда
		ОбъектыСервер.ОграничитьТипОбъекта(Элементы.Объект);
	КонецЕсли;
	//Если ЗначениеЗаполнено(Объект.Объект) И (ТипЗнч(Объект.Объект) = Тип("СправочникСсылка.ВходящаяКорреспонденция") ИЛИ ТипЗнч(Объект.Объект) = Тип("СправочникСсылка.ИсходящаяКорреспонденция"))Тогда
	//Иначе
	//	ОбъектыСервер.ОграничитьТипОбъекта(Элементы.Объект);
	//КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Объект) Тогда
		Элементы.ОбъектУчета_Контрагенты.Видимость = Ложь;
		Элементы.ОбъектУчета_ДоговорыКонтрагентов.Видимость = Ложь;
		Элементы.ОбъектУчета_УслугиПоДоговорам.Видимость = Ложь;
		Элементы.ОбъектУчета_ДолговыеОбязательства.Видимость = Ложь;
		Элементы.ОбъектУчета_ИсполнительныеДокументы.Видимость = Ложь;
	Иначе
		Элементы.ОбъектУчета_Пусто.Доступность = Ложь;
		Элементы.ОбъектУчета_Контрагенты.Видимость = Ложь;
		Элементы.ОбъектУчета_ДоговорыКонтрагентов.Видимость = Ложь;
		Элементы.ОбъектУчета_УслугиПоДоговорам.Видимость = Ложь;
		Элементы.ОбъектУчета_ДолговыеОбязательства.Видимость = Ложь;
		Элементы.ОбъектУчета_ИсполнительныеДокументы.Видимость = Ложь;
		
		Если Объект.Объект = Неопределено Тогда	
			Элементы.ОбъектУчета_Пусто.Доступность = Истина;
			ТекущийЭлемент = Элементы.Объект;
			Элементы.ГруппаОбъектУчета.ТекущаяСтраница = Элементы.ОбъектУчета_Пусто;		
		ИначеЕсли ТипЗнч(Объект.Объект) = Тип("СправочникСсылка.Контрагенты") Тогда
			Элементы.ОбъектУчета_Контрагенты.Видимость = Истина;
			ТекущийЭлемент = Элементы.Контрагент;
			Элементы.ГруппаОбъектУчета.ТекущаяСтраница = Элементы.ОбъектУчета_Контрагенты;		
		ИначеЕсли ТипЗнч(Объект.Объект) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
			Элементы.ОбъектУчета_ДоговорыКонтрагентов.Видимость = Истина;
			ТекущийЭлемент = Элементы.ДоговорКонтрагента;
			Элементы.ГруппаОбъектУчета.ТекущаяСтраница = Элементы.ОбъектУчета_ДоговорыКонтрагентов;		
		ИначеЕсли ТипЗнч(Объект.Объект) = Тип("СправочникСсылка.УслугиПоДоговору") Тогда	
			Элементы.ОбъектУчета_УслугиПоДоговорам.Видимость = Истина;
			ТекущийЭлемент = Элементы.УслугаПоДоговору;
			Элементы.ГруппаОбъектУчета.ТекущаяСтраница = Элементы.ОбъектУчета_УслугиПоДоговорам;
		ИначеЕсли ТипЗнч(Объект.Объект) = Тип("СправочникСсылка.ДолговыеОбязательства") Тогда
			Элементы.ОбъектУчета_ДолговыеОбязательства.Видимость = Истина;
			ТекущийЭлемент = Элементы.ДолговоеОбязательство;
			Элементы.ГруппаОбъектУчета.ТекущаяСтраница = Элементы.ОбъектУчета_ДолговыеОбязательства;
		ИначеЕсли ТипЗнч(Объект.Объект) = Тип("СправочникСсылка.ИсполнительныеДокументы") Тогда	
			Элементы.ОбъектУчета_ИсполнительныеДокументы.Видимость = Истина;
			ТекущийЭлемент = Элементы.ИсполнительныйДокумент;
			Элементы.ГруппаОбъектУчета.ТекущаяСтраница = Элементы.ОбъектУчета_ИсполнительныеДокументы;
		ИначеЕсли ТипЗнч(Объект.Объект) = Тип("ДокументСсылка.ПартионнаяПочта") Тогда	
			Элементы.ОбъектУчета_ПартионнаяПочта.Видимость = Истина;
			ТекущийЭлемент = Элементы.Объект;
			Элементы.ГруппаОбъектУчета.ТекущаяСтраница = Элементы.ОбъектУчета_ПартионнаяПочта;	
		КонецЕсли;
		
		Контрагент = Объект.Объект;
		ДоговорКонтрагента = Объект.Объект;
		УслугаПоДоговору = Объект.Объект;
		ДолговоеОбязательство = Объект.Объект;
		ИсполнительныйДокумент = Объект.Объект;
		Почтоваяпартия = объект.Объект;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Автор) Тогда
		Пользователи.ЗаполнитьРеквизитыПоДаннымПользователя(Объект);
	КонецЕсли;
	
	Если (ТипЗнч(Объект.Объект) = Тип("СправочникСсылка.ДолговыеОбязательства") И ЗначениеЗаполнено(Объект.РегистраторКорреспонденции) И ПроверитьНомерЗакреплен()) Или (ТипЗнч(Объект.Объект) = Тип("СправочникСсылка.Контрагенты") И ЗначениеЗаполнено(Объект.РегистраторКорреспонденции) И ПроверитьНомерЗакреплен()) 
		ИЛИ ((ТипЗнч(Объект.Объект) = Тип("СправочникСсылка.ВходящаяКорреспонденция") ИЛИ ТипЗнч(Объект.Объект) = Тип("СправочникСсылка.ИсходящаяКорреспонденция")) И Объект.Объект.НомерЗакреплен) Тогда
		Элементы.РегистраторКорреспонденции.Видимость = Истина;
		Элементы.Файлы.ТолькоПросмотр = Истина;
		Элементы.ГруппаНомер.ТолькоПросмотр = Истина;
		Элементы.ГруппаОбъектУчета.ТолькоПросмотр = Истина;
		Элементы.Организация.ТолькоПросмотр = Истина;
		Элементы.Подразделение.ТолькоПросмотр = Истина;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ПроверитьНомерЗакреплен()
	Если объект.РегистраторКорреспонденции = Неопределено Тогда
		возврат Ложь;
	Иначе
		Возврат Объект.РегистраторКорреспонденции.НомерЗакреплен;
	КонецЕсли;	
КонецФункции	

&НаКлиенте
Процедура ФайлыПутьОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ТекущиеДанные = Элементы.Файлы.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
        НачатьЗапускПриложения(Новый ОписаниеОповещения("ФайлыПутьОткрытиеЗавершение", ЭтаФорма), ТекущиеДанные.Путь);
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ФайлыПутьОткрытиеЗавершение(КодВозврата, ДополнительныеПараметры) Экспорт
//Асинхронное преобразование попросило создать пустое Описание оповещения
КонецПроцедуры


&НаКлиенте
Процедура ФайлыПутьНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ТекущиеДанные = Элементы.Файлы.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
   		Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
		Диалог.Заголовок = "Выберите файл";
		//Диалог.ПолноеИмяФайла = НаборКонстант.ПутьКПапкеКомпоненты; 
		Диалог.Фильтр = "Все|*.*";  
		Диалог.МножественныйВыбор = Ложь;
		Диалог.Каталог = ТекущиеДанные.Путь;
		Диалог.Показать(Новый ОписаниеОповещения("ФайлыПутьНачалоВыбораЗавершение", ЭтаФорма, Новый Структура("Диалог, ТекущиеДанные", Диалог, ТекущиеДанные)));
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ФайлыПутьНачалоВыбораЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Диалог = ДополнительныеПараметры.Диалог;
	ТекущиеДанные = ДополнительныеПараметры.ТекущиеДанные;
	
	
	Если (ВыбранныеФайлы <> Неопределено) Тогда
		ТекущиеДанные.Путь = Диалог.ПолноеИмяФайла;	 
		ФайлыПутьПриИзменении(Неопределено);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПоместитьВХранилище(МассивДанных)
	ДокОбъект = РеквизитФормыВЗначение("Объект");
	ДокОбъект.ПоместитьВХранилище(МассивДанных);
	ДокОбъект.Записать();
	ЗначениеВРеквизитФормы(ДокОбъект, "Объект");	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	//Изм. Лебедева 02.04.2018, ред. 26.07.2018
	НаСервере = РазыменоватьСсылку("Константы.ХранитьПрикрепляемыеФайлыНаСервере.Получить()");
	Если НаСервере Тогда
		Каталог = РазыменоватьСсылку("Константы.КаталогХраненияПрикрепляемыхФайловНаСервере.Получить()");
	КонецЕсли;
	//Вырезанный отсюда Кусок кода лежит внутри #Иначе...#КонецЕсли
	#Если Вебклиент Тогда
		//Сохраняем на сервер через ВЕБ
		Если НаСервере Тогда
			Ф = Новый Файл(Каталог);
			ДопПарам = Новый Структура("Файл",Ф);
			ДопПарам.Вставить("Файлы",Объект.Файлы);
			ДопПарам.Вставить("Каталог",Каталог);
			Ф.НачатьПроверкуСуществования(Новый ОписаниеОповещения("ПроверкаСуществованияПередЗаписью",ЭтаФорма,ДопПарам));
			Для Каждого Эл Из Объект.Файлы Цикл
				Если Не Эл.Загружен Тогда
					Попытка
						Файл = Новый Файл(Эл.Путь);
						Эл.УИД = Новый УникальныйИдентификатор();
						ПутьФайлаНаСервере = Каталог + "\" + Строка(Эл.УИД) + Файл.Расширение;
						ДопПарам = Новый Структура;
						ДопПарам.Вставить("Путь",ПутьФайлаНаСервере);
						НачатьСозданиеДвоичныхДанныхИзФайла(Новый ОписаниеОповещения("ЗавершитьСозданиеДвоичныхДанныхИзФайла", ЭтаФорма,ДопПарам), Эл.Путь);
						Эл.Загружен = Истина;
					Исключение
						Отказ = Истина;
						Сообщить(ОписаниеОшибки());
						Возврат;
					КонецПопытки;
				КонецЕсли;
			КонецЦикла;				
		//Закончили Сохранять на сервер через ВЕБ
			
		//Сохраняем в ИБ Через ВЕБ
		Иначе
			Для Каждого Элемент Из Объект.Файлы Цикл
				Данные = Неопределено;
				Если Не Элемент.Загружен Тогда
					Попытка
						Элемент.УИД = Новый УникальныйИдентификатор();
						ДопПарам = Новый структура;
						НачатьСозданиеДвоичныхДанныхИзФайла(Новый ОписаниеОповещения("ЗавершитьСозданиеДвоичныхДанныхИзФайлаИБ", ЭтаФорма,ДопПарам), Элемент.Путь);
						//Данные.Добавить(Новый ОписаниеПередаваемогоФайла(Элемент.Путь, " "));
						//ПомещенныеФайлы = Новый Массив; 
						//Элемент.Загружен = Истина;
					Исключение
						Отказ = Истина;
						Сообщить("Файл """ + Элемент.Путь + """ не найден!");
						Возврат;
					КонецПопытки;
				КонецЕсли;	
				//ПомещенныеФайлы.Добавить(Данные);		
			КонецЦикла;
			//ПоместитьВХранилище(ПомещенныеФайлы);
		КонецЕсли;
		//Закончили сохранять в ИБ через ВЕБ
	#Иначе
		Если НаСервере Тогда
			// 1. Если хранить файлы на сервере
			//КаталогХранения = Константы.КаталогХраненияПрикрепляемыхФайловНаСервере.Получить();
			Ф = Новый Файл(Каталог);
			ДопПарам = Новый Структура("Файл",Ф);
			ДопПарам.Вставить("Каталог",Каталог);
			Ф.НачатьПроверкуСуществования(Новый ОписаниеОповещения("ПроверкаСуществованияПередЗаписью",ЭтаФорма,ДопПарам));
			
			//Если Ф.Существует() = Ложь Тогда
			//	Сообщить("Каталог хранения прикрепляемых файлов задан неверно!");
			//	Возврат;
			//КонецЕсли;
			
			Для Каждого Эл Из Объект.Файлы Цикл
				Если Не Эл.Загружен Тогда
					Попытка
						Файл = Новый Файл(Эл.Путь);
						Эл.УИД = Новый УникальныйИдентификатор();
						ДвДанные = Новый ДвоичныеДанные(Эл.Путь);
						ДвДанные.Записать(Каталог + "\" + Строка(Эл.УИД) + Файл.Расширение);
						Эл.Загружен = Истина;
					Исключение
						Отказ = Истина;
						Сообщить(ОписаниеОшибки());
						Возврат;
					КонецПопытки;
				КонецЕсли;	
			КонецЦикла;					
		Иначе	
			// 2. Если хранить файлы в базе в хранилище значений		
			МассивДанных = Новый Массив();
			Для Каждого Элемент Из Объект.Файлы Цикл
				Данные = Неопределено;
				Если Не Элемент.Загружен Тогда
					Попытка
						Элемент.УИД = Новый УникальныйИдентификатор();
						Данные = Новый ДвоичныеДанные(Элемент.Путь);
						Элемент.Загружен = Истина;
					Исключение
						Отказ = Истина;
						Сообщить("Файл """ + Элемент.Путь + """ не найден!");
						Возврат;
					КонецПопытки;
				КонецЕсли;	
				МассивДанных.Добавить(Данные);		
			КонецЦикла;
			ПоместитьВХранилище(МассивДанных);
		КонецЕсли;	
	#КонецЕсли
		
	
	
	//Если РазыменоватьСсылку("Константы.ХранитьПрикрепляемыеФайлыНаСервере.Получить()") Тогда
	//	// 1. Если хранить файлы на сервере
	//	СохранитьФайлыНаСервер(Отказ);				
	//Иначе	
	//	// 2. Если хранить файлы в базе в хранилище значений		
	//	МассивДанных = Новый Массив();
	//	Для Каждого Элемент Из Объект.Файлы Цикл
	//		Данные = Неопределено;
	//		Если Не Элемент.Загружен Тогда
	//			Попытка
	//				Элемент.УИД = Новый УникальныйИдентификатор();
	//				Данные = Новый ДвоичныеДанные(Элемент.Путь);
	//			Исключение
	//				Отказ = Истина;
	//				Сообщить("Файл """ + Элемент.Путь + """ не найден!");
	//				Возврат;
	//			КонецПопытки;
	//		КонецЕсли;	
	//		МассивДанных.Добавить(Данные);		
	//	КонецЦикла;
	//	ПоместитьВХранилище(МассивДанных);
	//КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПроверкаСуществованияПередЗаписью(Существует, ДополнительныеПараметры) Экспорт
	Файл = ДополнительныеПараметры.Файл;
	//Файлы = ДополнительныеПараметры.Файлы;
	Каталог = ДополнительныеПараметры.Каталог;
	Если НЕ Существует Тогда
		Сообщить("Каталог хранения прикрепляемых файлов задан неверно!");
		Возврат;
	//Иначе
	//	Для Каждого Эл Из Файлы Цикл
	//		Если Не Эл.Загружен Тогда
	//			Попытка
	//				Файл = Новый Файл(Эл.Путь);
	//				Эл.УИД = Новый УникальныйИдентификатор();
	//				ПутьФайлаНаСервере = Каталог + "\" + Строка(Эл.УИД) + Файл.Расширение;
	//				ДопПарам = Новый Структура;
	//				ДопПарам.Вставить("Путь",ПутьФайлаНаСервере);
	//				НачатьСозданиеДвоичныхДанныхИзФайла(Новый ОписаниеОповещения("ЗавершитьСозданиеДвоичныхДанныхИзФайла", ЭтаФорма,ДопПарам), Эл.Путь);
	//				Эл.Загружен = Истина;
	//			Исключение
	//				Отказ = Истина;
	//				Сообщить(ОписаниеОшибки());
	//				Возврат;
	//			КонецПопытки;
	//		КонецЕсли;
	//	КонецЦикла;
	КонецЕсли;		
Конецпроцедуры

&НаКлиенте
Процедура ЗавершитьСозданиеДвоичныхДанныхИзФайла(ДвоичныеДанныеФайла, ДополнительныеПараметры) Экспорт
	ПутьКудаСохранить = ДополнительныеПараметры.Путь;
	ДвоичныеДанныеФайла.НачатьЗапись(Новый ОписаниеОповещения("КонецЗаписиДД",этаформа),ПутьКудаСохранить);
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьСозданиеДвоичныхДанныхИзФайлаИБ(ДДФайла,ДопПараметры)Экспорт
	МассивДанных = Новый Массив;
	МассивДанных.Добавить(ДДФайла);
	ПоместитьВХранилище(МассивДанных);
КонецПроцедуры

&НаКлиенте
Процедура КонецЗаписиДД(КодВозврата) Экспорт
	ф=1;
 //Заглушка
КонецПроцедуры


&НаСервереБезКонтекста
Функция РазыменоватьСсылку(Стр)
	Возврат Вычислить(Стр);
КонецФункции

&НаСервере
Процедура СохранитьФайлыНаСервер(Отказ)
	КаталогХранения = Константы.КаталогХраненияПрикрепляемыхФайловНаСервере.Получить();
	Ф = Новый Файл(КаталогХранения); 	
	Если Ф.Существует() = Ложь Тогда
		Сообщить("Каталог хранения прикрепляемых файлов задан неверно!");
		Возврат;
	КонецЕсли;
	
	Для Каждого Эл Из Объект.Файлы Цикл
		Если Не Эл.Загружен Тогда
			Попытка
				Файл = Новый Файл(Эл.Путь);
				Эл.УИД = Новый УникальныйИдентификатор();
				ДвДанные = Новый ДвоичныеДанные(Эл.Путь);
				ДвДанные.Записать(КаталогХранения + "\" + Строка(Эл.УИД) + Файл.Расширение);
			Исключение
				Отказ = Истина;
				Сообщить(ОписаниеОшибки());
				Возврат;
			КонецПопытки;
		КонецЕсли;	
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура ФайлыПутьПриИзменении(Элемент)
	ТекущиеДанные = Элементы.Файлы.ТекущиеДанные;
	ТекущиеДанные.Загружен = Ложь;
	РазмерФайла = ТекущиеДанные.Размер;
	Файл = Новый Файл(ТекущиеДанные.Путь);
	ДопПараметры=Новый Структура;
	ДопПараметры.Вставить("ТекущиеДанные",ТекущиеДанные);
	ДопПараметры.Вставить("Файл",Файл);
	Файл.НачатьПроверкуСуществования(Новый ОписаниеОповещения("ПроверкаСуществования",ЭтаФорма,ДопПараметры));
	//Если Файл.Существует() Тогда
	//	Файл.НачатьПолучениеРазмера(Новый ОписаниеОповещения("ФайлыПутьПриИзмененииЗавершение", ЭтаФорма, Новый Структура("ТекущиеДанные", ТекущиеДанные)));
	//Иначе
	//	ТекущиеДанные.Размер = Неопределено;
	//КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПроверкаСуществования (Существует, ДополнительныеПараметры) Экспорт
	ТекущиеДанные = ДополнительныеПараметры.ТекущиеДанные;
	Файл = ДополнительныеПараметры.Файл;
	Если Существует Тогда
		Файл.НачатьПолучениеРазмера(Новый ОписаниеОповещения("ФайлыПутьПриИзмененииЗавершение", ЭтаФорма, Новый Структура("ТекущиеДанные", ТекущиеДанные)));
	Иначе
		ТекущиеДанные.Размер = Неопределено;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ФайлыПутьПриИзмененииЗавершение(Размер, ДополнительныеПараметры) Экспорт
	ТекущиеДанные = ДополнительныеПараметры.ТекущиеДанные;
	ТекущиеДанные.Размер = ОкруглитьРазмерФайла(Размер);
КонецПроцедуры


&НаКлиенте
Функция ОкруглитьРазмерФайла(СтрРазмер) Экспорт
    Размер = Число(СтрРазмер);
	Если Размер > 1024 Тогда
		Размер = Окр(Размер/1024, 0);
		Стр = Строка(Размер) + " Кб";
	КонецЕсли;
	Если Размер > 1024 Тогда
		Размер = Окр(Размер/1024, 1);
		Стр = Строка(Размер) + " Мб";
	КонецЕсли;
	
	Возврат Стр;		
КонецФункции

&НаКлиенте
Процедура ОбъектПриИзменении(Элемент)
	Контрагент = Объект.Объект;
	ДоговорКонтрагента = Объект.Объект;
	УслугаПоДоговору = Объект.Объект;
	ДолговоеОбязательство = Объект.Объект;
	ИсполнительныйДокумент = Объект.Объект;
	
	Элементы.ОбъектУчета_Пусто.Доступность = Ложь;
	Если Объект.Объект = Неопределено Тогда	
		Элементы.ОбъектУчета_Пусто.Доступность = Истина;
		ТекущийЭлемент = Элементы.Объект;
		Элементы.ГруппаОбъектУчета.ТекущаяСтраница = Элементы.ОбъектУчета_Пусто;		
	ИначеЕсли ТипЗнч(Объект.Объект) = Тип("СправочникСсылка.Контрагенты") Тогда
		Элементы.ОбъектУчета_Контрагенты.Видимость = Истина;
		ТекущийЭлемент = Элементы.Контрагент;
		Элементы.ГруппаОбъектУчета.ТекущаяСтраница = Элементы.ОбъектУчета_Контрагенты;		
	ИначеЕсли ТипЗнч(Объект.Объект) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
		Элементы.ОбъектУчета_ДоговорыКонтрагентов.Видимость = Истина;
		ТекущийЭлемент = Элементы.ДоговорКонтрагента;
		Элементы.ГруппаОбъектУчета.ТекущаяСтраница = Элементы.ОбъектУчета_ДоговорыКонтрагентов;		
	ИначеЕсли ТипЗнч(Объект.Объект) = Тип("СправочникСсылка.УслугиПоДоговору") Тогда	
		Элементы.ОбъектУчета_УслугиПоДоговорам.Видимость = Истина;
		ТекущийЭлемент = Элементы.УслугаПоДоговору;
		Элементы.ГруппаОбъектУчета.ТекущаяСтраница = Элементы.ОбъектУчета_УслугиПоДоговорам;
	ИначеЕсли ТипЗнч(Объект.Объект) = Тип("СправочникСсылка.ДолговыеОбязательства") Тогда
		Элементы.ОбъектУчета_ДолговыеОбязательства.Видимость = Истина;
		ТекущийЭлемент = Элементы.ДолговоеОбязательство;
		Элементы.ГруппаОбъектУчета.ТекущаяСтраница = Элементы.ОбъектУчета_ДолговыеОбязательства;
	ИначеЕсли ТипЗнч(Объект.Объект) = Тип("СправочникСсылка.ИсполнительныеДокументы") Тогда	
		Элементы.ОбъектУчета_ИсполнительныеДокументы.Видимость = Истина;
		ТекущийЭлемент = Элементы.ИсполнительныйДокумент;
		Элементы.ГруппаОбъектУчета.ТекущаяСтраница = Элементы.ОбъектУчета_ИсполнительныеДокументы;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбъектПростойПриИзменении(Элемент)
	Если Элементы.ГруппаОбъектУчета.ТекущаяСтраница = Элементы.ОбъектУчета_Контрагенты Тогда
		Объект.Объект = Контрагент;		
	ИначеЕсли Элементы.ГруппаОбъектУчета.ТекущаяСтраница = Элементы.ОбъектУчета_ДоговорыКонтрагентов Тогда	
		Объект.Объект = ДоговорКонтрагента;		
	ИначеЕсли Элементы.ГруппаОбъектУчета.ТекущаяСтраница = Элементы.ОбъектУчета_УслугиПоДоговорам Тогда	
		Объект.Объект = УслугаПоДоговору;
	ИначеЕсли Элементы.ГруппаОбъектУчета.ТекущаяСтраница = Элементы.ОбъектУчета_ДолговыеОбязательства Тогда
		Объект.Объект = ДолговоеОбязательство;
	ИначеЕсли Элементы.ГруппаОбъектУчета.ТекущаяСтраница = Элементы.ОбъектУчета_ИсполнительныеДокументы Тогда	
		Объект.Объект = ИсполнительныйДокумент;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПолеОчистка(Элемент, СтандартнаяОбработка)
	Объект.Объект = Неопределено;
	Элементы.ОбъектУчета_Пусто.Доступность = Истина;
	Элемент.Родитель.Видимость = Ложь;
				
	Элементы.ГруппаОбъектУчета.ТекущаяСтраница = Элементы.ОбъектУчета_Пусто;
	ТекущийЭлемент = Элементы.Объект;
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьВсеГруппы(Команда)
	Элементы.ОбъектУчета_Пусто.Видимость = Истина;
	Элементы.ОбъектУчета_Контрагенты.Видимость = Истина;
	Элементы.ОбъектУчета_ДоговорыКонтрагентов.Видимость = Истина;
	Элементы.ОбъектУчета_УслугиПоДоговорам.Видимость = Истина;
	Элементы.ОбъектУчета_ДолговыеОбязательства.Видимость = Истина;
	Элементы.ОбъектУчета_ИсполнительныеДокументы.Видимость = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ФайлыПриИзменении(Элемент)
	ФайлыПутьПриИзменении(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	ТипЗначенияВладельца = ТипЗнч(ЭтаФорма.ВладелецФормы);
	Если ТипЗначенияВладельца = Тип("УправляемаяФорма") тогда
		Если ЭтаФорма.ВладелецФормы.ИмяФормы = "Задача.Мероприятие.Форма.ФормаМероприятия" Тогда
			ЭтаФорма.ВладелецФормы.Объект.СвязанныйДокумент = Объект.Ссылка;
		КонецЕсли;
	КонецЕсли;
	Оповестить("ПродолжитьРаботуПодбораФайла"); 
КонецПроцедуры