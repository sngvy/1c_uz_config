
&НаСервере
Процедура ПолучитьСведения(Должник, Код) Экспорт
	// Искать по всем регионам
	КодРегиона = "all";
	
	Попытка
		// Запрос к API
		SSL = Новый ЗащищенноеСоединениеOpenSSL(Неопределено, Новый СертификатыУдостоверяющихЦентровОС());  
		Соединение = Новый HTTPСоединение("bankrot.fedresurs.ru", 443,,,,, SSL);
		
		Заголовки = Новый Соответствие;
		Заголовки.Вставить("Content-Type", "application/json");
		Заголовки.Вставить("Cookie", "_ym_uid=1712167510413271543; _ym_d=1712167510; _ym_isad=2; _ym_visorc=w; qrator_msid=1712170850.980.oJ7fQJjGPhZ5kw8e-82om2l2mqnnuj5gquu3dq8ov3ba6i3i2");
		Заголовки.Вставить("Referer", "https://bankrot.fedresurs.ru/bankrupts?searchString=" + КодироватьСтроку(Должник, СпособКодированияСтроки.КодировкаURL) + "&isActiveLegalCase=null&limit=15&offset=0");
		Запрос = Новый HTTPЗапрос("/backend/prsnbankrupts?searchString=" + Должник + "&regionId=" + КодРегиона + "&isActiveLegalCase=null&offset=0&limit=15", Заголовки);
		Ответ = Соединение.ВызватьHTTPМетод("GET", Запрос);
		
		//Сообщить(Ответ.ПолучитьТелоКакСтроку());
		
		ЧтениеJSON = Новый ЧтениеJSON;
		ЧтениеJSON.УстановитьСтроку(Ответ.ПолучитьТелоКакСтроку());
		Данные = ПрочитатьJSON(ЧтениеJSON, Ложь);
		ЧтениеJSON.Закрыть();
		
		// Удалить старые статусы по должнику
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ДелаОБанкротстве.Должник КАК Должник,
		|	ДелаОБанкротстве.Дело КАК Дело,
		|	ДелаОБанкротстве.ДатаПроверки КАК ДатаПроверки,
		|	ДелаОБанкротстве.Адрес КАК Адрес,
		|	ДелаОБанкротстве.ИНН КАК ИНН,
		|	ДелаОБанкротстве.СНИЛС КАК СНИЛС,
		|	ДелаОБанкротстве.Управляющий КАК Управляющий,
		|	ДелаОБанкротстве.Стадия КАК Стадия
		|ИЗ
		|	РегистрСведений.ДелаОБанкротстве КАК ДелаОБанкротстве
		|ГДЕ
		|	ДелаОБанкротстве.Должник = &Должник";
		Запрос.УстановитьПараметр("Должник", Справочники.Контрагенты.НайтиПоКоду(Код));
		
		РезультатЗапроса = Запрос.Выполнить();
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			МенеджерЗаписи = РегистрыСведений.ДелаОБанкротстве.СоздатьМенеджерЗаписи();
			
			ЗаполнитьЗначенияСвойств(МенеджерЗаписи, Выборка);
			
			МенеджерЗаписи.Удалить();        
		КонецЦикла;
		
		// Парсинг JSON
		Если Данные.pageData.Количество() = 0 Тогда
			МенеджерЗаписи = РегистрыСведений.ДелаОБанкротстве.СоздатьМенеджерЗаписи();
			
			МенеджерЗаписи.Должник = Справочники.Контрагенты.НайтиПоКоду(Код);
			УИДЗапроса = Новый УникальныйИдентификатор();
			МенеджерЗаписи.Дело = "Дело о банкротстве не найдено " + "(" + УИДЗапроса + ")";
			МенеджерЗаписи.ДатаПроверки = ТекущаяДата();
			
			МенеджерЗаписи.Записать();
			
		ИначеЕсли Данные.pageData.Количество() > 0 Тогда
			Сч = 0;
			Для Сч = 0 По Данные.pageData.ВГраница() Цикл
				Попытка
					ГУИД = Данные.pageData[Сч].guid;
					Заголовки = Новый Соответствие;
					Заголовки.Вставить("Host","fedresurs.ru");
					Заголовки.Вставить("Content-Type", "application/json");
					Заголовки.Вставить("Cookie", "_ym_uid=1712167510413271543; _ym_d=1712167510; _ym_isad=2; _ym_visorc=w; qrator_msid=1712170850.980.oJ7fQJjGPhZ5kw8e-82om2l2mqnnuj5gquu3dq8ov3ba6i3i2");
					Заголовки.Вставить("Referer", "https://fedresurs.ru/");
					Запрос = Новый HTTPЗапрос("backend/persons/" + ГУИД, Заголовки);
					Ответ = Соединение.ВызватьHTTPМетод("GET", Запрос);
					
					ЧтениеJSON = Новый ЧтениеJSON;
					ЧтениеJSON.УстановитьСтроку(Ответ.ПолучитьТелоКакСтроку());
					ДанныеПоУчастнику = ПрочитатьJSON(ЧтениеJSON, Ложь);
					ЧтениеJSON.Закрыть();
					
					// Проверка на соответствие даты рождения в базе
					ДатаРождения = ПрочитатьДатуJSON(ДанныеПоУчастнику.birthdateBankruptcy, ФорматДатыJSON.ISO);
					Если ДатаРождения = ОбъектыСервер.ПолучитьЗначениеСвойства(Должник, "0043") Тогда
						
						Заголовки = Новый Соответствие;
						Заголовки.Вставить("Host","fedresurs.ru");
						Заголовки.Вставить("Content-Type", "application/json");
						Заголовки.Вставить("Cookie", "_ym_uid=1712167510413271543; _ym_d=1712167510; _ym_isad=2; _ym_visorc=w; qrator_msid=1712170850.980.oJ7fQJjGPhZ5kw8e-82om2l2mqnnuj5gquu3dq8ov3ba6i3i2");
						Заголовки.Вставить("Referer", "https://fedresurs.ru/");
						Запрос = Новый HTTPЗапрос("backend/persons/" + ГУИД + "/bankruptcy", Заголовки);
						Ответ = Соединение.ВызватьHTTPМетод("GET", Запрос);
						
						ЧтениеJSON = Новый ЧтениеJSON;
						ЧтениеJSON.УстановитьСтроку(Ответ.ПолучитьТелоКакСтроку());
						Сообщения = ПрочитатьJSON(ЧтениеJSON, Ложь);
						ЧтениеJSON.Закрыть();
						
						Попытка
							Дело = Данные.pageData[Сч].lastLegalCase.number;
						Исключение
						КонецПопытки;
						Попытка
							Дело = Сообщения.legalCases[0].number;
						Исключение
						КонецПопытки;
						Если Дело = Неопределено Тогда
							Дело = "https://fedresurs.ru/persons/" + ГУИД;
							//ДО = Справочники.ДолговыеОбязательства.НайтиПоРеквизиту("Должник", Справочники.Контрагенты.НайтиПоКоду(Код));
							//ОбъектыСервер.ЗаписатьЗначениеСвойства(ДО, "0181", Справочники.тсЗначенияСвойствОбъектов.НайтиПоКоду("000000029"));
							//ОбъектыСервер.ЗаписатьЗначениеСвойства(ДО, "0182", Справочники.тсЗначенияСвойствОбъектов.ПустаяСсылка());
						КонецЕсли;
						Попытка
							Адрес = Данные.pageData[Сч].address;
						Исключение
							Адрес = "—";
						КонецПопытки;
						Попытка
							ИНН = Данные.pageData[Сч].inn;
						Исключение
							ИНН = "—";
						КонецПопытки;
						Попытка
							СНИЛС = Данные.pageData[Сч].snils;
						Исключение
							СНИЛС = "—";
						КонецПопытки;
						Попытка
							Управляющий = Данные.pageData[Сч].arbitrManagerFio;
						Исключение
							Управляющий = "МФЦ";
						КонецПопытки;
						Попытка
							Стадия = Данные.pageData[Сч].lastLegalCase.status.description; 
						Исключение
						КонецПопытки;						
						Если Стадия = Неопределено Тогда
							Попытка
								Стадия = Сообщения.withoutLegalCases[0].typeName;								
							Исключение
							КонецПопытки;
						КонецЕсли;
						Если Стадия = Неопределено Тогда
							Попытка							
								Стадия = Сообщения.legalCases[0].lastPublications[0].typeName
							Исключение;
							КонецПопытки;
						КонецЕсли;
						Если Стадия = Неопределено Тогда
							Стадия = "—";
						КонецЕсли;
						
						// Записать текущий статус дела
						МенеджерЗаписи = РегистрыСведений.ДелаОБанкротстве.СоздатьМенеджерЗаписи();
						
						МенеджерЗаписи.ДатаПроверки = ТекущаяДата();
						МенеджерЗаписи.Должник = Справочники.Контрагенты.НайтиПоКоду(Код);
						МенеджерЗаписи.Дело = Дело;
						МенеджерЗаписи.Адрес = Адрес;
						МенеджерЗаписи.ИНН = ИНН;
						МенеджерЗаписи.СНИЛС = СНИЛС;
						МенеджерЗаписи.Управляющий = Управляющий; 
						МенеджерЗаписи.Стадия = Стадия;
						
						МенеджерЗаписи.Записать();
						
						// Записать в журнал
						Запрос = Новый Запрос;
						Запрос.Текст =
						"ВЫБРАТЬ
						|	ЖурналБанкротств.Период КАК Период,
						|	ЖурналБанкротств.Должник КАК Должник,
						|	ЖурналБанкротств.Дело КАК Дело,
						|	ЖурналБанкротств.ДО КАК ДО,
						|	ЖурналБанкротств.Кредитор КАК Кредитор,
						|	ЖурналБанкротств.Стадия КАК Стадия
						|ИЗ
						|	РегистрСведений.ЖурналБанкротств КАК ЖурналБанкротств
						|ГДЕ
						|	ЖурналБанкротств.Должник = &Должник";
						Запрос.УстановитьПараметр("Должник", Справочники.Контрагенты.НайтиПоКоду(Код));
						
						РезультатЗапроса = Запрос.Выполнить();
						Выборка = РезультатЗапроса.Выбрать();
						
						Если Выборка.Количество() = 0 Тогда
							
							МенеджерЗаписи = РегистрыСведений.ЖурналБанкротств.СоздатьМенеджерЗаписи();
							
							МенеджерЗаписи.Период = ТекущаяДата();
							МенеджерЗаписи.Должник = Справочники.Контрагенты.НайтиПоКоду(Код);
							МенеджерЗаписи.Дело = Дело;
							МенеджерЗаписи.ДО = Справочники.ДолговыеОбязательства.НайтиПоРеквизиту("Должник", МенеджерЗаписи.Должник);
							МенеджерЗаписи.Кредитор = МенеджерЗаписи.ДО.Кредитор;
							МенеджерЗаписи.Стадия = Стадия;
							
							МенеджерЗаписи.Записать();
							
						Иначе
							
							Запрос = Новый Запрос;
							Запрос.Текст =
							"ВЫБРАТЬ ПЕРВЫЕ 1
							|	ЖурналБанкротств.Период КАК Период,
							|	ЖурналБанкротств.Должник КАК Должник,
							|	ЖурналБанкротств.Дело КАК Дело,
							|	ЖурналБанкротств.ДО КАК ДО,
							|	ЖурналБанкротств.Кредитор КАК Кредитор,
							|	ЖурналБанкротств.Стадия КАК Стадия
							|ИЗ
							|	РегистрСведений.ЖурналБанкротств КАК ЖурналБанкротств
							|ГДЕ
							|	ЖурналБанкротств.Должник = &Должник
							|
							|УПОРЯДОЧИТЬ ПО
							|	Период УБЫВ";
							Запрос.УстановитьПараметр("Должник", Справочники.Контрагенты.НайтиПоКоду(Код));
							
							РезультатЗапроса = Запрос.Выполнить();
							Выборка = РезультатЗапроса.Выбрать();
							
							Если Выборка.Стадия <> Стадия Тогда
								
								МенеджерЗаписи = РегистрыСведений.ЖурналБанкротств.СоздатьМенеджерЗаписи();
								
								МенеджерЗаписи.Период = ТекущаяДата();
								МенеджерЗаписи.Должник = Справочники.Контрагенты.НайтиПоКоду(Код);
								МенеджерЗаписи.Дело = Дело;
								МенеджерЗаписи.ДО = Справочники.ДолговыеОбязательства.НайтиПоРеквизиту("Должник", МенеджерЗаписи.Должник);
								МенеджерЗаписи.Кредитор = МенеджерЗаписи.ДО.Кредитор;
								МенеджерЗаписи.Стадия = Стадия;
								
								МенеджерЗаписи.Записать();
								
							КонецЕсли;
						КонецЕсли;
						
						// Записать признак наличия ДоБ
						ДолжникОбъект = Справочники.Контрагенты.НайтиПоКоду(Код).ПолучитьОбъект();
						Если Не ДолжникОбъект.ЕстьДоБ Тогда
							ДолжникОбъект.ЕстьДоБ = Истина;
							ДолжникОбъект.Записать();
						КонецЕсли;
						
						// Поместить в архив или в СТОП
						Запрос = Новый Запрос;
						Запрос.Текст =
						"ВЫБРАТЬ
						|	ДолговыеОбязательства.Ссылка КАК Ссылка
						|ИЗ
						|	Справочник.ДолговыеОбязательства КАК ДолговыеОбязательства
						|ГДЕ
						|	ДолговыеОбязательства.Должник = &Должник";
						Запрос.УстановитьПараметр("Должник", Справочники.Контрагенты.НайтиПоКоду(Код));
						РезультатЗапроса = Запрос.Выполнить();
						Выборка = РезультатЗапроса.Выбрать();
						
						Пока Выборка.Следующий() Цикл
							ДО = Выборка.Ссылка;
							Если ОбъектыСервер.ПолучитьЗначениеСвойства(ДО,"0181") <> Справочники.тсЗначенияСвойствОбъектов.НайтиПоКоду("000000034")
								И ОбъектыСервер.ПолучитьЗначениеСвойства(ДО,"0182") <> Справочники.тсЗначенияСвойствОбъектов.НайтиПоКоду("000000048") Тогда // Проверка на передачу в ЮД 
								Если Стадия = "Производство по делу завершено"
									ИЛИ Стадия = "Производство по делу прекращено"
									ИЛИ Стадия = "Сообщение о судебном акте"
									ИЛИ Стадия = "Сообщение о собрании кредиторов"
									ИЛИ Стадия = "Сообщение о завершении процедуры внесудебного банкротства гражданина"
									ИЛИ Стадия = "Реструктуризация долгов гражданина"
									ИЛИ Стадия = "Реализация имущества гражданина" Тогда
									ОбъектыСервер.ЗаписатьЗначениеСвойства(ДО, "0181", Справочники.тсЗначенияСвойствОбъектов.НайтиПоКоду("000000034"));
									ОбъектыСервер.ЗаписатьЗначениеСвойства(ДО, "0182", Справочники.тсЗначенияСвойствОбъектов.НайтиПоКоду("000000036"));
								ИначеЕсли
									Стадия = "Производство по делу завершено"
									И Стадия <> "Производство по делу прекращено"
									И Стадия <> "Сообщение о судебном акте"
									И Стадия <> "Сообщение о собрании кредиторов"
									И Стадия <> "Сообщение о завершении процедуры внесудебного банкротства гражданина"
									И Стадия <> "Реструктуризация долгов гражданина"
									И Стадия <> "Реализация имущества гражданина" Тогда
									ОбъектыСервер.ЗаписатьЗначениеСвойства(ДО, "0181", Справочники.тсЗначенияСвойствОбъектов.НайтиПоКоду("000000031"));
									ОбъектыСервер.ЗаписатьЗначениеСвойства(ДО, "0182", Справочники.тсЗначенияСвойствОбъектов.НайтиПоКоду("000000051"));
								ИначеЕсли
									Стадия = "Сообщение о возврате гражданину поданного им заявления о признании гражданина банкротом во внесудебном порядке"
									ИЛИ Стадия = "Аннулирование ранее опубликованного сообщения" Тогда
									ОбъектыСервер.ЗаписатьЗначениеСвойства(ДО, "0181", Справочники.тсЗначенияСвойствОбъектов.НайтиПоКоду("000000029"));
									ОбъектыСервер.ЗаписатьЗначениеСвойства(ДО, "0182", Справочники.тсЗначенияСвойствОбъектов.ПустаяСсылка());
								КонецЕсли;
							КонецЕсли;
						КонецЦикла;						
					КонецЕсли;
				Исключение
				КонецПопытки;
			КонецЦикла;
			Если Дело = Неопределено Тогда
				МенеджерЗаписи = РегистрыСведений.ДелаОБанкротстве.СоздатьМенеджерЗаписи();			
				МенеджерЗаписи.Должник = Справочники.Контрагенты.НайтиПоКоду(Код);
				УИДЗапроса = Новый УникальныйИдентификатор();
				МенеджерЗаписи.Дело = "Дело о банкротстве не найдено " + "(" + УИДЗапроса + ")";
				МенеджерЗаписи.ДатаПроверки = ТекущаяДата();
				
				МенеджерЗаписи.Записать();
			КонецЕсли;
		КонецЕсли;
	Исключение
		МенеджерЗаписи = РегистрыСведений.ДелаОБанкротстве.СоздатьМенеджерЗаписи();			
		МенеджерЗаписи.Должник = Справочники.Контрагенты.НайтиПоКоду(Код);
		УИДЗапроса = Новый УникальныйИдентификатор();
		МенеджерЗаписи.Дело = "База данных Федресурса не отвечает " + "(" + УИДЗапроса + ")";
		МенеджерЗаписи.ДатаПроверки = ТекущаяДата();
		
		МенеджерЗаписи.Записать();
	КонецПопытки;
КонецПроцедуры