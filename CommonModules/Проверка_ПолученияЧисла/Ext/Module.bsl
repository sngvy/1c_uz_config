Функция Старт(ДанныеДляПроверки, НачалоДанных) Экспорт

	ОписаниеТипаКолонки = ДанныеДляПроверки["ОписаниеТипа"];
	
	НаборДанных = Новый Массив;
	
	Значения = ДанныеДляПроверки["ЗначенияЯчеек"];
	Для НомерСтроки = 0 По Значения.Количество() - 1 Цикл
	
		Текст = СокрЛП(Значения[НомерСтроки]);
		Если НулевоеЗначение_Число(Текст) Тогда
		
			Продолжить;
		
		КонецЕсли;
		
		Значение = ОписаниеТипаКолонки.ПривестиЗначение(Текст);
		Если Значение <> 0 Тогда
		
			Продолжить;
		
		КонецЕсли;

		ДанныеОбработки = Новый Структура;
		ДанныеОбработки.Вставить("ЗначениеЯчейки", Текст);
		ДанныеОбработки.Вставить("Значение", Значение);
		ДанныеОбработки.Вставить("НомерСтроки", НачалоДанных + НомерСтроки);
		ДанныеОбработки.Вставить("ДанныеСтрок", НачалоДанных + НомерСтроки);
		
		НаборДанных.Добавить(ДанныеОбработки);
	
	КонецЦикла;

	Возврат НаборДанных;

КонецФункции // ()

// Псевданим для Старт
//
// Параметры:
//  ДанныеДляПроверки  - Структура - Значения для проверки и ожидаемый тип
// 
//  НачалоДанных  - Число - С какой строки начать проверять
//
// Возвращаемое значение:
//   Массив   - Набор с описанием где произошла ошибка
//
Функция Исполнить(ДанныеДляПроверки, НачалоДанных) Экспорт

	Возврат Старт(ДанныеДляПроверки, НачалоДанных);

КонецФункции

Функция НулевоеЗначение_Число(Знач Текст)

	Текст = СтрЗаменить(Текст, "0", "");
	ВтораяЗапятая = СтрНайти(Текст, ",", , , 2) <> 0;
	ВтораяЗапятая = СтрНайти(Текст, ".", , , 2) <> 0 ИЛИ ВтораяЗапятая;
	
	Если ВтораяЗапятая Тогда
	
		Возврат Ложь;
	
	КонецЕсли;
	
	Текст = СтрЗаменить(Текст, ",", "");
	Текст = СтрЗаменить(Текст, ".", "");
	
	Возврат Не ЗначениеЗаполнено(Текст);

КонецФункции // ()
