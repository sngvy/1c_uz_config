////////////////////////////////////////////////////////////////////////////////
// Для вызова команды У источника должна быть реализована
// Экспортная функция ОбработатьРезультатИнициализацииКаталогов с двумя параметрами:
//   Результат - Булево - Результат создания каталогов
//   Сообщение - Строка - Пояснение к результату

#Область ПрограммныйИнтерфейс

&НаКлиенте
Процедура ОбработкаКоманды(НастройкиПарсингаДокументов, КонтекстВыполнения)

	НастройкиПарсинга = ПолучитьВсеНастройки(НастройкиПарсингаДокументов);
	
	СтатусЛогера = НастройкиПарсингаКлиентСервер.СтатусЛогера(
		НастройкиПарсинга
	);
	Логер = БЛогер_Логирование.Создать(
		СтатусЛогера
	);
	
	БЛогер_Логирование.Добавить(
		Логер,
		"Начало Инициализации каталогов",
		ПредопределенноеЗначение("Перечисление.БЛогер_Уровни.Отладка")
	);
	
	КаталогОбработки = НастройкиПарсингаКлиентСервер
		.ПолучитьКаталогПоУмолчанию(НастройкиПарсинга);
	
	Ответ = Вопрос(
		СтрШаблон(
			"При выполнении команды, содержимое каталога %1 будет очищено
			|Хотите продолжить?", КаталогОбработки
		),
		РежимДиалогаВопрос.ОКОтмена
	);
		
	Если Ответ <> КодВозвратаДиалога.ОК Тогда
	
		БЛогер_Логирование.Добавить(
			Логер,
			"Отмена выполнения",
			ПредопределенноеЗначение("Перечисление.БЛогер_Уровни.Инфо")
		);
		Возврат;
	
	КонецЕсли;
	
	ВыполнятьНаСервере = НастройкиПарсингаКлиентСервер
		.ВыполнятьНаСервере(НастройкиПарсинга);
	
	Текст = "Успешная настройка";
	Результат = Истина;
	Попытка
	
		Результат = ИнициализироватьНачальныеДанныеВКорне(
			ВыполнятьНаСервере,
			КаталогОбработки
		);
	
	Исключение
		Среда = ?(ВыполнятьНаСервере, "Сервере", "Клиенте");
		Текст = СтрШаблон(
			"При инициализации каталогов возликли ошибки:
			|%1
			|Выполненялось на %2
			|Корневой каталог - %3",
			ОбработкаОшибок.КраткоеПредставлениеОшибки(ИнформацияОбОшибке()),
			Среда,
			КаталогОбработки
		);
		БЛогер_Логирование.Добавить(
			Логер,
			"Ошибка при инициализации каталогов",
			ПредопределенноеЗначение("Перечисление.БЛогер_Уровни.Ошибка")
		);
		Результат = Ложь;
	КонецПопытки;
	
	ВозвратРезультата = Новый ОписаниеОповещения(
		"ОбработатьРезультатИнициализацииКаталогов",
		КонтекстВыполнения.Источник,
		Текст
	);
	
	ВыполнитьОбработкуОповещения(
		ВозвратРезультата,
		Результат
	);
	
КонецПроцедуры

#КонецОбласти

#Область КонтрольСредыВыполнения

&НаКлиенте
Функция ИнициализироватьНачальныеДанныеВКорне(ВыполнятьНаСервере, КаталогОбработки)

	Если ВыполнятьНаСервере Тогда
	
		Возврат ИнициализироватьНачальныеДанныеНаСервере(КаталогОбработки);
	
	Иначе
	
		Возврат ИнициализироватьНачальныеДанныеНаКлиенте(КаталогОбработки);
	
	КонецЕсли;

КонецФункции

&НаСервере
Функция ИнициализироватьНачальныеДанныеНаСервере(КаталогОбработки)

	Возврат НастройкиПарсингаКлиентСервер.ИнициализироватьНачальныеДанные(
		КаталогОбработки
	);

КонецФункции // ()

&НаКлиенте
Функция ИнициализироватьНачальныеДанныеНаКлиенте(КаталогОбработки)

	Возврат НастройкиПарсингаКлиентСервер.ИнициализироватьНачальныеДанные(
		КаталогОбработки
	);

КонецФункции // ()

#КонецОбласти

#Область СлужебныеРаботаСНастройкой

&НаКлиенте
Функция ПолучитьВсеНастройки(ВыбраннаяНастройка)

	Если Не ЗначениеЗаполнено(ВыбраннаяНастройка) Тогда
	
		ВызватьИсключение УправленияСообщениямиКлиентСервер.ИнструкцияКОшибке(
			"Не выбрана настройка",
			"В зависимости от формы вызова,
			|настройка может быть не сохранена или не выбрана"
		);
	
	КонецЕсли;
	
	Возврат ПолучитьВсеНастройкиНаСервере(ВыбраннаяНастройка);

КонецФункции // ()

&НаСервере
Функция ПолучитьВсеНастройкиНаСервере(Настройка)

	Возврат Справочники.НастройкиПарсингаДокументов.ДанныеНастройки(
		Настройка
	);
	
КонецФункции

#КонецОбласти