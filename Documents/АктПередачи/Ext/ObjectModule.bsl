
Перем ФлагПерепроведение;

Процедура ДобавитьОбъекты(ПринимаемыеОбъекты) Экспорт

	Для каждого ПринимаемыйОбъект Из ПринимаемыеОбъекты Цикл
	
		СтрокаОбъекты = Объекты.Добавить();
		СтрокаОбъекты.Объект = ПринимаемыйОбъект;
	
	КонецЦикла;

КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	Если Не ЭтотОбъект.ЯПонимаюЧтоЯДелаю Тогда
	
		Отказ = Истина;
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Распроводить документ запрещено!";
		Сообщение.Сообщить();
	
	КонецЕсли;

	//Если ИзменялРС Тогда
	//	Отказ = Истина;
	//	Возврат;
	//КонецЕсли;
	//
	////ПроведениеСервер.ОчиститьДвиженияДокумента(ЭтотОбъект,, Отказ);
	//ЭтотОбъект.Движения.ОбъектыВРаботе.Записывать = Истина;
	//ЭтотОбъект.Движения.СобытияПоОбъектам.Записывать = Истина;
	//ЭтотОбъект.Движения.Записать();
	//Отказ = ПроведениеСервер.ПроверитьВозможностьПроведенияНов(ЭтотОбъект.Ссылка);
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	ТаблицаДвиженийОбъекты = Неопределено;
	ТаблицаДвиженийСобытия = Неопределено;
	
	Документы.АктПередачи.ИнициализироватьДанныеДокумента(ЭтотОбъект, ТаблицаДвиженийОбъекты, 
			ТаблицаДвиженийСобытия, Отказ);
		
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если Не Отказ И ТаблицаДвиженийОбъекты.Количество() > 0 Тогда
		ЭтотОбъект.Движения.ОбъектыВРаботе.Загрузить(ТаблицаДвиженийОбъекты);
		ЭтотОбъект.Движения.ОбъектыВРаботе.Записывать = Истина;
	КонецЕсли;		
			
	Если Не Отказ И ТаблицаДвиженийСобытия.Количество() > 0 Тогда
		ЭтотОбъект.Движения.СобытияПоОбъектам.Загрузить(ТаблицаДвиженийСобытия);
		ЭтотОбъект.Движения.СобытияПоОбъектам.Записывать = Истина;
	КонецЕсли;
			

	
	
	ЭтотОбъект.Движения.Записать();	
	
	//Если НЕ ЗначениеЗаполнено(ЭтотОбъект.ПодразделениеПередающее)
	//	И не ЗначениеЗаполнено(ЭтотОбъект.СотрудникПередающий) Тогда
		
		////////МассивОбъектов = ЭтотОбъект.Объекты.ВыгрузитьКолонку("Объект");
		////////Отказ = НЕ ОбъектыСервер.СинхронизироватьРегистры_ОбъектыВРаботе(МассивОбъектов);
	//КонецЕсли;	
	
	Если Отказ Тогда 
		Возврат;
	КонецЕсли;
	

	Отказ = ПроведениеСервер.ПроверитьВозможностьПроведенияНов(ЭтотОбъект);
	
	
	Если Не Отказ И Не НеНазначатьСотрудников И Не ФлагПерепроведение И Не СотрудникПринимающий.Пустая() Тогда
		//назначение ответственных
		Запрос = Новый Запрос("ВЫБРАТЬ
		                      |	ТаблицаОб.Объект
		                      |ПОМЕСТИТЬ ТаблицаОб
		                      |ИЗ
		                      |	&ТаблицаОб КАК ТаблицаОб
		                      |;
		                      |
		                      |////////////////////////////////////////////////////////////////////////////////
		                      |ВЫБРАТЬ
		                      |	ТаблицаОб.Объект,
		                      |	ОтветственныеСотрудники.ТипСотрудника,
		                      |	ОтветственныеСотрудники.Пользователь
		                      |ПОМЕСТИТЬ ТаблРезультата
		                      |ИЗ
		                      |	ТаблицаОб КАК ТаблицаОб
		                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеСотрудники КАК ОтветственныеСотрудники
		                      |		ПО ТаблицаОб.Объект = ОтветственныеСотрудники.Объект
		                      |			И (НЕ ОтветственныеСотрудники.Пользователь.Уволен)
		                      |			И (ОтветственныеСотрудники.ТипСотрудника <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыСотрудников.РуководительПодразделения))
		                      |
		                      |ОБЪЕДИНИТЬ ВСЕ
		                      |
		                      |ВЫБРАТЬ
		                      |	ТаблицаОб.Объект,
		                      |	&ТипСотрудника,
		                      |	ВЫБОР
		                      |		КОГДА ТИПЗНАЧЕНИЯ(&Автор) <> ТИП(Справочник.Пользователи)
		                      |			ТОГДА &ТекущийПользователь
		                      |		ИНАЧЕ &Автор
		                      |	КОНЕЦ
		                      |ИЗ
		                      |	ТаблицаОб КАК ТаблицаОб
		                      |
		                      |ОБЪЕДИНИТЬ ВСЕ
		                      |
		                      |ВЫБРАТЬ
		                      |	ТаблицаОб.Объект,
		                      |	ОтветственныеСотрудники.ТипСотрудника,
		                      |	ВЫБОР
		                      |		КОГДА ТИПЗНАЧЕНИЯ(&Автор) <> ТИП(Справочник.Пользователи)
		                      |			ТОГДА &ТекущийПользователь
		                      |		ИНАЧЕ &Автор
		                      |	КОНЕЦ
		                      |ИЗ
		                      |	ТаблицаОб КАК ТаблицаОб
		                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеСотрудники КАК ОтветственныеСотрудники
		                      |		ПО ТаблицаОб.Объект = ОтветственныеСотрудники.Объект
		                      |			И (ОтветственныеСотрудники.Пользователь.Уволен)
		                      |;
		                      |
		                      |////////////////////////////////////////////////////////////////////////////////
		                      |ВЫБРАТЬ
		                      |	ТаблРезультата.Объект,
		                      |	ТаблРезультата.ТипСотрудника,
		                      |	ТаблРезультата.Пользователь
		                      |ИЗ
		                      |	ТаблРезультата КАК ТаблРезультата
		                      |ГДЕ
		                      |	(ТаблРезультата.Пользователь = &Автор
		                      |			ИЛИ ТаблРезультата.Пользователь = &ТекущийПользователь)
		                      |
		                      |СГРУППИРОВАТЬ ПО
		                      |	ТаблРезультата.Объект,
		                      |	ТаблРезультата.ТипСотрудника,
		                      |	ТаблРезультата.Пользователь");
		Запрос.УстановитьПараметр("ТаблицаОб", ЭтотОбъект.Объекты.Выгрузить(, "Объект"));
		Запрос.УстановитьПараметр("Автор", ?(ЭтотОбъект.СотрудникПринимающий.Пустая(), ЭтотОбъект.Автор, 
				ЭтотОбъект.СотрудникПринимающий));
		Запрос.УстановитьПараметр("ТекущийПользователь", ?(ЭтотОбъект.СотрудникПринимающий.Пустая(), 
				ПараметрыСеанса.ТекущийПользователь, ЭтотОбъект.СотрудникПринимающий));
		Если Не ЭтотОбъект.СотрудникПринимающий.Пустая() Тогда		
			Если Не ЭтотОбъект.ТипСотрудникаПринимающего.Пустая() Тогда
				Запрос.УстановитьПараметр("ТипСотрудника", ЭтотОбъект.ТипСотрудникаПринимающего);
			ИначеЕсли Не ЭтотОбъект.СотрудникПринимающий.ТипСотрудника.Пустая() Тогда
			    Запрос.УстановитьПараметр("ТипСотрудника", ЭтотОбъект.СотрудникПринимающий.ТипСотрудника);
			Иначе	
				Сообщить("Тип принимающего сотрудника не определен!");
				Отказ = Истина;
				Возврат;
			КонецЕсли;
		КонецЕсли;
		
		Результат = Запрос.Выполнить().Выбрать();
		Пока Результат.Следующий() Цикл
			//Читаем ОтветственныеСотрудники
			Набор = РегистрыСведений.ОтветственныеСотрудники.СоздатьМенеджерЗаписи();
			Набор.Объект = Результат.Объект;
			Набор.ТипСотрудника = Результат.ТипСотрудника;
			Набор.Прочитать();
			Если Константы.ТолькоОдинОтветственный.Получить() ИЛИ Набор.ТипСотрудника.Пустая() Тогда
				//Пишем ОтветственныеСотрудники
				Набор.Объект = Результат.Объект;
				Набор.ТипСотрудника = Результат.ТипСотрудника;
			    Набор.Пользователь = Результат.Пользователь;
				Попытка
					Набор.Записать();
					ИзменялРС = Истина;
				Исключение
					Сообщить(ОписаниеОшибки());
					Отказ = Истина;
					Возврат;
				КонецПопытки;
				
			ИначеЕсли Набор.Пользователь <> Результат.Пользователь Тогда 
				Если НазначитьГлавнымГруппы Тогда
					//Создаем СотрВПомощь
					НаборСП = РегистрыСведений.СотрудникиВПомощь.СоздатьМенеджерЗаписи();
					НаборСП.Объект = Набор.Объект;
					НаборСП.ТипСотрудника = Набор.ТипСотрудника;			
					НаборСП.Пользователь = Набор.Пользователь;
					//Пишем СотрВПомощь
					Попытка
						НаборСП.Записать();
						ИзменялРС = Истина;
					Исключение
						Сообщить(ОписаниеОшибки());
						Отказ = Истина;
						Возврат;
					КонецПопытки;						
					//Правим ОтветственныеСотрудники
					Набор.Пользователь = Результат.Пользователь;
					//Пишем ОтветственныеСотрудники
					Попытка
						Набор.Записать();
						ИзменялРС = Истина;
					Исключение
						Сообщить(ОписаниеОшибки());
						Отказ = Истина;
						Возврат;
					КонецПопытки;
						
				Иначе
					//Создаем СотрВПомощь
					НаборСП = РегистрыСведений.СотрудникиВПомощь.СоздатьМенеджерЗаписи();
					НаборСП.Объект = Результат.Объект;
					НаборСП.ТипСотрудника = Результат.ТипСотрудника;			
					НаборСП.Пользователь = Результат.Пользователь;
					//Пишем СотрВПомощь
					Попытка
						НаборСП.Записать();
						ИзменялРС = Истина;
					Исключение
						Сообщить(ОписаниеОшибки());
						Отказ = Истина;
						Возврат;
					КонецПопытки;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	
	Если Не Отказ И Не НеНазначатьСотрудников И Не ФлагПерепроведение И Не ПодразделениеПередающее.Пустая() Тогда
		Запрос = Новый Запрос();
		Если СотрудникПередающий.Пустая() Тогда
			Запрос.Текст = "ВЫБРАТЬ
			               |	Пользователи.Ссылка
			               |ИЗ
			               |	Справочник.Пользователи КАК Пользователи
			               |ГДЕ
			               |	Пользователи.Подразделение = &Подразделение";
			Запрос.УстановитьПараметр("Подразделение", ПодразделениеПередающее);
			Сотр = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
			Запрос.УстановитьПараметр("Пользователь", Сотр);
			Запрос.УстановитьПараметр("ТипСотрудника", Неопределено);
		Иначе
			Запрос.УстановитьПараметр("Пользователь", СотрудникПередающий);
			Если Не ТипСотрудникаПередающего.Пустая() Тогда
				Запрос.УстановитьПараметр("ТипСотрудника", ТипСотрудникаПередающего);
			ИначеЕсли Не СотрудникПередающий.ТипСотрудника.Пустая() Тогда
				Запрос.УстановитьПараметр("ТипСотрудника", СотрудникПередающий.ТипСотрудника);
			Иначе
				Сообщить("Тип передающего сотрудника не определен!");
				Отказ = Истина;
				Возврат;
			КонецЕсли;
		КонецЕсли;
		
		Запрос.Текст = "ВЫБРАТЬ
		               |	ТаблицаОб.Объект
		               |ПОМЕСТИТЬ ТаблицаОб
		               |ИЗ
		               |	&ТаблицаОб КАК ТаблицаОб
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ОтветственныеСотрудники.Объект,
		               |	ОтветственныеСотрудники.ТипСотрудника,
		               |	ОтветственныеСотрудники.Пользователь,
		               |	ИСТИНА КАК Главный
		               |ПОМЕСТИТЬ ОтвСотр
		               |ИЗ
		               |	РегистрСведений.ОтветственныеСотрудники КАК ОтветственныеСотрудники
		               |ГДЕ
		               |	ОтветственныеСотрудники.Пользователь В(&Пользователь)
		               |	И (ОтветственныеСотрудники.ТипСотрудника = &ТипСотрудника
		               |			ИЛИ &ТипСотрудника = НЕОПРЕДЕЛЕНО)
		               |
		               |ОБЪЕДИНИТЬ ВСЕ
		               |
		               |ВЫБРАТЬ
		               |	СотрудникиВПомощь.Объект,
		               |	СотрудникиВПомощь.ТипСотрудника,
		               |	СотрудникиВПомощь.Пользователь,
		               |	ЛОЖЬ
		               |ИЗ
		               |	РегистрСведений.СотрудникиВПомощь КАК СотрудникиВПомощь
		               |ГДЕ
		               |	СотрудникиВПомощь.Пользователь В(&Пользователь)
		               |	И (СотрудникиВПомощь.ТипСотрудника = &ТипСотрудника
		               |			ИЛИ &ТипСотрудника = НЕОПРЕДЕЛЕНО)
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ОтвСотр.Объект,
		               |	ОтвСотр.ТипСотрудника,
		               |	ОтвСотр.Пользователь,
		               |	ОтвСотр.Главный КАК Главный
		               |ИЗ
		               |	ТаблицаОб КАК ТаблицаОб
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтвСотр КАК ОтвСотр
		               |		ПО ТаблицаОб.Объект = ОтвСотр.Объект
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Главный";
		Запрос.УстановитьПараметр("ТаблицаОб", ЭтотОбъект.Объекты.Выгрузить(, "Объект"));
							
		Результат = Запрос.Выполнить().Выбрать();
		Пока Результат.Следующий() Цикл
			Если Результат.Главный Тогда
				//Читаем ОтветственныеСотрудники
				Набор = РегистрыСведений.ОтветственныеСотрудники.СоздатьМенеджерЗаписи();
				Набор.Объект = Результат.Объект;
				Набор.ТипСотрудника = Результат.ТипСотрудника;			
				Набор.Прочитать();
				
				//Первого СотрудникиВПомощь
				Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
				                      |	СотрудникиВПомощь.Пользователь
				                      |ИЗ
				                      |	РегистрСведений.СотрудникиВПомощь КАК СотрудникиВПомощь
				                      |ГДЕ
				                      |	СотрудникиВПомощь.Объект = &Объект
				                      |	И СотрудникиВПомощь.ТипСотрудника = &ТипСотрудника");
				Запрос.УстановитьПараметр("Объект", Результат.Объект);
				Запрос.УстановитьПараметр("ТипСотрудника", Результат.ТипСотрудника);
                РезультатСП = Запрос.Выполнить().Выбрать();
				Если РезультатСП.Следующий() Тогда
					//Читаем СотрудникиВПомощь
					НаборСП = РегистрыСведений.СотрудникиВПомощь.СоздатьМенеджерЗаписи();
					НаборСП.Объект = Результат.Объект;
					НаборСП.ТипСотрудника = Результат.ТипСотрудника;			
					НаборСП.Пользователь = РезультатСП.Пользователь;
					НаборСП.Прочитать();
					//Удаляем СотрудникиВПомощь					
					Попытка
						НаборСП.Удалить();
						ИзменялРС = Истина;
					Исключение
						Сообщить(ОписаниеОшибки());
						Отказ = Истина;
						Возврат;
					КонецПопытки;				
					//Меняем сотрудников
					Набор.Пользователь = РезультатСП.Пользователь;			
					//Пишем ОтветственныеСотрудники
					Попытка
						Набор.Записать();
						ИзменялРС = Истина;
					Исключение
						Сообщить(ОписаниеОшибки());
						Отказ = Истина;
						Возврат;
					КонецПопытки;
					
				Иначе
					//Удаляем ОтветственныеСотрудники
					Попытка
						Набор.Удалить();
						ИзменялРС = Истина;
					Исключение
						Сообщить(ОписаниеОшибки());
						Отказ = Истина;
						Возврат;
					КонецПопытки;
				КонецЕсли;
					
			Иначе
				//Читаем СотрудникиВПомощь
				Набор = РегистрыСведений.СотрудникиВПомощь.СоздатьМенеджерЗаписи();
				Набор.Объект = Результат.Объект;
				Набор.ТипСотрудника = Результат.ТипСотрудника;			
				Набор.Пользователь = Результат.Пользователь;
				Набор.Прочитать();
				//Удаляем СотрудникиВПомощь
				Попытка
					Набор.Удалить();
					ИзменялРС = Истина;
				Исключение
					Сообщить(ОписаниеОшибки());
					Отказ = Истина;
					Возврат;
				КонецПопытки;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Блокировка = Новый БлокировкаДанных;
	Эл = Блокировка.Добавить("Константа.СинхронизацияДанныхЗапущена");
	Эл.Режим = РежимБлокировкиДанных.Исключительный;
	Блокировка.Заблокировать();
	Если Константы.СинхронизацияДанныхЗапущена.Получить() = Ложь Тогда
		Константы.СинхронизацияДанныхЗапущена.Установить(Истина);	
	КонецЕсли;
	//////Попытка 
	//////	ФоновыеЗадания.Выполнить("ОбъектыСервер.СинхронизироватьРегистры_ОбъектыВРаботе",,"02");
	//////Исключение
	//////	Сообщить(ОписаниеОшибки());
	//////КонецПопытки;	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)

	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПринятиеВРаботуОрганизации") Или 
				ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗагрузкаЗадолженности") Или
				ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.СкорингДолговыхОбязательств") Или
				ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ФормированиеПретензионногоПисьма") Или
				ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗавершениеРаботыОрганизации") Или
				ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.АктуализацияЗадолженности") Или
				ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПоступлениеПлатежей") Или
				ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаданияДляАвтоинформирования") Или
				ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПередачаНаВыполнение") Или
				ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗапускБП") Или
				ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПередатьДела") Тогда
		// Заполнение шапки                              
		Автор = ДанныеЗаполнения.Автор;
		Комментарий = ДанныеЗаполнения.Комментарий;
		Организация = ДанныеЗаполнения.Организация;
		ДокументОснование = ДанныеЗаполнения;
		Объекты.Загрузить(ДанныеЗаполнения.Объекты.Выгрузить());
		
		Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПередачаНаВыполнение") Или
				ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗапускБП") Или
				ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПередатьДела") Тогда
			Попытка
				ПодразделениеПередающее = ДанныеЗаполнения.Подразделение;	
			Исключение
			КонецПопытки;
			Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПередатьДела") Тогда  
				Попытка
					СотрудникПередающий = ДанныеЗаполнения.Ответственный;
				Исключение
				КонецПопытки;
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.АктПередачи") Тогда
		// Заполнение шапки
		Автор = ДанныеЗаполнения.Автор;
		Комментарий = ДанныеЗаполнения.Комментарий;
		Организация = ДанныеЗаполнения.Организация;
		ПодразделениеПередающее = ДанныеЗаполнения.ПодразделениеПередающее;
		ПодразделениеПринимающее = ДанныеЗаполнения.ПодразделениеПринимающее;
		СотрудникПередающий = ДанныеЗаполнения.СотрудникПередающий;
		СотрудникПринимающий = ДанныеЗаполнения.СотрудникПринимающий;
		ДокументОснование = ДанныеЗаполнения.Ссылка;
		Объекты.Загрузить(ДанныеЗаполнения.Объекты.Выгрузить());

	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.ДолговыеОбязательства") ИЛИ ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.ИсполнительныеДокументы") Тогда
		Автор = ПараметрыСеанса.ТекущийПользователь;
		Организация = ПараметрыСеанса.ТекущийПользователь.Организация;
		Строка = Объекты.Добавить();
		Строка.Объект = ДанныеЗаполнения.Ссылка;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
	
		Основание = Неопределено;
		Если ДанныеЗаполнения.Свойство("Основание", Основание) Тогда
		
			ЗаполнитьОтменуАкта(Основание);
		
		КонецЕсли;
	
	КонецЕсли;

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	ФлагПерепроведение = (Проведен И РежимЗаписи = РежимЗаписиДокумента.Проведение);
КонецПроцедуры

#Область Техническая

Процедура ЗаполнитьОтменуАкта(Основание)

	ЭтотОбъект.Объекты.Загрузить(Основание.Объекты.Выгрузить());
	СкопироватьЗначенияРеквизитов(ЭтотОбъект, Основание);
	ОбратитьПередачу(ЭтотОбъект, Основание);

КонецПроцедуры

Процедура СкопироватьЗначенияРеквизитов(Приемник, Основание)

	ВсеРеквизиты = Основание.Метаданные().Реквизиты;
	Для каждого ТекущийРеквизит Из ВсеРеквизиты Цикл
	
		ИмяРеквизита = ТекущийРеквизит.Имя;
		Приемник[ИмяРеквизита] = Основание[ИмяРеквизита];
	
	КонецЦикла;

КонецПроцедуры

Процедура ОбратитьПередачу(АктОбъект, Основание)

	АктОбъект.ИзменялРС = Ложь;
	АктОбъект.ДокументОснование = Основание;
	
	МеняемыеМестамиЗначения = Новый Соответствие;
	МеняемыеМестамиЗначения.Вставить("БылГлавнымГруппы", "НазначитьГлавнымГруппы");
	МеняемыеМестамиЗначения.Вставить("ПодразделениеПередающее", "ПодразделениеПринимающее");
	МеняемыеМестамиЗначения.Вставить("СотрудникПередающий", "СотрудникПринимающий");
	МеняемыеМестамиЗначения.Вставить("ТипСотрудникаПередающего", "ТипСотрудникаПринимающего");
	
	Для каждого Элемент Из МеняемыеМестамиЗначения Цикл
	
		Темп = АктОбъект[Элемент.Ключ];
		АктОбъект[Элемент.Ключ] = АктОбъект[Элемент.Значение];
		АктОбъект[Элемент.Значение] = Темп;
	
	КонецЦикла;

КонецПроцедуры


#КонецОбласти