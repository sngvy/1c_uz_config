
Процедура УстановитьВидимостьДО()
	// Если ЕжедневныйСкоринг И Объект.ВидОперации = Перечисления.ВидыДеятельностиОтделов.ВзысканиеЗадолженности Тогда
	//	Элементы.РаспределениеДО.ПодчиненныеЭлементы.РаспределениеДОДолговоеОбязательство.Видимость=Истина;
	//Иначе
	//	Элементы.РаспределениеДО.ПодчиненныеЭлементы.РаспределениеДОДолговоеОбязательство.Видимость=Ложь;
	//КонецЕсли;         
КонецПроцедуры

Процедура УстановитьВидимость()
	//Колонки = Элементы.РаспределениеДО.Колонки;
	////Элементы.РаспределениеДОДолговоеОбязательство.Видимость = 
	////		(Объект.Скоринг.ВидДеятельностиОтдела <> Перечисления.ВидыДеятельностиОтделов.ВзысканиеЗадолженности);
	////Элементы.РаспределениеДОИсполнительныйЛист.Видимость = 
	////		(Объект.Скоринг.ВидДеятельностиОтдела = Перечисления.ВидыДеятельностиОтделов.РаботаССудебнымиПриставами);	
КонецПроцедуры

&НаКлиенте
Процедура Распределить(Команда)
	РаспределитьСервер();	
	//ЗаполнитьТаблицуНастроекДействий();
	ЭтаФорма.Модифицированность = Истина;
КонецПроцедуры

&НаСервере
Процедура РаспределитьСервер()
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ДокументОбъект.РаспределитьСервер();
	ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");	
КонецПроцедуры 

Функция ПроверкаКорректныхПараметров(КомпоновщикНастроек);
	Успех = Истина;
	Для Каждого Параметр Из КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы Цикл
		Если ЗначениеЗаполнено(Параметр.Значение) Тогда
			Продолжить;		
		ИначеЕсли Строка(Параметр.Параметр) = "Период" 
			или Строка(Параметр.Параметр) = "BeginOfPeriod" 
			или Строка(Параметр.Параметр) = "EndOfPeriod" Тогда
			Продолжить;		
		КонецЕсли;
		
		Сообщить("	В скоринге: " + Объект.Скоринг + ", не заполнен параметр " + Параметр.Параметр, 
				СтатусСообщения.Внимание); 
		Успех = Ложь;
	КонецЦикла;
	
	ОбнаруженаОшибка = Не Успех;
	Возврат Успех;
КонецФункции

Процедура ПодборВтаблЧасть(Результат)
	Об = РеквизитФормыВЗначение("Объект");	
	Если Объект.Скоринг.ОбъектУчета = Перечисления.ОбъектыУчета.Контрагенты Тогда
		Результат.Таблица.Свернуть("Должник");
	КонецЕсли; 	
	РаботаСДокументами.ЗанестиРезультатПодбораВТабличнуюЧасть(Об.Объекты, Результат);
	ЗначениеВРеквизитФормы(Об, "Объект");
КонецПроцедуры

&НаКлиенте
Процедура КомандаПроведения(Команда)
	//ПровестиДокумент();
КонецПроцедуры

&НаКлиенте
Процедура КомандаПровестиИЗакрыть(Команда)
	//Если ПровестиДокумент() Тогда
	//	Закрыть();
	//КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ЗаписатьДокумент(РежимЗаписи)
	Документ = РеквизитФормыВЗначение("Объект");	
	Попытка
		Документ.Записать(РежимЗаписи);
		ЗначениеВРеквизитФормы(Документ, "Объект");
		Возврат Истина;
	Исключение
		Возврат Ложь;
	КонецПопытки;
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Объект.Ссылка.Пустая() Тогда
		Пользователи.ЗаполнитьРеквизитыПоДаннымПользователя(Объект);
	КонецЕсли;
	
	ОбъектыСервер.РасширитьТабличнуюЧасть(Объект.Объекты);
	Элементы.ОбъектыПодборПоНастройкам.Видимость = Константы.ИспользоватьНастройкиПодбораОбъектовУчета.Получить();
КонецПроцедуры

&НаКлиенте
Процедура Очистить(Команда)
	Объект.Объекты.Очистить();
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ОбъектыСервер.РасширитьТабличнуюЧасть(Объект.Объекты);
КонецПроцедуры

&НаКлиенте
Процедура ОбъектыОбъектПриИзменении(Элемент)
	ОбъектыКлиент.РасширитьТекущуюСтроку(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ОбъектыПолеПриИзменении(Элемент)
	ОбъектыКлиент.РасширитьТекущуюСтрокуОбъект(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура Подбор(Команда)
	ОбъектыКлиент.Подбор(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ПодборИзФайла(Команда)
	ОбъектыКлиент.ПодборИзДОК(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ПодборПоНастройкам(Команда)
	ОбъектыКлиент.ПодборПоНастройкам(ЭтаФорма);
КонецПроцедуры
