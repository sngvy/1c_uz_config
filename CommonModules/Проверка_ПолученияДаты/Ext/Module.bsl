
#Область ПрограммныйИнтерфейс
// TODO - переписать как в привидении
Функция Старт(ДанныеДляПроверки, НачалоДанных) Экспорт

	ОписаниеТипаКолонки = ДанныеДляПроверки["ОписаниеТипа"];
	
	Значения = ДанныеДляПроверки["ЗначенияЯчеек"];
	
	НаборДанных = Новый Массив;
	
	Для НомерСтроки = 0 По Значения.Количество() - 1 Цикл
	
		Текст = СокрЛП(Значения[НомерСтроки]);
		Если НулевоеЗначение_Дата(Текст) Тогда
		
			Продолжить;
		
		КонецЕсли;
		
		ДанныеОбработки = Новый Структура;
		ДанныеОбработки.Вставить("ЗначениеЯчейки", Текст);
		ДанныеОбработки.Вставить("НомерСтроки", НачалоДанных + НомерСтроки);
		ДанныеОбработки.Вставить("ДанныеСтрок", НачалоДанных + НомерСтроки);
		ДанныеОбработки.Вставить("Значение", "");
		
		ЧастиДатыТекста = СтрРазделить(Текст, ". ", Истина);
		СборкаДаты = Новый Массив;
		Если СтрДлина(ЧастиДатыТекста[0]) > 2
			ИЛИ СтрДлина(ЧастиДатыТекста[1]) > 2
			ИЛИ СтрДлина(ЧастиДатыТекста[2]) <> 4 Тогда
		
			НаборДанных.Добавить(ДанныеОбработки);
			Продолжить;
		
		КонецЕсли;
		СборкаДаты.Добавить(Формат(ЧастиДатыТекста[0], "ЧЦ=2; ЧВН=; ЧГ="));
		СборкаДаты.Добавить(Формат(ЧастиДатыТекста[1], "ЧЦ=2; ЧВН=; ЧГ="));
		СборкаДаты.Добавить(Формат(ЧастиДатыТекста[2], "ЧЦ=4; ЧВН=; ЧГ="));
		ТекстПриведения = СтрСоединить(СборкаДаты, ".") + " 00:00:00";
		
		Значение = ОписаниеТипаКолонки.ПривестиЗначение(ТекстПриведения);
		
		Если Формат(День(Значение), "ЧЦ=2; ЧВН=; ЧГ=") <> Формат(ЧастиДатыТекста[0], "ЧЦ=2; ЧВН=; ЧГ=")
			ИЛИ Формат(Месяц(Значение), "ЧЦ=2; ЧВН=; ЧГ=") <> Формат(ЧастиДатыТекста[1], "ЧЦ=2; ЧВН=; ЧГ=")
			ИЛИ Формат(Год(Значение), "ЧЦ=4; ЧВН=; ЧГ=") <> ЧастиДатыТекста[2]
			ИЛИ Значение = Дата(1, 1, 1) Тогда
		
			ДанныеОбработки.Вставить("Значение", Строка(Значение));
			НаборДанных.Добавить(ДанныеОбработки);
		
		КонецЕсли;
	
	КонецЦикла;
	
	Возврат НаборДанных;

КонецФункции // ()

// Псевданим для Старт
//
// Параметры:
//  ДанныеДляПроверки  - Структура - Значения для проверки и ожидаемый тип
// 
//  НачалоДанных  - Число - С какой строки начать проверять
//
// Возвращаемое значение:
//   Массив   - Набор с описанием где произошла ошибка
//
Функция Исполнить(ДанныеДляПроверки, НачалоДанных) Экспорт

	Возврат Старт(ДанныеДляПроверки, НачалоДанных);

КонецФункции

Функция ПривестиКДате(Знач Текст, ОписаниеДаты) Экспорт

	Текст = СокрЛП(Текст);
	Если НулевоеЗначение_Дата(Текст) Тогда
	
		Возврат Дата(1, 1, 1);
	
	КонецЕсли;
	
	ЧастиДатыТекста = РазбитьНаСоставляющие(Текст);
	Если Не КорректныеЧастиДаты(ЧастиДатыТекста) Тогда
	
		Возврат Дата(1, 1, 1);
	
	КонецЕсли;
	
	Значение = ПолучитьДату(ЧастиДатыТекста, ОписаниеДаты);
	
	Если Не ТекстЭтоКорректнаяДата(Значение, ЧастиДатыТекста) Тогда
	
		Возврат Дата(1, 1, 1);
	
	КонецЕсли;
	
	Возврат Значение;

КонецФункции // ()


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция НулевоеЗначение_Дата(Знач Текст)

	Возврат Не ЗначениеЗаполнено(Текст);

КонецФункции

Функция РазделителиДаты()

	Разделители = Новый Массив;
	Разделители.Добавить(".");
	Разделители.Добавить("/");
	Разделители.Добавить("-");
	Разделители.Добавить(" ");
	
	Возврат Разделители;

КонецФункции // ()

Функция РазбитьНаСоставляющие(Знач Текст)

	Разделители = РазделителиДаты();
	
	Возврат СтрРазделить(Текст, СтрСоединить(Разделители, ""), Истина);

КонецФункции // ()

Функция КорректныеЧастиДаты(Части)

	Если Части.Количество() < 3
		Или Части.Количество() > 4 Тогда
	
		Возврат Ложь;
	
	КонецЕсли;
	
	Возврат Не (СтрДлина(Части[0]) > 2
		ИЛИ СтрДлина(Части[1]) > 2
		ИЛИ СтрДлина(Части[2]) <> 4)

КонецФункции // ()

Функция ПолучитьДату(Части, ОписаниеДаты, УчитыватьВремя = Ложь)

	СборкаДаты = Новый Массив;
	СборкаДаты.Добавить(Формат(Части[0], "ЧЦ=2; ЧВН=; ЧГ="));
	СборкаДаты.Добавить(Формат(Части[1], "ЧЦ=2; ЧВН=; ЧГ="));
	СборкаДаты.Добавить(Формат(Части[2], "ЧЦ=4; ЧВН=; ЧГ="));
	
	ЧастьВремени = "00:00:00";
	Если УчитыватьВремя
		И Части.Количество() = 4 Тогда
	
		ЧастьВремени = Части[3];
	
	КонецЕсли;
	ТекстПриведения = СтрСоединить(СборкаДаты, ".") + " " + ЧастьВремени;
	
	Возврат ОписаниеДаты.ПривестиЗначение(ТекстПриведения);

КонецФункции // ()

// Если в тексте были опечатки (12.15.2020), то результат будет 12.03.2021
Функция ТекстЭтоКорректнаяДата(Значение, ЧастиДатыТекста)

	Возврат Не (Формат(День(Значение), "ЧЦ=2; ЧВН=; ЧГ=") <> Формат(ЧастиДатыТекста[0], "ЧЦ=2; ЧВН=; ЧГ=")
			ИЛИ Формат(Месяц(Значение), "ЧЦ=2; ЧВН=; ЧГ=") <> Формат(ЧастиДатыТекста[1], "ЧЦ=2; ЧВН=; ЧГ=")
			ИЛИ Формат(Год(Значение), "ЧЦ=4; ЧВН=; ЧГ=") <> ЧастиДатыТекста[2]
			ИЛИ Значение = Дата(1, 1, 1));

КонецФункции // ()


#КонецОбласти
