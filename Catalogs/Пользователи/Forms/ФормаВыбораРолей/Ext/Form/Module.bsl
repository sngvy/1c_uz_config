
////////////////////////////////////////////////////////////////////////////////
// Обработчики событий формы
//

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	РежимПодбора = Параметры.ЗакрыватьПриВыборе = Ложь;
	
	Если РежимПодбора Тогда
		Заголовок = НСтр("ru = 'Подбор разрешенных действий (ролей)'");
		Элементы.Роли.МножественныйВыбор = Истина;
		Элементы.Роли.РежимВыделения = РежимВыделенияТаблицы.Множественный;
		Элементы.РолиТекущейПодсистемы.МножественныйВыбор = Истина;
		Элементы.РолиТекущейПодсистемы.РежимВыделения = РежимВыделенияТаблицы.Множественный;
	Иначе
		Заголовок = НСтр("ru = 'Выбор разрешенного действия (роли)'");
	КонецЕсли;
	
	ДеревоПодсистем = УдалитьПользователиСерверПовтИсп.ДеревоПодсистем();
	ДеревоПодсистем.Строки.Сортировать("Синоним Возр", Истина);
	ЗначениеВДанныеФормы(ДеревоПодсистем, Подсистемы);
	
	ВсеРоли = УдалитьПользователиСерверПовтИсп.ВсеРоли();
	
	Для каждого Строка Из ВсеРоли Цикл
		Если ВРег(Строка.Имя) = ВРег("тсАдминистрирование") Тогда
			Продолжить;
		КонецЕсли;
		
		// Заполнение ролей
		НоваяСтрока = Роли.Добавить();
		НоваяСтрока.Имя               = Строка.Имя;
		НоваяСтрока.Синоним           = Строка.Синоним;
		НоваяСтрока.ИменаПодсистем    = Строка.ИменаПодсистем;
		НоваяСтрока.СинонимыПодсистем = Строка.СинонимыПодсистем;
		
	КонецЦикла;
	Роли.Сортировать("Синоним Возр");
	
	Параметры.Свойство("ТекущаяСтрока", ТекущаяРоль);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПриИзмененииТекущейРоли();
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	ПоказыватьПодсистемы = Настройки["ПоказыватьПодсистемы"];
	Элементы.СпособОтображения.ТекущаяСтраница = ?(ПоказыватьПодсистемы, Элементы.РолиПодсистем, Элементы.СписокРолей);
	Элементы.ПоказатьПодсистемы.Пометка = ПоказыватьПодсистемы;
	
	ПоказыватьРолиПодчиненныхПодсистем = Настройки["ПоказыватьРолиПодчиненныхПодсистем"];
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// Обработчики событий команд и элементов формы
//

&НаКлиенте
Процедура Выбрать(Команда)
	
	Если Элементы.СпособОтображения.ТекущаяСтраница = Элементы.РолиПодсистем Тогда
		ВыделенныеСтроки = Элементы.РолиТекущейПодсистемы.ВыделенныеСтроки;
		Коллекция = РолиТекущейПодсистемы;
	Иначе
		ВыделенныеСтроки = Элементы.Роли.ВыделенныеСтроки;
		Коллекция = Роли;
	КонецЕсли;
	
	Если ВыделенныеСтроки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если ВыделенныеСтроки.Количество() > 1 ИЛИ РежимПодбора Тогда
		ЗначениеВыбора = Новый Массив;
		Для каждого Идентификатор Из ВыделенныеСтроки Цикл
			ЗначениеВыбора.Добавить(Коллекция.НайтиПоИдентификатору(Идентификатор).Имя);
		КонецЦикла;
		
	Иначе
		ЗначениеВыбора = Коллекция.НайтиПоИдентификатору(ВыделенныеСтроки[0]).Имя;
	КонецЕсли;
	
	ОповеститьОВыборе(ЗначениеВыбора);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьПодсистемы(Команда)
	
	ПоказыватьПодсистемы = НЕ ПоказыватьПодсистемы;
	
	Элементы.СпособОтображения.ТекущаяСтраница = ?(ПоказыватьПодсистемы, Элементы.РолиПодсистем, Элементы.СписокРолей);
	Элементы.ПоказатьПодсистемы.Пометка = ПоказыватьПодсистемы;
	
КонецПроцедуры


&НаКлиенте
Процедура РолиВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ТипЗнч(Значение) = Тип("Массив") Тогда
		ЗначениеВыбора = Новый Массив;
		Для каждого Идентификатор Из Значение Цикл
			ЗначениеВыбора.Добавить(Роли.НайтиПоИдентификатору(Идентификатор).Имя);
		КонецЦикла;
		
	Иначе
		ЗначениеВыбора = Роли.НайтиПоИдентификатору(Значение).Имя;
	КонецЕсли;
	
	ОповеститьОВыборе(ЗначениеВыбора);
	
КонецПроцедуры

&НаКлиенте
Процедура РолиПриАктивизацииСтроки(Элемент)
	
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущаяРоль = Элемент.ТекущиеДанные.Имя;
	
	ПриИзмененииТекущейРоли();
	
КонецПроцедуры


&НаКлиенте
Процедура ПодсистемыПриАктивизацииСтроки(Элемент)
	
	// Заполнение ролей подсистемы.
	РолиТекущейПодсистемы.Очистить();
	
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для каждого СтрокаРоли Из Роли Цикл
		Если Найти(", " + СтрокаРоли.ИменаПодсистем + ", ", ", " + Элемент.ТекущиеДанные.ПолноеИмя + ?(ПоказыватьРолиПодчиненныхПодсистем, "", ", ")) > 0 Тогда
			
			НоваяСтрока = РолиТекущейПодсистемы.Добавить();
			НоваяСтрока.Имя     = СтрокаРоли.Имя;
			НоваяСтрока.Синоним = СтрокаРоли.Синоним;
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьРолиПодчиненныхПодсистемПриИзменении(Элемент)
	
	ПодсистемыПриАктивизацииСтроки(Элементы.Подсистемы);
	
КонецПроцедуры


&НаКлиенте
Процедура РолиТекущейПодсистемыВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ТипЗнч(Значение) = Тип("Массив") Тогда
		ЗначениеВыбора = Новый Массив;
		Для каждого Идентификатор Из Значение Цикл
			ЗначениеВыбора.Добавить(РолиТекущейПодсистемы.НайтиПоИдентификатору(Идентификатор).Имя);
		КонецЦикла;
		
	Иначе
		ЗначениеВыбора = РолиТекущейПодсистемы.НайтиПоИдентификатору(Значение).Имя;
	КонецЕсли;
	
	ОповеститьОВыборе(ЗначениеВыбора);
	
КонецПроцедуры

&НаКлиенте
Процедура РолиТекущейПодсистемыПриАктивизацииСтроки(Элемент)
	
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущаяРоль = Элемент.ТекущиеДанные.Имя;
	
	ПриИзмененииТекущейРоли();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Вспомогательные процедуры и функции формы
//

&НаКлиенте
Процедура ПриИзмененииТекущейРоли()
	
	Если НЕ ЗначениеЗаполнено(ТекущаяРоль) Тогда
		Возврат;
	КонецЕсли;
	
	НайденныеСтроки = Роли.НайтиСтроки(Новый Структура("Имя", ТекущаяРоль));
	Если НайденныеСтроки.Количество() > 0 Тогда
		Если Элементы.Роли.ТекущаяСтрока <> НайденныеСтроки[0].ПолучитьИдентификатор() Тогда
			Элементы.Роли.ТекущаяСтрока = НайденныеСтроки[0].ПолучитьИдентификатор();
		КонецЕсли;
		СтрокаРоли = НайденныеСтроки[0];
		
		НайденныеСтроки = РолиТекущейПодсистемы.НайтиСтроки(Новый Структура("Имя", ТекущаяРоль));
		Если НайденныеСтроки.Количество() > 0 Тогда
			Если Элементы.РолиТекущейПодсистемы.ТекущаяСтрока <> НайденныеСтроки[0].ПолучитьИдентификатор() Тогда
				Элементы.РолиТекущейПодсистемы.ТекущаяСтрока = НайденныеСтроки[0].ПолучитьИдентификатор();
			КонецЕсли;
		ИначеЕсли ТекущаяПодсистемаРолиУстановлена(СтрокаРоли, Подсистемы.ПолучитьЭлементы()) Тогда
			ПодсистемыПриАктивизацииСтроки(Элементы.Подсистемы);
			НайденныеСтроки = РолиТекущейПодсистемы.НайтиСтроки(Новый Структура("Имя", ТекущаяРоль));
			Если Элементы.РолиТекущейПодсистемы.ТекущаяСтрока <> НайденныеСтроки[0].ПолучитьИдентификатор() Тогда
				Элементы.РолиТекущейПодсистемы.ТекущаяСтрока = НайденныеСтроки[0].ПолучитьИдентификатор();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ТекущаяПодсистемаРолиУстановлена(СтрокаРоли, ЭлементыПодсистем)
	
	Для каждого ЭлементПодсистемы Из ЭлементыПодсистем Цикл
		Если Найти(", " + СтрокаРоли.ИменаПодсистем + ", ", ", " + ЭлементПодсистемы.ПолноеИмя + ", ") > 0 Тогда
			Если Элементы.Подсистемы.ТекущаяСтрока <> ЭлементПодсистемы.ПолучитьИдентификатор() Тогда
				Элементы.Подсистемы.ТекущаяСтрока = ЭлементПодсистемы.ПолучитьИдентификатор();
			КонецЕсли;
			Возврат Истина;
		КонецЕсли;
		Если ТекущаяПодсистемаРолиУстановлена(СтрокаРоли, ЭлементПодсистемы.ПолучитьЭлементы()) Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

