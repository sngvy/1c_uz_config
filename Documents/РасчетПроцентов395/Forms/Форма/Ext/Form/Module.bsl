 

&НаСервере
Процедура РассчитатьГрафикНаСервере()
	Объект.РасчетПроцентов.Загрузить(РасчетЗадолженностиСудопроизводство.РассчитатьНачислениеПроцентов395(Объект, Объект.ИсторияПлатежей.Выгрузить()));
	
	к = Объект.РасчетПроцентов.Количество();
	Дни = 0;
	СуммаНачислений = 0;
	СуммаОплат = 0;
	Проценты = 0;
	
	Для Каждого стр Из Объект.РасчетПроцентов Цикл
		Дни = Дни + стр.Дни;
		СуммаНачислений = СуммаНачислений + стр.СуммаНачисления;
		СуммаОплат = СуммаОплат + стр.СуммаПлатежа;
		Проценты = Проценты + стр.Проценты;
	КонецЦикла;
	                                             
	Элементы.ГрафикНачисленияИПогашенияДни.ТекстПодвала = Строка(Дни);
	Элементы.ГрафикНачисленияИПогашенияПроценты.ТекстПодвала = Формат(Проценты, "ЧДЦ='2'");
	Элементы.ГрафикНачисленияИПогашенияСуммаНачисления.ТекстПодвала = Формат(СуммаНачислений, "ЧДЦ='2'");
	Элементы.ГрафикНачисленияИПогашенияСуммаПлатежа.ТекстПодвала = Формат(СуммаОплат, "ЧДЦ='2'");
	
	Элементы.ГруппаГрафикНачисленийНачислено.Видимость = СуммаНачислений > 0;
	Элементы.ГруппаГрафикНачисленийОплата.Видимость = СуммаОплат > 0;
	
	Объект.НачисленныеПроценты = Проценты;
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьГрафик(Команда)
	Если Не ЗначениеЗаполнено(Объект.НачалоПериода) Тогда
		Сообщить("Заполните начало периода!");
		Возврат;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Объект.СуммаЗадолженности) Тогда
		Сообщить("Заполните сумму задолженности!");
		Возврат;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Объект.КонецПериода) Тогда
		Сообщить("Заполните конец периода!");
		Возврат;
	КонецЕсли;	
	РассчитатьГрафикНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//Объект.ДатаВыдачиЗайма = ТекущаяДата();
	//Объект.ДатаДоговора = ТекущаяДата();
	//Объект.ДатаПогашения = ТекущаяДата() + 10*24*3600;
	//Объект.ДатаРасчета = ТекущаяДата() + 20*24*3600;
	//Объект.СуммаВыданногоЗайма = 10000;
	//Объект.ПроцентнаяСтавка = 1;
	//Объект.КонецПериода = ТекущаяДата();
	//Объект.ДатаРешения = Дата("20190115");
	//Объект.СуммаЗадолженности = 100000; 
	Если Объект.Ссылка.Пустая() Тогда
		Пользователи.ЗаполнитьРеквизитыПоДаннымПользователя(Объект);
	КонецЕсли;
	ЗаполнитьПодвал();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПодвал()
	к = Объект.РасчетПроцентов.Количество();
	Дни = 0;
	СуммаНачислений = 0;
	СуммаОплат = 0;
	Проценты = 0;
	
	Для Каждого стр Из Объект.РасчетПроцентов Цикл
		Дни = Дни + стр.Дни;
		СуммаНачислений = СуммаНачислений + стр.СуммаНачисления;
		СуммаОплат = СуммаОплат + стр.СуммаПлатежа;
		Проценты = Проценты + стр.Проценты;
	КонецЦикла;
	                                             
	Элементы.ГрафикНачисленияИПогашенияДни.ТекстПодвала = Строка(Дни);
	Элементы.ГрафикНачисленияИПогашенияПроценты.ТекстПодвала = Формат(Проценты, "ЧДЦ='2'");
	Элементы.ГрафикНачисленияИПогашенияСуммаНачисления.ТекстПодвала = Формат(СуммаНачислений, "ЧДЦ='2'");
	Элементы.ГрафикНачисленияИПогашенияСуммаПлатежа.ТекстПодвала = Формат(СуммаОплат, "ЧДЦ='2'");
	
	Элементы.ГруппаГрафикНачисленийНачислено.Видимость = СуммаНачислений > 0;
	Элементы.ГруппаГрафикНачисленийОплата.Видимость = СуммаОплат > 0;	
КонецПроцедуры


&НаСервере
Процедура ЗаймПриИзмененииНаСервере()
	//Объект.ДатаВыдачиЗайма = ОбъектыСервер.ПолучитьЗначениеСвойства(Объект.Займ,"0046     ");
	//Объект.ДатаДоговора = ОбъектыСервер.ПолучитьЗначениеСвойства(Объект.Займ,"0046     ");
	//Объект.ДатаПогашения = ОбъектыСервер.ПолучитьЗначениеСвойства(Объект.Займ,"0047     ");
	//Объект.ДатаРасчета = ТекущаяДата();
	//Объект.СуммаВыданногоЗайма = ОбъектыСервер.ПолучитьЗначениеСвойства(Объект.Займ,"0048     ");
	//Объект.ПроцентнаяСтавка = ОбъектыСервер.ПолучитьЗначениеСвойства(Объект.Займ,"0045     ");
	//
	//Объект.ОстаткиДата = ОбъектыСервер.ПолучитьЗначениеСвойства(Объект.Займ,"0043     ");
	//Объект.ДниПросрочки = ОбъектыСервер.ПолучитьЗначениеСвойства(Объект.Займ,"0069     ");
	//ЗаполнитьОстатки(Объект.Займ);

	// Вставить содержимое обработчика.
	
	//ЗначениеОбъект = РеквизитФормыВЗначение("Объект");
	//ЗначениеОбъект.ЗаполнитьДанные();
	//ЗначениеВРеквизитФормы(ЗначениеОбъект, "Объект");
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ИсторияПлатежей.Период КАК ДатаПлатежа,
	                      |	ИсторияПлатежей.Задолженность КАК СуммаПлатежа,
	                      |	ЗНАЧЕНИЕ(Перечисление.ВидДвиженияЗадолженности.Списание) КАК ВидДвижения
	                      |ИЗ
	                      |	РегистрНакопления.ИсторияПлатежей КАК ИсторияПлатежей
	                      |ГДЕ
	                      |	ИсторияПлатежей.Объект = &Объект");
	Запрос.УстановитьПараметр("Объект", Объект.Займ);
	Результат = Запрос.Выполнить().Выгрузить();
	Объект.ИсторияПлатежей.Загрузить(Результат);
КонецПроцедуры

&НаКлиенте
Процедура ЗаймПриИзменении(Элемент)
//	Объект.СуммаЗадолженности = ЭтаФорма.ВладелецФормы.Объект.ЦенаИска;
//	Объект.ДатаРешения = НачалоДня(ЭтаФорма.ВладелецФормы.Объект.Дата);
	ЗаймПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьОстатки(ДО)
	//Запрос = Новый Запрос();
	//Запрос.Текст = "ВЫБРАТЬ
	//               |	ЗадолженностьПоОбъектамОстатки.ОсновнойДолгДООстаток КАК ОсновнойДолгДООстаток,
	//               |	ЗадолженностьПоОбъектамОстатки.ПроцентыДООстаток КАК ПроцентыДООстаток,
	//               |	ЗадолженностьПоОбъектамОстатки.ШтрафыДООстаток КАК ШтрафыДООстаток
	//               |ИЗ
	//               |	РегистрНакопления.ЗадолженностьПоОбъектам.Остатки КАК ЗадолженностьПоОбъектамОстатки
	//               |ГДЕ
	//               |	ЗадолженностьПоОбъектамОстатки.Объект = &Объект";
	//Запрос.УстановитьПараметр("Объект",ДО);
	//Рез = Запрос.Выполнить().Выбрать();
	//Пока Рез.Следующий() Цикл
	//	Объект.ОстаткиОД = Рез.ОсновнойДолгДООстаток;
	//	Объект.ОстаткиПросроченныеПроценты = Рез.ШтрафыДООстаток;
	//	Объект.ОстаткиПроценты = Рез.ПроцентыДООстаток;
	//КонецЦикла;	
	
КонецПроцедуры


&НаСервере
Процедура ПриОткрытииНаСервере()
	//Объект.ДатаРасчета = НачалоДня(ТекущаяДата());
	//Объект.ТекущийДоговор = РасчетЗадолженностиМФО.ПолучитьТекущийДоговор(Объект.Займ, НачалоДня(ТекущаяДата()));
	//Список = РасчетЗадолженностиМФО.СписокРеквизитовДоговорМикрозайма();
	//Для Каждого Реквизит Из Список Цикл
	//	Попытка
	//		Объект[Реквизит] = Объект.ТекущийДоговор[Реквизит];
	//	Исключение
	//		
	//	КонецПопытки;
	//КонецЦикла;
	//Объект.ИсторияПлатежей.Загрузить(РасчетЗадолженностиМФО.ПолучитьИсториюПлатежей(Объект.ТекущийДоговор));
	//Объект.ИсторияПлатежей.Сортировать("ДатаПлатежа");
	//Если ЗначениеЗаполнено(Объект.Займ) Тогда
	//	ЗаймПриИзмененииНаСервере();
	//КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПриОткрытииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	Попытка
		ЭтаФорма.ВладелецФормы.Объект.Расчет395 = Объект.Ссылка;
		ЭтаФорма.ВладелецФормы.Объект.ИскНачисленныеПроценты395 = Объект.НачисленныеПроценты;
	Исключение
		
	КонецПопытки;
КонецПроцедуры
	
	
&НаКлиенте
Процедура ПечатьУЭД(Команда)
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	Диалог.Заголовок = "Выберите каталог для сохранения документа...";
	Диалог.МножественныйВыбор = Ложь;
	

	Если Диалог.Выбрать() Тогда
		
		
		ТабДок = Новый ТабличныйДокумент;
		
		ПечатьНаСервере(ТабДок);
		
		Каталог = Диалог.Каталог + "\";            
		ИмяФайла = Каталог + "Расчет неустойки по 395 ГК РФ " + Строка(Объект.Займ) + ".xlsx";
		ТабДок.Записать(ИмяФайла, ТипФайлаТабличногоДокумента.XLSX);
		
		ЗапуститьПриложение(ИмяФайла);
		
	КонецЕсли;
	
	
	//Сообщить("Расчет индексации произведен");


КонецПроцедуры

&НаСервере
Процедура ПечатьНаСервере(ТабДок)
	РасчетЗадолженностиСудопроизводство.ПечатнаяФорма395(ТабДок, Объект, Объект.РасчетПроцентов.Выгрузить());
КонецПроцедуры
