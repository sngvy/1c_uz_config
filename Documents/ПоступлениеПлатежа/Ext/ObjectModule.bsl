
Процедура ОбработкаПроведения(Отказ, Режим)
	// регистр ИсторияПлатежей Приход
	Если Константы.РасчетНачислений.Получить() Тогда
		Стадия = ОбъектыСервер.ОпределитьВариантУчетаЗадолженности2(Займ,ДатаПлатежа);
		Если Стадия = Перечисления.СтадииЗадолженности.Расчетная Тогда
			Движения.ИсторияПлатежей.Записывать = Истина;
			Движение = Движения.ИсторияПлатежей.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
			Движение.Период = ДатаПлатежа;
			Движение.Объект = Займ;
			Движение.Задолженность = СуммаПлатежа;
			Движение.Валюта = ВалютаПлатежа;
		КонецЕсли;
	КонецЕсли;
	
	// регистр ЗадолженностьПоСудебнымРешениям Приход
	Движения.ЗадолженностьПоСудебнымРешениям.Записывать = Истина;
	Для Каждого ТекСтрокаРазнесениеПоСудебнымРешениям Из РазнесениеПоСудебнымРешениям Цикл
		Движение = Движения.ЗадолженностьПоСудебнымРешениям.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.ВидДвиженияЗадолженности = Перечисления.ВидДвиженияЗадолженности.Оплата;
		Движение.Период = ДатаПлатежа;
		Движение.Займ = Займ;
		Движение.Решение = ТекСтрокаРазнесениеПоСудебнымРешениям.Решение;
		Движение.ЧастьРешения = ТекСтрокаРазнесениеПоСудебнымРешениям.ЧастьРешения;
		Движение.ТипЗадолженности = ТекСтрокаРазнесениеПоСудебнымРешениям.ТипЗадолженности;
		Движение.Сумма = ТекСтрокаРазнесениеПоСудебнымРешениям.Сумма;
	КонецЦикла;	
	
	// регистр ЗадолженностьПоОбъектамВнесудебная Приход
	Движения.ЗадолженностьПоОбъектамВнесудебная.Записывать = Истина;
		
	Если РазнесениеПоВнесудебке.Количество() > 0 Тогда
		Движение = Движения.ЗадолженностьПоОбъектамВнесудебная.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.ВидДвиженияЗадолженности = Перечисления.ВидДвиженияЗадолженности.Оплата;
		Движение.Период = ДатаПлатежа;
		Движение.Объект = Займ;
		
		Для Каждого ТекСтрокаРазнесениеПоВнесудебке Из РазнесениеПоВнесудебке Цикл
			Движение[ТекСтрокаРазнесениеПоВнесудебке.ТипЗадолженности.ИмяПредопределенныхДанных + "ДО"] = Движение[ТекСтрокаРазнесениеПоВнесудебке.ТипЗадолженности.ИмяПредопределенныхДанных + "ДО"] + ТекСтрокаРазнесениеПоВнесудебке.Сумма;	
			Движение[ТекСтрокаРазнесениеПоВнесудебке.ТипЗадолженности.ИмяПредопределенныхДанных + "Регл"] = Движение[ТекСтрокаРазнесениеПоВнесудебке.ТипЗадолженности.ИмяПредопределенныхДанных + "Регл"] + ТекСтрокаРазнесениеПоВнесудебке.Сумма;
		КонецЦикла; 
		
		ПосчитатьОбщуюСуммуПоВнесудебке(Движение, РазнесениеПоВнесудебке);
		
	КонецЕсли;  	
			
	Если НеразнесеннаяСумма > 0 Тогда
		Движение = Движения.ЗадолженностьПоОбъектамВнесудебная.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.ВидДвиженияЗадолженности = Перечисления.ВидДвиженияЗадолженности.Оплата;
		Движение.Период = ДатаПлатежа;	
		Движение.Объект = Займ;
		
		СоставляющаяСписания = РасчетЗадолженностиВнесудебка.СоставляющаяСписанияПриПереплате();
		Движение[СоставляющаяСписания.ИмяПредопределенныхДанных + "ДО"] = НеразнесеннаяСумма;
		Движение[СоставляющаяСписания.ИмяПредопределенныхДанных + "Регл"] = НеразнесеннаяСумма;
		Движение.СуммаДО = НеразнесеннаяСумма;
		Движение.СуммаРегл = НеразнесеннаяСумма;		
	КонецЕсли;
	
	// Проводить документы в отдельной транзакции
	НачатьТранзакцию();
	Движения.ЗадолженностьПоСудебнымРешениям.Записать();
	Движения.ЗадолженностьПоОбъектамВнесудебная.Записать();
	
	//Документы.ПоступлениеПлатежа.ПровестиПоследовательность(ЭтотОбъект);
	ЗафиксироватьТранзакцию();
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	ЭтотОбъект.Движения.ЗадолженностьПоОбъектамВнесудебная.Записывать = Истина;
	ЭтотОбъект.Движения.ЗадолженностьПоОбъектамВнесудебная.Записать();
	ЭтотОбъект.Движения.ЗадолженностьПоСудебнымРешениям.Записывать = Истина;
	ЭтотОбъект.Движения.ЗадолженностьПоСудебнымРешениям.Записать();	

	//Документы.ПоступлениеПлатежа.ПровестиПоследовательность(ЭтотОбъект);
КонецПроцедуры

Процедура ПересчитатьНеразнесеннуюСумму() Экспорт
	Сумма = 0;
	Для Каждого Элемент Из РазнесениеПоСудебнымРешениям Цикл
		Сумма = Сумма + Элемент.Сумма;	
	КонецЦикла;
	Для Каждого Элемент Из РазнесениеПоВнесудебке Цикл
		Сумма = Сумма + Элемент.Сумма;	
	КонецЦикла;
	НеразнесеннаяСумма = СуммаПлатежа - Сумма;		
КонецПроцедуры

Функция РаспределитьПоСудебнымРешениям() Экспорт
	Если ЭтотОбъект.Проведен Тогда
		Сообщить("Сначала распроведите документ!");
		Возврат Неопределено;
	КонецЕсли;
	
	РазнесениеПоСудебнымРешениям.Очистить();
	ПересчитатьНеразнесеннуюСумму();
	
	Если ЗначениеЗаполнено(ИсполнительныйДокумент) Тогда
		Запрос = Новый Запрос("ВЫБРАТЬ
		                      |	ЗадолженностьПоСудебнымРешениямОстатки.ТипЗадолженности КАК ТипЗадолженности,
		                      |	ЗадолженностьПоСудебнымРешениямОстатки.СуммаОстаток КАК СуммаОстаток,
		                      |	ЗадолженностьПоСудебнымРешениямОстатки.ТипЗадолженности.ИмяПредопределенныхДанных КАК ИмяПредопределенныхДанных
		                      |ИЗ
		                      |	РегистрНакопления.ЗадолженностьПоСудебнымРешениям.Остатки(&Период, ) КАК ЗадолженностьПоСудебнымРешениямОстатки
		                      |ГДЕ
		                      |	ЗадолженностьПоСудебнымРешениямОстатки.Решение = &Решение
		                      |	И ЗадолженностьПоСудебнымРешениямОстатки.ЧастьРешения = &ЧастьРешения");	
		// Использовать ТекущаяДата(), иначе остатки будут пустыми 
		// Запрос.УстановитьПараметр("Период", Новый Граница(ЭтотОбъект.ДатаПлатежа, ВидГраницы.Включая));
		Запрос.УстановитьПараметр("Период", Новый Граница(ТекущаяДата(), ВидГраницы.Включая));
		Запрос.УстановитьПараметр("Решение", ИсполнительныйДокумент.СудебноеРешение);
		Запрос.УстановитьПараметр("ЧастьРешения", ИсполнительныйДокумент.ЧастьРешения);

		ТаблицаОстатки = Запрос.Выполнить().Выгрузить();
		
		МассивОчередность = РасчетЗадолженностиСудопроизводство.ПорядокСписанияСудебка();
		Для Каждого Элемент Из МассивОчередность Цикл
			Стр = Новый Структура("ТипЗадолженности", Элемент);
			Строки = ТаблицаОстатки.НайтиСтроки(Стр);
			Если Строки.Количество() > 0 И НеразнесеннаяСумма > 0 Тогда
				Разнесение = РазнесениеПоСудебнымРешениям.Добавить();
				Разнесение.Решение = ИсполнительныйДокумент.СудебноеРешение;
				Разнесение.ЧастьРешения = ИсполнительныйДокумент.ЧастьРешения;
				Разнесение.ТипЗадолженности = Строки[0].ТипЗадолженности;
				Разнесение.Сумма = Мин(НеразнесеннаяСумма, Строки[0].СуммаОстаток);
				НеразнесеннаяСумма = НеразнесеннаяСумма - Разнесение.Сумма;
			КонецЕсли;
		КонецЦикла;
	Иначе
		Если ВидПлательщика = Перечисления.ВидыПлательщика.Должник Тогда
			Если ЗначениеЗаполнено(Плательщик) Тогда
				Запрос = Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ
				|	ИсполнительныеДокументы.СудебноеРешение КАК СудебноеРешение,
				|	ИсполнительныеДокументы.ЧастьРешения КАК ЧастьРешения
				|ПОМЕСТИТЬ вт
				|ИЗ
				|	Справочник.ИсполнительныеДокументы КАК ИсполнительныеДокументы
				|ГДЕ
				|	ИсполнительныеДокументы.Должник = &Должник
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	вт.СудебноеРешение КАК СудебноеРешение,
				|	вт.ЧастьРешения КАК ЧастьРешения,
				|	ЗадолженностьПоСудебнымРешениямОстатки.ТипЗадолженности КАК ТипЗадолженности,
				|	ЗадолженностьПоСудебнымРешениямОстатки.СуммаОстаток КАК СуммаОстаток
				|ИЗ
				|	вт КАК вт
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗадолженностьПоСудебнымРешениям.Остатки КАК ЗадолженностьПоСудебнымРешениямОстатки
				|		ПО вт.СудебноеРешение = ЗадолженностьПоСудебнымРешениямОстатки.Решение
				|			И вт.ЧастьРешения = ЗадолженностьПоСудебнымРешениямОстатки.ЧастьРешения
				|ГДЕ
				|	ЗадолженностьПоСудебнымРешениямОстатки.Займ = &Займ
				|
				|УПОРЯДОЧИТЬ ПО
				|	вт.СудебноеРешение.ДатаВступленияВЗаконнуюСилу УБЫВ");
				Запрос.УстановитьПараметр("Должник", Плательщик);
				Запрос.УстановитьПараметр("Займ", Займ);
			Иначе
				Запрос = Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ
				|	ИсполнительныеДокументы.СудебноеРешение КАК СудебноеРешение,
				|	ИсполнительныеДокументы.ЧастьРешения КАК ЧастьРешения
				|ПОМЕСТИТЬ вт
				|ИЗ
				|	Справочник.ИсполнительныеДокументы КАК ИсполнительныеДокументы
				|ГДЕ
				|	ИсполнительныеДокументы.Владелец = &Займ
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	вт.СудебноеРешение КАК СудебноеРешение,
				|	вт.ЧастьРешения КАК ЧастьРешения,
				|	ЗадолженностьПоСудебнымРешениямОстатки.ТипЗадолженности КАК ТипЗадолженности,
				|	ЗадолженностьПоСудебнымРешениямОстатки.СуммаОстаток КАК СуммаОстаток
				|ИЗ
				|	вт КАК вт
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗадолженностьПоСудебнымРешениям.Остатки КАК ЗадолженностьПоСудебнымРешениямОстатки
				|		ПО вт.СудебноеРешение = ЗадолженностьПоСудебнымРешениямОстатки.Решение
				|			И вт.ЧастьРешения = ЗадолженностьПоСудебнымРешениямОстатки.ЧастьРешения
				|
				|УПОРЯДОЧИТЬ ПО
				|	вт.СудебноеРешение.ДатаВступленияВЗаконнуюСилу УБЫВ");
				Запрос.УстановитьПараметр("Займ", Займ);
				
			КонецЕсли;
			ТаблицаОстатки = Запрос.Выполнить().Выгрузить();
			
			МассивОчередность = РасчетЗадолженностиСудопроизводство.ПорядокСписанияСудебка();
			
			Для Каждого Элемент Из МассивОчередность Цикл
				Стр = Новый Структура("ТипЗадолженности", Элемент);
				Строки = ТаблицаОстатки.НайтиСтроки(Стр);
				Для Каждого стрОстатки Из Строки Цикл
					Если НеразнесеннаяСумма > 0 Тогда
						Разнесение = РазнесениеПоСудебнымРешениям.Добавить();
						Разнесение.Решение = стрОстатки.СудебноеРешение;
						Разнесение.ЧастьРешения = стрОстатки.ЧастьРешения;
						Разнесение.ТипЗадолженности = стрОстатки.ТипЗадолженности;
						Разнесение.Сумма = Мин(НеразнесеннаяСумма, стрОстатки.СуммаОстаток);
						НеразнесеннаяСумма = НеразнесеннаяСумма - Разнесение.Сумма;
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	Если НеразнесеннаяСумма > 0 Тогда
		Разнесение = РазнесениеПоСудебнымРешениям.Добавить();
		Разнесение.Решение = ИсполнительныйДокумент.СудебноеРешение;
		Разнесение.ЧастьРешения = ИсполнительныйДокумент.ЧастьРешения;
		// Если не найдено судебное решение, то разнести платеж по процентам
		// Разнесение.ТипЗадолженности = ПланыВидовХарактеристик.ТипыЗадолженностиПоРешению.Переплата;
		Разнесение.ТипЗадолженности = ПланыВидовХарактеристик.ТипыЗадолженностиПоРешению.Проценты;
		Разнесение.Сумма = НеразнесеннаяСумма;
		НеразнесеннаяСумма = 0;
	КонецЕсли;	
КонецФункции

Функция РаспределитьПоВнесудебке() Экспорт
	Если ЭтотОбъект.Проведен Тогда
		Сообщить("Сначала распроведите документ!");
		Возврат Неопределено;
	КонецЕсли;
	
	РазнесениеПоВнесудебке.Очистить();
	ПересчитатьНеразнесеннуюСумму();
	
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
	                      |	ДолговыеОбязательства.Ссылка КАК Объект
	                      |ПОМЕСТИТЬ вт
	                      |ИЗ
	                      |	Справочник.ДолговыеОбязательства КАК ДолговыеОбязательства
	                      |ГДЕ
	                      |	ДолговыеОбязательства.Ссылка = &Объект
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	вт.Объект КАК Объект,
	                      |	ЕСТЬNULL(ЗадолженностьПоОбъектамВнесудебнаяОстатки.СуммаДООстаток, 0) КАК СуммаДООстаток,
	                      |	ЕСТЬNULL(ЗадолженностьПоОбъектамВнесудебнаяОстатки.ОсновнойДолгДООстаток, 0) КАК ОсновнойДолгДООстаток,
	                      |	ЕСТЬNULL(ЗадолженностьПоОбъектамВнесудебнаяОстатки.ПроцентыДООстаток, 0) КАК ПроцентыДООстаток,
	                      |	ЕСТЬNULL(ЗадолженностьПоОбъектамВнесудебнаяОстатки.ШтрафыДООстаток, 0) КАК ШтрафыДООстаток,
	                      |	ЕСТЬNULL(ЗадолженностьПоОбъектамВнесудебнаяОстатки.ПениДООстаток, 0) КАК ПениДООстаток,
	                      |	ЕСТЬNULL(ЗадолженностьПоОбъектамВнесудебнаяОстатки.Составляющая1ДООстаток, 0) КАК Составляющая1ДООстаток,
	                      |	ЕСТЬNULL(ЗадолженностьПоОбъектамВнесудебнаяОстатки.Составляющая2ДООстаток, 0) КАК Составляющая2ДООстаток,
	                      |	ЕСТЬNULL(ЗадолженностьПоОбъектамВнесудебнаяОстатки.Составляющая3ДООстаток, 0) КАК Составляющая3ДООстаток,
	                      |	ЕСТЬNULL(ЗадолженностьПоОбъектамВнесудебнаяОстатки.Составляющая4ДООстаток, 0) КАК Составляющая4ДООстаток,
	                      |	ЕСТЬNULL(ЗадолженностьПоОбъектамВнесудебнаяОстатки.Составляющая5ДООстаток, 0) КАК Составляющая5ДООстаток,
	                      |	ЕСТЬNULL(ЗадолженностьПоОбъектамВнесудебнаяОстатки.Составляющая6ДООстаток, 0) КАК Составляющая6ДООстаток,
	                      |	ЕСТЬNULL(ЗадолженностьПоОбъектамВнесудебнаяОстатки.Составляющая7ДООстаток, 0) КАК Составляющая7ДООстаток,
	                      |	ЕСТЬNULL(ЗадолженностьПоОбъектамВнесудебнаяОстатки.Составляющая8ДООстаток, 0) КАК Составляющая8ДООстаток
	                      |ИЗ
	                      |	вт КАК вт
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗадолженностьПоОбъектамВнесудебная.Остатки(&Период, ) КАК ЗадолженностьПоОбъектамВнесудебнаяОстатки
	                      |		ПО вт.Объект = ЗадолженностьПоОбъектамВнесудебнаяОстатки.Объект");	
	Запрос.УстановитьПараметр("Объект", Займ);
	// Использовать ТекущаяДата(), иначе остатки будут пустыми 
	// Запрос.УстановитьПараметр("Период", Новый Граница(ЭтотОбъект.ДатаПлатежа, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Период", Новый Граница(ТекущаяДата(), ВидГраницы.Включая));
	ТаблицаОстатки = Запрос.Выполнить().Выгрузить();
	
	Для Каждого ТекСтрокаРазнесениеПоСудебнымРешениям Из РазнесениеПоСудебнымРешениям Цикл
		Если ТекСтрокаРазнесениеПоСудебнымРешениям.ТипЗадолженности.ПодлежитСписаниюСВнесудебнойЗадолженности Тогда
			ТаблицаОстатки[0][ТекСтрокаРазнесениеПоСудебнымРешениям.ТипЗадолженности.ИмяПредопределенныхДанных + "ДООстаток"] = ТаблицаОстатки[0][ТекСтрокаРазнесениеПоСудебнымРешениям.ТипЗадолженности.ИмяПредопределенныхДанных + "ДООстаток"] - ТекСтрокаРазнесениеПоСудебнымРешениям.Сумма;
		КонецЕсли;
	КонецЦикла;
	
	МассивОчередность = РасчетЗадолженностиВнесудебка.ПорядокСписанияВнесудебка();
	Для Каждого Элемент Из МассивОчередность Цикл
		Если ТаблицаОстатки[0][Элемент.ИмяПредопределенныхДанных + "ДООстаток"] > 0 И НеразнесеннаяСумма > 0 Тогда
			Разнесение = РазнесениеПоВнесудебке.Добавить();
			Разнесение.Займ = Займ;
			Разнесение.ТипЗадолженности = Элемент;
			Разнесение.Сумма = Мин(НеразнесеннаяСумма, ТаблицаОстатки[0][Элемент.ИмяПредопределенныхДанных + "ДООстаток"]);
			НеразнесеннаяСумма = НеразнесеннаяСумма - Разнесение.Сумма;
		КонецЕсли;
	КонецЦикла;

КонецФункции

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ВнешнийID <> "" Тогда
		Запрос = Новый Запрос("ВЫБРАТЬ Первые 1
		                      |	ПоступлениеПлатежа.Ссылка КАК Ссылка
		                      |ИЗ
		                      |	Документ.ПоступлениеПлатежа КАК ПоступлениеПлатежа
		                      |ГДЕ
		                      |	ПоступлениеПлатежа.ВнешнийID = &ВнешнийID
		                      |	И ПоступлениеПлатежа.Ссылка <> &Ссылка");	
		Запрос.УстановитьПараметр("ВнешнийID", ВнешнийID);
		Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
		Результат = Запрос.Выполнить().Выбрать();
		Если Результат.Следующий() Тогда
			Сообщить("Внешний идентификатор не является уникальным!");
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	//{{__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.ДолговыеОбязательства") Тогда
		// Заполнение шапки
		Займ = ДанныеЗаполнения.Ссылка;
		ВидПлательщика = Перечисления.ВидыПлательщика.Должник;
		Плательщик = Займ.Должник;
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.ИсполнительныеДокументы") Тогда
		// Заполнение шапки
		ИсполнительныйДокумент = ДанныеЗаполнения.Ссылка;
		Займ = ДанныеЗаполнения.Ссылка.Владелец;
		ВидПлательщика = Перечисления.ВидыПлательщика.СудебныйПристав;
	КонецЕсли;
	//}}__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
КонецПроцедуры

Процедура ПосчитатьОбщуюСуммуПоВнесудебке(Движение, РазнесениеПоВнесудебке) Экспорт
	Попытка
		Движение.СуммаДО = 0;
		Движение.СуммаРегл = 0;   
	Исключение  
		Возврат;
	КонецПопытки;
	
	Для Каждого ТекСтрокаРазнесениеПоВнесудебке Из РазнесениеПоВнесудебке Цикл
	
		Движение.СуммаДО = Движение.СуммаДО + Движение[ТекСтрокаРазнесениеПоВнесудебке.ТипЗадолженности.ИмяПредопределенныхДанных + "ДО"];
		Движение.СуммаРегл = Движение.СуммаРегл + Движение[ТекСтрокаРазнесениеПоВнесудебке.ТипЗадолженности.ИмяПредопределенныхДанных + "Регл"];
	
	КонецЦикла;

КонецПроцедуры