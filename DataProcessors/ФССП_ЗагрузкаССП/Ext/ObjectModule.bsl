
Перем ИмяСправочникаССП Экспорт ;
 
Процедура ЗагрузитьДанные(ПолеИсходнойТаблицы, ОтправлятьСообщенияОбОшибке) Экспорт
	ИмяСправочникаССП = бит_ФССП_Переопределяемый.ПолучитьИмяСправочникаСлужбыСудебныхПриставов();
	ВидРабочий = бит_ФССП_Переопределяемый.ПолучитьВидТелефонаРабочий();
	ВидФакс = бит_ФССП_Переопределяемый.ПолучитьВидТелефонаФакс();
	Для НомерСтроки = 2 По ПолеИсходнойТаблицы.ВысотаТаблицы Цикл
		
		КодРегионаЗнач = ПолеИсходнойТаблицы.Область("R" + Формат(НомерСтроки, "ЧГ=") + "C" + Формат(ЭтотОбъект.КодРегиона, "ЧГ=")).Текст;
		КодАгенстваЗнач = ПолеИсходнойТаблицы.Область("R" + Формат(НомерСтроки, "ЧГ=") + "C" + Формат(ЭтотОбъект.КодАгенства, "ЧГ=")).Текст;
		НаименованиеОСПЗнач = ПолеИсходнойТаблицы.Область("R" + Формат(НомерСтроки, "ЧГ=") + "C" + Формат(ЭтотОбъект.НаименованиеОСП, "ЧГ=")).Текст;
		ПочтовыйАдресЗнач = ПолеИсходнойТаблицы.Область("R" + Формат(НомерСтроки, "ЧГ=") + "C" + Формат(ЭтотОбъект.ПочтовыйАдрес, "ЧГ=")).Текст;
		РуководительЗнач = ПолеИсходнойТаблицы.Область("R" + Формат(НомерСтроки, "ЧГ=") + "C" + Формат(ЭтотОбъект.Руководитель, "ЧГ=")).Текст;
		РабочийТелефон1Знач = ПолеИсходнойТаблицы.Область("R" + Формат(НомерСтроки, "ЧГ=") + "C" + Формат(ЭтотОбъект.РабочийТелефон1, "ЧГ=")).Текст;
		ФаксЗнач = ПолеИсходнойТаблицы.Область("R" + Формат(НомерСтроки, "ЧГ=") + "C" + Формат(ЭтотОбъект.Факс, "ЧГ=")).Текст;
		РабочийТелефон2Знач = ПолеИсходнойТаблицы.Область("R" + Формат(НомерСтроки, "ЧГ=") + "C" + Формат(ЭтотОбъект.РабочийТелефон2, "ЧГ=")).Текст;
		РабочийТелефон3Знач = ПолеИсходнойТаблицы.Область("R" + Формат(НомерСтроки, "ЧГ=") + "C" + Формат(ЭтотОбъект.РабочийТелефон3, "ЧГ=")).Текст;
		ГрафикРаботыЗнач = ПолеИсходнойТаблицы.Область("R" + Формат(НомерСтроки, "ЧГ=") + "C" + Формат(ЭтотОбъект.ГрафикРаботы, "ЧГ=")).Текст;
		ТерриторияЗнач = ПолеИсходнойТаблицы.Область("R" + Формат(НомерСтроки, "ЧГ=") + "C" + Формат(ЭтотОбъект.Территория, "ЧГ=")).Текст;
		
		//РабочийТелефон1Знач = ПреобразоватьТелефон(РабочийТелефон1Знач);
		//РабочийТелефон2Знач = ПреобразоватьТелефон(РабочийТелефон2Знач);
		//РабочийТелефон3Знач = ПреобразоватьТелефон(РабочийТелефон3Знач);
		//ФаксЗнач = ПреобразоватьТелефон(ФаксЗнач);
		
		
		// Поиск Папки-региона, которая будет родителем для ОСП-элемента
		Если ЗначениеЗаполнено(КодРегионаЗнач) Тогда
			РегионПапка = ПоискПапкиРегионаОСП(КодРегионаЗнач);
		Иначе Прервать;
		КонецЕсли;
		
		Если РегионПапка = Справочники[ИмяСправочникаССП].ПустаяСсылка() Тогда
			РегионГруппаОбъект =Справочники[ИмяСправочникаССП].СоздатьГруппу();
			РегионГруппаОбъект.Наименование = КодРегионаЗнач;
			РегионГруппаОбъект.КодРегиона = КодРегионаЗнач;
			РегионГруппаОбъект.Записать();
			ПапкаРегиона = РегионГруппаОбъект.Ссылка;
		Иначе
			ПапкаРегион = РегионПапка;
		КонецЕсли;
		
	//	ОСП = ЕстьТакойОСП(КодРегионаЗнач,НаименованиеОСПЗнач);
		ОСП = ЕстьТакойОСП(КодРегионаЗнач,КодАгенстваЗнач);
		
		Если ОСП <> Справочники[ИмяСправочникаССП].ПустаяСсылка()  Тогда
				ОСП_Объект = ОСП.ПолучитьОбъект();
				//ОСП_Объект.КодРегиона = КодРегионаЗнач;
				//ОСП_Объект.КодТерриториальногоАгенства = КодАгенстваЗнач;
				ОСП_Объект.Наименование = НаименованиеОСПЗнач; 
				ОСП_Объект.НаименованиеПолное = НаименованиеОСПЗнач;
				ОСП_Объект.ПочтовыйАдрес = ПочтовыйАдресЗнач;
				ОСП_Объект.Руководитель = РуководительЗнач;
				ОСП_Объект.ГрафикРаботы = ГрафикРаботыЗнач;
				ОСП_Объект.ТерриторияОбслуживания = ТерриторияЗнач;
				
				//ОСП_Объект.ТелефоныИФаксы.Очистить();
				
				МассивРабочихТелефонов = Новый Массив;
				МассивРабочихТелефонов.Добавить(РабочийТелефон1Знач);
				МассивРабочихТелефонов.Добавить(РабочийТелефон2Знач);
				МассивРабочихТелефонов.Добавить(РабочийТелефон3Знач);
				МассивПоделенныхРабочихТелефонов = Новый Массив;
				
				Для Каждого строка из МассивРабочихТелефонов Цикл
					МассивПоделенныхРабочихТелефонов = РазбитьРабочиеТелефоны(строка);
					Для каждого тел из МассивПоделенныхРабочихТелефонов Цикл
						БезСимволов = ПреобразоватьТелефон(тел); 
						НайденнаяСтрока = ОСП_Объект.Телефоны.Найти(Прав(БезСимволов, 10), бит_ФССП_Переопределяемый.ПолучитьКолонкуТЧТелефоны());
						Если НайденнаяСтрока = Неопределено Тогда
							Телефон = ОСП_Объект.Телефоны.Добавить();
							бит_ФССП_Переопределяемый.ОбработатьНомерТелефона(Телефон,тел);
							//УправлениеКонтактнойИнформацией.РазбитьНомерТелефонаНаСоставляющие(Телефон,тел);
							Телефон.ВидТелефона = ВидРабочий;
						КонецЕсли;
					КонецЦикла;
				КонецЦикла;
				
				Если ЗначениеЗаполнено(ФаксЗнач) Тогда
					МассивФаксов = РазбитьРабочиеТелефоны(ФаксЗнач);
					Для Каждого номер из МассивФаксов Цикл
						БезСимволов = ПреобразоватьТелефон(номер); 
						НайденнаяСтрока = ОСП_Объект.Телефоны.Найти(Прав(БезСимволов, 10),бит_ФССП_Переопределяемый.ПолучитьКолонкуТЧТелефоны());
						Если НайденнаяСтрока = Неопределено Тогда
							ТелефонФакс = ОСП_Объект.Телефоны.Добавить();
							//ТелефонФакс.ВидТелефона = ВидФакс;
							бит_ФССП_Переопределяемый.ОбработатьНомерТелефона(ТелефонФакс,номер);
							ТелефонФакс.ВидТелефона = Справочники.ВидыТелефонов.Факс;
							//УправлениеКонтактнойИнформацией.РазбитьНомерТелефонаНаСоставляющие(ТелефонФакс,номер);
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;

				//Если ЗначениеЗаполнено(РабочийТелефон1Знач) Тогда
				//	МассивТелефонов = РазбитьРабочиеТелефоны(РабочийТелефон1Знач);
				//	Для Каждого номер из МассивТелефонов Цикл
				//		Телефон1 = ОСП_Объект.ТелефоныИФаксы.Добавить();
				//		УправлениеКонтактнойИнформацией.РазбитьНомерТелефонаНаСоставляющие(Телефон1,номер);
				//		Телефон1.ВидТелефона = Справочники.ВидыТелефонов.Рабочий;
				//	КонецЦикла;	
				//КонецЕсли;
				//
				//Если ЗначениеЗаполнено(РабочийТелефон2Знач) Тогда
				//	МассивТелефонов = РазбитьРабочиеТелефоны(РабочийТелефон2Знач);
				//	Для Каждого номер из МассивТелефонов Цикл
				//		Телефон2 = ОСП_Объект.ТелефоныИФаксы.Добавить();
				//		Телефон2.ВидТелефона = Справочники.ВидыТелефонов.Рабочий;
				//		УправлениеКонтактнойИнформацией.РазбитьНомерТелефонаНаСоставляющие(Телефон2,номер);
				//	КонецЦикла;
				//КонецЕсли;
				//
				//Если ЗначениеЗаполнено(РабочийТелефон3Знач) Тогда
				//	МассивТелефонов = РазбитьРабочиеТелефоны(РабочийТелефон3Знач);
				//	Для Каждого номер из МассивТелефонов Цикл
				//		Телефон3 = ОСП_Объект.ТелефоныИФаксы.Добавить();
				//		Телефон3.ВидТелефона = Справочники.ВидыТелефонов.Рабочий;
				//		УправлениеКонтактнойИнформацией.РазбитьНомерТелефонаНаСоставляющие(Телефон3,Номер);
				//	КонецЦикла;
				//КонецЕсли;
				//
				//Если ЗначениеЗаполнено(ФаксЗнач) Тогда
				//	МассивТелефонов = РазбитьРабочиеТелефоны(ФаксЗнач);
				//	Для Каждого номер из МассивТелефонов Цикл
				//		ТелефонФакс = ОСП_Объект.ТелефоныИФаксы.Добавить();
				//		ТелефонФакс.ВидТелефона = Справочники.ВидыТелефонов.Факс;
				//		УправлениеКонтактнойИнформацией.РазбитьНомерТелефонаНаСоставляющие(ТелефонФакс,номер);
				//	КонецЦикла;
				//КонецЕсли;
				
				ОСП_Объект.Записать();
			
		Иначе	
			//Теперь Создаем ОСП, где родитель - переменная ПапкаРегион 
			Если ЗначениеЗаполнено(КодРегионаЗнач) и ЗначениеЗаполнено(НаименованиеОСПЗнач) Тогда
				ОСП_Объект = Справочники[ИмяСправочникаССП].СоздатьЭлемент();
				ОСП_Объект.КодРегиона = КодРегионаЗнач;
				ОСП_Объект.КодТерриториальногоАгенства = КодАгенстваЗнач;
				ОСП_Объект.Наименование = НаименованиеОСПЗнач;
				ОСП_Объект.НаименованиеПолное = НаименованиеОСПЗнач;
				ОСП_Объект.ПочтовыйАдрес = ПочтовыйАдресЗнач;
				ОСП_Объект.Руководитель = РуководительЗнач;
				ОСП_Объект.ГрафикРаботы = ГрафикРаботыЗнач;
				ОСП_Объект.ТерриторияОбслуживания = ТерриторияЗнач;
				ОСП_Объект.Родитель = ПапкаРегион;
				
				//СтрокаРабочихТелефонов = РабочийТелефон1Знач+","+РабочийТелефон2Знач+","+ РабочийТелефон3Знач;
				
				Если ЗначениеЗаполнено(РабочийТелефон1Знач) Тогда
					СтрокаРабочихТелефонов = РабочийТелефон1Знач+",";
				КонецЕсли;
				Если ЗначениеЗаполнено(РабочийТелефон2Знач) Тогда
					СтрокаРабочихТелефонов = Строка(СтрокаРабочихТелефонов) +РабочийТелефон2Знач+",";
				КонецЕсли;
				Если ЗначениеЗаполнено(РабочийТелефон3Знач) Тогда
					СтрокаРабочихТелефонов = Строка(СтрокаРабочихТелефонов) +РабочийТелефон3Знач;
				КонецЕсли;
				
				Если ЗначениеЗаполнено(СтрокаРабочихТелефонов) Тогда
					МассивПоделенныхРабочихТелефонов = РазбитьРабочиеТелефоны(СтрокаРабочихТелефонов);
					ТелБезСимволов = Новый Массив;
					Для Каждого стр из МассивПоделенныхРабочихТелефонов цикл
						Если ЗначениеЗаполнено(стр) Тогда
							стр = ПреобразоватьТелефон(стр);
							ТелБезСимволов.Добавить(стр);
						КонецЕсли;
					КонецЦикла;
					ТелБезСимволов = УдалитьПовторяющиесяЭлементыМассива(ТелБезСимволов);
					
					Для каждого тел из ТелБезСимволов Цикл
						Телефон = ОСП_Объект.Телефоны.Добавить();
						Бит_ФССП_переопределяемый.ОбработатьНомерТелефона(Телефон,тел);
						//УправлениеКонтактнойИнформацией.РазбитьНомерТелефонаНаСоставляющие(Телефон,тел);
						Телефон.ВидТелефона = ВидРабочий;
					КонецЦикла;
				КонецЕсли;
				
				Если ЗначениеЗаполнено(ФаксЗнач) Тогда
					МассивФаксов = РазбитьРабочиеТелефоны(ФаксЗнач);
					МассивФаксов = УдалитьПовторяющиесяЭлементыМассива(МассивФаксов);
					Для Каждого номер из МассивФаксов Цикл
						ТелефонФакс = ОСП_Объект.Телефоны.Добавить();
						//ТелефонФакс.ВидТелефона = ВидФакс;
						Бит_ФССП_переопределяемый.ОбработатьНомерТелефона(ТелефонФакс,номер);
						ТелефонФакс.ВидТелефона = Справочники.ВидыТелефонов.Факс;
						//УправлениеКонтактнойИнформацией.РазбитьНомерТелефонаНаСоставляющие(ТелефонФакс,номер);
					КонецЦикла;
				КонецЕсли;
				
				
				ОСП_Объект.Записать();
			КонецЕсли;	
		КонецЕсли;		
	КонецЦикла;	
КонецПроцедуры

Процедура ЗаполнитьНомераСтолбцов() Экспорт
	ЭтотОбъект.КодРегиона = 1;
	ЭтотОбъект.КодАгенства = 2;
	ЭтотОбъект.НаименованиеОСП = 3;
	ЭтотОбъект.ПочтовыйАдрес = 4;
	ЭтотОбъект.Руководитель = 5;
	ЭтотОбъект.РабочийТелефон1 = 6;
	ЭтотОбъект.Факс = 7;
	ЭтотОбъект.РабочийТелефон2 = 8;
	ЭтотОбъект.РабочийТелефон3 = 9;
	ЭтотОбъект.ГрафикРаботы = 10;
	ЭтотОбъект.Территория = 11;
КонецПроцедуры

Функция ПоискПапкиРегионаОСП(НомерРегиона)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СлужбыСудебныхПриставов.Ссылка КАК Ссылка,
	               |	СлужбыСудебныхПриставов.КодРегиона КАК КодРегиона,
	               |	СлужбыСудебныхПриставов.Наименование КАК Наименование
	               |ИЗ
	               |	Справочник."+ИмяСправочникаССП+" КАК СлужбыСудебныхПриставов
	               |ГДЕ
	               |	СлужбыСудебныхПриставов.ЭтоГруппа = ИСТИНА
	               |	И СлужбыСудебныхПриставов.КодРегиона = &КодРегиона
	               |	И СлужбыСудебныхПриставов.ПометкаУдаления = ЛОЖЬ";
	
	Запрос.УстановитьПараметр("КодРегиона",Число(НомерРегиона));
	Результат = Запрос.Выполнить().Выбрать();
	
	Если Результат.Следующий() Тогда
		Возврат Результат.Ссылка;
	Иначе
		Возврат Справочники[ИмяСправочникаССП].ПустаяСсылка();
	КонецЕсли;	
	
КонецФункции	

Функция ЕстьТакойОСП(Регион,Название)
	Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ
	//               |	СлужбыСудебныхПриставов.Ссылка КАК Ссылка,
	//               |	СлужбыСудебныхПриставов.Наименование КАК Наименование,
	//               |	СлужбыСудебныхПриставов.КодРегиона КАК КодРегиона,
	//               |	СлужбыСудебныхПриставов.НаименованиеПолное КАК НаименованиеПолное
	//               |ИЗ
	//               |	Справочник."+ИмяСправочникаССП+" КАК СлужбыСудебныхПриставов
	//               |ГДЕ
	//               |	СлужбыСудебныхПриставов.ЭтоГруппа = ЛОЖЬ
	//               |	И СлужбыСудебныхПриставов.НаименованиеПолное = &Наименование
	//               |	И СлужбыСудебныхПриставов.КодРегиона = &КодРегиона
	//               |	И СлужбыСудебныхПриставов.ПометкаУдаления = ЛОЖЬ";
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	СлужбыСудебныхПриставов.Ссылка КАК Ссылка
	               |ИЗ
	               |	Справочник."+ИмяСправочникаССП+" КАК СлужбыСудебныхПриставов
	               |ГДЕ
	               |	СлужбыСудебныхПриставов.КодРегиона = &КодРегиона
	               |	И СлужбыСудебныхПриставов.КодТерриториальногоАгенства = &КодТерриториальногоАгенства
				   |	И СлужбыСудебныхПриставов.ЭтоГруппа = ЛОЖЬ
				   |	И СлужбыСудебныхПриставов.ПометкаУдаления = ЛОЖЬ";

	
	//Запрос.УстановитьПараметр("Наименование",Название);
	Запрос.УстановитьПараметр("КодРегиона",Число(Регион));
	Запрос.УстановитьПараметр("КодТерриториальногоАгенства",Название);
	
	Результат = Запрос.Выполнить().Выбрать();
	
	Если Результат.Следующий() Тогда
		Возврат Результат.Ссылка;
	Иначе
		Возврат Справочники[ИмяСправочникаССП].ПустаяСсылка();
	КонецЕсли;	
КонецФункции

Функция ПреобразоватьТелефон(СтрТелефон)
	УдалитьПробел = СтрЗаменить(СтрТелефон," ","");
	УдалитьСимвол = СтрЗаменить(УдалитьПробел,Символы.НПП,"");
	УдалитьСкобки = СтрЗаменить(УдалитьСимвол,"(","");
	УдалитьСкобки = СтрЗаменить(УдалитьСкобки,")","");
	УдалитьПлюс = СтрЗаменить(УдалитьСкобки,"+","");
	УдалитьРавно = СтрЗаменить(УдалитьПлюс,"=","");
	УдалитьТире = СтрЗаменить(УдалитьРавно,"-","");
	
	ДлинаСтроки = СтрДлина(УдалитьТире);
	СтрокаПроверки = "АБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЫЬЪЭЮЯABCDEFGHIJKLMNOPQRSTUVWXYZ";
	ТелефонМассив = Новый Массив;
	
	Для Счетчик = 1 по ДлинаСтроки Цикл
		ТелефонМассив.Добавить(Сред(УдалитьТире,Счетчик,1));
	КонецЦикла;	
	
	
	Для каждого символ из ТелефонМассив Цикл
		Если стрНайти(СтрокаПроверки,Символ,,,) = 0 Тогда
			СтрокаТелефонБезСимволов = Строка(СтрокаТелефонБезСимволов)+Символ;
		КонецЕсли;
	КонецЦикла;	
	
	Возврат СтрокаТелефонБезСимволов;
КонецФункции	

функция РазбитьРабочиеТелефоны(НомерТелефона) 
	ИсходнаяСтрока = Строка(НомерТелефона);
	//ИсходнаяСтрока = "999999;99999;666666;888888";
	Массив = Новый Массив;
	Пока Истина Цикл
		Поз = Найти(ИсходнаяСтрока, ",");
		Если Поз = 0 Тогда
			Телефон = ИсходнаяСтрока;
		Иначе
			Телефон = Лев(ИсходнаяСтрока,Поз-1);
		КонецЕсли;
		Массив.Добавить(Телефон);
		Если СтрДлина(Телефон) = СтрДлина(ИсходнаяСтрока) Тогда
			Прервать;
		КонецЕсли;
		
		ИсходнаяСтрока = Сред(ИсходнаяСтрока,СтрДлина(Телефон)+2);
	КонецЦикла;
	Возврат Массив;
КонецФункции

Функция УдалитьПовторяющиесяЭлементыМассива(Массив) Экспорт 
	
	
	ТекущийИндекс = 0; 
	
	
	ВсегоЭлементов = Массив.Количество(); 
	
	
	Пока ТекущийИндекс < ВсегоЭлементов Цикл 
		
		
		Индекс2 = ТекущийИндекс + 1; 
		
		
		Пока Индекс2 < ВсегоЭлементов Цикл 
			
			
			Если Массив[Индекс2] = Массив[ТекущийИндекс] Тогда 
				
				
				Массив.Удалить(Индекс2); 
				
				
				ВсегоЭлементов = ВсегоЭлементов - 1; 
				
				
			Иначе 
				
				
				Индекс2 = Индекс2 + 1; 
				
				
			КонецЕсли; 
			
			
		КонецЦикла; 
		
		
		ТекущийИндекс = ТекущийИндекс + 1; 
		
		
	КонецЦикла; 
	
	
	Возврат Массив; 
	
	
КонецФункции 

