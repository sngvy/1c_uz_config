#Область Интерфейс

// По каталогу и имени файла проверяет наличие файла в файловой системе
//  И если файл существует возвращает Общий объект Файл
//  Иначе бросает исключение
Функция НайтиФайл(ИмяФайла, Путь) Экспорт

	Каталог = Новый Файл(Путь);
	Если НЕ ЭтоКаталог(Каталог) Тогда
	
		ВызватьИсключение "Не верный путь к файлу: " + Путь;
	
	КонецЕсли;
	
	Файл = Новый Файл(Каталог.ПолноеИмя + ПолучитьРазделительПутиКлиента() + ИмяФайла);
	Если НЕ ЭтоФайл(Файл) Тогда
	
		ВызватьИсключение "Не верное имя файла: " + ИмяФайла;
	
	КонецЕсли;
	
	Возврат Файл;

КонецФункции // ()

// Добавляет разделитель к пути каталога, при необходимости
Функция СтандартныйВидКаталога(ПутьКаталога) Экспорт

	Файл = Новый Файл(ПутьКаталога);
	Возврат Файл.ПолноеИмя + ПолучитьРазделительПути();

КонецФункции // ()

// Возвращаем расширение файла с точкой
Функция ОпределитьРасширение(ПолноеИмяФайла) Экспорт

	Файл = Новый Файл(ПолноеИмяФайла);
	Возврат Файл.Расширение;

КонецФункции // ()

// Возвращает Фильтр для пользовательского выбора по типу файла
Функция ПолучитьФильтр(ТипФайла) Экспорт

	Если ТипЗнч(ТипФайла) <> Тип("ПеречислениеСсылка.ТипыФайловДляВыбора") Тогда
	
		ВызватьИсключение "Параметр должен быть - Перечисление ТипыФайловДляВыбора";
	
	КонецЕсли;
	
	Если ТипФайла = ПредопределенноеЗначение("Перечисление.ТипыФайловДляВыбора.ТабличныйДокумент") Тогда
	
		// |*.xls?;*.xlsx;*.ods| - отдельно прописан xlsx, тк иначе в Веб-Клиенте файлы видны, но не загружаются
		Возврат "Табличный документ(*.xls, *.xlsx, *.ods)|*.xls?;*.xlsx;*.ods|";
	
	ИначеЕсли ТипФайла = ПредопределенноеЗначение("Перечисление.ТипыФайловДляВыбора.ФайлБазыДанных") Тогда
	
		Возврат "Файл базы данных(*.dbf)|*.dbf|";
	
	Иначе
	
		Возврат "";
	
	КонецЕсли;

КонецФункции // ()

#КонецОбласти

Функция ЭтоКаталог(Каталог)

	Возврат Каталог.Существует() И Каталог.ЭтоКаталог();

КонецФункции // ()

Функция ЭтоФайл(Файл)

	Возврат Файл.Существует() И Файл.ЭтоФайл();

КонецФункции // ()
