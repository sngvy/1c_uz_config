
Процедура ДобавитьОбъекты(ПринимаемыеОбъекты) Экспорт

	Для каждого ПринимаемыйОбъект Из ПринимаемыеОбъекты Цикл
	
		СтрокаОбъекты = Объекты.Добавить();
		СтрокаОбъекты.Объект = ПринимаемыйОбъект;
	
	КонецЦикла;

КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	//ПроведениеСервер.ОчиститьДвиженияДокумента(ЭтотОбъект,, Отказ); 
	ЭтотОбъект.Движения.ОбъектыВРаботе.Записывать = Истина;
	ЭтотОбъект.Движения.СобытияПоОбъектам.Записывать = Истина;
	ЭтотОбъект.Движения.Записать();
	Отказ = ПроведениеСервер.ПроверитьВозможностьПроведенияНов(ЭтотОбъект);
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	ТаблицаДвиженийОбъекты = Неопределено;
	ТаблицаДвиженийСобытия = Неопределено;	
	
	Документы.ПринятиеВРаботуОрганизации.ИнициализироватьДанныеДокумента(ЭтотОбъект, ТаблицаДвиженийОбъекты, 
			ТаблицаДвиженийСобытия);
						
	ПроведениеСервер.ВыполнитьКонтрольДвиженийОбъектов(ТаблицаДвиженийОбъекты, 
			Перечисления.ВидКонтроля.Наличие, Отказ);
			
	Если Отказ Тогда 
		Возврат;
	КонецЕсли;
	
	Если Не Отказ И ТаблицаДвиженийОбъекты.Количество() > 0 Тогда
		ЭтотОбъект.Движения.ОбъектыВРаботе.Загрузить(ТаблицаДвиженийОбъекты);
		ЭтотОбъект.Движения.ОбъектыВРаботе.Записывать = Истина;
	КонецЕсли;		
			
	Если Не Отказ И ТаблицаДвиженийСобытия.Количество() > 0 Тогда
		ЭтотОбъект.Движения.СобытияПоОбъектам.Загрузить(ТаблицаДвиженийСобытия);
		ЭтотОбъект.Движения.СобытияПоОбъектам.Записывать = Истина;
	КонецЕсли;
	
	ЭтотОбъект.Движения.Записать();	
	
	//МассивОбъектов = ЭтотОбъект.Объекты.ВыгрузитьКолонку("Объект");
	//Отказ = НЕ ОбъектыСервер.СинхронизироватьРегистры_ОбъектыВРаботе(МассивОбъектов);
	//Если Отказ Тогда 
	//	Возврат;
	//КонецЕсли;
	
	Отказ = ПроведениеСервер.ПроверитьВозможностьПроведенияНов(ЭтотОбъект);
	
	Если Не Отказ Тогда
		//1) принятие в работу ответственных сотрудников (без проверки на уволенного, 
		//   т.к. это надо вычищать при отметке, что уволен)
		Запрос = Новый Запрос("ВЫБРАТЬ
		                      |	ПринятиеВРаботуОрганизацииОбъекты.Объект
		                      |ПОМЕСТИТЬ Таблица
		                      |ИЗ
		                      |	Документ.ПринятиеВРаботуОрганизации.Объекты КАК ПринятиеВРаботуОрганизацииОбъекты
		                      |ГДЕ
		                      |	ПринятиеВРаботуОрганизацииОбъекты.Ссылка = &Ссылка
		                      |;
		                      |
		                      |////////////////////////////////////////////////////////////////////////////////
		                      |ВЫБРАТЬ
		                      |	ОтветственныеСотрудники.Объект,
		                      |	ОтветственныеСотрудники.Пользователь КАК Пользователь
		                      |ПОМЕСТИТЬ ТаблицаОбъед
		                      |ИЗ
		                      |	Таблица КАК Таблица
		                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеСотрудники КАК ОтветственныеСотрудники
		                      |		ПО Таблица.Объект = ОтветственныеСотрудники.Объект
		                      |
		                      |ОБЪЕДИНИТЬ ВСЕ
		                      |
		                      |ВЫБРАТЬ
		                      |	СотрудникиВПомощь.Объект,
		                      |	СотрудникиВПомощь.Пользователь
		                      |ИЗ
		                      |	Таблица КАК Таблица
		                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СотрудникиВПомощь КАК СотрудникиВПомощь
		                      |		ПО Таблица.Объект = СотрудникиВПомощь.Объект
		                      |;
		                      |
		                      |////////////////////////////////////////////////////////////////////////////////
		                      |ВЫБРАТЬ
		                      |	ТаблицаОбъед.Объект,
		                      |	ТаблицаОбъед.Пользователь КАК Пользователь
		                      |ИЗ
		                      |	ТаблицаОбъед КАК ТаблицаОбъед
		                      |
		                      |СГРУППИРОВАТЬ ПО
		                      |	ТаблицаОбъед.Объект,
		                      |	ТаблицаОбъед.Пользователь
		                      |
		                      |УПОРЯДОЧИТЬ ПО
		                      |	Пользователь
		                      |;
		                      |
		                      |////////////////////////////////////////////////////////////////////////////////
		                      |ВЫБРАТЬ
		                      |	Таблица.Объект
		                      |ИЗ
		                      |	Таблица КАК Таблица
		                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеСотрудники КАК ОтветственныеСотрудники
		                      |		ПО Таблица.Объект = ОтветственныеСотрудники.Объект
		                      |			И (ОтветственныеСотрудники.ТипСотрудника = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыСотрудников.РуководительПодразделения))
		                      |ГДЕ
		                      |	ОтветственныеСотрудники.Объект ЕСТЬ NULL 
		                      |
		                      |СГРУППИРОВАТЬ ПО
		                      |	Таблица.Объект");
		Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
		Пакет = Запрос.ВыполнитьПакет();
		Результат = Пакет[2].Выбрать();
			
		ТекДок = Неопределено;
		Пока Результат.Следующий() Цикл			
			Если ТекДок <> Неопределено И ТекДок.СотрудникПринимающий <> Результат.Пользователь Тогда
				Попытка
					ТекДок.Записать(РежимЗаписиДокумента.Проведение);
				Исключение
					Сообщить(ОписаниеОшибки());
					Отказ = Истина;
					Возврат;
				КонецПопытки;
				ТекДок = Неопределено;	
			КонецЕсли;
			
			Если ТекДок = Неопределено Тогда
				ТекДок = Документы.АктПередачи.СоздатьДокумент();
				ТекДок.Дата = ЭтотОбъект.Дата + 1;
				ТекДок.Автор = ЭтотОбъект.Ссылка;
				ТекДок.Организация = ЭтотОбъект.Организация;
				ТекДок.ПодразделениеПринимающее = Результат.Пользователь.Подразделение;
				ТекДок.СотрудникПринимающий = Результат.Пользователь;
				ТекДок.НеНазначатьСотрудников = Истина;
			КонецЕсли;
			
			ТекДок.Объекты.Добавить().Объект = Результат.Объект;	
		КонецЦикла;
		
		Если ТекДок <> Неопределено Тогда
			Попытка
				ТекДок.Записать(РежимЗаписиДокумента.Проведение);
			Исключение
				Сообщить(ОписаниеОшибки());
				Отказ = Истина;
				Возврат;
			КонецПопытки;
		КонецЕсли;
		
		//2) назначение руководителя подразделения в случае отсутствия, на автора документа, если не Неопределено.	
		Если Не Пакет[3].Пустой() И ТипЗнч(ЭтотОбъект.Автор) = Тип("СправочникСсылка.Пользователи") Тогда
			ТекДок = Документы.АктПередачи.СоздатьДокумент();
			ТекДок.Дата = ЭтотОбъект.Дата + 1;
			ТекДок.Автор = ЭтотОбъект.Ссылка;
			ТекДок.Организация = ЭтотОбъект.Организация;
			ТекДок.ПодразделениеПринимающее = ЭтотОбъект.Автор.Подразделение;
			ТекДок.СотрудникПринимающий = ЭтотОбъект.Автор;
			// Лебедева 05082022
			//Если отключен учет по типа сотрудников, он не настраивался тогда по умолчанию предопределенный тип.  
			ТекДок.ТипСотрудникаПринимающего =?(ЗначениеЗаполнено(ЭтотОбъект.Автор.ТипСотрудника),ЭтотОбъект.Автор.ТипСотрудника,ПланыВидовХарактеристик.ТипыСотрудников.РуководительПодразделения);

			
			ТекДок.Объекты.Загрузить(Пакет[3].Выгрузить());			
			Попытка
				ТекДок.Записать(РежимЗаписиДокумента.Проведение);
			Исключение
				Сообщить(ОписаниеОшибки());
				Отказ = Истина;
				Возврат;
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;
	
	Блокировка = Новый БлокировкаДанных;
	Эл = Блокировка.Добавить("Константа.СинхронизацияДанныхЗапущена");
	Эл.Режим = РежимБлокировкиДанных.Исключительный;
	Блокировка.Заблокировать();
	Если Константы.СинхронизацияДанныхЗапущена.Получить() = Ложь Тогда
		Константы.СинхронизацияДанныхЗапущена.Установить(Истина);	
	КонецЕсли;
	//////Попытка 
	//////	ФоновыеЗадания.Выполнить("ОбъектыСервер.СинхронизироватьРегистры_ОбъектыВРаботе",,"02");
	//////Исключение
	//////	Сообщить(ОписаниеОшибки());
	//////КонецПопытки;

КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	ОбъектыСервер.ОбработкаЗаполненияДокументов(ЭтотОбъект, ДанныеЗаполнения, СтандартнаяОбработка);
КонецПроцедуры

