
Функция РазобратьСтроку(Знач Стр, Знач Значение, ОбъектВх, Массив = Неопределено) Экспорт
	Если Массив.Количество() = 1 и Массив[0] = "" Тогда
		Возврат "";
	Иначе
		Объект = ОбъектВх;	
		ЭтоОбычныйРеквизит = Истина;
		ЭтоДополнительноеСведение = Ложь;
		к = Массив.Количество();
		Для Индекс = 1 По к Цикл
			Стр = Массив[к - Индекс];
			
			Если Стр = "<ДС>" Тогда
				ЭтоОбычныйРеквизит = Ложь;
				ЭтоДополнительноеСведение = Истина;
				Продолжить;
			ИначеЕсли Стр = "<ДР>" Тогда
				ЭтоОбычныйРеквизит = Ложь;
				ЭтоДополнительноеСведение = Ложь;
				Продолжить;
			Иначе
				Если ЭтоОбычныйРеквизит Тогда
					Объект = Объект[Стр];
				Иначе
					Если ЭтоДополнительноеСведение Тогда
						Набор = РегистрыСведений.ДополнительныеСведения.СоздатьМенеджерЗаписи();
						Набор.Объект = Объект;
						Набор.Свойство = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоКоду(Стр);
						Набор.Прочитать();
						Если ЗначениеЗаполнено(Набор.Значение) Тогда
							Объект = Набор.Значение;
							ЭтоОбычныйРеквизит = Истина;
						Иначе 
							Объект = Неопределено;
							Прервать;
						КонецЕсли;					
					Иначе	
						Свойство = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоКоду(Стр);
						Строки = Объект.ДополнительныеРеквизиты.НайтиСтроки(Новый Структура("Свойство",Свойство));
						Попытка
							Объект = Строки[0].Значение;
							ЭтоОбычныйРеквизит = Истина;
						Исключение
							Объект = Неопределено;
							Прервать;
						КонецПопытки;					
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		Возврат Объект;
	КонецЕсли;
КонецФункции

Функция ВычислитьСтроку(Знач Стр, Знач Значение, Объект, МассивХр = Неопределено) Экспорт
	Если МассивХр <> Неопределено Тогда
		ДопРИС = Истина;
		КолВо = МассивХр.Количество() - 1;
		Попытка
			а = Число(МассивХр[КолВо]);
		Исключение
			ДопРИС = Ложь;
		КонецПопытки;
		
		
		Если ДопРИС Тогда
			Свойство = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоКоду(МассивХр[КолВо]);
			Если Свойство.ЭтоДополнительноеСведение Тогда
				Набор = РегистрыСведений.ДополнительныеСведения.СоздатьМенеджерЗаписи();
				Набор.Объект = Объект;
				Набор.Свойство = Свойство;
				Набор.Прочитать();
				Если ЗначениеЗаполнено(Набор.Значение) Тогда
					Результат = Неопределено;
					Стр = ";";		
					Для Номер = 0 По КолВо-1 Цикл
						Стр = "." + МассивХр[Номер] + Стр;
					КонецЦикла;
					Стр = "Результат = Набор.Значение" + Стр;
					
					Выполнить(Стр);
					Возврат Результат;
				Иначе
					Возврат "";
				КонецЕсли;
				
			Иначе
				Строки = Объект.ДополнительныеРеквизиты.НайтиСтроки(Новый Структура("Свойство", Свойство));
				Если Строки.Количество() > 0 И ЗначениеЗаполнено(Строки[0].Значение) Тогда
					Результат = Неопределено;
					Стр = ";";		
					Для Номер = 0 По КолВо-1 Цикл
						Стр = "." + МассивХр[Номер] + Стр;
					КонецЦикла;
					Стр = "Результат = Строки[0].Значение" + Стр;
					
					Выполнить(Стр);
					Возврат Результат;
				Иначе
					Возврат "";
				КонецЕсли;
			КонецЕсли;
			
		Иначе
			Результат = Неопределено;
			Стр = ";";		
			Для Каждого Элемент Из МассивХр Цикл
				Стр = "." + Элемент + Стр;
			КонецЦикла;
			Стр = "Результат = Объект" + Стр;
			
			Выполнить(Стр);
			Возврат Результат;
		КонецЕсли;
	КонецЕсли;
		
	                
	Если ТипЗнч(ОБъект.Ссылка) = Тип("СправочникСсылка.ДолговыеОбязательства") Тогда
		Должник = Объект.Должник;
		ДолговоеОбязательство = Объект;
		Организация = Объект.Организация;
	ИначеЕсли ТипЗнч(ОБъект.Ссылка) = Тип("СправочникСсылка.Контрагенты") Тогда
		Должник = Объект;
		ДолговоеОбязательство = "";
		Организация = Объект.Организация;
	КонецЕсли;
		
	//////////////////////////////////////////////////////////////////////
	//--Если Найти(Стр, "..") = 0 Тогда
	Если Найти(Стр, "..") = 0 И Стр <> "" Тогда
		Переменная1 = Неопределено;
		Выполнить("Переменная1 = " + Стр + ";");
		Возврат Переменная1;
	КонецЕсли;
	Стр = СокрЛП(Стр);
	Значение = СокрЛП(Значение);   
	Значение = Сред(Значение, 2, СтрДлина(Значение)-2);
	СписокСтрок = СтрЗаменить(Стр, ".", Символы.ПС);
	СписокЗначений = СтрЗаменить(Значение, "].[", Символы.ПС);
	//1 Находим пустую строку
	//2 собираем значения в переменную1
	//3 Получаем параметр 2
	//4 в зависимости от переменной1 выполянем запрос
	//5 Записываем результат в переменную 1
	//6 цикл по новой, до тех пор пока не дойдем до конца строки
	Индекс = 2;
	Запрос = Новый Запрос();
	Пока Индекс <= СтрЧислоСтрок(СписокСтрок) Цикл
		Если СтрПолучитьСтроку(СписокСтрок, Индекс) = "" Тогда
			Переменная1 = Неопределено;
			СтрокаНаВыполнение = "Переменная1 = " + СтрПолучитьСтроку(СписокСтрок, 1);
			Для Индекс2 = 2 По Индекс - 1 Цикл
				СтрокаНаВыполнение = СтрокаНаВыполнение + "." + СтрПолучитьСтроку(СписокСтрок, Индекс2)
			КонецЦикла;
			Выполнить(СтрокаНаВыполнение + ";");
			Переменная2 = СтрПолучитьСтроку(СписокЗначений, Индекс);
			Переменная2 = Лев(Переменная2, Найти(Переменная2, "-") - 1);
			Переменная2 = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоКоду(Переменная2);
			
			Если Переменная2.ЭтоДополнительноеСведение Тогда
				Запрос.Текст = "ВЫБРАТЬ
				               |	ДополнительныеСведения.Значение
				               |ИЗ
				               |	РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
				               |ГДЕ
				               |	ДополнительныеСведения.Объект = &Переменная1
				               |	И ДополнительныеСведения.Свойство = &Переменная2";
				Запрос.УстановитьПараметр("Переменная1", Переменная1);
				Запрос.УстановитьПараметр("Переменная2", Переменная2);
				Результат = Запрос.Выполнить().Выбрать();
				Если Результат.Следующий() Тогда
					Переменная1 = Результат.Значение;
					Если Строка(Переменная2.ТипЗначения) = "Строка" И 
							(Переменная2.ВидСтроки = Перечисления.ВидыТипаСтрока.Телефон ИЛИ
								Переменная2.ВидСтроки = Перечисления.ВидыТипаСтрока.Адрес) Тогда
						Переменная1 = СтрЗаменить(Переменная1, ";", Символы.ПС);
						Переменная1 = СтрПолучитьСтроку(Переменная1, 1);
					КонецЕсли;	
					НовыйСписокСтрок = "Переменная1";
					НовыйСписокЗначений = "";
					Для Индекс2 = Индекс + 2 По СтрЧислоСтрок(СписокСтрок) Цикл
						НовыйСписокСтрок = НовыйСписокСтрок + Символы.ПС + СтрПолучитьСтроку(СписокСтрок, Индекс2);
						НовыйСписокЗначений = НовыйСписокЗначений + Символы.ПС + СтрПолучитьСтроку(СписокЗначений, 
								Индекс2);
					КонецЦикла;
					СписокСтрок = НовыйСписокСтрок;
					СписокЗначений = НовыйСписокЗначений;
					Индекс = 2;
				Иначе
					Возврат "";
				КонецЕсли;
			Иначе
				Строки = Переменная1.ДополнительныеРеквизиты.НайтиСтроки(Новый Структура("Свойство", Переменная2));
				Если Строки.Количество() > 0 Тогда
					Переменная1 = Строки[0].Значение;
					Если Строка(Переменная2.ТипЗначения) = "Строка" И 
							(Переменная2.ВидСтроки = Перечисления.ВидыТипаСтрока.Телефон ИЛИ
								Переменная2.ВидСтроки = Перечисления.ВидыТипаСтрока.Адрес) Тогда
						Переменная1 = СтрЗаменить(Переменная1, ";", Символы.ПС);
						Переменная1 = СтрПолучитьСтроку(Переменная1, 1);
					КонецЕсли;	
					НовыйСписокСтрок = "Переменная1";
					НовыйСписокЗначений = "";
					Для Индекс2 = Индекс + 2 По СтрЧислоСтрок(СписокСтрок) Цикл
						НовыйСписокСтрок = НовыйСписокСтрок + Символы.ПС + СтрПолучитьСтроку(СписокСтрок, Индекс2);
						НовыйСписокЗначений = НовыйСписокЗначений + Символы.ПС + СтрПолучитьСтроку(СписокЗначений, Индекс2);
					КонецЦикла;
					СписокСтрок = НовыйСписокСтрок;
					СписокЗначений = НовыйСписокЗначений;
					Индекс = 2;
				Иначе
					Возврат "";
				КонецЕсли;
			КонецЕсли;			
		Иначе
			Индекс = Индекс + 1;
		КонецЕсли;
	КонецЦикла;
	
	Если СписокСтрок <> "" Тогда
		СтрокаНаВыполнение = СокрЛП(СписокСтрок);
		СтрокаНаВыполнение = СтрЗаменить(СтрокаНаВыполнение, Символы.ПС, ".");
		Выполнить("Переменная1 = " + СтрокаНаВыполнение + ";");
	КонецЕсли;
	Возврат Переменная1;
КонецФункции

Функция ВычислитьФункцию(Знач Запрос, Знач ОбъектВх, Знач Значение = Неопределено) Экспорт
	Попытка
		Выполнить(Запрос);
	Исключение
		Возврат Неопределено;
	КонецПопытки;
	Возврат Значение;
КонецФункции

Процедура ВыполнитьПроизвольноеДействие(Действие) Экспорт
	Выполнить(Действие);
КонецПроцедуры

Функция ОтправитьEMail(Почта, Учетка, ШаблонАИ, ТекстПисьма, Объект, МассивПолучателей,
		ОтказДействия) Экспорт	
			
	Письмо = Новый ИнтернетПочтовоеСообщение();
	//Письмо.Кодировка = "utf-8";
	Письмо.Кодировка = "windows-1251";
	Письмо.Тема = ШаблонАИ.ЗаголовокEMail; //Тема; 
	
	ТекстПисьма =?(ЗначениеЗаполнено(ШаблонАИ.ШаблонHTML), ЗаполнитьHTMLШаблон(ШаблонАИ, Объект),ТекстПисьма);
	Текст = Письмо.Тексты.Добавить(ТекстПисьма);
	Текст.ТипТекста = ТипТекстаПочтовогоСообщения.HTML;
	//Текст.Кодировка = "utf-8";
	Текст.Кодировка = "windows-1251";
	
	Письмо.ИмяОтправителя = Учетка.ОтветственныйЗаОбработкуПисем.Наименование; //Отправитель.Наименование;
	Письмо.Отправитель.Адрес = Учетка.АдресЭлектроннойПочты; //УчетнаяЗапись.АдресЭлектроннойПочты;
	Письмо.Отправитель.ОтображаемоеИмя = Учетка.ОтветственныйЗаОбработкуПисем.Наименование; //Отправитель;
	Письмо.ОбратныйАдрес.Добавить(Учетка.АдресЭлектроннойПочты); //УчетнаяЗапись.АдресЭлектроннойПочты);
	Письмо.УведомитьОДоставке = ШаблонАИ.УведомитьОДоставке;
	
	//Копия на адресе отправления
	Если Учетка.ОставлятьКопииСообщенийнаСервере Тогда
		Письмо.Копии.Добавить(Учетка.АдресЭлектроннойПочты);
	КонецЕсли;	


	
	Если Письмо.УведомитьОДоставке Тогда 
		Письмо.АдресаУведомленияОПрочтении.Добавить(Учетка.АдресЭлектроннойПочты);
	КонецЕсли;
	Письмо.УведомитьОПрочтении = ШаблонАИ.УведомитьОПрочтении;
	Если Письмо.УведомитьОПрочтении Тогда
		Письмо.АдресаУведомленияОПрочтении.Добавить(Учетка.АдресЭлектроннойПочты);
	КонецЕсли;
	Для Каждого Элемент Из МассивПолучателей Цикл
		Письмо.Получатели.Добавить(Элемент); //Получатель);
	КонецЦикла;
	
	НаименованиеВложения = "";
	Для Каждого ФайлОтправки Из ШаблонАИ.ПрикрепляемыеФайлы Цикл	
		Вложение = ПолучитьДанныеДляВложенияВПисьмо(Объект, ФайлОтправки.Свойство, НаименованиеВложения);
		Если Вложение <> Неопределено Тогда
			//ПроверкаФайл = Новый Файл(ФайлОтправки);
			//Если ПроверкаФайл.Существует() Тогда
			//	Письмо.Вложения.Добавить(ПроверкаФайл.ПолноеИмя, "Файл предложения от Кампании");  				
			//КонецЕсли;
			Письмо.Вложения.Добавить(Вложение, НаименованиеВложения);
		КонецЕсли;
	КонецЦикла; 	   
	
	Для Каждого ТипФайла Из ШаблонАИ.ТипыПрикрепляемыхФайлов Цикл
		Если Константы.ХранитьПрикрепляемыеФайлыНаСервере.Получить() Тогда
			
		Иначе
			Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
			                      |	ПрикрепитьФайлыФайлы.Хранилище,
			                      |	ПрикрепитьФайлыФайлы.УИД,
			                      |	ПрикрепитьФайлыФайлы.Путь
			                      |ИЗ
			                      |	Документ.ПрикрепитьФайлы.Файлы КАК ПрикрепитьФайлыФайлы
			                      |ГДЕ
			                      |	ПрикрепитьФайлыФайлы.ТипФайла = &ТипФайла
			                      |	И ПрикрепитьФайлыФайлы.Ссылка.Объект = &Объект
			                      |
			                      |УПОРЯДОЧИТЬ ПО
			                      |	ПрикрепитьФайлыФайлы.Ссылка.Дата УБЫВ");	
			Запрос.УстановитьПараметр("Объект", Объект);
			Запрос.УстановитьПараметр("ТипФайла", ТипФайла.Тип);
			Результат = Запрос.Выполнить().Выбрать();
			Если Результат.Следующий() Тогда
				ДвДанные = Результат.Хранилище.Получить();
				Расширение = Прав(Результат.Путь, СтрДлина(Результат.Путь) - Найти(Результат.Путь, ".") + 1);
				Письмо.Вложения.Добавить(ДвДанные, ТипФайла.Тип.Наименование + Расширение);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
		
	Попытка
		Почта.Послать(Письмо);
		Возврат Истина;
	Исключение
		ОтказДействия = Истина;
		Сообщить(ОписаниеОшибки());
		Возврат Ложь;
	КонецПопытки;
КонецФункции


Функция СоздатьОбъектПочта(Учетка) Экспорт
    Профиль = Справочники.УчетныеЗаписиЭлектроннойПочты.ПолучитьПрофильИнтернетПочтовоеПодключения(Учетка);
	
	Почта = Новый ИнтернетПочта();
	Попытка
		Почта.Подключиться(Профиль);
	Исключение
		Почта = Неопределено;
	КонецПопытки;
	
	Возврат Почта;
КонецФункции

Функция ЗаполнитьHTMLШаблон(ШаблонАИ, Объект) Экспорт
	Текст = ШаблонАИ.ШаблонHTML.ТекстШаблона;
	Для Каждого Элемент Из ШаблонАИ.Настройка Цикл
		Если Элемент.Используется Тогда
			Если Элемент.ТипПоля = ПредопределенноеЗначение("Перечисление.ТипыЗначенийДляШаблонов.Текст") Тогда 
				СтрокаЗамены = Элемент.Значение;
			ИначеЕсли Элемент.ТипПоля = ПредопределенноеЗначение("Перечисление.ТипыЗначенийДляШаблонов.Реквизит") Тогда
				Массив = УЭДСервер.ПолучитьМассивИзСтроки(Элемент.СтрокаХранилище);
				СтрокаЗамены = РазобратьСтроку(Элемент.СтрокаДляПолученияЗначения, Элемент.Значение, Объект, 
						Массив);	
			КонецЕсли; 		
			
			Если Не Элемент.Функция.Пустая() Тогда
				СтрокаЗамены = Справочники.ШаблоныТекстаДляАвтоинформирования.ВычислитьФункцию(Элемент.Функция.Функция, 
						Объект, СтрокаЗамены);
			КонецЕсли;
			
			Текст = СтрЗаменить(Текст, Элемент.Поле, СтрокаЗамены);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Элемент Из ШаблонАИ.Таблицы Цикл
		//Этап 1: Проверки
		Если Не Элемент.Используется Тогда
			Продолжить;
		КонецЕсли;
		
		СписокКолонок = Новый СписокЗначений();
		СтрокиКолонки = ШаблонАИ.Колонки.НайтиСтроки(Новый Структура("Идентификатор", Элемент.Идентификатор));
		Для Каждого ЭлементКолонка Из СтрокиКолонки Цикл
			Если ЗначениеЗаполнено(ЭлементКолонка.Поле) Тогда
				СписокКолонок.Добавить(ЭлементКолонка.Колонка, ЭлементКолонка.Поле);	
		    КонецЕсли;
		КонецЦикла;
			
		Если СписокКолонок.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		//Этап 2: Вычисление строк
		НомерТега = Найти(Текст, СписокКолонок[0].Представление);
		
		Подстрока = Лев(Текст, НомерТега);	
		НомерНачало = 0;
		Номер = Найти(Подстрока, "<tr ");
		Пока Номер > 0 Цикл
			НомерНачало = НомерНачало + Номер;
			Подстрока = Сред(Подстрока, Номер + 1);
			Номер = Найти(Подстрока, "<tr ");
		КонецЦикла;
		
		Подстрока = Сред(Текст, НомерТега);
		НомерКонец = НомерТега + Найти(Подстрока, "</tr>") + 4;
		
		ТекстНачало = Лев(Текст, НомерНачало - 1);
		ТекстСередина = Сред(Текст, НомерНачало, НомерКонец - НомерНачало) + Символы.ПС;
		ТекстКонец = Сред(Текст, НомерКонец);
		
		ТекстСерединаНовая = "";
        ТекстСерединаРабочая = "";
		ЗначениеКолонки = "";
		
		//Этап 3: Эаполнение таблицы
		ПолученноеЗначение = Справочники.ШаблоныТекстаДляАвтоинформирования.ВычислитьФункцию(Элемент.Функция.Функция,
				Объект);
		Если ПолученноеЗначение = Неопределено Тогда
			Сообщить("Ошибка при вычислении функции """ + Элемент.Функция.Наименование + """!");		
			Продолжить;		
		КонецЕсли;			
				
		Если ТипЗнч(ПолученноеЗначение) = Тип("Структура") Тогда
			Для Каждого ЭлементКолонка Из СписокКолонок Цикл
				Если ПолученноеЗначение.Свойство(ЭлементКолонка.Значение, ЗначениеКолонки) Тогда
					Текст = СтрЗаменить(Текст, ЭлементКолонка.Представление, ЗначениеКолонки);
				КонецЕсли;
			КонецЦикла;
			Продолжить;
			
		ИначеЕсли ТипЗнч(ПолученноеЗначение) = Тип("Массив") Тогда
			Если ПолученноеЗначение.Количество() > 0 И ТипЗнч(ПолученноеЗначение[0]) = Тип("Структура") Тогда
				Для Каждого ЭлементЭначение Из ПолученноеЗначение Цикл
					ТекстСерединаРабочая = ТекстСередина;
					Для Каждого ЭлементКолонка Из СписокКолонок Цикл
						Если ЭлементЭначение.Свойство(ЭлементКолонка.Значение, ЗначениеКолонки) Тогда
							ТекстСерединаРабочая = СтрЗаменить(ТекстСерединаРабочая, ЭлементКолонка.Представление, ЗначениеКолонки);
						КонецЕсли;
					КонецЦикла;
					ТекстСерединаНовая = ТекстСерединаНовая + ТекстСерединаРабочая; 		
				КонецЦикла;	
			Иначе //Простое значение
				Для Каждого ЭлементЭначение Из ПолученноеЗначение Цикл
					ТекстСерединаРабочая = СтрЗаменить(ТекстСередина, СписокКолонок[0].Представление, ЭлементЭначение);
					ТекстСерединаНовая = ТекстСерединаНовая + ТекстСерединаРабочая;
				КонецЦикла;				
			КонецЕсли;
			
		Иначе //Таблица
			Для Каждого ЭлементЭначение Из ПолученноеЗначение Цикл
				ТекстСерединаРабочая = ТекстСередина;
				Для Каждого ЭлементКолонка Из СписокКолонок Цикл
					Попытка
						Выполнить("ЗначениеКолонки = ЭлементЭначение." + ЭлементКолонка.Значение + ";");
					Исключение
						ЗначениеКолонки = Неопределено;
					КонецПопытки;
					
					Если ЗначениеКолонки <> Неопределено Тогда
						ТекстСерединаРабочая = СтрЗаменить(ТекстСерединаРабочая, ЭлементКолонка.Представление, ЗначениеКолонки);
					КонецЕсли;
				КонецЦикла;
				ТекстСерединаНовая = ТекстСерединаНовая + ТекстСерединаРабочая;
			КонецЦикла;
		КонецЕсли;
		
		Текст = ТекстНачало + ТекстСерединаНовая + ТекстКонец;
	КонецЦикла;
	
	//Текст = СтрЗаменить(Текст, Символы.НПП, "");	
	Возврат Текст;
КонецФункции

Функция ПолучитьДанныеДляВложенияВПисьмо(Объект, Свойство, НаименованиеВложения)
	Если Свойство.ЭтоДополнительноеСведение Тогда
		Запрос = Новый Запрос("ВЫБРАТЬ
		               |	ДополнительныеСведения.Значение КАК Значение
		               |ИЗ
		               |	РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
		               |ГДЕ
		               |	ДополнительныеСведения.Свойство = &Свойство
		               |	И ДополнительныеСведения.Объект = &Объект");
		Запрос.УстановитьПараметр("Свойство", Свойство);
		Запрос.УстановитьПараметр("Объект", Объект);
		
		Результат = Запрос.Выполнить().Выбрать();
		РезультатФункции = Неопределено;
		Если Результат.Следующий() Тогда
			Файл = Новый Файл(Результат.Значение);
			Если Файл.Существует() И Файл.ЭтоФайл() Тогда
				НаименованиеВложения = Файл.Имя; 
				РезультатФункции = Результат.Значение;
			КонецЕсли;
		КонецЕсли;
		Возврат РезультатФункции;
		
	Иначе
		Строки = Объект.ДополнительныеРеквизиты.НайтиСтроки(Новый Структура("Свойство", Свойство));
		РезультатФункции = Неопределено;
		Если Строки.Количество() > 0 Тогда
			Файл = Новый Файл(Строки[0].Значение);
			Если Файл.Существует() И Файл.ЭтоФайл() Тогда
				НаименованиеВложения = Файл.Имя; 
				РезультатФункции = Строки[0].Значение;
			КонецЕсли;
		КонецЕсли;
		Возврат РезультатФункции;
	КонецЕсли;		
КонецФункции
