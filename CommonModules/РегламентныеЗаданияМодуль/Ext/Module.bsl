
Процедура ОбработкаОчередиЗаданий() Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 50
	                      |	ОчередьЗаданий.Документ,
	                      |	ОчередьЗаданий.Проведение,
	                      |	ОчередьЗаданий.УИД_ФЗ КАК УИД_ФЗ,
	                      |	ВЫБОР ТИПЗНАЧЕНИЯ(ОчередьЗаданий.Документ)
	                      |		КОГДА ТИП(Документ.ПринятиеВРаботуОрганизации)
	                      |			ТОГДА 2
	                      |		КОГДА ТИП(Документ.ЗавершениеРаботыОрганизации)
	                      |			ТОГДА 2
	                      |		КОГДА ТИП(Документ.АктПередачи)
	                      |			ТОГДА 2
	                      |		КОГДА ТИП(Документ.ЗагрузкаЗадолженности)
	                      |			ТОГДА 1
	                      |		КОГДА ТИП(Документ.ПоступлениеПлатежей)
	                      |			ТОГДА 1
	                      |		КОГДА ТИП(Документ.АктуализацияЗадолженности)
	                      |			ТОГДА 1
	                      |		ИНАЧЕ 0
	                      |	КОНЕЦ КАК Приоритет
	                      |ИЗ
	                      |	РегистрСведений.ОчередьЗаданий КАК ОчередьЗаданий
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	УИД_ФЗ УБЫВ,
	                      |	Приоритет УБЫВ,
	                      |	ОчередьЗаданий.Документ.Дата");
	Результат = Запрос.Выполнить().Выбрать();
	КолВоЗапущенных = 0;
	КолВоМакс = Константы.МаксимальноеКоличествоПотоков.Получить();
	Пока Результат.Следующий() Цикл
		Если ЗначениеЗаполнено(Результат.УИД_ФЗ) Тогда
			ФЗ = ФоновыеЗадания.НайтиПоУникальномуИдентификатору(Результат.УИД_ФЗ);
			Если ФЗ = Неопределено ИЛИ ФЗ.Состояние = СостояниеФоновогоЗадания.ЗавершеноАварийно ИЛИ
					ФЗ.Состояние = СостояниеФоновогоЗадания.Отменено Тогда
				Набор = РегистрыСведений.ОчередьЗаданий.СоздатьМенеджерЗаписи();
				Набор.Документ = Результат.Документ;
				Набор.Прочитать();
				Если ЗначениеЗаполнено(Набор.Документ) Тогда
					Набор.УИД_ФЗ = Неопределено;
					Набор.Записать();
				КонецЕсли;	
			ИначеЕсли ФЗ.Состояние = СостояниеФоновогоЗадания.Активно Тогда
				КолВоЗапущенных = КолВоЗапущенных + 1;
			ИначеЕсли ФЗ.Состояние = СостояниеФоновогоЗадания.Завершено Тогда
				Набор = РегистрыСведений.ОчередьЗаданий.СоздатьМенеджерЗаписи();
				Набор.Документ = Результат.Документ;
				Набор.Прочитать();
				Если ЗначениеЗаполнено(Набор.Документ) Тогда
					Набор.Удалить();
				КонецЕсли;
			КонецЕсли;
		ИначеЕсли КолВоЗапущенных < КолВоМакс Тогда
			МассивПараметров = Новый Массив();
			МассивПараметров.Добавить(Результат.Документ);
			МассивПараметров.Добавить(Результат.Проведение);
			
			Если БазаФайловая() Тогда
				УИД = 1;
			    РегламентныеЗаданияМодуль.ОбработкаФоновогоЗадания(МассивПараметров[0], МассивПараметров[1]);
			Иначе
				УИД = ФоновыеЗадания.Выполнить("РегламентныеЗаданияМодуль.ОбработкаФоновогоЗадания", МассивПараметров);	
			КонецЕсли;
			
			Набор = РегистрыСведений.ОчередьЗаданий.СоздатьМенеджерЗаписи();
			Набор.Документ = Результат.Документ;  	
			Набор.Прочитать();
			Если ЗначениеЗаполнено(Набор.Документ) Тогда
				Набор.УИД_ФЗ = УИД.УникальныйИдентификатор;
				Набор.Записать();
			КонецЕсли;
			
			КолВоЗапущенных = КолВоЗапущенных + 1;
		Иначе
			Прервать;
		КонецЕсли;	
	КонецЦикла;
КонецПроцедуры

Процедура ОбработкаФоновогоЗадания(Документ, Проведение) Экспорт
	НачатьТранзакцию();
	Попытка
		Отказ = Ложь;
		Документы[Документ.Метаданные().Имя].ОбработкаПроведенияОбщая(Отказ, Проведение, Документ);
		Набор = РегистрыСведений.ОчередьЗаданий.СоздатьМенеджерЗаписи();
		Набор.Документ = Документ;
		Набор.Прочитать();
		Набор.Удалить();
		
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение ОписаниеОшибки();
	КонецПопытки;
КонецПроцедуры

Функция БазаФайловая()
    Возврат Найти(Врег(СтрокаСоединенияИнформационнойБазы()), "FILE=") = 1;     
КонецФункции
