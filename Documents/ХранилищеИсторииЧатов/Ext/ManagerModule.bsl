#Область ПрограммныйИнтерфейс

Функция Создать() Экспорт

	Элемент = СоздатьДокумент()
		.НастройкиПоУмолчанию()
		.НастройкаСохранения(
			Константы.НастройкаИсторииЧатовПоУмолчанию.Получить());
	
	Возврат Элемент;

КонецФункции // ()

Процедура Сохранить(Сообщение) Экспорт

	Создать()
		.Сообщение(Сообщение)
		.Сохранить();

КонецПроцедуры

Процедура ДобавитьОтправителя(Хранитель, КлиентДляЗаполнения) Экспорт

	Хранитель.ПолучитьОбъект()
		.Клиент(КлиентДляЗаполнения)
		.Перезаписать();

КонецПроцедуры

Функция ПолучитьНеопознаных(Мессенджер, НастройкаСохранения) Экспорт

	МодульХранения = УправлениеМетаданными
		.МенеджерОбъектаПоСсылке(НастройкаСохранения);
	
	КаталогСообщения = НастройкаСохранения.ХранилищеФайлов;
	
	Возврат МодульХранения.ПолучитьНеопознаных(КаталогСообщения, Мессенджер);
	
КонецФункции // ()

Функция ПолучитьИсториюЗаДень(Клиент, ДеньЗагрузки = Неопределено, Количество = Неопределено) Экспорт

	Хранитель = РегистрыСведений.ХранилищеИсторииЧатов;
	
	Если ДеньЗагрузки = Неопределено Тогда
	
		ДеньЗагрузки = ТекущаяДатаСеанса();
	
	КонецЕсли;
	
	Фильтр = Хранитель.НовыйФильтр();
	Фильтр.Вставить("НачалоПериода", НачалоДня(ДеньЗагрузки));
	Фильтр.Вставить("КонецПериода", КонецДня(ДеньЗагрузки));
	Фильтр.Вставить("Количество", Количество);
	
	Возврат ПолучитьИсториюПоФильтру(Хранитель, Клиент, Фильтр);

КонецФункции // ()

Функция ПолучитьИсториюЗаПериод(Клиент, НачалоЗагрузки, КонецЗагрузки, Количество = Неопределено) Экспорт

	Хранитель = РегистрыСведений.ХранилищеИсторииЧатов;
	
	Фильтр = Хранитель.НовыйФильтр();
	Фильтр.Вставить("НачалоПериода", НачалоДня(НачалоЗагрузки));
	Фильтр.Вставить("КонецПериода", КонецДня(КонецЗагрузки));
	Фильтр.Вставить("Количество", Количество);
	
	Возврат ПолучитьИсториюПоФильтру(Хранитель, Клиент, Фильтр);

КонецФункции // ()

#КонецОбласти

#Область ОбработчикиСобытий



#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьИсториюПоФильтру(Хранитель, Клиент, Фильтр)

	Записи = Хранитель.История(Клиент, Фильтр);
	
	Если ЗначениеЗаполнено(Записи) Тогда
	
		Записи.Сортировать("Дата");
	
	КонецЕсли;
	
	История = СообщениеИзЧата.НоваяИстория();
	
	Для каждого Запись Из Записи Цикл
	
		Настройка = Запись.НастройкаСохранения;
		ДанныеСообщения = Настройка.ПолучитьОбъект()
			.ПолучитьДанныеСообщения(
				Запись.Мессенджер,
				УправлениеМетаданными.МенеджерОбъектаПоСсылке(Клиент)
					.ВладелецМесенджера(Клиент),
				Запись.Дата);
		
		СообщениеИзЧата.ДобавитьСообщение(История, ДанныеСообщения);
	
	КонецЦикла;
	
	Возврат История;

КонецФункции // ()

Процедура ДобавитьЗаписи(Приемник, Источник)

	Для каждого ДобавляемаяЗаипсь Из Источник Цикл
	
		Запись = Приемник.Добавить();
		ЗаполнитьЗначенияСвойств(Запись, ДобавляемаяЗаипсь);
	
	КонецЦикла;

КонецПроцедуры

#КонецОбласти