////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ИспользуютсяКлассификаторы = УправлениеКонтактнойИнформациейКлассификаторы.ИспользуютсяКлассификаторы();	
	Если Не ИспользуютсяКлассификаторы Тогда
		Элементы.Классификатор.Видимость = Ложь;
	КонецЕсли;
	
	ПрочитатьЗначенияПараметров();	
	ПредставлениеСВидом = НаименованиеВида + ": " + Представление;
	Заголовок = НаименованиеВида;	
	СтранаРоссия = Справочники.СтраныМира.Россия;	
	Если Параметры.АдресТолькоРоссийский Тогда
		Страна = СтранаРоссия;
		Элементы.Страна.Доступность = Ложь;	
	Иначе		
		Если Не ПустаяСтрока(КодСтраны) ИЛИ Не ПустаяСтрока(НаименованиеСтраны) Тогда
			// если задан код или наименование страны, то найдем страну
			НайтиСтрануПоКодуИлиНаименованию();
		Иначе
			Страна = СтранаРоссия;
		КонецЕсли;
	КонецЕсли;
	
	АвтоЗаголовок = Истина;
	Если НЕ ПустаяСтрока(Параметры.Заголовок) Тогда
		АвтоЗаголовок = Ложь;
		Заголовок = Параметры.Заголовок;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПроверитьТипыПолей();
	ПроверитьКнопкиВыбора();	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ,ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Модифицированность И Не БылиНажатыКнопкиЗакрытия Тогда
		Если Не ЗавершениеРаботы = Истина Тогда
			СохранитьИзменения();
		Иначе
			Отказ = Истина;
			ТекстПредупреждения = "Закрытие формы приведёт к потере несохранённых данных!";
			ПодключитьОбработчикОжидания("СохранитьИзменения", 1, Истина);
		КонецЕсли;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьИзменения() Экспорт
	Если Модифицированность И Не БылиНажатыКнопкиЗакрытия Тогда
		
		ТекстВопроса = НСтр("ru = 'Даные были изменены. Отказаться от изменений?'");
		
		Ответ = Вопрос(ТекстВопроса,  РежимДиалогаВопрос.ОКОтмена);
		
		Если Ответ = КодВозвратаДиалога.Отмена Тогда
			Отказ = Истина;
		КонецЕсли;
		
	КонецЕсли;
КонецПроцедуры
	




////////////////////////////////////////////////////////////////////////////////
// СТРАНА

&НаКлиенте
Процедура СтранаПриИзменении(Элемент)
	
	Если Не ЗначениеЗаполнено(Страна) Тогда
		Страна = СтранаРоссия;
	КонецЕсли;
	
	ЗаполнитьКодИНаименованиеСтраны();
	
	СформироватьПредставление();
	ПроверитьКнопкиВыбора();
	
КонецПроцедуры



////////////////////////////////////////////////////////////////////////////////
// ИНДЕКС

&НаКлиенте
Процедура ИндексПриИзменении(Элемент)
	
	Если (Страна = СтранаРоссия) И ИспользуютсяКлассификаторы Тогда
		Если Не ПустаяСтрока(Индекс) И (СтрДлина(Индекс) = 6) И ПустаяСтрока(Регион) И ПустаяСтрока(Район) И ПустаяСтрока(Город) И ПустаяСтрока(НаселенныйПункт) И ПустаяСтрока(Улица) Тогда
			ПоИндексуВосстановитьДанные();
		КонецЕсли;
	КонецЕсли;
	
	СформироватьПредставление();

КонецПроцедуры

&НаКлиенте
Процедура ПоИндексуВосстановитьДанные()
	
	Результат = УправлениеКонтактнойИнформациейКлассификаторы.НайтиЗаписиВАКПоИндексу(Индекс);
	
	Найдено = Результат.Количество;
	
	Если Найдено = 0 Тогда
		Возврат;
		
	ИначеЕсли Найдено > 1 Тогда
		// откроем форму выбора
		
		ПараметрыФормыПоиска = Новый Структура;
		ПараметрыФормыПоиска.Вставить("НайденныйРегион", Результат.НайденныйРегион);
		ПараметрыФормыПоиска.Вставить("НайденныйРайон",  Результат.НайденныйРайон);
		ПараметрыФормыПоиска.Вставить("Индекс", Индекс);
		
		//Чуров
		КодАдресногоЭлемента = ОткрытьФорму("ОбщаяФорма.ПоискПоИндексу", ПараметрыФормыПоиска);
		//КодАдресногоЭлемента = ОткрытьФормуМодально("ОбщаяФорма.ПоискПоИндексу", ПараметрыФормыПоиска);
		Если КодАдресногоЭлемента = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		Результат = Новый Структура;
		УправлениеКонтактнойИнформациейКлассификаторы.ПоКодуАдресногоЭлементаВСтруктуруПолучитьЕгоКомпоненты(КодАдресногоЭлемента, Результат);
		
	КонецЕсли;
	
	Регион = Результат.Регион;
	Район  = Результат.Район;
	Город  = Результат.Город;
	НаселенныйПункт = Результат.НаселенныйПункт;
	Улица  = Результат.Улица;
	
	#Если Не ВебКлиент Тогда
	Если Не ПустаяСтрока(Улица) Тогда
		ТекущийЭлемент = Элементы.Улица;
	ИначеЕсли Не ПустаяСтрока(НаселенныйПункт) Тогда
		ТекущийЭлемент = Элементы.НаселенныйПункт;
	ИначеЕсли Не ПустаяСтрока(Город) Тогда
		ТекущийЭлемент = Элементы.Город;
	ИначеЕсли Не ПустаяСтрока(Район) Тогда
		ТекущийЭлемент = Элементы.Район;
	ИначеЕсли Не ПустаяСтрока(Регион) Тогда
		ТекущийЭлемент = Элементы.Регион;
	КонецЕсли;
	#КонецЕсли
	
КонецПроцедуры



////////////////////////////////////////////////////////////////////////////////
// КНОПКИ ОК И ЗАКРЫТЬ

&НаКлиенте
Процедура КомандаОтменаВыполнить()
	
	БылиНажатыКнопкиЗакрытия = Истина;
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОКВыполнить()
	БылиНажатыКнопкиЗакрытия = Истина;
	Закрыть(ПолучитьРезультатРедактирования());	
КонецПроцедуры

&НаКлиенте
Процедура КлассификаторВыполнить()
	
	УправлениеКонтактнойИнформациейКлассификаторыКлиент.ЗагрузитьАдресныйКлассификатор();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОчиститьВыполнить()
	
	Модифицированность = Истина;
	
	Страна = СтранаРоссия;
	СтранаПриИзменении(Элементы.Страна);
	
	Индекс = "";
	Регион = "";
	Район = "";
	Город = "";
	НаселенныйПункт = "";
	Улица = "";
	Дом = "";
	Квартира = "";
	ТипДома     = Элементы.ТипДома.СписокВыбора[0].Значение;
	ТипКорпуса  = Элементы.ТипКорпуса.СписокВыбора[0].Значение;
	ТипКвартиры = Элементы.ТипКвартиры.СписокВыбора[0].Значение;
	
	СформироватьПредставление();
	
КонецПроцедуры



////////////////////////////////////////////////////////////////////////////////
// ОБЩИЕ СОБЫТИЯ ПОЛЕЙ ВВОДА

&НаКлиенте
Процедура ПолеПриИзменении(Элемент)
	
	ПроверитьТипыПолей();
	// Не перезаполнялся индекс при смене номера дома и т.п.
	Если ИспользуютсяКлассификаторы И (Страна = СтранаРоссия) Тогда //И ПустаяСтрока(Индекс) Тогда
		Индекс = УправлениеКонтактнойИнформациейКлассификаторы.ПолучитьИндекс(Регион, Район, Город, НаселенныйПункт, Улица, Дом, Корпус);
	КонецЕсли;
	
	СформироватьПредставление();
	
КонецПроцедуры

&НаКлиенте
Процедура ПолеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если (Не ИспользуютсяКлассификаторы) ИЛИ (Страна <> СтранаРоссия) Тогда
		Возврат;
	КонецЕсли;
	
	Пар = Новый Структура("Регион,Район,Город,НаселенныйПункт,Улица,Уровень", Регион, Район, Город, НаселенныйПункт, Улица, ПолучитьУровеньЭлемента(Элемент));
	
	//Чуров
	//Результат = ОткрытьФорму("РегистрСведений.АдресныйКлассификатор.Форма.ФормаВыбора", Пар);
	Результат = ОткрытьФормуМодально("РегистрСведений.АдресныйКлассификатор.Форма.ФормаВыбора", Пар);
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЭтаФорма[Элемент.Имя] = СокрЛП(Результат.Наименование + " " + Результат.Сокращение);
	ПолеПриИзменении(Элемент);
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолеАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	
	ОбработкаАвтоПодбораИОкончанияВвода(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПолеОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбработкаАвтоПодбораИОкончанияВвода(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаАвтоПодбораИОкончанияВвода(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	
	Если (Не ИспользуютсяКлассификаторы) ИЛИ (ПустаяСтрока(Текст)) ИЛИ (Страна <> СтранаРоссия) Тогда
		Возврат;
	КонецЕсли;
	
	УровеньЭлемента = ПолучитьУровеньЭлемента(Элемент);
	Результат = УправлениеКонтактнойИнформациейКлассификаторы.АвтоПодборТекстВАдресномЭлементе(Текст, Регион, Район, Город, НаселенныйПункт, УровеньЭлемента);
	
	Если Результат <> Неопределено Тогда
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = Результат;
	КонецЕсли;
	
КонецПроцедуры



////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ФУНКЦИИ И ПРОЦЕДУРЫ

&НаКлиенте
Функция ПолучитьУровеньЭлемента(Элемент)
	
	Если Элемент = Элементы.Регион Тогда
		Возврат 1;
		
	ИначеЕсли Элемент = Элементы.Район Тогда
		Возврат 2;
		
	ИначеЕсли Элемент = Элементы.Город Тогда
		Возврат 3;
		
	ИначеЕсли Элемент = Элементы.НаселенныйПункт Тогда
		Возврат 4;
		
	ИначеЕсли Элемент = Элементы.Улица Тогда
		Возврат 5;
		
	Иначе
		Возврат 0;
	КонецЕсли;
		
КонецФункции

&НаКлиенте
Процедура СформироватьПредставление()
	Представление = "";
	
	Если Страна <> СтранаРоссия Тогда
		ДополнитьПредставлениеАдреса(НаименованиеСтраны, ", ");
	КонецЕсли;
	ДополнитьПредставлениеАдреса(СокрЛП(Индекс),             ", ");
	ДополнитьПредставлениеАдреса(СокрЛП(Регион),             ", ");
	ДополнитьПредставлениеАдреса(СокрЛП(Район),              ", ");
	ДополнитьПредставлениеАдреса(СокрЛП(Город),              ", ");
	ДополнитьПредставлениеАдреса(СокрЛП(НаселенныйПункт),    ", ");
	ДополнитьПредставлениеАдреса(СокрЛП(Улица),              ", ");
	ДополнитьПредставлениеАдреса(СокрЛП(Дом),                ", " + ТипДома    + " № ");
	ДополнитьПредставлениеАдреса(СокрЛП(Корпус),             ", " + ТипКорпуса + " ");
	ДополнитьПредставлениеАдреса(СокрЛП(Квартира),           ", " + ТипКвартиры);
	
	Если СтрДлина(Представление) > 2 Тогда
		Представление = Сред(Представление, 3);
	КонецЕсли;
	
	ПредставлениеСВидом = НаименованиеВида + ": " + Представление;	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьЗначенияПараметров()	
	Представление    = Параметры.Представление;
	НаименованиеВида = Строка(Параметры.Вид);
	
	Для Каждого ЭлементАдреса Из Параметры.ЗначенияПолей Цикл
		ЭтаФорма[ЭлементАдреса.Представление] = ЭлементАдреса.Значение;
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьЗначениеПоля(Значение, ИмяПоля)
	
	Если ЗначениеЗаполнено(Значение) Тогда
		ЗначенияПолей.Добавить(Значение, ИмяПоля);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьРезультатРедактирования()
	ЗначенияПолей.Очистить();
	ДобавитьЗначениеПоля(Индекс,              "Индекс");
	ДобавитьЗначениеПоля(Регион,              "Регион");
	ДобавитьЗначениеПоля(Район,               "Район");
	ДобавитьЗначениеПоля(Город,               "Город");
	ДобавитьЗначениеПоля(НаселенныйПункт,     "НаселенныйПункт");
	ДобавитьЗначениеПоля(Улица,               "Улица");
	ДобавитьЗначениеПоля(Дом,                 "Дом");
	ДобавитьЗначениеПоля(Корпус,              "Корпус");
	ДобавитьЗначениеПоля(Квартира,            "Квартира");
	ДобавитьЗначениеПоля(НаименованиеСтраны,  "Страна");
	ДобавитьЗначениеПоля(КодСтраны,           "КодСтраны");
	
	Если Не ПустаяСтрока(Дом) Тогда
		ДобавитьЗначениеПоля(ТипДома,         "ТипДома");
	КонецЕсли;
	Если Не ПустаяСтрока(Корпус) Тогда
		ДобавитьЗначениеПоля(ТипКорпуса,      "ТипКорпуса");
	КонецЕсли;
	Если Не ПустаяСтрока(Квартира) Тогда
		ДобавитьЗначениеПоля(ТипКвартиры,     "ТипКвартиры");
	КонецЕсли;
	
	Результат = Новый Структура;
	Результат.Вставить("ЗначенияПолей", ЗначенияПолей);
	Результат.Вставить("Представление", Представление);
	
	Возврат Результат;
КонецФункции

//Процедура дополняет представление адреса строкой 
&НаКлиенте
Процедура ДополнитьПредставлениеАдреса(Дополнение, СтрокаКонкатенации)
	Если Дополнение <> "" Тогда
		Представление = Представление + СтрокаКонкатенации + Дополнение;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьТипыПолей()
	ТипДома     = ?(ЗначениеЗаполнено(ТипДома),     ТипДома,     Элементы.ТипДома.СписокВыбора[0].Значение);
	ТипКорпуса  = ?(ЗначениеЗаполнено(ТипКорпуса),  ТипКорпуса,  Элементы.ТипКорпуса.СписокВыбора[0].Значение);
	ТипКвартиры = ?(ЗначениеЗаполнено(ТипКвартиры), ТипКвартиры, Элементы.ТипКвартиры.СписокВыбора[0].Значение);	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьКнопкиВыбора()
	ЕстьКнопки = ИспользуютсяКлассификаторы И (Страна = СтранаРоссия);
	
	Элементы.Регион.КнопкаВыбора          = ЕстьКнопки;
	Элементы.Район.КнопкаВыбора           = ЕстьКнопки;
	Элементы.Город.КнопкаВыбора           = ЕстьКнопки;
	Элементы.НаселенныйПункт.КнопкаВыбора = ЕстьКнопки;
	Элементы.Улица.КнопкаВыбора           = ЕстьКнопки;	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьКодИНаименованиеСтраны()	
	ЗначенияРеквизитов = УдалитьОбщегоНазначения.ПолучитьЗначенияРеквизитов(Страна, "Код, Наименование");
	КодСтраны = ЗначенияРеквизитов.Код;
	НаименованиеСтраны = ЗначенияРеквизитов.Наименование;	
КонецПроцедуры

&НаСервере
Процедура НайтиСтрануПоКодуИлиНаименованию()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("КодСтраны", КодСтраны);
	Запрос.УстановитьПараметр("НаименованиеСтраны", НаименованиеСтраны);
	
	Если ПустаяСтрока(КодСтраны) ИЛИ ПустаяСтрока(НаименованиеСтраны) Тогда
		Запрос.Текст =
		"ВЫБРАТЬ
		|	СтраныМира.Ссылка КАК Страна
		|ИЗ
		|	Справочник.СтраныМира КАК СтраныМира
		|ГДЕ
		|	СтраныМира.Код = &КодСтраны";
		Если ПустаяСтрока(КодСтраны) Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "Код", "Наименование");
		КонецЕсли;
		
	Иначе
		Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Страны.Ссылка КАК Страна
		|ИЗ
		|	(ВЫБРАТЬ ПЕРВЫЕ 1
		|		СтраныМира.Ссылка КАК Ссылка,
		|		1 КАК Порядок
		|	ИЗ
		|		Справочник.СтраныМира КАК СтраныМира
		|	ГДЕ
		|		СтраныМира.Код = &КодСтраны
		|	
		|	ОБЪЕДИНИТЬ
		|	
		|	ВЫБРАТЬ ПЕРВЫЕ 1
		|		СтраныМира.Ссылка,
		|		2
		|	ИЗ
		|		Справочник.СтраныМира КАК СтраныМира
		|	ГДЕ
		|		СтраныМира.Наименование = &НаименованиеСтраны) КАК Страны
		|
		|УПОРЯДОЧИТЬ ПО
		|	Страны.Порядок";
		
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Страна = ?(Выборка.Следующий(), Выборка.Страна, Справочники.СтраныМира.ПустаяСсылка());
	
КонецПроцедуры
