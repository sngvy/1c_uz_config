
&НаКлиенте
Процедура Выбрать(Команда)
	ВыбратьНаСервере();
КонецПроцедуры

&НаСервере
Процедура ВыбратьНаСервере()
	Объект.Объекты.Очистить();
	ТабДок = ПолеИсходнойТаблицы;
	Для нн = 1 По ТабДок.ШиринаТаблицы Цикл
		Для кк = 1 По ТабДок.ВысотаТаблицы Цикл  
			Текст = УправлениеЗагрузкойСервер.ТекстЯчейки(ТабДок, СтрЗаменить(Строка(кк),Символы.НПП,""), СтрЗаменить(Строка(нн),Символы.НПП,""));
			Если ЗначениеЗаполнено(Текст) Тогда
				ДОСсылка = Справочники.ДолговыеОбязательства.НайтиПоРеквизиту("КодДО", Текст);
				Если ДОССылка.ПометкаУдаления Тогда
					Продолжить;
				КонецЕсли;	
				Если НЕ ДОСсылка.Пустая() Тогда
					НоваяСтрока = Объект.Объекты.Добавить();
					НоваяСтрока.Объект = ДОСсылка;
					НоваяСтрока.Пометка = Истина;
				Иначе
					ДОСсылка = Справочники.ДолговыеОбязательства.НайтиПоНаименованию(Текст,Истина,,); 
					Если ДОССылка.ПометкаУдаления Тогда
						Продолжить;
					КонецЕсли;
					Если НЕ ДОСсылка.Пустая() Тогда
						НоваяСтрока = Объект.Объекты.Добавить();
						НоваяСтрока.Объект = ДОСсылка;
						НоваяСтрока.Пометка = Истина;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура ОтметитьВсе(Команда)
	Для Каждого Элемент Из Объект.Объекты Цикл
		Элемент.Пометка = Истина;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СнятьВсе(Команда)
	Для Каждого Элемент Из Объект.Объекты Цикл
		Элемент.Пометка = Ложь;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьНаДругуюФорму(Команда)
	ПомеченныеСтроки = Объект.Объекты.НайтиСтроки(Новый Структура("Пометка", Истина));
		
	Если ПомеченныеСтроки.Количество() = 0 Тогда
		Сообщить("Ничего не отмечено!");
	Иначе			
		Для Каждого Элемент Из ПомеченныеСтроки Цикл
			Нов = ВладелецФормы.Объект.Объекты.Добавить();
			Нов.Объект = Элемент.Объект;	
			Попытка
				Нов.Контрагент = Элемент.Объект;
				Нов.ДоговорКонтрагента = Элемент.Объект;	
				Нов.УслугаПоДоговору = Элемент.Объект;
				Нов.ДолговоеОбязательство = Элемент.Объект;
				Нов.ИсполнительныйДокумент = Элемент.Объект;
			Исключение
			КонецПопытки;
		КонецЦикла;
		ЭтаФорма.Закрыть();
	КонецЕсли;  	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если ВладелецФормы = Неопределено Тогда
		Элементы.ОбъектыДобавитьНаДругуюФорму.Видимость = Ложь;
	КонецЕсли;
	Элементы.ПолеИсходнойТаблицы.ОтображатьСетку = Истина;
	Элементы.ПолеИсходнойТаблицы.ОтображатьЗаголовки = Истина;
КонецПроцедуры

#Область СчитатьФайл

&НаКлиенте
Асинх Процедура ФайлИмпортаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Чтец = УправлениеЧтениеФайловКлиент;
	Попытка
	
		ОписаниеФайла = Ждать Чтец.ВыбратьИПоместитьНаСерверТабличныйДокумент(ЭтаФорма.УникальныйИдентификатор);
	
	Исключение
		СообщениеПользователю("Операция не удалась: " + ОписаниеОшибки());
		ОчиститьДанныеФайла();
		Возврат;
	КонецПопытки;
	
	Если ОписаниеФайла = Неопределено Тогда
	
		Возврат;
	
	КонецЕсли;
	
	АдресФайлИмпорта = ОписаниеФайла["Адрес"];
	ФайлExcel = ОписаниеФайла["СсылкаНаФайл"]["Имя"];
	
	Результат = УправлениеЗагрузкойСервер.ЗаполнитьТабличныйДокументИзАрхива(ФайлExcel, АдресФайлИмпорта);
	Если Результат["Ошибка"] = Неопределено Тогда
	
		ПолеИсходнойТаблицы = Результат["ТабличныйДокумент"];
	
	КонецЕсли;
	
	УдалитьВременныйФайл(Результат["ИмяФайла"]);
	СообщениеПользователю(Результат["Сообщение"]);
	
КонецПроцедуры

&НаСервере
Процедура УдалитьВременныйФайл(ИмяФайла)

	ФайловаяСистема.УдалитьВременныйФайл(ИмяФайла);

КонецПроцедуры

&НаКлиенте
Процедура ОчиститьДанныеФайла()

	ФайлExcel = Неопределено;
	АдресФайлИмпорта = Неопределено;

КонецПроцедуры

&НаКлиенте
Процедура СообщениеПользователю(ТекстСообщения)

	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = ТекстСообщения;
	Сообщение.Сообщить();

КонецПроцедуры

#КонецОбласти

//#Область СчитатьФайл

//&НаКлиенте
//Асинх Процедура ПрочитатьФайлСКлиента()

//	ДанныеПрочитанногоФайла = Неопределено;
//	Попытка
//	
//		ДанныеПрочитанногоФайла = Ждать УправлениеЗагрузкойКлиент.ИмпортироватьФайл(ЭтаФорма.УникальныйИдентификатор);
//	
//	Исключение
//		Сообщение = Новый СообщениеПользователю;
//		Сообщение.Текст = ОписаниеОшибки();
//		Сообщение.Сообщить();
//	КонецПопытки;
//	
//	Если НЕ ЗначениеЗаполнено(ДанныеПрочитанногоФайла) Тогда
//	
//		Возврат;
//	
//	КонецЕсли;
//	
//	ПолеИсходнойТаблицы = ДанныеПрочитанногоФайла["ТабличныйДокумент"];
//	ФайлИмпорта = ДанныеПрочитанногоФайла["ПутьФайлаНаКлиенте"];

//КонецПроцедуры

//&НаКлиенте
//Процедура ФайлИмпортаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
//	
//	ПрочитатьФайлСКлиента();
//	
//КонецПроцедуры

//#КонецОбласти

