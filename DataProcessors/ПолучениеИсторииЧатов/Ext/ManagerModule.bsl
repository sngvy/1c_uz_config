#Область ПрограммныйИнтерфейс

Функция ХранительВФайловойСистеме(ИмяВарианта) Экспорт

	Возврат МодульХраненияВФайловойСистеме(ИмяВарианта)
		.Создать();

КонецФункции // ()

Функция ПолучитьИсториюЗаСегодня(Клиент, ИмяВарианта = Неопределено) Экспорт

	МодульХранения = КонфигурацияИсторияЧатов.МодульХраненияИсторииЧатовПоУмолчанию();
	Если ИмяВарианта <> Неопределено Тогда
	
		МодульХранения = МодульХраненияВФайловойСистеме(ИмяВарианта);
	
	КонецЕсли;
	
	Возврат МодульХранения
		.ПолучитьИсториюЗаДень(Клиент);

КонецФункции // ()

Функция ПолучитьНеопознаных(Мессенджер, НастройкаСохранения, ИмяВарианта = Неопределено) Экспорт

	МодульХранения = КонфигурацияИсторияЧатов.МодульХраненияИсторииЧатовПоУмолчанию();
	Если ИмяВарианта <> Неопределено Тогда
	
		МодульХранения = МодульХраненияВФайловойСистеме(ИмяВарианта);
	
	КонецЕсли;
	
	Возврат МодульХранения
		.ПолучитьНеопознаных(Мессенджер, НастройкаСохранения);

КонецФункции // ()

Функция ПолучитьДанныеФайлов(Мессенджер, НастройкаСохранения, Клиент) Экспорт

	Если Не Метаданные.ОпределяемыеТипы.Отправители
		.Тип.СодержитТип(ТипЗнч(Клиент)) Тогда
	
		ВызватьИсключение "Отправитель не определен";
	
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Клиент) Тогда
	
		Возврат Новый Массив;
	
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Мессенджер)
		Или Не ЗначениеЗаполнено(НастройкаСохранения) Тогда
	
		Возврат Новый Массив;
	
	КонецЕсли;

	МодульХранения = УправлениеМетаданными.МенеджерОбъектаПоСсылке(НастройкаСохранения);
	
	ВладелецЧата = УправлениеМетаданными.МенеджерОбъектаПоСсылке(Клиент)
		.ВладелецМесенджера(Клиент);
	
	ПутьВХранилище = МодульХранения.ПутьВХранилище(Мессенджер, ВладелецЧата);
	Если ПустаяСтрока(ПутьВХранилище) Тогда
	
		Возврат Новый Массив;
	
	КонецЕсли;
	
	КаталогСообщения = Новый Файл(НастройкаСохранения.ХранилищеФайлов + ПолучитьРазделительПути() + ПутьВХранилище);
	
	Возврат МодульХранения.ПолучитьФайлы(КаталогСообщения);
	
КонецФункции // ()

Функция ПолучитьИсториюЗаПериод(Клиент, ПараметрыЗагрузкиИстории, ИмяВарианта = Неопределено) Экспорт

	МодульХранения = КонфигурацияИсторияЧатов.МодульХраненияИсторииЧатовПоУмолчанию();
	Если ИмяВарианта <> Неопределено Тогда
	
		МодульХранения = МодульХраненияВФайловойСистеме(ИмяВарианта);
	
	КонецЕсли;
	
	Возврат МодульХранения.ПолучитьИсториюЗаПериод(
		Клиент,
		ПараметрыЗагрузкиИстории["Начало"],
		ПараметрыЗагрузкиИстории["Конец"],
		ПараметрыЗагрузкиИстории["Количество"]);

КонецФункции // ()

Функция НовыеПараметрыЗагрузкиИстории() Экспорт

	Описание = Новый Структура;
	Описание.Вставить("Начало", Дата(1, 1, 1));
	Описание.Вставить("Конец", КонецДня(ТекущаяДатаСеанса()));
	Описание.Вставить("Количество", Неопределено);
	
	Возврат Описание;

КонецФункции // ()


#КонецОбласти

#Область ОбработчикиСобытий



#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция ДоступныеВариантыХраненияИстории() Экспорт

	ВариантыХранилища = Метаданные.ОпределяемыеТипы.ХранилищаИстории.Тип.Типы();
	
	ИменаВариантов = Новый Соответствие;

	Для каждого Вариант Из ВариантыХранилища Цикл
	
		СоставИмени = СтрРазделить(Строка(Вариант), ":");
		Имя = СокрЛП(СоставИмени[1]);
		ИменаВариантов.Вставить(Имя, Вариант);
	
	КонецЦикла;
	
	Возврат ИменаВариантов;

КонецФункции // ()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция МодульХраненияВФайловойСистеме(ИмяВарианта)

	Варианты = ДоступныеВариантыХраненияИстории();
	
	ТипВарианта = Варианты.Получить(ИмяВарианта);
	
	Возврат Новый (ТипВарианта);

КонецФункции // ()


#КонецОбласти