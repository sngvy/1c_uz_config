////////////////////////////////////////////////////////////////////////////////
// Для взаимодействия

#Область Интерфейс

Функция ВыборСоответствийДляДокументовПоЗадолженности(Элемент, Знач ВыбранноеЗначение) Экспорт
	
	Соответствие = ВыбранноеЗначение;
	ПредставлениеТипаЭлемента = Элемент.Родитель.ТекущиеДанные.ТипДанных;
	Если ПредставлениеТипаЭлемента = "Число" Тогда
		Возврат Соответствие;
	КонецЕсли;
	Если ПредставлениеТипаЭлемента = "Дата" Тогда
		Возврат Соответствие;
	КонецЕсли;
	Если ПредставлениеТипаЭлемента = "Строка" Тогда
		Возврат Соответствие;
	КонецЕсли;
	Если Лев(ПредставлениеТипаЭлемента, СтрДлина("Справочник ссылка:")) <> "Справочник ссылка:" Тогда
		Возврат Соответствие;
	КонецЕсли;
	
	Если ПредставлениеТипаЭлемента = "Справочник ссылка: Контрагенты" Тогда
		Соответствие = "КодКонтрагента=" + ВыбранноеЗначение + ";";
	Иначе
		Соответствие = "Наименование=" + ВыбранноеЗначение + ";";
	КонецЕсли;
	
	Возврат Соответствие;

КонецФункции

// Функция предлагает пользователю выбрать файл (.xls, .xlsx, .ods)
// Далее на Сервере файл обрабатывается, считывает содержимое и получает имя файла
//
// Если файл не выбран, то ни чего не делает, а если формат отличается, то бросает исключение
//
// Возвращаемое значение:
//  ДанныеСчитанногоФайла  - Структура - 
//                 - ПутьФайлаНаКлиенте  - Строка - Полный путь файла на Клиенте или ИмяФайла если Веб-Клиент не смог получить полный путь
//                 - ТабличныйДокумент  - ТабличныйДокумент - Табличный документ заполненный данными из импортируемого файла
//
Асинх Функция ИмпортироватьФайл(УИДФормы = Неопределено) Экспорт

	ПараметрыДиалога = Новый ПараметрыДиалогаПомещенияФайлов;
	// |*.xls?;*.xlsx;*.ods| - отдельно прописан xlsx, тк иначе в Веб-Клиенте файлы видны, но не загружаются
	ПараметрыДиалога.Фильтр = "Табличный документ(*.xls, *.xlsx, *.ods)|*.xls?;*.xlsx;*.ods|";
	ВыбранныйФайл = Ждать ПоместитьФайлНаСерверАсинх(,,, ПараметрыДиалога, УИДФормы);
	
	ДанныеСчитанногоФайла = ОбработатьВыбранныйФайл(ВыбранныйФайл);
	
	Возврат ДанныеСчитанногоФайла;

КонецФункции

#КонецОбласти

#Область ВнутренняяЧасть

Функция ОбработатьВыбранныйФайл(ВыбранныйФайл)

	Если ТипЗнч(ВыбранныйФайл) <> Тип("ОписаниеПомещенногоФайла") Тогда
		
		Возврат Неопределено;
		
	КонецЕсли;
	
	ДанныеДляВозврата = Новый Структура;
	ИмяФайла = ВыбранныйФайл.СсылкаНаФайл.Имя;
	Если ФайлОпределился(ВыбранныйФайл) Тогда
	
		ИмяФайла = ВыбранныйФайл.СсылкаНаФайл.Файл.ПолноеИмя;
	
	КонецЕсли;
	ДанныеДляВозврата.Вставить("ПутьФайлаНаКлиенте", ИмяФайла);
	
	ДанныеФайла = ДанныеФайлаДляПрочтения(ВыбранныйФайл);
	ПрочитанныйФайл = УправлениеЗагрузкойСервер.ПрочитатьФайлВТабличныйДокумент(ДанныеФайла);
	ДанныеДляВозврата.Вставить("ТабличныйДокумент", ПрочитанныйФайл);
	
	Возврат ДанныеДляВозврата;

КонецФункции

Функция ДанныеФайлаДляПрочтения(ФайлИмпорта)

	ДанныеФайла = Новый Структура;
	ДанныеФайла.Вставить("АдресХранилища", ФайлИмпорта.Адрес);
	ДанныеФайла.Вставить("Расширение", ФайлИмпорта.СсылкаНаФайл.Расширение);
	
	Возврат ДанныеФайла;

КонецФункции // ()

Функция ФайлОпределился(ВыбранныйФайл)

	Если ВыбранныйФайл.СсылкаНаФайл.Файл = Неопределено Тогда
	
		Возврат Ложь;
	
	КонецЕсли;
	
	ПолноеИмя = ВыбранныйФайл.СсылкаНаФайл.Файл.ПолноеИмя;
	Если НЕ ЗначениеЗаполнено(ПолноеИмя) Тогда
	
		Возврат Ложь;
	
	КонецЕсли;
	
	Возврат Истина;

КонецФункции // ()

#КонецОбласти