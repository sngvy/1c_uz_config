
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если ТипЗнч(ЭтаФорма.ВладелецФормы) = Тип("УправляемаяФорма") Тогда
		Если ЭтаФорма.ВладелецФормы.ИмяФормы = "Справочник.Должники.Форма.ФормаЭлемента" Тогда
			ТаблицаЗначений = ЭтаФорма.ВладелецФормы.ТаблицаЗначенийДолговыхОбязательств;
			ЗаполнитьТабличнуюЧасть(ТаблицаЗначений);
		КонецЕсли;	
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТабличнуюЧасть(ТаблицаЗначений)
	Объект.ДолговыеОбязательства.Загрузить(ТаблицаЗначений.Выгрузить());	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьУЭД(Команда)
	
	Если ЭтоУниверсальнаяПечатьНаСервере() Тогда
	
		НастройкиПечати = ПечатьЭлектронныхДокументовКлиент.ИнициализацияПараметровПечати();
		
		НастройкиПечати = ПечатьЭлектронныхДокументовКлиент.ВыборКаталогаСохранения(НастройкиПечати);
		Если НЕ НастройкиПечати.КаталогВыбран Тогда
		
			Возврат;
		
		КонецЕсли;
		НастройкиПечати.Вставить("Прикрепить", Объект.СоздатьПрикреплениеФайлов);
		НастройкиПечати.Вставить("Склеить", Объект.СклеитьВОдинФайл);
		НастройкиПечати.Вставить("ПерезаписатьСуществующие", Истина);
		НастройкиПечати.Вставить("ИмяПечатнойФормы", Строка(Объект.Шаблон));
		НастройкиПечати.Вставить("ПрикреплятьПовторноСуществующийТип", Не Объект.НеПечататьПовторно);
		НастройкиПечати = ПечатьЭлектронныхДокументовКлиент.ЗаполнитьНастройкиИзШаблона(НастройкиПечати, Объект.Шаблон);
		
		НастройкиПечати.Вставить("ОднаКорреспонденция", Истина);
		
		КомплектыБинарныйФормат = СформироватьКомплекты();
		НастройкиПечати.Вставить("Комплекты", КомплектыБинарныйФормат);
		
		УспешнаяПечать = ПечатьЭлектронныхДокументовКлиент.СформироватьКомплекты(НастройкиПечати);
		ТекстСообщения = "Формирование документов";
		ТекстСообщения = ТекстСообщения + ?(УспешнаяПечать, " прошло успешно!", " не получилось!");
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ТекстСообщения;
		Сообщение.Сообщить();
		
		Возврат;
	
	КонецЕсли;
	
	#Если ВебКлиент тогда
		Сообщить("Данные функционал недоступен на Веб-Клиенте!");
	#Иначе	
		Записать();
		
		ОБъект.Дата = ОбщегоНазначенияКлиент.ДатаСеанса();
		
		МассивОбъект = Новый Массив();
		Для Каждого Элемент Из Объект.Объекты Цикл
			МассивОбъект.Добавить(Элемент.Объект);
		КонецЦикла;
		Объект.ПутьКСформированнымДокументам = "";
		
		Структура = Новый Структура;
		Структура.Вставить("Номер", Объект.Номер);
		Структура.Вставить("Дата", Объект.Дата);
		Структура.Вставить("СклеитьВОдинФайл", Объект.СклеитьВОдинФайл);
		Структура.Вставить("ПрикрепитьФайлы", Объект.СоздатьПрикреплениеФайлов);
		Структура.Вставить("Организация", Объект.Организация);
		Структура.Вставить("Автор", Объект.Автор);
		Структура.Вставить("НеПечататьПовторно",Объект.НеПечататьПовторно);
		
		ПечатьЭлектронныхДокументовКлиент.ПечатьОбъекты(МассивОбъект, Объект.Шаблон, Структура, Объект.ПутьКСформированнымДокументам, Объект.СоздатьПрикреплениеФайлов);
		
		Записать();
	#КонецЕсли
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//ОбъектыСервер.ОграничитьТипОбъекта(Элементы.ОбъектыОбъект);
	
	//
	Если Объект.Ссылка.Пустая() Тогда
		Пользователи.ЗаполнитьРеквизитыПоДаннымПользователя(Объект);
	КонецЕсли;
	
	ОбъектыСервер.РасширитьТабличнуюЧасть(Объект.Объекты);
	Элементы.ПодборПоНастройкам.Видимость = Константы.ИспользоватьНастройкиПодбораОбъектовУчета.Получить();
	
	Если Параметры.Цель = "ЗаполнитьПоНабору" Тогда
	
		ПеренестиВОбъектыОтобранныеДО();
	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ОбъектыСервер.РасширитьТабличнуюЧасть(Объект.Объекты);
КонецПроцедуры

&НаКлиенте
Процедура ОбъектыОбъектПриИзменении(Элемент)
	ОбъектыКлиент.РасширитьТекущуюСтроку(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ОбъектыПолеПриИзменении(Элемент)
	ОбъектыКлиент.РасширитьТекущуюСтрокуОбъект(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура Подбор(Команда)
	ОбъектыКлиент.Подбор(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОбъектыОбъектНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Элементы.ОбъектыОбъект.ВыбиратьТип = (Элементы.Объекты.ТекущиеДанные.Объект = Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ОбъектыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Элементы.ОбъектыОбъект.ВыбиратьТип = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПутьКСформированнымДокументамОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;        
	ЗапуститьПриложение(Объект.ПутьКСформированнымДокументам);	
	
КонецПроцедуры

&НаКлиенте
Процедура ПодборИзФайла(Команда)
	ОбъектыКлиент.ПодборИзДОК(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	//
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	Оповестить("ПродолжитьРаботуПодбораПослеПечатнойФормы");
КонецПроцедуры

&НаКлиенте
Процедура ПодборПоНастройкам(Команда)
	ОбъектыКлиент.ПодборПоНастройкам(ЭтаФорма);
КонецПроцедуры

&НаСервере
Процедура ПеренестиВОбъектыОтобранныеДО()

	ОтобранныеДО = Справочники.ДолговыеОбязательства.ПолучитьОтобранныеДолговыеОбязательства(
		Параметры.КомпоновщикСпискаДО
	);
	Для каждого ДО Из ОтобранныеДО Цикл
	
		НоваяСтрока = Объект.Объекты.Добавить();
		НоваяСтрока.Объект = ДО;
	
	КонецЦикла;

КонецПроцедуры

&НаСервере
Функция ЭтоУниверсальнаяПечатьНаСервере()

	Возврат Справочники.тсВидыПечатныхДокументов.ЭтоУниверсальная(Объект.Шаблон);

КонецФункции // ()

&НаСервере
Функция СформироватьКомплекты()

	НаборОснований = ПолучитьОснования();
	Основания = НаборОснований.ВыгрузитьКолонку("Основание");

	КомплектыБинарныйФормат = Справочники.тсВидыПечатныхДокументов.СформироватьУниверсальныеШаблоны(
		Объект.Шаблон,
		Основания
	);
	
	КомплектыБинарныйФорматСКоличеством = Новый Соответствие;
	Для каждого СтрокаНабора Из КомплектыБинарныйФормат Цикл
	
		ОснованиеСКоличеством = Новый Структура;
		ОснованиеСКоличеством.Вставить("Основание", СтрокаНабора.Ключ);
		
		НайденнаяСтрока = НаборОснований.Найти(СтрокаНабора.Ключ);
		КоличествоОснований = 1;
		Если НайденнаяСтрока <> Неопределено Тогда
		
			КоличествоОснований = НайденнаяСтрока.Количество;
		
		КонецЕсли;
		ОснованиеСКоличеством.Вставить("Количество", КоличествоОснований);
		
		ОснованиеСКоличеством.Вставить("ИсходящаяКомплектом", Объект.Шаблон.ОднаИсходящаяКорреспонденция);
		КомплектыБинарныйФорматСКоличеством.Вставить(ОснованиеСКоличеством, СтрокаНабора.Значение);
	
	КонецЦикла;
	
	Возврат КомплектыБинарныйФорматСКоличеством;

КонецФункции

&НаСервере
Функция ПолучитьОснования()

	Основания = Новый ТаблицаЗначений;
	Основания.Колонки.Добавить("Основание");
	Основания.Колонки.Добавить("Количество");
	
	Для каждого Основание Из Объект.Объекты Цикл

		СтрокаОснование = Основания.Добавить();
		СтрокаОснование.Основание = Основание.Объект;
		СтрокаОснование.Количество = 1;
	
	КонецЦикла;

	Основания.Свернуть("Основание", "Количество");
	
	Возврат Основания;

КонецФункции // ()
