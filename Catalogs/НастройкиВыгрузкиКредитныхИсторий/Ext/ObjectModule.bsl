Процедура _ЗаписатьХранилищеЗначений(НомерСтроки, Хранилище,ИмяТаблицы) Экспорт
	Записать();
	Для Каждого Стр Из ЭтотОбъект.РеквизитыИСвойства Цикл
		Если Стр.НомерСтроки = НомерСтроки Тогда
			Стр.Хранилище = Хранилище;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Записать();
КонецПроцедуры

Процедура Записать_СтрокаХранилище(НомерСтроки, МассивДанных,ИмяТаблицы) Экспорт
	ТаблицаОбъекта = ЭтотОбъект[ИмяТаблицы];
	Записать();
	Для Каждого Стр Из ТаблицаОбъекта Цикл
		Если Стр.НомерСтроки = НомерСтроки Тогда
			Стр.СтрокаХранилище = "";
			Для Каждого СтрМ Из МассивДанных Цикл
				Стр.СтрокаХранилище = Стр.СтрокаХранилище + "[" + СтрМ + "]";
			КонецЦикла;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Записать();
КонецПроцедуры 

Процедура Записать_НаименованиеПолейРегистраКИ(ИмяТаблицы) Экспорт
	ТаблицаОбъекта = ЭтотОбъект[ИмяТаблицы];
	
	Если ИмяТаблицы = "Сделка" Тогда
		ЗаполнитьПоляКИСделка(ТаблицаОбъекта);
	КонецЕсли;  
	
	Если ИмяТаблицы = "СубъектФизическоеЛицо" ИЛИ ИмяТаблицы = "СубъектПоручитель" ИЛИ ИмяТаблицы = "СубъектНаследник" Тогда
		ЗаполнитьПоляКИФизическоеЛицо(ТаблицаОбъекта);
	КонецЕсли; 
	
	Если ИмяТаблицы = "СубъектЮридическоеЛицо" Тогда
		ЗаполнитьПоляКИЮридическоеЛицо(ТаблицаОбъекта);
	КонецЕсли;

КонецПроцедуры 

Процедура ЗаполнитьПоляКИСделка(ТаблицаСделка)
	Для каждого Стр из ТаблицаСделка Цикл
		Если Стр.НомерПоказателяНБКИФЛ = "C17.1" Тогда
				Стр.НаименованиеПоляРегистраКИ = "UID";
				Продолжить;
			КонецЕсли; 
			
			Если Стр.НомерПоказателяНБКИФЛ = "C17.4" Тогда
				Стр.НаименованиеПоляРегистраКИ = "ДатаНачалаСделки"; 
				Продолжить;
			КонецЕсли; 
			
			Если Стр.НомерПоказателяНБКИФЛ = "C18.11" Тогда
				Стр.НаименованиеПоляРегистраКИ = "ДатаОкончанияСделки";
				Продолжить;
			КонецЕсли;  
			Если Стр.НомерПоказателяНБКИФЛ = "C24.1" Тогда
				Стр.НаименованиеПоляРегистраКИ = "ДатаПередачиФинансирования";
				Продолжить;
			КонецЕсли;
			
			Если Стр.НомерПоказателяНБКИФЛ = "C19.1" Тогда
				Стр.НаименованиеПоляРегистраКИ = "СуммаСделки";
				Продолжить;
			КонецЕсли;
			
			Если Стр.НомерПоказателяНБКИФЛ = "C20.1" Тогда 
				Стр.НаименованиеПоляРегистраКИ = "СолидарныйДоговор";
				Продолжить;
			КонецЕсли; 
			
			Если Стр.НомерПоказателяНБКИФЛ = "C27.1" Тогда
				Стр.НаименованиеПоляРегистраКИ = "ДатаВыходаНаПросрочку";
				Продолжить;
			КонецЕсли; 
			
			
			Если Стр.НомерПоказателяНБКИФЛ = "C38.1" Тогда 
				Стр.НаименованиеПоляРегистраКИ = "ПрекращениеОбязательства";
				Продолжить;
			КонецЕсли; 
			
			Если Стр.НомерПоказателяНБКИФЛ = "C56.5" Тогда 
				Стр.НаименованиеПоляРегистраКИ = "Просрочка90плюс";
				Продолжить;
			КонецЕсли;  
			
			Если Стр.НомерПоказателяНБКИФЛ = "C18.6" Тогда 
				Стр.НаименованиеПоляРегистраКИ = "ПризнакПотребительскогоКредита";
				Продолжить;
			КонецЕсли;  
			
			Если Стр.НомерПоказателяНБКИФЛ = "C18.7" Тогда 	
				Стр.НаименованиеПоляРегистраКИ = "ПризнакПлатежнойКарты"; 
				Продолжить;
			КонецЕсли;                                     
			
			Если Стр.НомерПоказателяНБКИФЛ = "C18.3" Тогда 
				Стр.НаименованиеПоляРегистраКИ = "КодНБКИТипКредита";
				Продолжить;
			КонецЕсли;  
			
			Если Стр.НомерПоказателяНБКИФЛ = "C18.4" Тогда 
				Стр.НаименованиеПоляРегистраКИ = "КодНБКИВидКредита";
				Продолжить;
			КонецЕсли; 
			
			Если Стр.НомерПоказателяНБКИФЛ = "C18.5" Тогда 	
				Стр.НаименованиеПоляРегистраКИ = "КодНБКИЦельКредита";
				Продолжить;

			КонецЕсли; 
			
			Если Стр.НомерПоказателяНБКИФЛ = "C25.8" Тогда 
				Стр.НаименованиеПоляРегистраКИ = "ТехническаяДатаРасчета";
				Продолжить;
			КонецЕсли;  
			
			Если Стр.НомерПоказателяНБКИФЛ = "C26.7" Тогда  
				Стр.НаименованиеПоляРегистраКИ = "ДатаРасчетаСрочнойЗадолженности";
				Продолжить;
			КонецЕсли; 
			
			Если Стр.НомерПоказателяНБКИФЛ = "C27.7" Тогда  
				Стр.НаименованиеПоляРегистраКИ = "ДатаРасчетаПросроченнойЗадолженности";
				Продолжить;
			КонецЕсли;

			
			Если Стр.НомерПоказателяНБКИФЛ = "C." Тогда 
				Стр.НаименованиеПоляРегистраКИ = "Банкротство";
				Продолжить;
			КонецЕсли;   
			
			Если Стр.НомерПоказателяНБКИФЛ = "C18.12" Тогда 
				Стр.НаименованиеПоляРегистраКИ = "ВидЗаимодавца";
				Продолжить;
			КонецЕсли;       
			
			Если Стр.НомерПоказателяНБКИФЛ = "C18.13" Тогда 
				Стр.НаименованиеПоляРегистраКИ = "ЧастичноеПравопреемство";
				Продолжить;
			КонецЕсли; 
			
			Если Стр.НомерПоказателяНБКИФЛ = "C18.14" Тогда 
				Стр.НаименованиеПоляРегистраКИ = "ПризнакКредитнойЛинии";
				Продолжить;
			КонецЕсли;    
			
			Если Стр.НомерПоказателяНБКИФЛ = "C18.15" Тогда 
				Стр.НаименованиеПоляРегистраКИ = "КодНБКИТипКредититнойЛинии";
				Продолжить;
			КонецЕсли; 
			
			Если Стр.НомерПоказателяНБКИФЛ = "C18.16" Тогда 
				Стр.НаименованиеПоляРегистраКИ = "ПризнакПлавающейПроцентнойСтавки";
				Продолжить;
			КонецЕсли;   
			
			
			Если Стр.НомерПоказателяНБКИФЛ = "C18.19" Тогда 
				Стр.НаименованиеПоляРегистраКИ = "ДатаВозникновенияОбязательстваСубъекта";
				Продолжить;
			КонецЕсли;

			Если Стр.НомерПоказателяНБКИФЛ = "C24.2" Тогда 
				Стр.НаименованиеПоляРегистраКИ = "ПорядковыйНомерТранша";
				Продолжить;
			КонецЕсли; 
			
			Если Стр.НомерПоказателяНБКИФЛ = "C54.2" Тогда 
				Стр.НаименованиеПоляРегистраКИ = "ПроцентнаяСтавкаПоУсловиям";
				Продолжить;
			КонецЕсли;  
			
			Если Стр.НомерПоказателяНБКИФЛ = "C17.3" Тогда 
				Стр.НаименованиеПоляРегистраКИ = "UIDРефинансированнойСделки";
				Продолжить;
			КонецЕсли; 
			
			Если Стр.НомерПоказателяНБКИФЛ = "C54.6" Тогда 
				Стр.НаименованиеПоляРегистраКИ = "МаксимальнаяПроцентнаяСтавкаПоУсловиям";
				Продолжить;
			КонецЕсли; 	
			
			Если Стр.НомерПоказателяНБКИФЛ = "C18.20" Тогда 
				Стр.НаименованиеПоляРегистраКИ = "ПризнакПредусмотренногоГрафика";
				Продолжить;
			КонецЕсли; 	
		КонецЦикла;	
	
КонецПроцедуры


Процедура ЗаполнитьПоляКИФизическоеЛицо(ТаблицаФЛ)
	Для каждого Стр из ТаблицаФЛ Цикл
		Если Стр.НомерПоказателяНБКИФЛ = "C3.1" Тогда
				Стр.НаименованиеПоляРегистраКИ = "ДатаРождения";
				Продолжить;
			КонецЕсли; 
			
			Если Стр.НомерПоказателяНБКИФЛ = "C3.2" Тогда
				Стр.НаименованиеПоляРегистраКИ = "КодСтраны"; 
				Продолжить;
			КонецЕсли; 
			
			Если Стр.НомерПоказателяНБКИФЛ = "C3.3" Тогда
				Стр.НаименованиеПоляРегистраКИ = "МестоРождения";
				Продолжить;
			КонецЕсли;  
			Если Стр.НомерПоказателяНБКИФЛ = "C4.1.2" Тогда
				Стр.НаименованиеПоляРегистраКИ = "КодСтраныДокумента";
				Продолжить;
			КонецЕсли;
			
			Если Стр.НомерПоказателяНБКИФЛ = "C4.3.4" Тогда
				Стр.НаименованиеПоляРегистраКИ = "НаименованиеИногоДокумента";
				Продолжить;
			КонецЕсли;
			
			Если Стр.НомерПоказателяНБКИФЛ = "C4.5" Тогда 
				Стр.НаименованиеПоляРегистраКИ = "СерияДокумента";
				Продолжить;
			КонецЕсли; 
			
			Если Стр.НомерПоказателяНБКИФЛ = "C4.6" Тогда
				Стр.НаименованиеПоляРегистраКИ = "НомерДокумента";
				Продолжить;
			КонецЕсли; 
			
			
			Если Стр.НомерПоказателяНБКИФЛ = "C4.7" Тогда 
				Стр.НаименованиеПоляРегистраКИ = "ДатаВыдачиДокумента";
				Продолжить;
			КонецЕсли;   
			
			Если Стр.НомерПоказателяНБКИФЛ = "C4.8" Тогда 
				Стр.НаименованиеПоляРегистраКИ = "КемВыданДокумент";
				Продолжить;
			КонецЕсли; 
			
			Если Стр.НомерПоказателяНБКИФЛ = "C4.9" Тогда 
				Стр.НаименованиеПоляРегистраКИ = "КодПодразделенияРФ";
				Продолжить;
			КонецЕсли; 
			
			Если Стр.НомерПоказателяНБКИФЛ = "C4.11" Тогда 
				Стр.НаименованиеПоляРегистраКИ = "СведенияОГражданствеФЛ";
				Продолжить;
			КонецЕсли; 

			
			Если Стр.НомерПоказателяНБКИФЛ = "C6.2" Тогда 
				Стр.НаименованиеПоляРегистраКИ = "ИНН";
				Продолжить;
			КонецЕсли;   
			
			Если Стр.НомерПоказателяНБКИФЛ = "C6.3" Тогда 
				Стр.НаименованиеПоляРегистраКИ = "ИНН_ИП";
				Продолжить;
			КонецЕсли; 
			
			Если Стр.НомерПоказателяНБКИФЛ = "C6.4" Тогда 
				Стр.НаименованиеПоляРегистраКИ = "СпециальныйНалоговыйРежим";
				Продолжить;
			КонецЕсли;  
			
			Если Стр.НомерПоказателяНБКИФЛ = "C11.2" Тогда 
				Стр.НаименованиеПоляРегистраКИ = "ИНН_ИП";
				Продолжить;
			КонецЕсли; 

			
			Если Стр.НомерПоказателяНБКИФЛ = "C7.1" Тогда 
				Стр.НаименованиеПоляРегистраКИ = "СНИЛС";
				Продолжить;
			КонецЕсли;  
			
			Если Стр.НомерПоказателяНБКИФЛ = "C8.14" Тогда 	
				Стр.НаименованиеПоляРегистраКИ = "ДатаРегистрацииПоДокументу"; 
				Продолжить;
			КонецЕсли;                                     
			
			Если Стр.НомерПоказателяНБКИФЛ = "C8.15" Тогда 
				Стр.НаименованиеПоляРегистраКИ = "НаименованиеРегистрирующегоОргана";
				Продолжить;
			КонецЕсли;   
			
			Если Стр.НомерПоказателяНБКИФЛ = "C8.16" Тогда 
				Стр.НаименованиеПоляРегистраКИ = "КодПодразделенияРегистрацииРФ";
				Продолжить;
			КонецЕсли; 
			
			Если Стр.НомерПоказателяНБКИФЛ = "C10.3" Тогда 
				Стр.НаименованиеПоляРегистраКИ = "ЭлПочта";
				Продолжить;
			КонецЕсли; 
			
			Если Стр.НомерПоказателяНБКИФЛ = "C11.1" Тогда 
				Стр.НаименованиеПоляРегистраКИ = "ЭтоИП";
				Продолжить;
			КонецЕсли;  
			
			Если Стр.НомерПоказателяНБКИФЛ = "C11.3" Тогда 
				Стр.НаименованиеПоляРегистраКИ = "ДатаРегистрацииИП";
				Продолжить;
			КонецЕсли;

			
			Если Стр.НомерПоказателяНБКИФЛ = "C12.1" Тогда 	
				Стр.НаименованиеПоляРегистраКИ = "Дееспособность";
				Продолжить;

			КонецЕсли; 
				
			
		КонецЦикла;	
	
КонецПроцедуры

Процедура ЗаполнитьПоляКИЮридическоеЛицо(ТаблицаЮЛ)
	Для каждого Стр из ТаблицаЮЛ Цикл
		Если Стр.НомерПоказателяНБКИЮЛ = "B1.1" Тогда
				Стр.НаименованиеПоляРегистраКИ = "ПолноеНаименование";
				Продолжить;
			КонецЕсли; 
			
			Если Стр.НомерПоказателяНБКИЮЛ = "B1.3" Тогда
				Стр.НаименованиеПоляРегистраКИ = "ИноеНаименование"; 
				Продолжить;
			КонецЕсли; 
			
			Если Стр.НомерПоказателяНБКИЮЛ = "B3.1" Тогда
				Стр.НаименованиеПоляРегистраКИ = "ОГРН";
				Продолжить;
			КонецЕсли;  
			Если Стр.НомерПоказателяНБКИЮЛ = "B3.2" Тогда
				Стр.НаименованиеПоляРегистраКИ = "ИдентификаторLEI";
				Продолжить;
			КонецЕсли;
			
			Если Стр.НомерПоказателяНБКИЮЛ = "B2.14" Тогда
				Стр.НаименованиеПоляРегистраКИ = "ЭлПочта";
				Продолжить;
			КонецЕсли;
			
			Если Стр.НомерПоказателяНБКИЮЛ = "B4.2" Тогда 
				Стр.НаименованиеПоляРегистраКИ = "ИНН";
				Продолжить;
			КонецЕсли; 
			
			Если Стр.НомерПоказателяНБКИЮЛ = "B5.6" Тогда
				Стр.НаименованиеПоляРегистраКИ = "ДатаРеорганизации";
				Продолжить;
			КонецЕсли; 
			
			
			Если Стр.НомерПоказателяНБКИЮЛ = "B5.2" Тогда 
				Стр.НаименованиеПоляРегистраКИ = "ЛиквидацияЮЛ";
				Продолжить;
			КонецЕсли;   
			
			Если Стр.НомерПоказателяНБКИЮЛ = "B8.1" Тогда 
				Стр.НаименованиеПоляРегистраКИ = "НаличиеПравопредшественника";
				Продолжить;
			КонецЕсли; 
			
			Если Стр.НомерПоказателяНБКИЮЛ = "B8.2" Тогда 
				Стр.НаименованиеПоляРегистраКИ = "ПравопредшественникИзРФ";
				Продолжить;
			КонецЕсли;  
			
			Если Стр.НомерПоказателяНБКИЮЛ = "B8.4" Тогда 
				Стр.НаименованиеПоляРегистраКИ = "ОГРНПравопредшественника";
				Продолжить;
			КонецЕсли; 
			
			Если Стр.НомерПоказателяНБКИЮЛ = "B5.15" Тогда 
				Стр.НаименованиеПоляРегистраКИ = "ПризнакИностранногоЮЛ";
				Продолжить;
			КонецЕсли; 

							
			
		КонецЦикла;	
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	ЗаполнитьПоляФЛ("СубъектФизическоеЛицо"); 
	ЗаполнитьПоляФЛ("СубъектПоручитель"); 
	ЗаполнитьПоляФЛ("СубъектНаследник"); 	
	ЗаполнитьПоляЮЛ(); 		
	ЗаполнитьПоляСделки();
	ЗаполнитьПоляПродажа();
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.НастройкиВыгрузкиНБКИ_RUTDF") Тогда
		// Заполнение шапки
		ДатаОкончанияДоговораСБКИ = ДанныеЗаполнения.ДатаОкончанияДоговораНБКИ;
		ДействующиеДоговоры = ДанныеЗаполнения.ДействующиеДоговоры;
		ДляМассовойВыгрузки = ДанныеЗаполнения.ДляМассовойВыгрузки;
		ДоговорРасторгнут = ДанныеЗаполнения.ДоговорРасторгнут;
		ИдентификаторИсточника = ДанныеЗаполнения.ИмяПользователяНБКИ;
		ИННИсточника = ДанныеЗаполнения.ИННПользователяНБКИ;
		Используется = ДанныеЗаполнения.Используется;
		КаталогДляВыгрузки = ДанныеЗаполнения.КаталогДляВыгрузки;
		ЛьготноеФинансированиеСГосПоддержкой = ДанныеЗаполнения.ЛьготноеФинансированиеСГосПоддержкой;
		НаПримереДокумента = ДанныеЗаполнения.НаПримереДокумента;
		НеФормироватьОбращения = ДанныеЗаполнения.НеФормироватьОбращения;
		ОГРНИсточника = ДанныеЗаполнения.ОГРНПользователяНБКИ;
		ПередаватьСтароеИмя = ДанныеЗаполнения.ПередаватьСтароеИмя;
		ПоУмолчаниюБанкротство = ДанныеЗаполнения.ПоУмолчаниюБанкротство;
		ПоУмолчаниюДееспособность = ДанныеЗаполнения.ПоУмолчаниюДееспособность;
		ПоУмолчаниюДО = ДанныеЗаполнения.ПоУмолчаниюДО;
		ПоУмолчаниюНаследник = ДанныеЗаполнения.ПоУмолчаниюНаследник;
		ПоУмолчаниюНеденежноеОбязательство = ДанныеЗаполнения.ПоУмолчаниюНеденежноеОбязательство;
		ПоУмолчаниюОбеспечение = ДанныеЗаполнения.ПоУмолчаниюОбеспечение;
		ПоУмолчаниюПоручитель = ДанныеЗаполнения.ПоУмолчаниюПоручитель;
		ПоУмолчаниюПродажа = ДанныеЗаполнения.ПоУмолчаниюПродажа;
		ПоУмолчаниюРасчетныйБлок = ДанныеЗаполнения.ПоУмолчаниюРасчетныйБлок;
		ПоУмолчаниюСоглашения = ДанныеЗаполнения.ПоУмолчаниюСоглашения;
		ПоУмолчаниюСудебныйБлок = ДанныеЗаполнения.ПоУмолчаниюСудебныйБлок;
		ПризнакЦессии = ДанныеЗаполнения.ПризнакЦессии;
		РеквизитПризнакНаличияРанееОсуществленныхПлатежей = ДанныеЗаполнения.РеквизитПризнакНаличияРанееОсуществленныхПлатежей;
		СтроковыеАдреса = ДанныеЗаполнения.СтроковыеАдреса;
		Фиксировать2_3ПриПолномПогашении = ДанныеЗаполнения.Фиксировать2_3ПриПолномПогашении;
		Формировать28ПриСудебномСписании = ДанныеЗаполнения.Формировать28ПриСудебномСписании;
		ЕдиныеЗначенияМаксМинПСК = Истина;
		ЕдиноеЗначениеМаксМинПроцентнойСтавки = Истина;
	
		Для Каждого ТекСтрокаПриобретательПраваТребования Из ДанныеЗаполнения.ПриобретательПраваТребования Цикл 
			НоваяСтрока = ПриобретательПраваТребования.Найти(ТекСтрокаПриобретательПраваТребования.Поле, "Поле");
			Если ЗначениеЗаполнено(НоваяСтрока) Тогда
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрокаПриобретательПраваТребования,, "НомерПоказателяНБКИФЛ, НомерПоказателяНБКИЮЛ, НаименованиеПоляРегистраКИ");
			КонецЕсли;

		КонецЦикла;
		
		Для Каждого ТекСтрокаСделка Из ДанныеЗаполнения.Сделка Цикл 			
			
			Если ТекСтрокаСделка.Поле = "Полная стоимость кредита или займа в процентах годовых" Тогда
				НоваяСтрока = Сделка.Найти("Минимальная полная стоимость кредита или займа в процентах годовых", "Поле");
				Если ЗначениеЗаполнено(НоваяСтрока) Тогда
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрокаСделка, ,"НомерПоказателяНБКИФЛ, НомерПоказателяНБКИЮЛ, НаименованиеПоляРегистраКИ, Поле"); 
				КонецЕсли;
				
				НоваяСтрока = Сделка.Найти("Максимальная полная стоимость кредита или займа в процентах годовых", "Поле");
				Если ЗначениеЗаполнено(НоваяСтрока) Тогда
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрокаСделка, ,"НомерПоказателяНБКИФЛ, НомерПоказателяНБКИЮЛ, НаименованиеПоляРегистраКИ, Поле"); 
				КонецЕсли; 
				
				НоваяСтрока = Сделка.Найти("Максимальная полная стоимость кредита или займа в процентах годовых Наличные ДС", "Поле");
				Если ЗначениеЗаполнено(НоваяСтрока) Тогда
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрокаСделка, ,"НомерПоказателяНБКИФЛ, НомерПоказателяНБКИЮЛ, НаименованиеПоляРегистраКИ, Поле"); 
				КонецЕсли;
				
				НоваяСтрока = Сделка.Найти("Максимальная полная стоимость кредита или займа в процентах годовых Безналичный порядок", "Поле");
				Если ЗначениеЗаполнено(НоваяСтрока) Тогда
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрокаСделка, ,"НомерПоказателяНБКИФЛ, НомерПоказателяНБКИЮЛ, НаименованиеПоляРегистраКИ, Поле"); 
				КонецЕсли;
			ИначеЕсли ТекСтрокаСделка.Поле = "Полная стоимость кредита или займа в денежном выражении" Тогда
				НоваяСтрока = Сделка.Найти("Минимальная полная стоимость кредита или займа в денежном выражении", "Поле");
				Если ЗначениеЗаполнено(НоваяСтрока) Тогда
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрокаСделка, ,"НомерПоказателяНБКИФЛ, НомерПоказателяНБКИЮЛ, НаименованиеПоляРегистраКИ, Поле"); 
				КонецЕсли;
				
				НоваяСтрока = Сделка.Найти("Максимальная полная стоимость кредита или займа в денежном выражении", "Поле");
				Если ЗначениеЗаполнено(НоваяСтрока) Тогда
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрокаСделка, ,"НомерПоказателяНБКИФЛ, НомерПоказателяНБКИЮЛ, НаименованиеПоляРегистраКИ, Поле"); 
				КонецЕсли; 
								
			ИначеЕсли ТекСтрокаСделка.Поле = "Процентная ставка" Тогда 
				НоваяСтрока = Сделка.Найти("Минимальная процентная ставка", "Поле");
				Если ЗначениеЗаполнено(НоваяСтрока) Тогда
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрокаСделка, ,"НомерПоказателяНБКИФЛ, НомерПоказателяНБКИЮЛ, НаименованиеПоляРегистраКИ, Поле"); 
				КонецЕсли; 	
				
				НоваяСтрока = Сделка.Найти("Максимальная процентная ставка", "Поле");
				Если ЗначениеЗаполнено(НоваяСтрока) Тогда
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрокаСделка, ,"НомерПоказателяНБКИФЛ, НомерПоказателяНБКИЮЛ, НаименованиеПоляРегистраКИ, Поле"); 
				КонецЕсли;  
			ИначеЕсли ТекСтрокаСделка.НомерПоказателяНБКИФЛ = "C18.2" Тогда
				НоваяСтрока = Сделка.Найти("C17.4", "НомерПоказателяНБКИФЛ");
				Если ЗначениеЗаполнено(НоваяСтрока) Тогда
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрокаСделка, ,"НомерПоказателяНБКИФЛ, НомерПоказателяНБКИЮЛ, НаименованиеПоляРегистраКИ, Поле");
				КонецЕсли;			
			ИначеЕсли ТекСтрокаСделка.НомерПоказателяНБКИФЛ = "C19.3" Тогда
				НоваяСтрока = Сделка.Найти("C19.1.2", "НомерПоказателяНБКИФЛ");
				Если ЗначениеЗаполнено(НоваяСтрока) Тогда
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрокаСделка, ,"НомерПоказателяНБКИФЛ, НомерПоказателяНБКИЮЛ, НаименованиеПоляРегистраКИ, Поле");
				КонецЕсли;
			ИначеЕсли ТекСтрокаСделка.НомерПоказателяНБКИФЛ = "C19.4" Тогда
				НоваяСтрока = Сделка.Найти("C19.1.3", "НомерПоказателяНБКИФЛ");
				Если ЗначениеЗаполнено(НоваяСтрока) Тогда
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрокаСделка, ,"НомерПоказателяНБКИФЛ, НомерПоказателяНБКИЮЛ, НаименованиеПоляРегистраКИ, Поле");
				КонецЕсли;
	        ИначеЕсли ТекСтрокаСделка.НомерПоказателяНБКИФЛ = "C19.5" Тогда
				НоваяСтрока = Сделка.Найти("C19.1.4", "НомерПоказателяНБКИФЛ");
				Если ЗначениеЗаполнено(НоваяСтрока) Тогда
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрокаСделка, ,"НомерПоказателяНБКИФЛ, НомерПоказателяНБКИЮЛ, НаименованиеПоляРегистраКИ, Поле");
				КонецЕсли;
			ИначеЕсли ТекСтрокаСделка.НомерПоказателяНБКИФЛ = "C19.6" Тогда
				НоваяСтрока = Сделка.Найти("C19.1.5", "НомерПоказателяНБКИФЛ");
				Если ЗначениеЗаполнено(НоваяСтрока) Тогда
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрокаСделка, ,"НомерПоказателяНБКИФЛ, НомерПоказателяНБКИЮЛ, НаименованиеПоляРегистраКИ, Поле");
				КонецЕсли;
			ИначеЕсли ТекСтрокаСделка.НомерПоказателяНБКИФЛ = "C19.7" Тогда
				НоваяСтрока = Сделка.Найти("C19.1.6", "НомерПоказателяНБКИФЛ");
				Если ЗначениеЗаполнено(НоваяСтрока) Тогда
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрокаСделка, ,"НомерПоказателяНБКИФЛ, НомерПоказателяНБКИЮЛ, НаименованиеПоляРегистраКИ, Поле");
				КонецЕсли;   
			ИначеЕсли ТекСтрокаСделка.НомерПоказателяНБКИФЛ = "C29.1" Тогда
				Если Не ДействующиеДоговоры Тогда
					НоваяСтрока = Сделка.Найти("C29.1", "НомерПоказателяНБКИФЛ");
					Если ЗначениеЗаполнено(НоваяСтрока) Тогда
						ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрокаСделка, ,"НомерПоказателяНБКИФЛ, НомерПоказателяНБКИЮЛ, НаименованиеПоляРегистраКИ, Поле");
					КонецЕсли;

					НоваяСтрока = Сделка.Найти("C29.3", "НомерПоказателяНБКИФЛ");
					Если ЗначениеЗаполнено(НоваяСтрока) Тогда
						ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрокаСделка, ,"НомерПоказателяНБКИФЛ, НомерПоказателяНБКИЮЛ, НаименованиеПоляРегистраКИ, Поле");
					КонецЕсли;
				КонецЕсли;	
			Иначе	
				НоваяСтрока = Сделка.Найти(ТекСтрокаСделка.НомерПоказателяНБКИФЛ, "НомерПоказателяНБКИФЛ");
				Если ЗначениеЗаполнено(НоваяСтрока) Тогда
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрокаСделка, ,"НомерПоказателяНБКИФЛ, НомерПоказателяНБКИЮЛ, НаименованиеПоляРегистраКИ, Поле");
				КонецЕсли;	
				
			КонецЕсли;
			
		КонецЦикла;
		
		Для Каждого ТекСтрокаСубъектНаследник Из ДанныеЗаполнения.СубъектНаследник Цикл
			НоваяСтрока = СубъектНаследник.Найти(ТекСтрокаСубъектНаследник.НомерПоказателяНБКИФЛ, "НомерПоказателяНБКИФЛ");
			Если ЗначениеЗаполнено(НоваяСтрока) Тогда
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрокаСубъектНаследник, ,"НомерПоказателяНБКИФЛ, НаименованиеПоляРегистраКИ");
			КонецЕсли;
		КонецЦикла;  
		
		Для Каждого ТекСтрокаСубъектПоручитель Из ДанныеЗаполнения.СубъектПоручитель Цикл
			НоваяСтрока = СубъектПоручитель.Найти(ТекСтрокаСубъектПоручитель.НомерПоказателяНБКИФЛ, "НомерПоказателяНБКИФЛ");
			Если ЗначениеЗаполнено(НоваяСтрока) Тогда
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрокаСубъектПоручитель, ,"НомерПоказателяНБКИФЛ, НаименованиеПоляРегистраКИ");
			КонецЕсли; 			
		КонецЦикла;
		
		Для Каждого ТекСтрокаСубъектФизическоеЛицо Из ДанныеЗаполнения.СубъектФизическоеЛицо Цикл
			НоваяСтрока = СубъектФизическоеЛицо.Найти(ТекСтрокаСубъектФизическоеЛицо.НомерПоказателяНБКИФЛ, "НомерПоказателяНБКИФЛ");
			Если ЗначениеЗаполнено(НоваяСтрока) Тогда
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрокаСубъектФизическоеЛицо, ,"НомерПоказателяНБКИФЛ, НаименованиеПоляРегистраКИ");
			КонецЕсли;
		КонецЦикла;  
		
		Для Каждого ТекСтрокаСубъектЮридическоеЛицо Из ДанныеЗаполнения.СубъектЮридическоеЛицо Цикл
			НоваяСтрока = СубъектЮридическоеЛицо.Найти(ТекСтрокаСубъектЮридическоеЛицо.НомерПоказателяНБКИЮЛ, "НомерПоказателяНБКИЮЛ");
			Если ЗначениеЗаполнено(НоваяСтрока) Тогда
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрокаСубъектЮридическоеЛицо, ,"НомерПоказателяНБКИЮЛ, НаименованиеПоляРегистраКИ");
			КонецЕсли;
		КонецЦикла; 
		
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = "Осуществлен перенос настроек. ПСК и Процентная ставка перенесены в новые поля по умолчанию. Проверьте их."
							+ "Обратите внимание на новые блоки и поля. Настройте их: "
							+ Символы.ПС + "4 и 2" + Символы.ПС + "ЮЛ 5" + Символы.ПС + "ЮЛ 8 Упразднено" + Символы.ПС + "17 и 10" + Символы.ПС + "18 и 11" + Символы.ПС 
							+ "19 и 12" + Символы.ПС + "19.1 и 12.1" + Символы.ПС
							+ "ФЛ 22" + Символы.ПС + "ФЛ 29" + Символы.ПС + "ФЛ 29.1" + Символы.ПС + "30 и 21" + Символы.ПС + "31 и 22" + Символы.ПС + "32 и 23" + Символы.ПС 
							+ "35 и 26" + Символы.ПС + "39 и 30" + Символы.ПС + "54 и 44" + Символы.ПС + "55 и 45" + Символы.ПС;
		Сообщение.Сообщить();
						
		
	КонецЕсли;
	
	//Дописать при копировании упорядочить поля блока 51 - продажа, ЮЛ
	//}}__КОНСТРУКТОР_ВВОД_НА_ОСНОВАНИИ
КонецПроцедуры   


Процедура ЗаполнитьПоляФЛ(ИмяТаблицыФЛ) Экспорт
	
	ТаблицаФЛ = ЭтотОбъект[ИмяТаблицыФЛ];
	
	МассивПредыдущиеДанные = Новый Массив;
	МассивПредыдущиеДанные.Добавить("Дата выдачи документа с измененным именем"); 
	
	Для каждого ЭлементФЛ из МассивПредыдущиеДанные Цикл 
		Нстр = ТаблицаФЛ.Добавить(); 
		Нстр.Поле = ЭлементФЛ; 
		НСтр.НомерПоказателяНБКИФЛ = "C2.5";
	КонецЦикла;	

	
	МассивПоказателейДатаИМесто = Новый Массив;
	МассивПоказателейДатаИМесто.Добавить("Дата рождения");
	МассивПоказателейДатаИМесто.Добавить("Код страны ОКСМ");
	МассивПоказателейДатаИМесто.Добавить("Место рождения");   
	
	Сч = 1;
	Для каждого ЭлементФЛ из МассивПоказателейДатаИМесто Цикл  
		ШаблонНомера = "C3.";
		Нстр = ТаблицаФЛ.Добавить(); 
		Нстр.Поле = ЭлементФЛ; 
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомера + строка(Сч);
		Сч = Сч + 1;
	КонецЦикла;	
	
	МассивПоказателейТекущийДУЛ = Новый Массив;
	
	МассивПоказателейТекущийДУЛ.Добавить("Страна гражданства документа, удостоверяющего личность");
	МассивПоказателейТекущийДУЛ.Добавить("Тип документа, удостоверяющего личность");
	МассивПоказателейТекущийДУЛ.Добавить("Серия документа, удостоверяющего личность");
	МассивПоказателейТекущийДУЛ.Добавить("Номер документа, удостоверяющего личность");
	МассивПоказателейТекущийДУЛ.Добавить("Дата выдачи документа, удостоверяющего личность");
	МассивПоказателейТекущийДУЛ.Добавить("Кем выдан документ, удостоверяющий личность");
	МассивПоказателейТекущийДУЛ.Добавить("Код подразделения выдачи документа, удостоверяющего личность");
	МассивПоказателейТекущийДУЛ.Добавить("Дата окончания срока действия документа,удостоверяющего личность");
	//Единый формат
	МассивПоказателейТекущийДУЛ.Добавить("Сведения о гражданстве");
	
	Сч = 1;
	Для каждого ЭлементФЛ из МассивПоказателейТекущийДУЛ Цикл  
		ШаблонНомера = "C4.";
		Нстр = ТаблицаФЛ.Добавить(); 
		Нстр.Поле = ЭлементФЛ; 
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомера + строка(Сч); 
		Если СтрНайти(ЭлементФЛ, "Страна") > 0 или СтрНайти(ЭлементФЛ, "Тип") > 0 Тогда
			Сч = Сч+1;
			НСтр.НомерПоказателяНБКИФЛ  = НСтр.НомерПоказателяНБКИФЛ+ "." + строка(Сч); 
		КонецЕсли;
		Сч = Сч + 1;
	КонецЦикла;	
	
	МассивПоказателейПредыдущийДУЛ = Новый Массив; 
	
	МассивПоказателейПредыдущийДУЛ.Добавить("Признак смены документа, удостоверяющего личность");
	МассивПоказателейПредыдущийДУЛ.Добавить("Страна гражданства старого документа, удостоверяющего личность");
	МассивПоказателейПредыдущийДУЛ.Добавить("Тип старого документа, удостоверяющего личность");
	МассивПоказателейПредыдущийДУЛ.Добавить("Серия старого документа, удостоверяющего личность");
	МассивПоказателейПредыдущийДУЛ.Добавить("Номер старого документа, удостоверяющего личность");
	МассивПоказателейПредыдущийДУЛ.Добавить("Дата выдачи старого документа, удостоверяющего личность");
	МассивПоказателейПредыдущийДУЛ.Добавить("Кем выдан старый документ, удостоверяющий личность");
	МассивПоказателейПредыдущийДУЛ.Добавить("Код подразделения выдачи старого документа, удостоверяющего личность");
	МассивПоказателейПредыдущийДУЛ.Добавить("Дата окончания срока действия старого документа, удостоверяющего личность");
	
	Сч = 1;
	Для каждого ЭлементФЛ из МассивПоказателейПредыдущийДУЛ Цикл  
		ШаблонНомера = "C5.";
		Нстр = ТаблицаФЛ.Добавить(); 
		Нстр.Поле = ЭлементФЛ; 
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомера + строка(Сч);
		Если СтрНайти(ЭлементФЛ, "Страна") > 0 или СтрНайти(ЭлементФЛ, "Тип") > 0 Тогда
			Сч = Сч+1;
			НСтр.НомерПоказателяНБКИФЛ = НСтр.НомерПоказателяНБКИФЛ+ "." + строка(Сч); 
		КонецЕсли; 
		Сч = Сч + 1;
	КонецЦикла;	
	
	
	МассивНалогоплательщик = Новый Массив;
	
	МассивНалогоплательщик.Добавить("Тип номера налогоплательщика");
	МассивНалогоплательщик.Добавить("Номер налогоплательщика"); 
	МассивНалогоплательщик.Добавить("Регистрационный номер");
	//5.0
	МассивНалогоплательщик.Добавить("Признак специального налогового режима"); 
	
	Сч = 1;
	Для каждого ЭлементФЛ из МассивНалогоплательщик Цикл  
		ШаблонНомера = "C6.";
		Нстр = ТаблицаФЛ.Добавить(); 
		Нстр.Поле = ЭлементФЛ; 
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомера + строка(Сч);  

		Сч = Сч + 1;
	КонецЦикла;	
	
	
	МассивСНИЛС = Новый Массив;
		
	МассивСНИЛС.Добавить("СНИЛС");     
	
	Для каждого ЭлементФЛ из МассивСНИЛС Цикл 
		Нстр = ТаблицаФЛ.Добавить(); 
		Нстр.Поле = ЭлементФЛ; 
		НСтр.НомерПоказателяНБКИФЛ = "C7.1";
		НСтр.ЗаполнятьпоУмолчанию = "Нет";

	КонецЦикла;	
	
	МассивАдресаРегистрации = Новый Массив; 
	МассивАдресаРегистрации.Добавить("Адрес Регистрации");
	МассивАдресаРегистрации.Добавить("Место жительства или прибывание или не указана регистрация");
	МассивАдресаРегистрации.Добавить("Индекс регистрации");
	МассивАдресаРегистрации.Добавить("Страна регистрации");
	МассивАдресаРегистрации.Добавить("Номер адреса ФИАС");
	МассивАдресаРегистрации.Добавить("Населенный пункт регистрации");
	МассивАдресаРегистрации.Добавить("Улица регистрации");
	МассивАдресаРегистрации.Добавить("Дом регистрации");
	МассивАдресаРегистрации.Добавить("Владение регистрации");
	МассивАдресаРегистрации.Добавить("Корпус регистрации");
	МассивАдресаРегистрации.Добавить("Строение регистрации");
	МассивАдресаРегистрации.Добавить("Квартира регистрации");
	МассивАдресаРегистрации.Добавить("Дата регистрации");
	МассивАдресаРегистрации.Добавить("Наименование регистрирующего органа");
	МассивАдресаРегистрации.Добавить("Код подразделения, осуществившего регистрацию");
	
	Сч = 0;
	Для каждого ЭлементФЛ из МассивАдресаРегистрации Цикл  
		ШаблонНомера = "C8.";
		Нстр = ТаблицаФЛ.Добавить(); 
		Нстр.Поле = ЭлементФЛ; 
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомера + строка(Сч);  
		Если СтрНайти(ЭлементФЛ, "Адрес") > 0 Тогда
			НСтр.НомерПоказателяНБКИФЛ = ШаблонНомера; 
		КонецЕсли; 
		Если СтрНайти(ЭлементФЛ, "Страна") > 0 Тогда
			Сч = Сч + 1;
			НСтр.НомерПоказателяНБКИФЛ = НСтр.НомерПоказателяНБКИФЛ + "." + строка(Сч); 
		КонецЕсли;
		Если СтрНайти(ЭлементФЛ, "Населенный") > 0 Тогда
			Сч = Сч + 1;
			НСтр.НомерПоказателяНБКИФЛ = НСтр.НомерПоказателяНБКИФЛ + "." + строка(Сч); 
		КонецЕсли;
		Сч = Сч + 1;
	КонецЦикла;	

	МассивАдресаФактического = Новый Массив;
	
	МассивАдресаФактического.Добавить("Адрес Фактический");
	МассивАдресаФактического.Добавить("Признак отличия фактического места жительства");
	МассивАдресаФактического.Добавить("Индекс фактический");
	МассивАдресаФактического.Добавить("Страна фактическая");
	МассивАдресаФактического.Добавить("Номер адреса ФИАС");
	МассивАдресаФактического.Добавить("Населенный пункт фактический");
	МассивАдресаФактического.Добавить("Улица фактическая");
	МассивАдресаФактического.Добавить("Дом фактический");
	МассивАдресаФактического.Добавить("Владение фактическое");
	МассивАдресаФактического.Добавить("Корпус фактический");
	МассивАдресаФактического.Добавить("Строение фактическое");
	МассивАдресаФактического.Добавить("Квартира фактическая");   
	
	Сч = 0;
	Для каждого ЭлементФЛ из МассивАдресаФактического Цикл  
		ШаблонНомера = "C9.";
		Нстр = ТаблицаФЛ.Добавить(); 
		Нстр.Поле = ЭлементФЛ; 
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомера + строка(Сч); 
		Если СтрНайти(ЭлементФЛ,"Адрес",,,) > 0 Тогда
			НСтр.НомерПоказателяНБКИФЛ = ШаблонНомера; 
		КонецЕсли; 
		Если СтрНайти(ЭлементФЛ,"Страна",,,) > 0 Тогда
			Сч = Сч+1;
			НСтр.НомерПоказателяНБКИФЛ = НСтр.НомерПоказателяНБКИФЛ+ "." + строка(Сч); 
		КонецЕсли;
		Если СтрНайти(ЭлементФЛ,"Населенный",,,) > 0 Тогда
			Сч = Сч+1;
			НСтр.НомерПоказателяНБКИФЛ = НСтр.НомерПоказателяНБКИФЛ+ "." + строка(Сч); 
		КонецЕсли; 
		Сч = Сч + 1;
	КонецЦикла;	
	
	МассивКонтактнаяИнформация = Новый Массив;	
	МассивКонтактнаяИнформация.Добавить("Номер телефона"); 
	МассивКонтактнаяИнформация.Добавить("Комментарий"); 
	МассивКонтактнаяИнформация.Добавить("Адрес электронной почты");
	
	Сч = 1;
	Для каждого ЭлементФЛ из МассивКонтактнаяИнформация Цикл 
		ШаблонНомера = "C10.";
		Нстр = ТаблицаФЛ.Добавить(); 
		Нстр.Поле = ЭлементФЛ; 
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомера + строка(Сч);
		Сч = Сч + 1;
	КонецЦикла;	

    МассивИП = Новый Массив;	
	
	МассивИП.Добавить("Признак ИП");
	МассивИП.Добавить("Регистрационный номер"); 
	МассивИП.Добавить("Дата регистрации индивидуального предпринимателя");
	Сч = 1;      
	
	Для каждого ЭлементФЛ из МассивИП Цикл 
		ШаблонНомера = "C11.";
		Нстр = ТаблицаФЛ.Добавить(); 
		Нстр.Поле = ЭлементФЛ; 
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомера + строка(Сч);
		Сч = Сч + 1;
	КонецЦикла;	
	
	МассивДееспособность = Новый Массив;
	
	МассивДееспособность.Добавить("Код дееспособности");
	МассивДееспособность.Добавить("Дата вступления в силу решения суда о признании недееспособным или об ограничении дееспособности"); 
	МассивДееспособность.Добавить("Номер решения суда");
	МассивДееспособность.Добавить("Наименование суда");
	МассивДееспособность.Добавить("Дата вступления в силу решения суда о признании дееспособным или об отмене ограничения дееспособности"); 
	МассивДееспособность.Добавить("Номер решения суда"); 
	МассивДееспособность.Добавить("Наименование суда"); 
	
	Сч = 1;
	Для каждого ЭлементФЛ из МассивДееспособность Цикл  
		ШаблонНомера = "C12.";
		Нстр = ТаблицаФЛ.Добавить(); 
		Нстр.Поле = ЭлементФЛ; 
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомера + строка(Сч); 
		Сч = Сч + 1;
	КонецЦикла;	 
	
	//Единый формат Банкротство
	
	МассивБанкротствоСведения = Новый Массив;
	
	МассивБанкротствоСведения.Добавить("Признак дела о банкротстве");
	МассивБанкротствоСведения.Добавить("Код стадии рассмотрения дела"); 
	МассивБанкротствоСведения.Добавить("Дата публикации в ЕФРСБ сведений о стадии рассмотрения дела");
	МассивБанкротствоСведения.Добавить("Ссылка на публикацию в ЕФРСБ");
	МассивБанкротствоСведения.Добавить("Дата публикации в ЕФРСБ сообщения о неправомерных действиях"); 
	МассивБанкротствоСведения.Добавить("Признак преднамеренного или фиктивного банкротства"); 
	МассивБанкротствоСведения.Добавить("Дата публикации в ЕФРСБ сообщения о признаках преднамеренного или фиктивного банкротства"); 
	МассивБанкротствоСведения.Добавить("Дополнительные сведения по делу"); 
	
	
	Сч = 1;
	Для каждого ЭлементФЛ из МассивБанкротствоСведения Цикл  
		ШаблонНомера = "C13.";
		Нстр = ТаблицаФЛ.Добавить(); 
		Нстр.Поле = ЭлементФЛ; 
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомера + строка(Сч); 
		Сч = Сч + 1;
	КонецЦикла;	
	
	МассивБанкротствоЗавершение = Новый Массив;
	
	МассивБанкротствоЗавершение.Добавить("Признак завершения расчетов с кредиторами");
	МассивБанкротствоЗавершение.Добавить("Дата завершения расчетов с кредиторами"); 
	МассивБанкротствоЗавершение.Добавить("Признак освобождения от исполнения требований кредиторов");
	МассивБанкротствоЗавершение.Добавить("Дата освобождения от исполнения требований кредиторов");
	МассивБанкротствоЗавершение.Добавить("Дата восстановления обязательства"); 
	
	Сч = 1;
	Для каждого ЭлементФЛ из МассивБанкротствоЗавершение Цикл  
		ШаблонНомера = "C14.";
		Нстр = ТаблицаФЛ.Добавить(); 
		Нстр.Поле = ЭлементФЛ; 
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомера + строка(Сч); 
		Сч = Сч + 1;
	КонецЦикла;	 
	
	МассивПоказателейФЛ = Новый Массив;	
	
	МассивПоказателейФЛ.Добавить("Признак смерти физического лица");
	Для каждого ЭлементФЛ из МассивПоказателейФЛ Цикл 
		Нстр = ТаблицаФЛ.Добавить();
		НСтр.НомерПоказателяНБКИФЛ = "C.";
		Нстр.Поле = ЭлементФЛ; 
	КонецЦикла;	
КонецПроцедуры      

Процедура ЗаполнитьПоляЮЛ() Экспорт   
	
	МассивНаименованиеЮЛ = Новый Массив;
		
	МассивНаименованиеЮЛ.Добавить("Полное наименование");
	МассивНаименованиеЮЛ.Добавить("Сокращенное наименование");
	МассивНаименованиеЮЛ.Добавить("Иное наименование");
	МассивНаименованиеЮЛ.Добавить("Признак смены наименования");
	МассивНаименованиеЮЛ.Добавить("Иное наименование"); 
	МассивНаименованиеЮЛ.Добавить("Полное до его смены");
	
	Сч = 1;
	Для каждого ЭлементЮЛ из МассивНаименованиеЮЛ Цикл  
		ШаблонНомера = "B1.";
		Нстр = СубъектЮридическоеЛицо.Добавить(); 
		Нстр.Поле = ЭлементЮЛ; 
		НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомера + строка(Сч);
		Сч = Сч + 1;
	КонецЦикла;	 
	
	МассивЮрАдрес = Новый Массив;
	
	МассивЮрАдрес.Добавить("Юридический Адрес");
//	МассивЮрАдрес.Добавить("Индекс юрадрес");
	МассивЮрАдрес.Добавить("Страна юрадрес");  
	МассивЮрАдрес.Добавить("Номер ФИАС юрадрес");
	МассивЮрАдрес.Добавить("Населенный пункт юрадрес");
	МассивЮрАдрес.Добавить("Улица юрадрес");
	МассивЮрАдрес.Добавить("Дом юрадрес");
	МассивЮрАдрес.Добавить("Владение юрадрес");
	МассивЮрАдрес.Добавить("Корпус юрадрес");
	МассивЮрАдрес.Добавить("Строение юрадрес");
	МассивЮрАдрес.Добавить("Помещение или офис юрадрес");
	МассивЮрАдрес.Добавить("Номер телефона"); 
	МассивЮрАдрес.Добавить("Комментарий"); 
	МассивЮрАдрес.Добавить("Электронная почта");
    МассивЮрАдрес.Добавить("Признак иностранного ЮЛ");
	
	Сч = 0;
	Для каждого ЭлементЮЛ из МассивЮрАдрес Цикл  
		ШаблонНомера = "B2.";
		Нстр = СубъектЮридическоеЛицо.Добавить(); 
		Нстр.Поле = ЭлементЮЛ; 
		НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомера + строка(Сч);
		Если СтрНайти(ЭлементЮЛ,"Адрес",,,) > 0 Тогда
			НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомера; 
		КонецЕсли;
		Если СтрНайти(ЭлементЮЛ,"Страна",,,) > 0 Тогда
			Сч = Сч + 1;
			НСтр.НомерПоказателяНБКИЮЛ = НСтр.НомерПоказателяНБКИЮЛ+ "." + строка(Сч); 
		КонецЕсли;
		Если СтрНайти(ЭлементЮЛ,"Населенный",,,) > 0 Тогда
			Сч = Сч + 1;
			НСтр.НомерПоказателяНБКИЮЛ = НСтр.НомерПоказателяНБКИЮЛ+ "." + строка(Сч); 
		КонецЕсли; 

		Сч = Сч + 1;
	КонецЦикла;	 
	
    МассивРегистрационныеНомера = Новый Массив;  
	МассивРегистрационныеНомера.Добавить("Регистрационный номер");
	МассивРегистрационныеНомера.Добавить("Идентификатор LEI");
	Сч = 1;
	Для каждого ЭлементЮЛ из МассивРегистрационныеНомера Цикл  
		ШаблонНомера = "B3.";
		Нстр = СубъектЮридическоеЛицо.Добавить(); 
		Нстр.Поле = ЭлементЮЛ; 
		НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомера + строка(Сч);
		Сч = Сч + 1;
	КонецЦикла;	 
  
    МассивНалогоплательщик = Новый Массив;  
	МассивНалогоплательщик.Добавить("Код номера налогоплательщика");
	МассивНалогоплательщик.Добавить("Номер налогоплательщика");

	Сч = 1;
	Для каждого ЭлементЮЛ из МассивНалогоплательщик Цикл  
		ШаблонНомера = "B4.";
		Нстр = СубъектЮридическоеЛицо.Добавить(); 
		Нстр.Поле = ЭлементЮЛ; 
		НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомера + строка(Сч); 
		Сч = Сч + 1;
	КонецЦикла;	
	
	МассивРеорганизацияИлиСмена = Новый Массив;
		
	//МассивРеорганизацияИлиСмена.Добавить("Признак смены наименования");
	МассивРеорганизацияИлиСмена.Добавить("Признак реорганизации");
	МассивРеорганизацияИлиСмена.Добавить("Полное наименование до его смены или наименование лица, от которого перешли права и обязанности");
	МассивРеорганизацияИлиСмена.Добавить("Сокращенное наименование до его смены или наименование лица, от которого перешли права и обязанности");
	МассивРеорганизацияИлиСмена.Добавить("Иное наименование");
	МассивРеорганизацияИлиСмена.Добавить("Регистрационный номер лица, от которого перешли права и обязанности");  	
	МассивРеорганизацияИлиСмена.Добавить("Дата правопреемства или окончания реорганизации");		
			
	Сч = 2;
	Для каждого ЭлементЮЛ из МассивРеорганизацияИлиСмена Цикл  
		ШаблонНомера = "B5.";
		Нстр = СубъектЮридическоеЛицо.Добавить(); 
		Нстр.Поле = ЭлементЮЛ; 
		НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомера + строка(Сч);
		Сч = Сч + 1;
	КонецЦикла;  
	
	
	МассивБанкротствоСведения = Новый Массив;
	
	МассивБанкротствоСведения.Добавить("Признак дела о банкротстве");
	МассивБанкротствоСведения.Добавить("Код стадии рассмотрения дела"); 
	МассивБанкротствоСведения.Добавить("Дата публикации в ЕФРСБ сведений о стадии рассмотрения дела");
	МассивБанкротствоСведения.Добавить("Ссылка на публикацию в ЕФРСБ");
	МассивБанкротствоСведения.Добавить("Дата публикации в ЕФРСБ сообщения о неправомерных действиях"); 
	МассивБанкротствоСведения.Добавить("Признак преднамеренного или фиктивного банкротства"); 
	МассивБанкротствоСведения.Добавить("Дата публикации в ЕФРСБ сообщения о признаках преднамеренного или фиктивного банкротства"); 
	МассивБанкротствоСведения.Добавить("Дополнительные сведения по делу");  
	
	Сч = 1;
	Для каждого ЭлементЮЛ из МассивБанкротствоСведения Цикл  
		ШаблонНомера = "B6.";
		Нстр = СубъектЮридическоеЛицо.Добавить(); 
		Нстр.Поле = ЭлементЮЛ; 
		НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомера + строка(Сч);
		Сч = Сч + 1;
	КонецЦикла;	   

	   	
	МассивБанкротствоЗавершение = Новый Массив;
	
	МассивБанкротствоЗавершение.Добавить("Признак завершения расчетов с кредиторами");
	МассивБанкротствоЗавершение.Добавить("Дата завершения расчетов с кредиторами");
	
	Сч = 1;
	Для каждого ЭлементЮЛ из МассивБанкротствоЗавершение Цикл  
		ШаблонНомера = "B7.";
		Нстр = СубъектЮридическоеЛицо.Добавить(); 
		Нстр.Поле = ЭлементЮЛ; 
		НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомера + строка(Сч);
		Сч = Сч + 1;
	КонецЦикла;	 
	
                        
	//МассивПереходПравИОбязанностей = Новый Массив;
	//	
	//МассивПереходПравИОбязанностей.Добавить("Признак наличия лица, от которого перешли права и обязанности");
	//МассивПереходПравИОбязанностей.Добавить("Признак регистрации в Российской Федерации");
	//МассивПереходПравИОбязанностей.Добавить("Полное наименование лица, от которого перешли права и обязанности");
	//МассивПереходПравИОбязанностей.Добавить("Регистрационный номер лица, от которого перешли права и обязанности"); 
	//			
	//Сч = 1;
	//Для каждого ЭлементЮЛ из МассивПереходПравИОбязанностей Цикл  
	//	ШаблонНомера = "B8.";
	//	Нстр = Объект.СубъектЮридическоеЛицо.Добавить(); 
	//	Нстр.Поле = ЭлементЮЛ; 
	//	НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомера + строка(Сч);
	//	Сч = Сч + 1;
	//КонецЦикла;	   
	
	МассивЛиквидацияЮЛ = Новый Массив;
		
	МассивЛиквидацияЮЛ.Добавить("Признак Ликвидации ЮЛ");
	//МассивЛиквидацияЮЛ.Добавить("Признак реорганизации");
	//МассивЛиквидацияЮЛ.Добавить("Полное наименование до его смены или наименование лица, от которого перешли права и обязанности");
	//МассивЛиквидацияЮЛ.Добавить("Сокращенное наименование до его смены или наименование лица, от которого перешли права и обязанности");
	//МассивЛиквидацияЮЛ.Добавить("Иное наименование");
	//МассивЛиквидацияЮЛ.Добавить("Регистрационный номер лица, от которого перешли права и обязанности");  	
	//МассивЛиквидацияЮЛ.Добавить("Дата правопреемства или окончания реорганизации");		
			
	Для каждого ЭлементЮЛ из МассивЛиквидацияЮЛ Цикл  
		ШаблонНомера = "B.";
		Нстр = СубъектЮридическоеЛицо.Добавить(); 
		Нстр.Поле = ЭлементЮЛ; 
	КонецЦикла;

КонецПроцедуры   

Процедура ЗаполнитьПоляСделки() Экспорт  
	//Идентификаторы сделки
	МассивУИД = Новый Массив;  
	МассивУИД.Добавить("УИд сделки");
	//5.0
	МассивУИД.Добавить("НомерСделки");   
	
	//Еиднй формат 
	МассивУИД.Добавить("УИд сделки, по которой задолженность была полностью или частично рефинансирована");  
	МассивУИД.Добавить("Дата совершения сделки");

	
	Сч = 1;
	Для каждого ЭлементСделка из МассивУИД Цикл 
		ШаблонНомераФ = "C17.";
		ШаблонНомераЮ = "B10.";
		
		Нстр = Сделка.Добавить(); 
		Нстр.Поле = ЭлементСделка;    
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Сч);
		НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомераЮ + строка(Сч); 
		Сч = Сч + 1;
	КонецЦикла;	
	
	МассивОбщиеСведения = Новый Массив; 
	
	//Условия сделки	
	МассивОбщиеСведения.Добавить("Код вида участия в сделке");
	МассивОбщиеСведения.Добавить("Код типа сделки");
	МассивОбщиеСведения.Добавить("Код вида займа или кредита");
	МассивОбщиеСведения.Добавить("Код цели займа или кредита");
	МассивОбщиеСведения.Добавить("Признак потребительского займа или кредита");
	МассивОбщиеСведения.Добавить("Признак использования платежной карты");
	МассивОбщиеСведения.Добавить("Признак возникновения обязательства в результате новации");
	МассивОбщиеСведения.Добавить("Признак денежного обязательства источника");
	МассивОбщиеСведения.Добавить("Признак денежного обязательства субъекта");
	МассивОбщиеСведения.Добавить("Дата прекращения обязательства субъекта по условиям сделки");
	//5.0
	МассивОбщиеСведения.Добавить("Код вида кредитора – заимодавца");
	МассивОбщиеСведения.Добавить("Признак возникновения обязательства в результате получения части прав кредитора от другого лица");
	МассивОбщиеСведения.Добавить("Признак кредитной линии");
	МассивОбщиеСведения.Добавить("Код типа кредитной линии");
	МассивОбщиеСведения.Добавить("Признак плавающей (переменной) процентной ставки");
	МассивОбщиеСведения.Добавить("Признак частичной передачи прав кредитора другому лицу");
	МассивОбщиеСведения.Добавить("УИд сделки, по которой права кредитора частично переданы другому лицу");
	МассивОбщиеСведения.Добавить("Дата возникновения обязательства субъекта"); 
	
	//Единый формат
	МассивОбщиеСведения.Добавить("Признак погашения по графику платежей");
	МассивОбщиеСведения.Добавить("Признак перевода или перехода обязательства субъекта");
	МассивОбщиеСведения.Добавить("Признак партнерского финансирования");

	
	
	Сч = 1;   
	СинхронизацияНомера = 0;
	Для каждого ЭлементСделка из МассивОбщиеСведения Цикл 
		Если Сч = 2 Тогда
			Сч = Сч + 1;
		КонецЕсли;	
		
		ШаблонНомераФ = "C18.";
		ШаблонНомераЮ = "B11.";   			
		
		Нстр = Сделка.Добавить(); 
		Нстр.Поле = ЭлементСделка;  
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Сч);	
		НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомераЮ + строка(Сч - СинхронизацияНомера);  
		
		
		Если ЭлементСделка = "Признак потребительского займа или кредита" ИЛИ ЭлементСделка = "Код вида кредитора – заимодавца" 
			ИЛИ ЭлементСделка = "Признак перевода или перехода обязательства субъекта" Тогда
			НСтр.НомерПоказателяНБКИЮЛ = ""; 
			СинхронизацияНомера = СинхронизацияНомера + 1;
		КонецЕсли;	

		Сч = Сч + 1;
	КонецЦикла;
	
	
	//Исходная сумма Сделки	
	//Единый формат
	МассивОбязательство = Новый Массив;
	МассивОбязательство.Добавить("Сумма обязательства"); 
	МассивОбязательство.Добавить("Валюта обязательства");
	МассивОбязательство.Добавить("Дата расчета"); 
	СинхронизацияНомера = 3;
	
	Сч = 1;
	Для каждого ЭлементСделка из МассивОбязательство Цикл 
		ШаблонНомераФ = "C19.";
		ШаблонНомераЮ = "B12.";
		
		Нстр = Сделка.Добавить(); 
		Нстр.Поле = ЭлементСделка;   
		Если ЭлементСделка = "Дата расчета" Тогда
			НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Сч + СинхронизацияНомера);
			НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомераЮ + строка(Сч + СинхронизацияНомера); 
		Иначе
			НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Сч);
			НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомераЮ + строка(Сч); 
		КонецЕсли;
		Сч = Сч + 1;
	КонецЦикла;	 
	
	//Если эта сделка - обеспечивает другую сделку	
	//Единый формат
	МассивОбеспечиваемоеОбязательство = Новый Массив;
	МассивОбеспечиваемоеОбязательство.Добавить("Признак обеспечиваемого обязательства"); 
	МассивОбеспечиваемоеОбязательство.Добавить("Сумма обеспечиваемого обязательства");
	МассивОбеспечиваемоеОбязательство.Добавить("Валюта обеспечиваемого обязательства"); 
	МассивОбеспечиваемоеОбязательство.Добавить("Код типа обеспечиваемого обязательства");
	МассивОбеспечиваемоеОбязательство.Добавить("Дата расчета");
	МассивОбеспечиваемоеОбязательство.Добавить("УИд сделки, в результате которой возникло обеспечиваемое обязательство"); 
	МассивОбеспечиваемоеОбязательство.Добавить("Лимит ответственности по обеспечиваемому обязательству");
	
	
	Сч = 1;
	Для каждого ЭлементСделка из МассивОбеспечиваемоеОбязательство Цикл 
		ШаблонНомераФ = "C19.1.";
		ШаблонНомераЮ = "B12.1.";
		
		Нстр = Сделка.Добавить(); 
		Нстр.Поле = ЭлементСделка;   
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Сч);
		НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомераЮ + строка(Сч);  
		Сч = Сч + 1;
	КонецЦикла;	

		
    //Солидарные Должники
	МассивПоказателейСолидарнойСделки = Новый Массив; 
	МассивПоказателейСолидарнойСделки.Добавить("Признак наличия солидарных должников");
	МассивПоказателейСолидарнойСделки.Добавить("Число солидарных должников");
	
	Сч = 1;
	Для каждого ЭлементСделка из МассивПоказателейСолидарнойСделки Цикл 
		ШаблонНомераФ = "C20.";
		ШаблонНомераЮ = "B13.";
		
		Нстр = Сделка.Добавить(); 
		Нстр.Поле = ЭлементСделка;    
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Сч);
		НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомераЮ + строка(Сч);
		Сч = Сч + 1;    
	КонецЦикла;	
	
	//график
	МассивПоказателейГрафика = Новый Массив; 
	МассивПоказателейГрафика.Добавить("Сумма ближайшего следующего платежа по основному долгу");
	МассивПоказателейГрафика.Добавить("Дата ближайшего следующего платежа по основному долгу");
	МассивПоказателейГрафика.Добавить("Сумма ближайшего следующего платежа по процентам");
	МассивПоказателейГрафика.Добавить("Дата ближайшего следующего платежа по процентам");
	МассивПоказателейГрафика.Добавить("Код частоты платежей");
	МассивПоказателейГрафика.Добавить("Сумма минимального платежа по кредитной карте");
	МассивПоказателейГрафика.Добавить("Дата начала беспроцентного периода");
	МассивПоказателейГрафика.Добавить("Дата окончания беспроцентного периода");
	МассивПоказателейГрафика.Добавить("Дата окончания срока уплаты процентов");
	
	Сч = 1;
	Для каждого ЭлементСделка из МассивПоказателейГрафика Цикл 
		ШаблонНомераФ = "C21.";
		ШаблонНомераЮ = "B14.";
		
		Нстр = Сделка.Добавить(); 
		Нстр.Поле = ЭлементСделка;    
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Сч);
		НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомераЮ + строка(Сч);
		Сч = Сч + 1;    
	КонецЦикла;
	
	// Полная стоимость кредита - ПСК
	
	МассивПСК = Новый Массив;
	МассивПСК.Добавить("Минимальная полная стоимость кредита или займа в процентах годовых");  
	МассивПСК.Добавить("Минимальная полная стоимость кредита или займа в денежном выражении");
	МассивПСК.Добавить("Дата расчета полной стоимости кредита или займа"); 
	
	//Единый формат 
	МассивПСК.Добавить("Максимальная полная стоимость кредита или займа в процентах годовых");  
	МассивПСК.Добавить("Максимальная полная стоимость кредита или займа в денежном выражении"); 
	МассивПСК.Добавить("Максимальная полная стоимость кредита или займа в процентах годовых Наличные ДС");  
	МассивПСК.Добавить("Максимальная полная стоимость кредита или займа в процентах годовых Безналичный порядок");

	
	Сч = 1;
	Для каждого ЭлементСделка из МассивПСК Цикл 
		ШаблонНомераФ = "C22.";		
		Нстр = Сделка.Добавить(); 
		Нстр.Поле = ЭлементСделка;    
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Сч);
		Сч = Сч + 1;    
	КонецЦикла;	
	
	//По инициативе Источника
	
	МассивИзмененияУсловий = Новый Массив; 
	
	МассивИзмененияУсловий.Добавить("Признак изменения договора");
	МассивИзмененияУсловий.Добавить("Дата изменения договора");
	МассивИзмененияУсловий.Добавить("Код вида изменения договора");
	МассивИзмененияУсловий.Добавить("Код специального изменения договора");
	МассивИзмененияУсловий.Добавить("Описание иного изменения договора");
	МассивИзмененияУсловий.Добавить("Дата вступления изменения договора в силу");
	МассивИзмененияУсловий.Добавить("Дата планового прекращения действия изменения договора");
	МассивИзмененияУсловий.Добавить("Дата фактического прекращения действия изменения договора");
	МассивИзмененияУсловий.Добавить("Код причины прекращения действия изменения договора");
	МассивИзмененияУсловий.Добавить("Курс конверсии валюты долга");
	
	Сч = 1;
	Для каждого ЭлементСделка из МассивИзмененияУсловий Цикл 
		ШаблонНомераФ = "C23.";
		ШаблонНомераЮ = "B15.";
		
		Нстр = Сделка.Добавить(); 
		Нстр.Поле = ЭлементСделка;    
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Сч);
		НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомераЮ + строка(Сч);  
		Сч = Сч + 1;    
	КонецЦикла;	     
	
	//По исходным условиям договора 
	МассивИзмененияИсходныхУсловий = Новый Массив; 
	
	МассивИзмененияИсходныхУсловий.Добавить("Признак изменения условий обязательства");
	МассивИзмененияИсходныхУсловий.Добавить("Код вида изменения условий обязательства");
	МассивИзмененияИсходныхУсловий.Добавить("Описание иного условий обязательства");
	МассивИзмененияИсходныхУсловий.Добавить("Дата начала действия изменения условий обязательства");
	
	Сч = 1;
	Для каждого ЭлементСделка из МассивИзмененияИсходныхУсловий Цикл 
		ШаблонНомераФ = "C23.1.";
		ШаблонНомераЮ = "B15.1.";
		
		Нстр = Сделка.Добавить(); 
		Нстр.Поле = ЭлементСделка;    
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Сч);
		НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомераЮ + строка(Сч);  
		Сч = Сч + 1;    
	КонецЦикла;	     
   	
	
	МассивПередачаФинансирования = Новый Массив;
	МассивПередачаФинансирования.Добавить("Дата передачи финансирования субъекту или возникновения обеспечения исполнения обязательства");
	//5.0
	МассивПередачаФинансирования.Добавить("Порядковый номер транша");  
	//Единый формат
	МассивОбязательство.Добавить("Сумма обязательства");
	
	Сч = 1;
	Для каждого ЭлементСделка из МассивПередачаФинансирования Цикл 
		ШаблонНомераФ = "C24.";
		ШаблонНомераЮ = "B16.";
		
		Нстр = Сделка.Добавить(); 
		Нстр.Поле = ЭлементСделка;    
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Сч);
		НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомераЮ + строка(Сч); 
		Сч = Сч + 1;    
	КонецЦикла;	
	
	МассивЛьготныйПериод = Новый Массив;
	МассивЛьготныйПериод.Добавить("Признак неподтвержденного льготного периода");
	Сч = 9;
	Для каждого ЭлементСделка из МассивЛьготныйПериод Цикл 
		ШаблонНомераФ = "C25.";
		//ШаблонНомераЮ = "B16.";
		
		Нстр = Сделка.Добавить(); 
		Нстр.Поле = ЭлементСделка;    
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Сч);
		//НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомераЮ + строка(Сч); 
		Сч = Сч + 1;    
	КонецЦикла;
	
	Ф = 25;
	Ю = 17;
	Для Сч = 1 по 3 Цикл	
		Счетчик = ?(Ф = 25, 8, 7);
		ШаблонНомераФ = "C" + Строка(Ф) + ".";
		ШаблонНомераЮ = "B" + Строка(Ю)+ ".";
		ШаблонПоля = "Дата расчета " + строка(сч);
		
		Нстр = Сделка.Добавить(); 
		Нстр.Поле = ШаблонПоля;    
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Счетчик);
		НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомераЮ + строка(Счетчик); 
		Ф = Ф + 1;
		Ю = Ю + 1;
	КонецЦикла;       
	
	МассивПросроченнаяЗадолженность = Новый Массив;
	МассивПросроченнаяЗадолженность.Добавить("Дата возникновения просроченной задолженности"); 
	
	Сч = 1;
	Для каждого ЭлементСделка из МассивПросроченнаяЗадолженность Цикл 
		ШаблонНомераФ = "C27.";
		ШаблонНомераЮ = "B19.";
		
		Нстр = Сделка.Добавить(); 
		Нстр.Поле = ЭлементСделка;    
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Сч); 
		НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомераЮ + строка(Сч); 
		Сч = Сч + 1;    
	КонецЦикла;	

	
	МассивСреднемесячныйПлатеж = Новый Массив;
	МассивСреднемесячныйПлатеж.Добавить("Величина среднемесячного платежа");
	МассивСреднемесячныйПлатеж.Добавить("Дата расчета величины среднемесячного платежа");  
	//Единый формат
	МассивСреднемесячныйПлатеж.Добавить("Сумма всех оставшихся платежей по обязательству");
	Сч = 1;
	Для каждого ЭлементСделка из МассивСреднемесячныйПлатеж Цикл 
		ШаблонНомераФ = "C29.";
				
		Нстр = Сделка.Добавить(); 
		Нстр.Поле = ЭлементСделка;    
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Сч);
		Сч = Сч + 1;    
	КонецЦикла;	 
	
	//ДолговаяНагрузка
		
	МассивДолговаяНагрузка = Новый Массив;
	МассивДолговаяНагрузка.Добавить("Диапазон показателя долговой нагрузки заемщика");
	МассивДолговаяНагрузка.Добавить("Дата расчета показателя долговой нагрузки заемщика");  
	МассивДолговаяНагрузка.Добавить("Сведения о способе определения величины среднемесячного дохода заемщика");
	МассивДолговаяНагрузка.Добавить("Источник сведений о величине среднемесячного дохода заемщика");
	МассивДолговаяНагрузка.Добавить("Признак учета долговой нагрузки созаемщиков");  
	МассивДолговаяНагрузка.Добавить("Признак расчета показателя долговой нагрузки заемщика по заключенному потребительскому кредиту или займу");
	МассивДолговаяНагрузка.Добавить("УИд сделки ИЛИ УИд обращения");
	
	Сч = 1;
	Для каждого ЭлементСделка из МассивДолговаяНагрузка Цикл 
		ШаблонНомераФ = "C29.1.";
				
		Нстр = Сделка.Добавить(); 
		Нстр.Поле = ЭлементСделка;    
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Сч);
		Сч = Сч + 1;    
	КонецЦикла;	
	
	//Неденежное обязательство
	
	МассивНеденежноеОбязательствоИсточник = Новый Массив;
	МассивНеденежноеОбязательствоИсточник.Добавить("Предмет обязательства");
	МассивНеденежноеОбязательствоИсточник.Добавить("Код предоставляемого имущества");
	МассивНеденежноеОбязательствоИсточник.Добавить("Дата передачи имущества субъекту");
	//5.0
	МассивНеденежноеОбязательствоИсточник.Добавить("Идентификационный код предоставляемого имущества");

	Сч = 1;
	Для каждого ЭлементСделка из МассивНеденежноеОбязательствоИсточник Цикл 
		ШаблонНомераФ = "C30.";
		ШаблонНомераЮ = "B21."; 
		
		Если Сч = 3 Тогда
			Сч = Сч + 1;
		КонецЕсли;	
		
		Нстр = Сделка.Добавить(); 
		Нстр.Поле = ЭлементСделка;    
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Сч);
		НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомераЮ + строка(Сч); 
		Сч = Сч + 1;    
	КонецЦикла;	
	
	МассивНеденежноеОбязательствоСубъект = Новый Массив;
	МассивНеденежноеОбязательствоСубъект.Добавить("Предмет обязательства");    
	МассивНеденежноеОбязательствоСубъект.Добавить("Порядок исполнения обязательства");
	МассивНеденежноеОбязательствоСубъект.Добавить("Признак ненадлежащего исполнения обязательства"); 
	//5.0
	МассивНеденежноеОбязательствоСубъект.Добавить("Код полученного имущества");
	Сч = 1;
	Для каждого ЭлементСделка из МассивНеденежноеОбязательствоСубъект Цикл 
		ШаблонНомераФ = "C31.";
		ШаблонНомераЮ = "B22."; 
		
			
		Если Сч = 2 Тогда
			Сч = Сч + 1;
		КонецЕсли;
		
		Нстр = Сделка.Добавить(); 
		Нстр.Поле = ЭлементСделка;    
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Сч);
		НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомераЮ + строка(Сч);
		Сч = Сч + 1;    
	КонецЦикла;	
	
	МассивЗалог  = Новый Массив;
	
	//Залог
	МассивЗалог.Добавить("Признак наличия залога");
	МассивЗалог.Добавить("Код предмета залога"); 
	МассивЗалог.Добавить("Идентификационный код предмета залога");
	МассивЗалог.Добавить("Дата заключения договора залога");
	МассивЗалог.Добавить("Стоимость предмета залога");
	МассивЗалог.Добавить("Валюта стоимости предмета залога");
	МассивЗалог.Добавить("Дата проведения оценки предмета залога");
	МассивЗалог.Добавить("Признак иного обременения предмета залога");
	МассивЗалог.Добавить("Дата прекращения залога согласно договору");
	МассивЗалог.Добавить("Дата фактического прекращения залога");
	МассивЗалог.Добавить("Код причины прекращения залога");
	//5.0
	МассивЗалог.Добавить("Вид стоимости предмета залога");
	МассивЗалог.Добавить("Сумма обязательств по всем договорам, исполнение которых обеспечено предметом залога");
	МассивЗалог.Добавить("Количество договоров, исполнение обязательств по которым обеспечено предметом залога");  
	
	//Единый формат
	МассивЗалог.Добавить("Код места нахождения залога по ОКАТО");
	МассивЗалог.Добавить("Актуальная стоимость предмета залога");
	МассивЗалог.Добавить("Дата расчета актуальной стоимости предмета залога");
	
	Сч = 1;
	Для каждого ЭлементСделка из МассивЗалог Цикл 
		ШаблонНомераФ = "C32.";
		ШаблонНомераЮ = "B23.";
		
		Нстр = Сделка.Добавить(); 
		Нстр.Поле = ЭлементСделка;    
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Сч);
		НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомераЮ + строка(Сч); 
		Сч = Сч + 1;    
	КонецЦикла;	
	
	МассивПоручительство = Новый Массив;
	//Поручительство
	МассивПоручительство.Добавить("Признак наличия поручительства");
	МассивПоручительство.Добавить("УИд договора поручительства"); 
	МассивПоручительство.Добавить("Размер поручительства");
	МассивПоручительство.Добавить("Валюта поручительства");
	МассивПоручительство.Добавить("Дата заключения договора поручительства");
	МассивПоручительство.Добавить("Дата прекращения поручительства согласно договору");
	МассивПоручительство.Добавить("Дата фактического прекращения поручительства");
	МассивПоручительство.Добавить("Код причины прекращения поручительства");
	
	Сч = 1;
	Для каждого ЭлементСделка из МассивПоручительство Цикл 
		ШаблонНомераФ = "C33.";
		ШаблонНомераЮ = "B24.";
		
		Нстр = Сделка.Добавить(); 
		Нстр.Поле = ЭлементСделка;    
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Сч);
		НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомераЮ + строка(Сч);
		Сч = Сч + 1;    
	КонецЦикла;	
	
	МассивНезависимаяГарантия  = Новый Массив;
	//Гарантия
	МассивНезависимаяГарантия.Добавить("Признак наличия независимой гарантии");
	МассивНезависимаяГарантия.Добавить("УИд независимой гарантии"); 
	МассивНезависимаяГарантия.Добавить("Сумма независимой гарантии");
	МассивНезависимаяГарантия.Добавить("Валюта независимой гарантии");
	МассивНезависимаяГарантия.Добавить("Дата выдачи независимой гарантии");
	МассивНезависимаяГарантия.Добавить("Дата окончания независимой гарантии по услловиям");
	МассивНезависимаяГарантия.Добавить("Дата фактического прекращения независимой гарантии");
	МассивНезависимаяГарантия.Добавить("Код причины прекращения независимой гарантии");
	
	Сч = 1;
	Для каждого ЭлементСделка из МассивНезависимаяГарантия Цикл 
		ШаблонНомераФ = "C34.";
		ШаблонНомераЮ = "B25.";
		
		Нстр = Сделка.Добавить(); 
		Нстр.Поле = ЭлементСделка;    
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Сч);
		НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомераЮ + строка(Сч); 
		Сч = Сч + 1;    
	КонецЦикла;	 
	
	МассивСтрахованиеЗалога  = Новый Массив;
	//Страхование
	МассивСтрахованиеЗалога.Добавить("Признак наличия страхования");
	МассивСтрахованиеЗалога.Добавить("Признак наличия франшизы");
	МассивСтрахованиеЗалога.Добавить("Дата начала действия страхования");   
	МассивСтрахованиеЗалога.Добавить("Дата окончания действия страхования по договору");
	МассивСтрахованиеЗалога.Добавить("Дата фактического прекращения страхования");
	МассивСтрахованиеЗалога.Добавить("Код причины прекращения независимой гарантии"); 
	//5.0
	МассивСтрахованиеЗалога.Добавить("Идентификационный код предмета залога");
	
	
	Сч = 1;
	Для каждого ЭлементСделка из МассивСтрахованиеЗалога Цикл 
		ШаблонНомераФ = "C35.";
		ШаблонНомераЮ = "B26."; 
		
		Если Сч = 3 ИЛИ Сч = 4 Тогда
			Сч = Сч + 1;
		КонецЕсли;	
		
		Нстр = Сделка.Добавить(); 
		Нстр.Поле = ЭлементСделка;    
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Сч);
		НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомераЮ + строка(Сч); 
		Сч = Сч + 1;    
	КонецЦикла;	
	
	МассивЗакрытиеОбеспечением = Новый Массив;
	//Закрытие обеспечением
	МассивЗакрытиеОбеспечением.Добавить("Признак погашения требований за счет обеспечения");
	МассивЗакрытиеОбеспечением.Добавить("Код использованного обеспечения"); 
	МассивЗакрытиеОбеспечением.Добавить("Дата погашения требований за счет обеспечения");
	МассивЗакрытиеОбеспечением.Добавить("Сумма требований, погашенных за счет обеспечения");
	
	Сч = 1;
	Для каждого ЭлементСделка из МассивЗакрытиеОбеспечением Цикл 
		ШаблонНомераФ = "C36.";
		ШаблонНомераЮ = "B27.";
		
		Нстр = Сделка.Добавить(); 
		Нстр.Поле = ЭлементСделка;    
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Сч);
		НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомераЮ + строка(Сч); 
		Сч = Сч + 1;    
	КонецЦикла;	

	
	МассивВозмещенияПринципалом = Новый Массив;
	МассивВозмещенияПринципалом.Добавить("Признак обязанности возместить выплаченную сумму");
	МассивВозмещенияПринципалом.Добавить("Сумма, подлежащая возмещению");
	МассивВозмещенияПринципалом.Добавить("Сумма, выплаченная принципалом");
	МассивВозмещенияПринципалом.Добавить("Признак соблюдения порядка возмещения"); 
	МассивВозмещенияПринципалом.Добавить("Дата Расчета");
	
	Сч = 1;
	Для каждого ЭлементСделка из МассивВозмещенияПринципалом Цикл 
		ШаблонНомераФ = "C37.";
		ШаблонНомераЮ = "B28.";
		
		Нстр = Сделка.Добавить(); 
		Нстр.Поле = ЭлементСделка;    
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Сч);
		НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомераЮ + строка(Сч);
		Сч = Сч + 1;    
	КонецЦикла;	
	
	//Закрытие 
	МассивЗакрытие = Новый Массив;
	МассивЗакрытие.Добавить("Код основания прекращения обязательства");
	МассивЗакрытие.Добавить("Дата фактического прекращения обязательства");
	
	Сч = 1;
	Для каждого ЭлементСделка из МассивЗакрытие Цикл 
		ШаблонНомераФ = "C38.";
		ШаблонНомераЮ = "B29.";
		
		Нстр = Сделка.Добавить(); 
		Нстр.Поле = ЭлементСделка;    
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Сч);
		НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомераЮ + строка(Сч);
		Сч = Сч + 1;    
	КонецЦикла;	

	
	МассивСудебноеДело = Новый Массив;
	//Судебка
	МассивСудебноеДело.Добавить("Признак судебного спора или требования");
	МассивСудебноеДело.Добавить("Признак наличия судебного акта"); 
	МассивСудебноеДело.Добавить("Дата принятия судебного акта");
	МассивСудебноеДело.Добавить("Номер судебного акта");
	МассивСудебноеДело.Добавить("Резолютивная часть судебного акта");
	МассивСудебноеДело.Добавить("Признак вступления акта в законную силу");   
	
	//ЕдиныйФормат 
	МассивСудебноеДело.Добавить("Код иска или требования");
	МассивСудебноеДело.Добавить("Сумма требований, подлежащих удовлетворению");
	МассивСудебноеДело.Добавить("Дополнительные сведения по судебному акту");
	
	Сч = 1;
	Для каждого ЭлементСделка из МассивСудебноеДело Цикл 
		ШаблонНомераФ = "C39.";
		ШаблонНомераЮ = "B30.";
		
		Нстр = Сделка.Добавить(); 
		Нстр.Поле = ЭлементСделка;    
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Сч);
		НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомераЮ + строка(Сч); 
		Сч = Сч + 1;    
	КонецЦикла;	  
	
	МассивПрекращениеПередачи = Новый Массив;
	//Агент
	МассивПрекращениеПередачи.Добавить("Код причины прекращения передачи информации");
	МассивПрекращениеПередачи.Добавить("Дата прекращения передачи информации");
		
	Сч = 1;
	Для каждого ЭлементСделка из МассивПрекращениеПередачи Цикл 
		ШаблонНомераФ = "C45.";
		ШаблонНомераЮ = "B35.";
		
		Нстр = Сделка.Добавить(); 
		Нстр.Поле = ЭлементСделка;    
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Сч);
		НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомераЮ + строка(Сч); 
		Сч = Сч + 1;    
	КонецЦикла;	


	
	
	МассивУчетНаБалансе = Новый Массив;  
	МассивУчетНаБалансе.Добавить("Признак учета обязательства на балансе"); 
	//5.0
	МассивУчетНаБалансе.Добавить("Минимальная процентная ставка");  
	МассивУчетНаБалансе.Добавить("Сумма обязательства, учтенная на внебалансовых счетах");
	МассивУчетНаБалансе.Добавить("Признак льготного финансирования с государственной поддержкой");
	МассивУчетНаБалансе.Добавить("Информация о программе государственной поддержки");
	
	//Единый Формат
	МассивУчетНаБалансе.Добавить("Максимальная процентная ставка");
	МассивУчетНаБалансе.Добавить("Дата расчета");
	
	Сч = 1;
	СинхронизацияНомера = 0;
	Для каждого ЭлементСделка из МассивУчетНаБалансе Цикл 
		ШаблонНомераФ = "C54.";
		ШаблонНомераЮ = "B44.";
		
		Нстр = Сделка.Добавить(); 
		Нстр.Поле = ЭлементСделка;    
		Если ЭлементСделка = "Максимальная процентная ставка" Тогда
			НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Сч);
			СинхронизацияНомера = СинхронизацияНомера + 1;
		Иначе
			НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Сч);
			НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомераЮ + строка(Сч - СинхронизацияНомера);  
		КонецЕсли;
		Сч = Сч + 1;    
	КонецЦикла;	  
	
	МассивПредложениеСделки = Новый Массив;
	//ВыдачаКредита
	МассивПредложениеСделки.Добавить("Код вида участия в сделке");
	МассивПредложениеСделки.Добавить("Сумма запрошенного займа (кредита), лизинга или обеспечения"); 
	МассивПредложениеСделки.Добавить("Запрошенная валюта обязательства");
	МассивПредложениеСделки.Добавить("УИд обращения");
	МассивПредложениеСделки.Добавить("Дата обращения");
	МассивПредложениеСделки.Добавить("Код источника");
	МассивПредложениеСделки.Добавить("Код способа обращения");
	МассивПредложениеСделки.Добавить("Дата окончания действия одобрения обращения (оферты кредитора)");
	//5.0
	МассивПредложениеСделки.Добавить("Дата окончания срока рассмотрения обращения");
	МассивПредложениеСделки.Добавить("Код цели запрошенного займа (кредита)"); 
	МассивПредложениеСделки.Добавить("Код стадии рассмотрения обращения");
	МассивПредложениеСделки.Добавить("Дата перехода обращения в текущую стадию рассмотрения");
	МассивПредложениеСделки.Добавить("Код вида обращения");
	МассивПредложениеСделки.Добавить("Номер обращения");   
	
	//Единый формат
    МассивПредложениеСделки.Добавить("Сумма одобренного займа (кредита), лизинга или обеспечения");  
	
	Сч = 1;
	Для каждого ЭлементСделка из МассивПредложениеСделки Цикл 
		ШаблонНомераФ = "C55.";
		ШаблонНомераЮ = "B45.";
		
		Нстр = Сделка.Добавить(); 
		Нстр.Поле = ЭлементСделка;    
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Сч);
		НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомераЮ + строка(Сч);
		Сч = Сч + 1;    
	КонецЦикла;
	
	МассивСведенияОбязательства = Новый Массив;
	//ВыдачаКредита
	МассивСведенияОбязательства.Добавить("Код вида участия в сделке");
	МассивСведенияОбязательства.Добавить("Код вида займа или кредита"); 
	МассивСведенияОбязательства.Добавить("УИд сделки");
	МассивСведенияОбязательства.Добавить("Дата передачи финансирования субъекту или возникновения обеспечения исполнения обязательства");
	МассивСведенияОбязательства.Добавить("Признак просрочки должника более 90 дней");
	МассивСведенияОбязательства.Добавить("Признак прекращения обязательства");
	
	Сч = 1;
	Для каждого ЭлементСделка из МассивСведенияОбязательства Цикл 
		ШаблонНомераФ = "C56.";
		ШаблонНомераЮ = "B46."; 				
		Нстр = Сделка.Добавить(); 
		Нстр.Поле = ЭлементСделка;    
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Сч);
		НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомераЮ + строка(Сч);
		Сч = Сч + 1;    
	КонецЦикла;	  
	
	МассивОтказИсточникаОтСделки = Новый Массив;
	//ВыдачаКредита
	МассивОтказИсточникаОтСделки.Добавить("Дата отказа");
	МассивОтказИсточникаОтСделки.Добавить("Причина");
	
	Сч = 1;
	Для каждого ЭлементСделка из МассивОтказИсточникаОтСделки Цикл 
		ШаблонНомераФ = "C57.";
		ШаблонНомераЮ = "B47.";
		
		Нстр = Сделка.Добавить(); 
		Нстр.Поле = ЭлементСделка;    
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Сч);
		НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомераЮ + строка(Сч);
		Сч = Сч + 1;    
	КонецЦикла;	  	
	МассивПоказателейСделка = Новый Массив;	
	
	МассивПоказателейСделка.Добавить("Признак Банкротства");
	Для каждого ЭлементФЛ из МассивПоказателейСделка Цикл 
		Нстр = Сделка.Добавить();
		НСтр.НомерПоказателяНБКИФЛ = "C.";
		НСтр.НомерПоказателяНБКИЮЛ = "B.";
		Нстр.Поле = ЭлементФЛ;   
	КонецЦикла;	

КонецПроцедуры    

Процедура ЗаполнитьПоляПродажа() Экспорт  
	
	//ЮЛ 
	МассивПоказателейПродажаЮЛ = Новый Массив;
	МассивПоказателейПродажаЮЛ.Добавить("Код преобретателя прав");
	МассивПоказателейПродажаЮЛ.Добавить("Признак регистрации в Российской Федерации");
	МассивПоказателейПродажаЮЛ.Добавить("Полное наименование");
	МассивПоказателейПродажаЮЛ.Добавить("Сокращенное наименование");
	МассивПоказателейПродажаЮЛ.Добавить("Иное наименование");  
	МассивПоказателейПродажаЮЛ.Добавить("Идентификатор LEI");
	МассивПоказателейПродажаЮЛ.Добавить("Регистрационный номер");
	МассивПоказателейПродажаЮЛ.Добавить("Код номера налогоплательщика");
	МассивПоказателейПродажаЮЛ.Добавить("Номер налогоплательщика"); 
	МассивПоказателейПродажаЮЛ.Добавить("Дата приобретения прав");
	
	Сч = 1;
	Для каждого ЭлементПреобретатель из МассивПоказателейПродажаЮЛ Цикл 
		ШаблонНомераФ = "C51.";
		ШаблонНомераЮ = "B41.";
		Нстр = ПриобретательПраваТребования.Добавить(); 
		Нстр.Поле = ЭлементПреобретатель;    
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Сч);
		НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомераЮ + строка(Сч);
		Сч = Сч + 1;    
	КонецЦикла;	


	
	//ФЛ
	МассивПоказателейПродажаФЛ = Новый Массив;    
	МассивПоказателейПродажаФЛ.Добавить("Дата рождения");
	МассивПоказателейПродажаФЛ.Добавить("Место рождения");  
	МассивПоказателейПродажаФЛ.Добавить("Код номера налогоплательщика");
	МассивПоказателейПродажаФЛ.Добавить("Номер налогоплательщика");
	МассивПоказателейПродажаФЛ.Добавить("СНИЛС");
	МассивПоказателейПродажаФЛ.Добавить("Тип документа, удостоверяющего личность"); 
	МассивПоказателейПродажаФЛ.Добавить("Наименование иного документа, удостоверяющего личность");
	МассивПоказателейПродажаФЛ.Добавить("Серия документа, удостоверяющего личность");
	МассивПоказателейПродажаФЛ.Добавить("Номер документа, удостоверяющего личность");
	МассивПоказателейПродажаФЛ.Добавить("Дата выдачи документа, удостоверяющего личность");
	МассивПоказателейПродажаФЛ.Добавить("Кем выдан документ, удостоверяющий личность");
	МассивПоказателейПродажаФЛ.Добавить("Код подразделения выдачи документа, удостоверяющего личность");
	МассивПоказателейПродажаФЛ.Добавить("Дата приобретения прав");   	
	Сч = 4;
	Для каждого ЭлементПреобретатель из МассивПоказателейПродажаФЛ Цикл 
		ШаблонНомераФ = "C52.";
		ШаблонНомераЮ = "B42.";
		
		Нстр = ПриобретательПраваТребования.Добавить(); 
		Нстр.Поле = ЭлементПреобретатель;    
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Сч);
		НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомераЮ + строка(Сч); 
		НСтр.ЗаполнятьпоУмолчанию = "Нет";
		Сч = Сч + 1;    
	КонецЦикла;	


	МассивПоказателейАгент = Новый Массив;
	//Агент
	МассивПоказателейАгент.Добавить("Признак регистрации в Российской Федерации");
	МассивПоказателейАгент.Добавить("Полное наименование Агента");
	МассивПоказателейАгент.Добавить("Сокращенное наименование Агента");
	МассивПоказателейАгент.Добавить("Иное наименование агента"); 
	МассивПоказателейАгент.Добавить("Регистрационный номер Агента"); 
	МассивПоказателейАгент.Добавить("Код номера налогоплательщика Агента");
	МассивПоказателейАгент.Добавить("Номер налогоплательщика Агента");
	МассивПоказателейАгент.Добавить("Дата начала действия договора обслуживания");
	МассивПоказателейАгент.Добавить("Дата окончания действия договора обслуживания");
	МассивПоказателейАгент.Добавить("Наименование эмитента");
    МассивПоказателейАгент.Добавить("Регистрационный номер эмитента");
	
	Сч = 1;
	Для каждого ЭлементПреобретатель из МассивПоказателейАгент Цикл 
		ШаблонНомераФ = "C53.";
		ШаблонНомераЮ = "B43.";
		
		Нстр = ПриобретательПраваТребования.Добавить(); 
		Нстр.Поле = ЭлементПреобретатель;    
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Сч);
		НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомераЮ + строка(Сч); 
		Сч = Сч + 1;    
	КонецЦикла;
	
	
КонецПроцедуры   

Процедура СоздатьВерсию() Экспорт
	
	Запрос = новый Запрос();
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	КредитныеИстории_ВерсииНастроекБКИ.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.КредитныеИстории_ВерсииНастроекБКИ КАК КредитныеИстории_ВерсииНастроекБКИ
	|ГДЕ
	|	НЕ КредитныеИстории_ВерсииНастроекБКИ.ПометкаУдаления";
	
	Рез = Запрос.Выполнить();
	
	Если Рез.Пустой() Тогда
		НовВерсия = Справочники.КредитныеИстории_ВерсииНастроекБКИ.СоздатьЭлемент();
		НовВерсия.БКИ = Перечисления.КредитныеИстории_БКИ.НБКИ;
		НовВерсия.НомерВерсии = 3.0;
		НовВерсия.НомерВерсииЕдиногоФормата = 2.2;
		НовВерсия.Записать();
	КонецЕсли;	
	
КонецПроцедуры   


