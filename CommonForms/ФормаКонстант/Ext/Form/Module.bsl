
&НаКлиенте
Процедура ЗаполнитьИБ(Команда)
	ОбновлениеИБ.ЗаполнитьПредопределенныеДанные();
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)

	ОбновитьПовторноИспользуемыеЗначения();
	СтандартныеПодсистемыКлиент.УстановитьРасширенныйЗаголовокПриложения();

	ОбновитьИнтерфейс();
	Если Не бит_сл_тс.ВерсияПрограммыПустая() Тогда
		бит_сл_тс.ИнициализацияРешения();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗапретитьУчетПоСотрудникамПриИзменении(Элемент)
	Если НаборКонстант.ЗапретитьУчетПоСотрудникам Тогда
		НаборКонстант.УчетПоТипамСотрудников = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗапретитьУчетПоТипамСотрудниковПриИзменении(Элемент)
	Если Не НаборКонстант.УчетПоТипамСотрудников Тогда
		НаборКонстант.ЗапретитьУчетПоСотрудникам = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УчетПоДоговорамПриИзменении(Элемент)
	Если Не НаборКонстант.УчетПоДоговорам Тогда
		НаборКонстант.УчетПоУслугам = Ложь;
		НаборКонстант.ДетализацияПоДоговорам = Ложь;
		НаборКонстант.ДетализацияПоУслугам = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УчетПоДОПриИзменении(Элемент)
	Если Не НаборКонстант.УчетПоДО Тогда
		НаборКонстант.УчетПоИД = Ложь;
		НаборКонстант.ДетализацияПоИД = Ложь;
		НаборКонстант.ДетализацияПоДО = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УчетПоУслугамПриИзменении(Элемент)
	Если НаборКонстант.УчетПоУслугам Тогда
		НаборКонстант.УчетПоДоговорам = Истина;
	Иначе
		НаборКонстант.ДетализацияПоУслугам = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УчетПоИДПриИзменении(Элемент)
	Если НаборКонстант.УчетПоИД Тогда
		НаборКонстант.УчетПоДО = Истина;
	Иначе
		НаборКонстант.ДетализацияПоИД = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПроцедурыБППриИзменении(Элемент)
	Если НаборКонстант.ПроцедурыБП Тогда
		НаборКонстант.ВключеныБП = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВключеныБППриИзменении(Элемент)
	Если Не НаборКонстант.ВключеныБП Тогда
		НаборКонстант.ПроцедурыБП = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Не НаборКонстант.ДетализацияПоДоговорам И Не НаборКонстант.ДетализацияПоУслугам И
			Не НаборКонстант.ДетализацияПоДО И Не НаборКонстант.ДетализацияПоИД Тогда
		НаборКонстант.ДетализацияПоКА = Истина;
	КонецЕсли;	
	
	//Элементы.ЧасовойПояс.СписокВыбора.Очистить();
	//Массив = ПолучитьДопустимыеЧасовыеПояса();
	//МассивПредставлений = Новый Массив;
	//Для Каждого Пояс Из Массив Цикл
	//	Если Найти(ПредставлениеЧасовогоПояса(Пояс), "GMT") > 0 И МассивПредставлений.Найти(ПредставлениеЧасовогоПояса(Пояс)) = Неопределено Тогда
	//		Строка = Элементы.ЧасовойПояс.СписокВыбора.Добавить(Пояс, ПредставлениеЧасовогоПояса(Пояс));
	//		МассивПредставлений.Добавить(ПредставлениеЧасовогоПояса(Пояс));
	//	КонецЕсли;
	//КонецЦикла;
	//Элементы.ЧасовойПояс.СписокВыбора.СортироватьПоПредставлению(НаправлениеСортировки.Возр);	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ВерсияПрограммыПриИзменении(Неопределено);
	ХранитьПрикрепляемыеФайлыНаСервереПриИзменении("");
КонецПроцедуры

&НаКлиенте
Процедура ВерсияПрограммыПриИзменении(Элемент)
	Флаг = НаборКонстант.ВерсияПрограммы.Пустая() ИЛИ 
			НаборКонстант.ВерсияПрограммы = ПредопределенноеЗначение("Перечисление.ВерсииПрограммы.Стандарт");
			
	Элементы.ВключеныБП.ТолькоПросмотр = Флаг;
	Элементы.ПроцедурыБП.ТолькоПросмотр = Флаг;				
	Если Флаг Тогда	
		НаборКонстант.ВключеныБП = Ложь;
		НаборКонстант.ПроцедурыБП = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДетализацияПоДоговорамПриИзменении(Элемент)
	Если НаборКонстант.ДетализацияПоДоговорам Тогда
		НаборКонстант.УчетПоДоговорам = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДетализацияПоУслугамПриИзменении(Элемент)
	Если НаборКонстант.ДетализацияПоУслугам Тогда
		НаборКонстант.УчетПоУслугам = Истина;
		НаборКонстант.УчетПоДоговорам = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДетализацияПоДОПриИзменении(Элемент)
	Если НаборКонстант.ДетализацияПоДО Тогда
		НаборКонстант.УчетПоДО = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДетализацияПоИДПриИзменении(Элемент)
	Если НаборКонстант.ДетализацияПоИД Тогда
		НаборКонстант.УчетПоИД = Истина;
		НаборКонстант.УчетПоДО = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Если Не НаборКонстант.ДетализацияПоКА И
			Не НаборКонстант.ДетализацияПоДоговорам И Не НаборКонстант.ДетализацияПоУслугам И
			Не НаборКонстант.ДетализацияПоДО И Не НаборКонстант.ДетализацияПоИД И Не НаборКонстант.ДетализацияПоЗ Тогда
		Отказ = Истина;	
		Сообщить("Хоть что-то из группы ""Детализация объектов в работе"" должно быть указано!");	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьНастройки(Команда)
	//Чуров
	ОткрытьФорму("ОбщаяФорма.ЗагрузитьНастройки");
КонецПроцедуры

&НаКлиенте
Процедура КаталогХраненияПрикрепляемыхФайловНаСервереНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекФайл = Новый Файл (Элемент.ВыделенныйТекст);
	ТекКаталог = ТекФайл.Путь;      
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	Диалог.Заголовок = "Выберите каталог для хранения прикрепляемых файлов.";
	Диалог.ПредварительныйПросмотр = Ложь;
	Диалог.Каталог = ТекКаталог;
	Диалог.МножественныйВыбор = Ложь;
	
	Диалог.Показать(Новый ОписаниеОповещения("КаталогХраненияПрикрепляемыхФайловНаСервереНачалоВыбораЗавершение", ЭтаФорма, Новый Структура("Диалог", Диалог)));

КонецПроцедуры

&НаКлиенте
Процедура КаталогХраненияПрикрепляемыхФайловНаСервереНачалоВыбораЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Диалог = ДополнительныеПараметры.Диалог;
	
	
	Если (ВыбранныеФайлы <> Неопределено) Тогда
		НаборКонстант.КаталогХраненияПрикрепляемыхФайловНаСервере = Диалог.Каталог; 	
	КонецЕсли;

КонецПроцедуры


&НаКлиенте
Процедура КаталогХраненияПрикрепляемыхФайловНаСервереОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;        
	ЗапуститьПриложение(НаборКонстант.КаталогХраненияПрикрепляемыхФайловНаСервере);	

КонецПроцедуры

&НаКлиенте
Процедура ХранитьПрикрепляемыеФайлыНаСервереПриИзменении(Элемент)
	
	Элементы.КаталогХраненияПрикрепляемыхФайловНаСервере.Видимость = НаборКонстант.ХранитьПрикрепляемыеФайлыНаСервере;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	Константы.ЗагрузкаДанных.Установить(Не Константы.ЗагрузкаРеестров.Получить());
КонецПроцедуры

&НаКлиенте
Процедура ИТС(Команда)
	ОткрытьФорму("ОбщаяФорма.ПодключениеИнтернетПоддержки");
КонецПроцедуры

&НаСервере
Процедура ИспользоватьИнтеграциюФедРесурсБанкротствоПриИзмененииНаСервере()
	Если НаборКонстант.ИспользоватьИнтеграциюФедРесурсБанкротство Тогда
		Справочники.БанкротствоИерархияСвойств.ЗагрузитьИзМакетаЭлемены();
		Справочники.БанкротствоЗначенияСвойств.ЗагрузитьИзМакетаЭлемены();	
		Если НЕ ЗначениеЗаполнено(Константы.БанкротствоАдресСервиса.Получить()) Тогда
			Константы.БанкротствоАдресСервиса.Установить("/Bankruptcy/MessageService/WebService.svc");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьИнтеграциюФедРесурсБанкротствоПриИзменении(Элемент)
	ИспользоватьИнтеграциюФедРесурсБанкротствоПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура НастройкиРаботыСФайлами(Команда)
	ОткрытьФорму("Обработка.ПанельАдминистрированияБСП.Форма.НастройкиРаботыСФайлами");
КонецПроцедуры

&НаКлиенте
Процедура НастройкаОтправкиSMS(Команда)
	ОткрытьФорму("ОбщаяФорма.НастройкаОтправкиSMS");
КонецПроцедуры

&НаКлиенте
Процедура УчетныеЗаписиЭлектроннойПочты(Команда)
	ОткрытьФорму("Справочник.УчетныеЗаписиЭлектроннойПочты.ФормаСписка");
КонецПроцедуры

&НаКлиенте
Процедура ImageMagickConvertНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Если Диалог.Выбрать() Тогда
		НаборКонстант.ImageMagickConvert = Диалог.ПолноеИмяФайла;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура TesseractНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Если Диалог.Выбрать() Тогда
		НаборКонстант.Tesseract = Диалог.ПолноеИмяФайла;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРССклонениеФИОНаСервере()
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Контрагенты.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|ГДЕ
		|	НЕ Контрагенты.ЭтоГруппа";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ЗаполнитьСклонения(ВыборкаДетальныеЗаписи.Ссылка);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСклонения(Ссылка)
	ТзФИО = Ссылка.ФИО.Выгрузить();
	Для Каждого Стр Из ТзФИО Цикл
		Стр.ФИО = СтрЗаменить(Стр.ФИО, "ё", "е");
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
					|	ТзФИО.ФИО КАК ФИО
					|ПОМЕСТИТЬ ТзФИО
					|ИЗ
					|	&ТзФИО КАК ТзФИО
					|;
					|
					|////////////////////////////////////////////////////////////////////////////////
					|ВЫБРАТЬ
					|	ТзФИО.ФИО КАК ФИО
					|ИЗ
					|	ТзФИО КАК ТзФИО
					|
					|СГРУППИРОВАТЬ ПО
					|	ТзФИО.ФИО";
	Запрос.УстановитьПараметр("ТзФИО", ТзФИО);
	
	НаборЗаписей = РегистрыСведений.СклонениеФИО.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Контрагент.Установить(Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.Контрагент = Ссылка;
		НоваяЗапись.Именительный = СклонятьВПадеж(Выборка.ФИО, "Именительный");
		
		ВыборкаРучная = РегистрыСведений.СклонениеФИО.ИзмененоВРучную(Ссылка, НоваяЗапись.Именительный);
		Если ВыборкаРучная <> Неопределено И ВыборкаРучная.Следующий() Тогда
		
			НоваяЗапись.Инициалы = ВыборкаРучная.Инициалы;
			НоваяЗапись.Родительный = ВыборкаРучная.Родительный;
			НоваяЗапись.Творительный = ВыборкаРучная.Творительный;
			НоваяЗапись.Предолжный = ВыборкаРучная.Предолжный;
			НоваяЗапись.Дательный = ВыборкаРучная.Дательный;
			НоваяЗапись.ИзмененоВРучную = ВыборкаРучная.ИзмененоВРучную;
			Продолжить;
		
		КонецЕсли;

		НоваяЗапись.Родительный = СклонятьВПадеж(Выборка.ФИО, "Родительный");
		НоваяЗапись.Творительный = СклонятьВПадеж(Выборка.ФИО, "Творительный");
		НоваяЗапись.Предолжный = СклонятьВПадеж(Выборка.ФИО, "Предложный");
		НоваяЗапись.Дательный = СклонятьВПадеж(Выборка.ФИО, "Дательный");
		
		//НоваяЗапись.Родительный = СклонениеФИО.daСклонение(Выборка.ФИО, 2);
		//НоваяЗапись.Творительный = СклонениеФИО.daСклонение(Выборка.ФИО, 5);
		//НоваяЗапись.Предолжный = СклонениеФИО.daСклонение(Выборка.ФИО, 6);
		//НоваяЗапись.Дательный = СклонениеФИО.daСклонение(Выборка.ФИО, 4);
		НоваяЗапись.Инициалы = Инициалы(Выборка.ФИО);
	КонецЦикла;
	
	НаборЗаписей.Записать();
КонецПроцедуры // ЗаполнитьСкланения()

&НаСервере
Функция СклонятьВПадеж(Текст, Падеж)

	Результат = ПолучитьСклоненияСтроки(ТРег(Текст), , "ПД=" + Падеж);
	Если Результат.Количество() > 0 Тогда
	
		Возврат Результат[0];
	
	КонецЕсли;
	
	Возврат Текст;

КонецФункции // ()


&НаСервере
Функция Инициалы(СтрФИО)
	
	сФио = ФизическиеЛицаКлиентСервер.ЧастиИмени(СтрФИО);
	Если сФио.Свойство("Имя") И сФио.Свойство("Отчество") Тогда
		Инициалы = Лев(сФио.Имя,1) + " " +  Лев(сФио.Отчество,1);
		Возврат Инициалы;
	КонецЕсли;
	
	Возврат "";
КонецФункции

&НаКлиенте
Процедура ЗаполнитьРССклонениеФИО(Команда)
	ЗаполнитьРССклонениеФИОНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЗначенияВШаблонахНаСервере()

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	тсШаблоныПечатныхДокументов.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.тсШаблоныПечатныхДокументов КАК тсШаблоныПечатныхДокументов
		|ГДЕ
		|	тсШаблоныПечатныхДокументов.ТипДокумента = &ТипДокумента";
	
	Запрос.УстановитьПараметр("ТипДокумента", Перечисления.ТипыЭлДок.ПустаяСсылка());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	ТипДокументаПоУмолчанию = Константы.ТипШаблонаДляПечати.Получить();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		ТекущийШаблон = ВыборкаДетальныеЗаписи.Ссылка;
		ОбъектШаблон = ТекущийШаблон.ПолучитьОбъект();
		ОбъектШаблон.ТипДокумента = ТипДокументаПоУмолчанию;
		
		ОбъектШаблон.Записать();
		
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьЗначенияВШаблонах(Команда)
	
	Если ЭтаФорма.Модифицированность = Истина Тогда
	
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Для выполнения команды, сохраните изменения";
		Сообщение.Сообщить();
		Возврат;
	
	КонецЕсли;
	ЗаполнитьЗначенияВШаблонахНаСервере();
КонецПроцедуры

&НаСервере
Процедура ИспользоватьНБКИRUTDFПриИзмененииНаСервере()
	Если КредитныеИстории.ПустыеНастройки() Тогда
		КредитныеИстории.ЗаполнитьПервичныеСправочникиНБКИ();
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = "Технические настройки применились к БД.";
		Сообщение.Сообщить();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьНБКИRUTDFПриИзменении(Элемент)
	ИспользоватьНБКИRUTDFПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура НаписатьРазработчику(Команда)
	ДанныеЗаполнения = Новый Структура("ОбратнаяСвязь", ОбъектыСервер.ПараметрТекущийПользователь());
    ОткрытьФорму("Документ.ЭлектронноеПисьмоИсходящее.ФормаОбъекта",Новый Структура("ЗначенияЗаполнения", ДанныеЗаполнения));
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьВерсиюСервера(Команда)
	ОткрытьФорму("Перечисление.СистемыЛицензирования.Форма.ФормаВыбораЛицензирования");
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ОбновитьВерсиюЛицензирования" Тогда
	
		ОбновитьВерсиюЛицензирования();
		ВерсияПрограммыПриИзменении(Неопределено);
	
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОбновитьВерсиюЛицензирования()

	НаборКонстант.ВерсияПрограммы = Константы.ВерсияПрограммы.Получить();

КонецПроцедуры
