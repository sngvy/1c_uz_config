
&НаКлиенте
Процедура Отмена(Команда)
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура ОК(Команда)
	Закрыть(Истина);
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьЗапрос(Команда)
	#Если ТолстыйКлиентУправляемоеПриложение Тогда
	//#Если ТонкийКлиентУправляемоеПриложение Тогда	
	    Если ЗначениеЗаполнено(ТекстЗапроса) Тогда
			Конструктор = Новый КонструкторЗапроса(ТекстЗапроса);
		Иначе
			Конструктор = Новый КонструкторЗапроса();
		КонецЕсли;
		//Чуров А.И.
		Конструктор.Показать(Новый ОписаниеОповещения("ИзменитьЗапросЗавершение", ЭтаФорма));
		//Конструктор.ОткрытьМодально();
		//ТекстЗапроса = Конструктор.Текст;
	#Иначе
		Сообщить("Конструктор запроса работает только под Толстый клиент (управляемое приложение)!");
	#КонецЕсли
КонецПроцедуры

//Чуров++
&НаКлиенте
Процедура ИзменитьЗапросЗавершение(Текст, ДополнительныеПараметры) Экспорт
	ТекстЗапроса = Текст;
КонецПроцедуры
//Чуров--

&НаКлиенте
Процедура Тест(Команда)
	ТестНаСервере();
КонецПроцедуры

&НаСервере
Процедура ТестНаСервере(Пустой = Ложь)
	Если Пустой Тогда
		ТЗ = Новый ТаблицаЗначений();
	Иначе	
		Запрос = Новый Запрос(ТекстЗапроса);
		Запрос.УстановитьПараметр("ТекущаяДата", ПараметрДата);
		Попытка
			ТЗ = Запрос.Выполнить().Выгрузить();
		Исключение
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Ошибка в запросе!";
			Сообщение.Сообщить();
			Возврат;
		КонецПопытки;
	КонецЕсли;
	

	ТаблицаОбъект = РеквизитФормыВЗначение("ПолученнаяТаблица");	
	МассивДляУдаления = Новый Массив();	
	Для Каждого Элемент Из ТаблицаОбъект.Колонки Цикл 
		МассивДляУдаления.Добавить("ПолученнаяТаблица." + Элемент.Имя);
		Элементы.Удалить(Элементы.Найти("ПолученнаяТаблица" + Элемент.Имя));
	КонецЦикла;     
	ЭтаФорма.ИзменитьРеквизиты(,МассивДляУдаления);
	
	
	КолонкиТаблицы = Новый Массив();		
	Если ТЗ.Колонки.Количество() = 0 Тогда
		Реквизит = Новый РеквизитФормы("Пусто", Новый ОписаниеТипов("Строка"), "ПолученнаяТаблица", "Пусто");
		КолонкиТаблицы.Добавить(Реквизит);
		ЭтаФорма.ИзменитьРеквизиты(КолонкиТаблицы);
		
		ПолеФормы = Элементы.Добавить("ПолученнаяТаблицаПусто",  Тип("ПолеФормы"), Элементы.ПолученнаяТаблица);
		ПолеФормы.Вид = ВидПоляФормы.ПолеВвода;
		ПолеФормы.ПутьКДанным = "ПолученнаяТаблица.Пусто";
	Иначе
		Для Каждого Элемент Из ТЗ.Колонки Цикл	
			Реквизит = Новый РеквизитФормы(Элемент.Имя, Элемент.ТипЗначения, "ПолученнаяТаблица", Элемент.Имя);
			КолонкиТаблицы.Добавить(Реквизит);
		КонецЦикла;
		ЭтаФорма.ИзменитьРеквизиты(КолонкиТаблицы);
		Для Каждого Элемент Из ТЗ.Колонки Цикл							
			ПолеФормы = Элементы.Добавить("ПолученнаяТаблица" + Элемент.Имя,  Тип("ПолеФормы"), Элементы.ПолученнаяТаблица);
			ПолеФормы.Вид = ВидПоляФормы.ПолеВвода;
			ПолеФормы.ПутьКДанным = "ПолученнаяТаблица." + Элемент.Имя;
			ПолеФормы.ФорматРедактирования = "ЧН=";
		КонецЦикла;	
	КонецЕсли;
	

	ПолученнаяТаблица.Загрузить(ТЗ);	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ПараметрДата = ТекущаяДатаСеанса();
	ТестНаСервере(Истина);
КонецПроцедуры

//Чуров++
&НаКлиенте
Процедура ПриЗакрытии()
	Оповестить("ВидыСкорингаФормаЗапросаСКДЗавершение", ТекстЗапроса);
КонецПроцедуры
//Чуров--
