
&НаСервере
Функция ПолучитьПодсказку(Объект, Шаблон) Экспорт
	Текст = Шаблон.ШаблонТекста;
	Для Каждого Элемент Из Шаблон.Настройка Цикл
		Если Элемент.Используется Тогда
			Если Элемент.ТипПоля = ПредопределенноеЗначение("Перечисление.ТипыЗначенийДляШаблонов.Текст") Тогда
				СтрокаЗамены = Элемент.Значение;
				
			ИначеЕсли Элемент.ТипПоля = ПредопределенноеЗначение("Перечисление.ТипыЗначенийДляШаблонов.Реквизит") Тогда	
				
				//Массив = Элемент.Хранилище.Получить();
				Массив = УЭДСервер.ПолучитьМассивИзСтроки(Элемент.СтрокаХранилище);
				
				СтрокаЗамены = Справочники.ШаблоныТекстаДляАвтоинформирования.РазобратьСтроку(
				Элемент.СтрокаДляПолученияЗначения, Элемент.Значение, Объект, Массив);
				
			ИначеЕсли Элемент.ТипПоля = ПредопределенноеЗначение("Перечисление.ТипыЗначенийДляШаблонов.Файл") И 
				Не Элемент.Значение.Пустая() Тогда	
				СтрокаЗамены = "{" + Элемент.Значение.Путь + "}";			
			КонецЕсли;			
			
			Если Не Элемент.Функция.Пустая() Тогда
				СтрокаЗамены = Справочники.ШаблоныТекстаДляАвтоинформирования.ВычислитьФункцию(Элемент.Функция.Функция, 
				Объект, СтрокаЗамены);	
			КонецЕсли; 		
			
			Текст = СтрЗаменить(Текст, Элемент.Поле, СтрокаЗамены);
		КонецЕсли;
	КонецЦикла;
	Текст = СтрЗаменить(Текст, Символы.ПС, " ");
	Текст = СтрЗаменить(Текст, Символы.НПП, "");
	Возврат Текст;	
КонецФункции

&НаСервере
Функция ПолучитьКонтакт(Объект, ВидКИ) Экспорт
	ТелефонАдрес = "";
	Если ВидКИ.ЭтоДополнительноеСведение Тогда
		Запись = РегистрыСведений.ДополнительныеСведения.СоздатьМенеджерЗаписи();
		Попытка
			Запись.Объект = Объект.Должник;
		Исключение
		Конецпопытки;
		Запись.Свойство = ВидКИ;
		Запись.Прочитать();
		ТелефонАдрес = Запись.Значение;
	Иначе
		Свойства = Объект.Должник.ДополнительныеРеквизиты.НайтиСтроки(Новый Структура("Свойство", ВидКИ));
		Если Свойства.Количество() > 0 Тогда
			ТелефонАдрес = Свойства[0].Значение;
		КонецЕсли;
	КонецЕсли;		
	Возврат ТелефонАдрес;
КонецФункции

&НаСервере
Процедура СформироватьЗаданиеИзБизнесПроцесса(НовоеМероприятие) Экспорт
	// Формируем задание для рассылки		
	Если Не НовоеМероприятие.ТипМероприятия.ВидРассылки.Пустая() Тогда
		НаборЗаписей = РегистрыСведений.УдалитьЗаданияДляРассылки.СоздатьНаборЗаписей();	
		Запись = НаборЗаписей.Добавить();
		Запись.Автор = НовоеМероприятие.Ссылка;
		Запись.Номер = 0;
		Запись.Объект = НовоеМероприятие.Объект;
		Запись.Действие = НовоеМероприятие.ТипМероприятия.ВидРассылки;
		Запись.Контакт = Автоинформирование.ПолучитьКонтакт(НовоеМероприятие.Объект, НовоеМероприятие.ТипМероприятия.ВидКИДляРассылки);
		Запись.Текст = Автоинформирование.ПолучитьПодсказку(НовоеМероприятие.Объект, НовоеМероприятие.ТипМероприятия.ШаблонРассылки);
		Запись.Статус = Перечисления.СтатусыРассылки.НеОпределен;
		//Запись.ТекстовыйСтатус = "Не отправлено";
		Запись.Шаблон = НовоеМероприятие.ТипМероприятия.ШаблонРассылки;	
		Если НовоеМероприятие.ТипМероприятия.ВидРассылки = Перечисления.ВариантыДействийДляСкоринга.SMSОповещение Тогда
			Запись.Отправитель = Константы.УчеткаSMSРассылок.Получить();
		ИначеЕсли НовоеМероприятие.ТипМероприятия.ВидРассылки = Перечисления.ВариантыДействийДляСкоринга.EMailРассылка Тогда
			Запись.Отправитель = Константы.УчеткаEMailРассылок.Получить();
		КонецЕсли;
		Запись.Дата = НовоеМероприятие.ПланируемаяДата;
		Запись.GUID = Строка(Новый УникальныйИдентификатор);
		НаборЗаписей.Записать(Ложь);	
	КонецЕсли;			
КонецПроцедуры

&НаСервере
Процедура ПолучитьПараметрыОтправкиСМС(Логин, Пароль, Отправитель) Экспорт
	Учетка = Константы.УчеткаSMSРассылок.Получить();
	Логин = Учетка.Логин;
	Пароль = Учетка.Пароль;
	Отправитель = Учетка.Отправитель;
КонецПроцедуры
