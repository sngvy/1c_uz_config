
#Область Интерфейс

// Возвращает Массив СправочникСсылка.Файлы
// Если на вход подается строки регистра ПрикрепляемыеФайлы, создаются новые элементы СправочникСсылка.Файлы
// Если получаемый формат не поддерживается вызывает Исключение
Функция ПолучитьФайлы(СсылкаВх) Экспорт

	СсылкиНаФайлы = Новый Массив;
	
	Если ТипЗнч(СсылкаВх) = Тип("СправочникСсылка.Файлы") Тогда
	
		СсылкиНаФайлы.Добавить(СсылкаВх);
		Возврат СсылкиНаФайлы;
	
	КонецЕсли;
	
	Если ТипЗнч(СсылкаВх) = Тип("Структура") Тогда
	
		ФайлСсылка = Справочники.Файлы.СоздатьФайлВКонфигурации(СсылкаВх);
		СсылкиНаФайлы.Добавить(ФайлСсылка);
		Возврат СсылкиНаФайлы;
	
	КонецЕсли;
	
	Если НЕ ЭтоНаборСтрокРегистра(СсылкаВх) Тогда
	
		ВызватьИсключение 
			"Не правильный формат файла"
			+ "Передан тип: " + ТипЗнч(СсылкаВх);
	
	КонецЕсли;
	
	Возврат РегистрыСведений.ПрикрепляемыеФайлы.СоздатьФайлыВКонфигурации(СсылкаВх);

КонецФункции // ()

// Создает временный файл по Регистратору и Номеру строки
//   Возврощаемые данные: Уникальный идентификатор, Имя файла, Путь, Адрес во временном хранилище
//   Ключ номера строки проверяется на _, для совместимости (НомерСтроки_)
Функция ВременныйФайлИзПрикрепленного(ПрикрепленныйФайл) Экспорт

	// Для совместимости
	Если ПрикрепленныйФайл.Свойство("НомерСтроки_") Тогда
	
		ПрикрепленныйФайл.Вставить("НомерСтроки", ПрикрепленныйФайл["НомерСтроки_"]);
	
	КонецЕсли;
	
	Возврат СоздатьВременныйФайл(ПрикрепленныйФайл);

КонецФункции // ()

#КонецОбласти

#Область ОпределениеРегистра

Функция ЭтоНаборСтрокРегистра(НаборВх)

	Если ТипЗнч(НаборВх) = Тип("Массив")
		И НаборВх.Количество() > 0
		И ЭтоСтрокаРегистра(НаборВх[0]) Тогда
	
		Возврат Истина;
	
	КонецЕсли;
	
	Возврат Ложь;

КонецФункции // ()

Функция ЭтоСтрокаРегистра(СтрокаВх)

	Возврат ТипЗнч(СтрокаВх) = Тип("РегистрСведенийКлючЗаписи.ПрикрепляемыеФайлы");

КонецФункции // ()

#КонецОбласти

#Область ПолучениеВременногоФайла

Функция СоздатьВременныйФайл(ВыделеннаяСтрока)

	ВременныйФайл = Новый Структура;
	
	ДанныеФайла = ДанныеХраненияФайла(ВыделеннаяСтрока);
	ВременныйФайл.Вставить("УИД", ДанныеФайла["УИД"]);
	
	ВременныйКаталог = КаталогВременныхФайлов();
	ИмяФайла = ПолучитьИмяФайла(ВыделеннаяСтрока);
	ВременныйФайл.Вставить("ИмяФайла", ИмяФайла);
	ПолноеИмяФайла = УправлениеФайловаяСистема.СтандартныйВидКаталога(ВременныйКаталог) + ИмяФайла;
	ВременныйФайл.Вставить("Путь", ПолноеИмяФайла);
	Расширение = УправлениеФайловаяСистема.ОпределитьРасширение(ПолноеИмяФайла);
	ВременныйФайл.Вставить("Расширение", Расширение);
	
	ФайлыНаСервере = Константы.ХранитьПрикрепляемыеФайлыНаСервере.Получить();
	
	ВременныйФайл.Вставить("Хранилище", Неопределено);
	ДвоичныеДанные = Неопределено;
	Если ФайлыНаСервере Тогда
	
		Каталог = УправлениеФайловаяСистема.СтандартныйВидКаталога(
			Константы.КаталогХраненияПрикрепляемыхФайловНаСервере.Получить());
		ИмяСохраненногоФайла = Каталог + ДанныеФайла["УИД"] + ВременныйФайл["Расширение"];
		ДвоичныеДанные = Новый ДвоичныеДанные(ИмяСохраненногоФайла);
	
	Иначе
	
		ДвоичныеДанные = ДанныеФайла["Хранилище"].Получить(); 
	
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ДвоичныеДанные) Тогда
	
		ВызватьИсключение
			"Не удалось получить двоичные данные: Данные запроса: " + ИмяФайла;
	
	КонецЕсли;
	ВременныйФайл["Хранилище"] = ПоместитьВоВременноеХранилище(ДвоичныеДанные, Новый УникальныйИдентификатор);
	
	Возврат ВременныйФайл;

КонецФункции // ()

Функция ПолучитьИмяФайла(ВыделеннаяСтрока)

	Регистратор = ВыделеннаяСтрока.Регистратор;
	НомерСтроки = ВыделеннаяСтрока.НомерСтроки;
	
	ИмяФайла = РегистрыСведений.ПрикрепляемыеФайлы.ИмяФайлаПоРегистратору(Регистратор, НомерСтроки);
	
	Если НЕ ЗначениеЗаполнено(ИмяФайла) Тогда
	
		ВызватьИсключение
			"Нет прикрепленного файла: "
			+ "Данные запроса: "
			+ ВыделеннаяСтрока.Регистратор
			+ ", " + ВыделеннаяСтрока.НомерСтроки;
	
	КонецЕсли;
	
	Возврат ИмяФайла;

КонецФункции // ()

Функция ДанныеХраненияФайла(ВыбраннаяСтрока)

	Результат = НахождениеДанныхФайла(ВыбраннаяСтрока);
	
	ДанныеФайла = Новый Структура;
	ДанныеФайла.Вставить("УИД", Результат[0].УИД);
	ДанныеФайла.Вставить("Хранилище", Результат[0].Хранилище);

	Возврат ДанныеФайла;

КонецФункции // ()

Функция НахождениеДанныхФайла(ВыбраннаяСтрока)

	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
	|	ПрикрепитьФайлыФайлы.Хранилище,
	|	ПрикрепитьФайлыФайлы.УИД
	|ИЗ
	|	Документ.ПрикрепитьФайлы.Файлы КАК ПрикрепитьФайлыФайлы
	|ГДЕ
	|	ПрикрепитьФайлыФайлы.Ссылка = &Ссылка
	|	И ПрикрепитьФайлыФайлы.НомерСтроки = &НомерСтроки");
	Запрос.УстановитьПараметр("Ссылка", ВыбраннаяСтрока.Регистратор);
	Запрос.УстановитьПараметр("НомерСтроки", ВыбраннаяСтрока.НомерСтроки);
	Результат = Запрос.Выполнить().Выгрузить();
	
	Если Результат.Количество() = 0 Тогда
	
		ВызватьИсключение
			"Нет прикрепленного файла: Данные запроса: "
			+ ВыбраннаяСтрока.Регистратор
			+ ", " + ВыбраннаяСтрока.НомерСтроки;
	
	КонецЕсли;
		
	Возврат Результат;

КонецФункции // ()

#КонецОбласти