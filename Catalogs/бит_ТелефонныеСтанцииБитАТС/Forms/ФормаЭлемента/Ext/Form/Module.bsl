
#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбновитьДоступность();
	
	Элементы.ГруппаСинхронизацииСотрудников.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка." + бит_ТелефонияСерверПереопределяемый.ПолучитьИмяСправочникаСотрудников());
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	ОбновитьДоступность();
КонецПроцедуры

&НаКлиенте
Процедура АдресАналитикиОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если ЗначениеЗаполнено(Элементы.АдресАналитики.ТекстРедактирования) Тогда
		бит_ТелефонияКлиент.ОткрытьФайлИлиСсылку(Элементы.АдресАналитики.ТекстРедактирования);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СинхронизацияССотрудникамиПриИзменении(Элемент)
	ОбновитьДоступность();
КонецПроцедуры

&НаКлиенте
Процедура НомераОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		ЗадатьГруппуДоступаВыделенныхНомеровСервер(ВыбранноеЗначение);
		Элементы.Номера.Обновить();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "БитАТС_ТелефонныеСтанции_ПодключениеВК" Тогда
		обКонтроллерАТС = Параметр.Результат;
		Если обКонтроллерАТС <> Неопределено Тогда
			допПараметры = Параметр.ПараметрОповещения;
			ЗагрузитьИнформациюСАТСЗавершение(обКонтроллерАТС,
				допПараметры.АдресАТС, допПараметры.ПользовательАТС, допПараметры.ПарольАТС,
				допПараметры.ТипИнформации);
		КонецЕсли;
	ИначеЕсли ИмяСобытия = "БитАТС_ТелефонныеСтанции_ЗагрузитьНомераСАТС" Тогда
		Если Параметр.Результат = КодВозвратаДиалога.Да Тогда
			ЗагрузитьНомераСАТСЗавершение();
		КонецЕсли;
	ИначеЕсли ИмяСобытия = "БитАТС_ТелефонныеСтанции_ВвестиАдресСервера" Тогда
		Если ЗначениеЗаполнено(Параметр.Результат) Тогда
			ЗагрузитьНомераССервераПослеВводаАдреса(Параметр.Результат);
		КонецЕсли;
	ИначеЕсли ИмяСобытия = "БитАТС_ТелефонныеСтанции_ЗагрузитьНомераССервера" Тогда
		Если Параметр.Результат = КодВозвратаДиалога.Да Тогда
			ЗагрузитьНомераССервераЗавершение(Параметр.ПараметрОповещения);
		КонецЕсли;
	ИначеЕсли ИмяСобытия = "БитАТС_ТелефонныеСтанции_ЗагрузитьНомераСотрудников" Тогда
		Если Параметр.Результат = КодВозвратаДиалога.Да Тогда
			ЗагрузитьНомераСотрудниковЗавершение();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗагрузитьНомераСАТС(Команда)
	
	Если ( ПроверитьНаличиеНомеровАТССервер(Объект.Ссылка) ) Тогда
		ПоказатьВопросПерезаписиНомеров("БитАТС_ТелефонныеСтанции_ЗагрузитьНомераСАТС", "");
	Иначе
		ЗагрузитьНомераСАТСЗавершение();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьНомераИзАналитикиАТС(Команда)
	АдресЗагрузки = "http://call.1cbit.ru/ip_<1BIT_OFFICE>_app/hs/CallsData/ExportEmployeesToJson";
	бит_ТелефонияКлиентПереопределяемый.ПоказВводСтроки(АдресЗагрузки, "Адрес загрузки", "БитАТС_ТелефонныеСтанции_ВвестиАдресСервера");
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьНомераСотрудников(Команда)
	Если ( ПроверитьНаличиеНомеровАТССервер(Объект.Ссылка) ) Тогда
		ПоказатьВопросПерезаписиНомеров("БитАТС_ТелефонныеСтанции_ЗагрузитьНомераСотрудников", "");
	Иначе
		ЗагрузитьНомераСотрудниковЗавершение();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьПодключение(Команда)
	
	ЗагрузитьИнформациюСАТС(Элементы.Адрес.ТекстРедактирования,
		Элементы.Пользователь.ТекстРедактирования,
		Элементы.Пароль.ТекстРедактирования,
		"");
		
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьТранкиАТС(Команда)
	
	ЗагрузитьИнформациюСАТС(Объект.Адрес,
		Объект.Пользователь,
		Объект.Пароль,
		"trunks");
	
КонецПроцедуры

&НаКлиенте
Процедура ЗадатьГруппуДоступа(Команда)
	Если Элементы.Номера.ВыделенныеСтроки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТекущГруппаДоступа = Неопределено;
	
	Если Элементы.Номера.ВыделенныеСтроки.Количество() = 1 Тогда
		ВыделСтрока = Элементы.Номера.ВыделенныеСтроки[0];
		Если НЕ ПроверкаНомерЭтоГруппа(ВыделСтрока) Тогда
			ТекущГруппаДоступа = ВыделСтрока.ГруппаДоступа;
		КонецЕсли;
	КонецЕсли;
	
	ПараметрыФормыВыбораГруппы = Новый Структура;
	ПараметрыФормыВыбораГруппы.Вставить("ТекущаяСтрока", ТекущГруппаДоступа);
	ФормаВыбораГруппыДоступа = ПолучитьФорму("Справочник.бит_ГруппыДоступаБитАТС.ФормаВыбора", ПараметрыФормыВыбораГруппы, Элементы.Номера);
	
	бит_ТелефонияКлиентПереопределяемый.ОткрытьФормуСБлокировкойВладельца(ФормаВыбораГруппыДоступа);
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьГруппуДоступа(Команда)
	Если Элементы.Номера.ВыделенныеСтроки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ЗадатьГруппуДоступаВыделенныхНомеровСервер(ПредопределенноеЗначение("Справочник.бит_ГруппыДоступаБитАТС.ПустаяСсылка"));
	
	Элементы.Номера.Обновить();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбновитьДоступность()
	флагОбъектСохранен = ЗначениеЗаполнено(Объект.Ссылка);
	бит_ТелефонияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Номера, "Владелец", ?(флагОбъектСохранен, Объект.Ссылка, ПредопределенноеЗначение("Справочник.бит_ТелефонныеСтанцииБитАТС.ПустаяСсылка")));
	Элементы.ГруппаНомераАТС.Доступность = флагОбъектСохранен;
	Элементы.ПроверитьТранкиАТС.Доступность = флагОбъектСохранен;
	Элементы.ГруппаСинхронизация.Доступность = флагОбъектСохранен;
	
	флагСинхронСотр = флагОбъектСохранен И Объект.СинхронизацияССотрудниками;
	Элементы.ГруппаСинхронизацииСотрудников.Доступность = флагСинхронСотр;
	Элементы.ЗагрузитьНомераСотрудников.Доступность = флагСинхронСотр;
КонецПроцедуры

&НаСервере
Функция ПроверитьНаличиеНомеровАТССервер(ссылкаАТС)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	бит_НомераБитАТС.Ссылка
	               |ИЗ
	               |	Справочник.бит_НомераБитАТС КАК бит_НомераБитАТС
	               |ГДЕ
	               |	бит_НомераБитАТС.Владелец = &Владелец";
	Запрос.УстановитьПараметр("Владелец", ссылкаАТС);
	Возврат НЕ Запрос.Выполнить().Пустой();
КонецФункции

&НаКлиенте
Процедура ПоказатьВопросПерезаписиНомеров(ИмяОповещения, ПараметрОповещения)
	бит_ТелефонияКлиентПереопределяемый.ПоказВопрос("Существующие записи в справочнике будут заменены при совпадении номеров. Продолжить?",
						РежимДиалогаВопрос.ДаНет, , , , ИмяОповещения, ПараметрОповещения);
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьГруппуНомеровИзСоотв(СоотвНаборНомеров, РодительСсылка, загружено)
	Для Каждого соотвНомер Из СоотвНаборНомеров Цикл
		ключНомер	= соотвНомер.Ключ;
		поляОбНомер	= соотвНомер.Значение;
		полеИмя		= поляОбНомер["name"];
		полеНомер	= поляОбНомер["number"];
		полеДочерние= поляОбНомер.Получить("members");
		//
		Если полеНомер = Неопределено Тогда
			полеНомер = "";
		КонецЕсли;
		//
		Если полеДочерние = Неопределено Тогда
			бит_АТССервер.ПроверитьНаличиеЭлементаНомеровАТС(Объект.Ссылка, РодительСсылка, полеИмя, полеНомер);
			загружено = загружено + 1;
		Иначе
			// группа
			группаСсылка = бит_АТССервер.ПроверитьНаличиеГруппыНомеровАТС(Объект.Ссылка, РодительСсылка, полеИмя, ключНомер);
			загружено = загружено + 1;
			ЗагрузитьГруппуНомеровИзСоотв(полеДочерние, группаСсылка, загружено);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьНомераИзJsonСервер(стрJSON, загружено)
	наборНомеров = бит_ТелефонияКлиентСервер.ЗаполнитьСоответствиеИзJSON(стрJSON);
	ЗагрузитьГруппуНомеровИзСоотв(наборНомеров, Справочники.бит_НомераБитАТС.ПустаяСсылка(), загружено);
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИнформациюСАТС(Знач стрАдресАТС, Знач стрПользовательАТС, Знач стрПарольАТС, Знач стрТипИнформ)
	
	Если НЕ ЗначениеЗаполнено(стрАдресАТС) Тогда
		бит_ТелефонияКлиент.ВывестиСообщение("Не задан адрес", ЭтаФорма);
		Возврат;
	КонецЕсли;
	
#Если ВебКлиент Тогда
	стрJSON = "";
	ошибка = Ложь;
	Попытка
		стрJSON = бит_АТССервер.ВебСервисПолучитьИнформациюАТС(Элементы.ВебСервис.ТекстРедактирования,
									стрАдресАТС, стрПользовательАТС, стрПарольАТС, стрТипИнформ);
		ошибка = Ложь;
	Исключение
		ошибка = Истина;
		бит_ТелефонияКлиент.ВывестиСообщение(ОписаниеОшибки(), ЭтаФорма);
	КонецПопытки;
	РазборИнформацииСАТС(стрJSON, стрТипИнформ, ошибка);
#Иначе
	ПараметрыПодключенияВК = Новый Структура();
	ПараметрыПодключенияВК.Вставить("АдресАТС", стрАдресАТС);
	ПараметрыПодключенияВК.Вставить("ПользовательАТС", стрПользовательАТС);
	ПараметрыПодключенияВК.Вставить("ПарольАТС", стрПарольАТС);
	ПараметрыПодключенияВК.Вставить("ТипИнформации", стрТипИнформ);
	бит_АТСКлиент.ПодключениеКомпонентыУправлениеАТС("БитАТС_ТелефонныеСтанции_ПодключениеВК", ПараметрыПодключенияВК);
#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИнформациюСАТСЗавершение(обКонтроллерАТС, стрАдресАТС, стрПользовательАТС, стрПарольАТС, стрТипИнформ)
	
	стрJSON = "";
	
	ошибка = Ложь;
	Попытка
		стрJSON = обКонтроллерАТС.GetPBXInfoJSON(стрАдресАТС, стрПользовательАТС, стрПарольАТС, стрТипИнформ);
		обКонтроллерАТС = Неопределено;
		ошибка = Ложь;
	Исключение
		ошибка = Истина;
	КонецПопытки;
	
	РазборИнформацииСАТС(стрJSON, стрТипИнформ, ошибка);
	
КонецПроцедуры

&НаКлиенте
Процедура РазборИнформацииСАТС(стрJSON, стрТипИнформ, флагОшибка)
	
	Если стрТипИнформ = "users" Тогда
		
		загружено_элементов = 0;
		Если флагОшибка Тогда
			бит_ТелефонияКлиент.ВывестиСообщение("Ошибка загрузки номеров с АТС " + Объект.Адрес, ЭтаФорма);
		Иначе
			ЗагрузитьНомераИзJsonСервер(стрJSON, загружено_элементов);
		КонецЕсли;
		Элементы.Номера.Обновить();
		бит_ТелефонияКлиент.ВывестиСообщение("Загружено записей с АТС: " + Строка(загружено_элементов), ЭтаФорма);
		
	ИначеЕсли стрТипИнформ = "trunks" Тогда
		
		Если флагОшибка Тогда
			бит_ТелефонияКлиент.ВывестиСообщение("Ошибка загрузки транков с адреса '" + Объект.Адрес + "'", ЭтаФорма);
		Иначе
			наборТранков = бит_ТелефонияКлиентСервер.ЗаполнитьСоответствиеИзJSON(стрJSON);
			Для Каждого соотвТранк Из наборТранков Цикл
				ключТранк	= соотвТранк.Ключ;
				поляОбТранк	= соотвТранк.Значение;
				полеИмя		= поляОбТранк["name"];
				полеПир		= поляОбТранк["peer"];
				бит_ТелефонияКлиент.ВывестиСообщение(полеИмя + ": " + полеПир, ЭтаФорма);
			КонецЦикла;
		КонецЕсли;
		
	ИначеЕсли стрТипИнформ = "" Тогда	// просто проверка подключения
		Если флагОшибка Тогда
			бит_ТелефонияКлиентПереопределяемый.ПоказПредупреждение("Ошибка подключения к АТС.");
		Иначе
			бит_ТелефонияКлиентПереопределяемый.ПоказПредупреждение("Соединение успешно.");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьНомераСАТСЗавершение()
	
	ЗагрузитьИнформациюСАТС(Объект.Адрес,
		Объект.Пользователь,
		Объект.Пароль,
		"users");
		
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьНомераССервераПослеВводаАдреса(АдресЗагрузки)
	
	Если НЕ ЗначениеЗаполнено(АдресЗагрузки) Тогда
		Возврат;
	КонецЕсли;
	
	Если ( ПроверитьНаличиеНомеровАТССервер(Объект.Ссылка) ) Тогда
		ПоказатьВопросПерезаписиНомеров("БитАТС_ТелефонныеСтанции_ЗагрузитьНомераССервера", АдресЗагрузки);
	Иначе
		ЗагрузитьНомераССервераЗавершение(АдресЗагрузки);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьНомераССервераЗавершение(АдресЗагрузки)
	
	загружено_элементов = 0;
	стрJSON = "";
	стрОшибкаHTTP = "";
	загружено = бит_ТелефонияКлиентСервер.СкачатьПоHTTPS(АдресЗагрузки, 120, Истина, стрJSON, стрОшибкаHTTP);
	
	Если загружено Тогда
		ЗагрузитьНомераИзJsonСервер(стрJSON, загружено_элементов);
	Иначе
		бит_ТелефонияКлиент.ВывестиСообщение(стрОшибкаHTTP, ЭтаФорма);
		бит_ТелефонияКлиент.ВывестиСообщение("Ошибка загрузки номеров с адреса " + АдресЗагрузки, ЭтаФорма);
	КонецЕсли;
	
	Элементы.Номера.Обновить();
	
	бит_ТелефонияКлиент.ВывестиСообщение("Загружено записей с сервера: " + Строка(загружено_элементов), ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьНомераСотрудниковЗавершение()
	группаСинхр = ПредопределенноеЗначение("Справочник." + бит_ТелефонияСерверПереопределяемый.ПолучитьИмяСправочникаСотрудников() + ".ПустаяСсылка");
	Если ЗначениеЗаполнено(Объект.ГруппаСинхронизацииСотрудников) Тогда
		группаСинхр = Объект.ГруппаСинхронизацииСотрудников;
	КонецЕсли;
	загружено_элементов = 0;
	бит_АТССервер.ЗагрузитьНомераСотрудников(Объект.Ссылка, группаСинхр, загружено_элементов);
	Элементы.Номера.Обновить();
	бит_ТелефонияКлиент.ВывестиСообщение("Загружено номеров сотрудников: " + Строка(загружено_элементов), ЭтаФорма);
КонецПроцедуры

&НаСервере
Функция ПроверкаНомерЭтоГруппа(НомерСсылка)
	Возврат НомерСсылка.ЭтоГруппа;
КонецФункции

&НаСервере
Функция ПолучитьНомераГруппы(ГруппаНомеровСсылка)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	бит_НомераБитАТС.Ссылка
	               |ИЗ
	               |	Справочник.бит_НомераБитАТС КАК бит_НомераБитАТС
	               |ГДЕ
	               |	бит_НомераБитАТС.Родитель = &Родитель";
	Запрос.УстановитьПараметр("Родитель", ГруппаНомеровСсылка);
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
КонецФункции

&НаСервере
Процедура ЗадатьГруппуДоступаНомеров(массивНомеров, ГруппаДоступаСсылка)
	Для Каждого элНомеров Из массивНомеров Цикл
		Если ПроверкаНомерЭтоГруппа(элНомеров) Тогда
			массивНомеровГруппы = ПолучитьНомераГруппы(элНомеров);
			ЗадатьГруппуДоступаНомеров(массивНомеровГруппы, ГруппаДоступаСсылка);
		Иначе
			обНомер = элНомеров.ПолучитьОбъект();
			обНомер.ГруппаДоступа = ГруппаДоступаСсылка;
			обНомер.Записать();
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ЗадатьГруппуДоступаВыделенныхНомеровСервер(ГруппаДоступаСсылка)
	ЗадатьГруппуДоступаНомеров(Элементы.Номера.ВыделенныеСтроки, ГруппаДоступаСсылка);
КонецПроцедуры

#КонецОбласти
