&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЗаполнитьГруппуДокументы();
	ЗаполнитьГруппуДопРеквизиты();
	Если НЕ РасчетныйСчетУказан() Тогда
	
		Элементы.СформироватьДокумент.Доступность = Ложь;
	
	КонецЕсли;
	
	ИмяФайла = "1c_to_client.txt";
	ФорматВремениСохранения = "ДФ=yyyyMMMMdd_HHmmss"
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьДокумент(Команда)

	СтрокиДокумента = СформироватьТекстНаСервере();
	ПолноеИмяФайла = ПолучитьИмяПолногоПутиКФайлу();
	Записать_TXT(СтрокиДокумента, ПолноеИмяФайла);
	ОтметитьВыведеннуюГоспошлину();
	
	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = "Файл сформирован!";
	Сообщение.Сообщить();
	
КонецПроцедуры

&НаКлиенте
Процедура Записать_TXT(СтрокиДокумента, ПолныйПутьФайла)

	Содержимое = СтрСоединить(СтрокиДокумента, "");
	
	КодировкаТекстаФайла = ?(Кодировка, КодировкаТекста.OEM, КодировкаТекста.ANSI);
	Текстовый = Новый ЗаписьТекста(ПолныйПутьФайла, КодировкаТекстаФайла);
	Текстовый.Записать(Содержимое);
	Текстовый.Закрыть();

КонецПроцедуры

&НаСервере
Процедура ОтметитьВыведеннуюГоспошлину()

	СудебныеДела = Новый Массив;
	Для каждого СтрокаВыгрузки Из Выгрузка Цикл
	
		СудебноеДело = СтрокаВыгрузки.СудебноеДело;
		
		СудебныеДела.Добавить(СудебноеДело);
	
	КонецЦикла;
	
	РегистрыСведений.ГоспошлинаДляКлиентБанка.ОтметитьКакОплачена(СудебныеДела);

КонецПроцедуры


&НаКлиенте
Процедура ЗаполнитьПоУмолчанию(Команда)
	Выгрузка.Очистить();
	ЗаполнитьВыгрузку();
КонецПроцедуры

&НаСервере
Функция СформироватьТекстНаСервере()
	
	ЗадатьРазделители();
	// Заблокировать
	ПериодВыгрузки = ПолучитьПериодВыгрузки();
	//ОплачиваемаяГоспошлина = ПолучитьДанныеПоГоспошлине();
	//ОбновитьДанные();
	// Разблокировать

	СтрокиДокумента = Новый Массив;
	
	Шапка = ЗаполнитьШапкуДокумента(ПериодВыгрузки);
	СтрокиДокумента.Добавить(Шапка);
	ПолучитьСодержимое(СтрокиДокумента);
	ЗаполнитьКонецДокумента(СтрокиДокумента);
	
	Возврат СтрокиДокумента;
	
КонецФункции

&НаКлиенте
Процедура ПутьКФайлуНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Режим = РежимДиалогаВыбораФайла.ВыборКаталога;
	ДиалогОткрытия = Новый ДиалогВыбораФайла(Режим);
	ДиалогОткрытия.Каталог = "";
	ДиалогОткрытия.МножественныйВыбор = Ложь;
	ДиалогОткрытия.Заголовок = "Выберите каталог";

	Если ДиалогОткрытия.Выбрать() Тогда 
		ПутьКФайлу = ДиалогОткрытия.Каталог + ПолучитьРазделительПути();
	КонецЕсли; 
	
КонецПроцедуры

#Область БазовоеЗаполнение

&НаСервере
Функция ЗаполнитьКонецДокумента(СтрокиДокумента)
	
	СтрокаПоРеквизиту = "КонецФайла";
	СтрокиДокумента.Добавить(СтрокаПоРеквизиту);

КонецФункции

&НаСервере
Функция ПоследнийНомер()

	Возврат РегистрыСведений.ДатыВыгрузкиВКлиентБанк.ПоследнийНомер();

КонецФункции // ()

&НаСервере
Процедура ЗаполнитьВыгрузку()

	ГоспошлинаДляОплаты = РегистрыСведений.ГоспошлинаДляКлиентБанка.НеОплаченная();
	Для каждого ДанныеПоГоспошлине Из ГоспошлинаДляОплаты Цикл
	
		СтрокаВыгрузки = Выгрузка.Добавить();
		СтрокаВыгрузки.СудебноеДело = ДанныеПоГоспошлине.Основание;
		СтрокаВыгрузки.Госпошлина = ДанныеПоГоспошлине.Госпошлина;
		СтрокаВыгрузки.Суд = СтрокаВыгрузки.СудебноеДело.Суд;
		Если НЕ ЗначениеЗаполнено(СтрокаВыгрузки.Суд) Тогда
		
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Не заполнен суд! " + СтрокаВыгрузки.СудебноеДело;
			Сообщение.Сообщить();
		
		КонецЕсли;
	
	КонецЦикла;

КонецПроцедуры

&НаСервере
Функция РасчетныйСчетУказан()

	РасчетныйСчет = Справочники.Организации.ПолучитьСчетОрганизацииТекущегоПользователя();
	Если НЕ ЗначениеЗаполнено(РасчетныйСчет) Тогда
	
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Нет данных о расчетном счете!";
		Сообщение.Сообщить();
		
		Возврат Ложь;
	
	КонецЕсли;
	
	Возврат Истина;

КонецФункции

&НаСервере
Процедура ЗаполнитьГруппуДокументы()

	ТипыДокументов = Элементы.ГруппаДокументы.ПодчиненныеЭлементы;
	
	Для каждого ТипДокумента Из ТипыДокументов Цикл
	
		ЭтаФорма[ТипДокумента.Имя] = Истина;
	
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьГруппуДопРеквизиты()

	ВидОплаты = "01";
	Для НомерСтатуса = 0 По 26 Цикл
	
		Значение = Формат(НомерСтатуса, "ЧЦ=2; ЧДЦ=0");
		Элементы.СтатусСоставителя.СписокВыбора.Добавить(Значение, Значение);
	
	КонецЦикла;
	СтатусСоставителя = "01";
	ПоказательОснования = "0";
	ПоказательПериода = "МС." + Формат(ТекущаяДатаСеанса(), "ДФ=MM.yyyy");
	ПоказательНомера = "0";
	ПоказательДаты = ФорматДатаСтандартный(ТекущаяДатаСеанса());

КонецПроцедуры


&НаКлиенте
Функция ПолучитьИмяПолногоПутиКФайлу()

	МестоВыгрузки = Новый Файл(ПутьКФайлу);

	ГруппаВремяВыгрузки = Формат(ОбщегоНазначенияКлиент.ДатаСеанса(), ФорматВремениСохранения);
	КаталогДляСохранения = МестоВыгрузки.ПолноеИмя + ПолучитьРазделительПутиКлиента() + ГруппаВремяВыгрузки;
	МестоВыгрузки = Новый Файл(КаталогДляСохранения);
	Если НЕ МестоВыгрузки.Существует() Тогда
	
		СоздатьКаталог(КаталогДляСохранения);
	
	КонецЕсли;
	
	ПолноеИмяФайла = МестоВыгрузки.ПолноеИмя + ПолучитьРазделительПутиКлиента() + ИмяФайла;
	ПолныйПутьФайла = Новый Файл(ПолноеИмяФайла);
	Если НЕ ЗначениеЗаполнено(ПолныйПутьФайла.Расширение) Тогда
	
		ПолныйПутьФайла = Новый Файл(ПолноеИмяФайла + ".txt");
	
	КонецЕсли;
	
	Возврат ПолныйПутьФайла.ПолноеИмя;

КонецФункции // ()

&НаСервере
Процедура ЗадатьРазделители()

	СимволРазделенияДанных = Символы.ПС;
	СимволРазделенияКлючЗначение = "=";

КонецПроцедуры

&НаСервере
Функция ФорматДатаСтандартный(ВходящаяДата)

	Возврат Формат(ВходящаяДата, "ДФ=dd.MM.yyyy");

КонецФункции // ()

&НаСервере
Функция ФорматСуммаСтандартный(ВходящаяСумма)

	Возврат Формат(ВходящаяСумма, "ЧДЦ=2; ЧРД=.; ЧН=0.00; ЧГ=0");

КонецФункции // ()


&НаСервере
Функция ФорматВремяСтандартный(ВходящаяДата)

	Возврат Формат(ВходящаяДата, "ДЛФ=T");

КонецФункции // ()

&НаСервере
Функция ПолучитьДанныеПоГоспошлине()

	// Сумма
	// Суд
	// Номер

КонецФункции // ()

#КонецОбласти

#Область Шапка

&НаСервере
Функция ЗаполнитьШапкуДокумента(ПериодВыгрузки)

	ДатаФормирования = ТекущаяДатаСеанса();
	
	Шапка = "1CClientBankExchange" + СимволРазделенияДанных
		+ ЗаполнитьСтрокуДокумента("ВерсияФормата", "1.02")
		+ ЗаполнитьСтрокуДокумента("Кодировка", ?(Кодировка, "DOS", "Windows"))
		+ ЗаполнитьСтрокуДокумента("Отправитель", "Бит.УЗ")
		+ ЗаполнитьСтрокуДокумента("Получатель", )
		+ ЗаполнитьСтрокуДокумента("ДатаСоздания", ФорматДатаСтандартный(ДатаФормирования))
		+ ЗаполнитьСтрокуДокумента("ВремяСоздания", ФорматВремяСтандартный(ДатаФормирования));
	
	Шапка = Шапка
		+ ЗаполнитьСтрокуДокумента("ДатаНачала", ФорматДатаСтандартный(ПериодВыгрузки["ДатаНачала"]))
		+ ЗаполнитьСтрокуДокумента("ДатаКонца", ФорматДатаСтандартный(ПериодВыгрузки["ДатаКонца"]));
	
	РасчетныйСчетОрганизации = ПолучитьРасчетныйСчетОрганизации();
	Шапка = Шапка + ЗаполнитьСтрокуДокумента("РасчСчет", РасчетныйСчетОрганизации);
	
	ТипыДокументов = Элементы.ГруппаДокументы.ПодчиненныеЭлементы;
	Для каждого ТипДокумента Из ТипыДокументов Цикл
	
		Если ЭтаФорма[ТипДокумента.Имя] = Ложь Тогда
		
			Продолжить;
		
		КонецЕсли;
		
		Шапка = Шапка + ЗаполнитьСтрокуДокумента("Документ", ТипДокумента.Заголовок);
	
	КонецЦикла;

	Возврат Шапка;

КонецФункции // ()

&НаСервере
Функция ЗаполнитьСтрокуДокумента(Ключ, Значение = "")

	Возврат Ключ + СимволРазделенияКлючЗначение + Значение + СимволРазделенияДанных;

КонецФункции // ()

&НаСервере
Функция ПолучитьРасчетныйСчетОрганизации()

	Возврат Справочники.Организации.ПолучитьСчетОрганизацииТекущегоПользователя();

КонецФункции // ()

&НаСервере
Функция ПолучитьПериодВыгрузки()

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Выгрузка.СудебноеДело КАК СудебноеДело
		|ПОМЕСТИТЬ втВыгрузка
		|ИЗ
		|	&Выгрузка КАК Выгрузка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МИНИМУМ(втВыгрузка.СудебноеДело.Дата) КАК ДатаНачала,
		|	МАКСИМУМ(втВыгрузка.СудебноеДело.Дата) КАК ДатаКонца
		|ИЗ
		|	втВыгрузка КАК втВыгрузка";
	
	ТЗ = Новый ТаблицаЗначений;
	ТЗ = Выгрузка.Выгрузить();
	Запрос.УстановитьПараметр("Выгрузка", ТЗ);
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();

	ПериодВыгрузки = Новый Структура;
	ПериодВыгрузки.Вставить("ДатаНачала", Дата(1, 1, 1));
	ПериодВыгрузки.Вставить("ДатаКонца", ТекущаяДатаСеанса());

	Если РезультатЗапроса.Количество() <> 0 Тогда
		
		СтрокаПериода = РезультатЗапроса[0];
	
		ПериодВыгрузки.Вставить("ДатаНачала", СтрокаПериода.ДатаНачала);
		ПериодВыгрузки.Вставить("ДатаКонца", СтрокаПериода.ДатаКонца);
	
	КонецЕсли;

	ВОзврат ПериодВыгрузки;

КонецФункции // ()


#КонецОбласти

#Область Содержимое

&НаСервере
Процедура ЗаполнитьШапкуБлока(СведенияОГоспошлине, НомерДокумента, СтрокиДокумента)

	ФорматированныйНомер = Формат(НомерДокумента, Обработки.ВыгрузкаВКлиентБакнк.ФорматНомераДокумента());
	ПорядковыйНомер = ЗаполнитьСтрокуДокумента("Номер", ФорматированныйНомер);
	СтрокиДокумента.Добавить(ПорядковыйНомер);
	
	ДатаДокумента = ЗаполнитьСтрокуДокумента("Дата", ФорматДатаСтандартный(СведенияОГоспошлине.СудебноеДело.Дата));
	СтрокиДокумента.Добавить(ДатаДокумента);
	
	СуммаПлатежа = ЗаполнитьСтрокуДокумента("Сумма", ФорматСуммаСтандартный(СведенияОГоспошлине.Госпошлина));
	СтрокиДокумента.Добавить(СуммаПлатежа);

КонецПроцедуры

Процедура ЗаполнитьПлательщика(СведенияОГоспошлине, СтрокиДокумента)

	Организация = ПараметрыСеанса.ТекущийПользователь.Организация;
	ЗаполнитьДанныеДляОплаты(Организация, СтрокиДокумента, "Плательщик");

КонецПроцедуры

Процедура ЗаполнитьПолучателя(СведенияОГоспошлине, СтрокиДокумента)

	Организация = СведенияОГоспошлине.Суд;
	ЗаполнитьДанныеДляОплаты(Организация, СтрокиДокумента, "Получатель");

КонецПроцедуры

Процедура ЗаполнитьДанныеДляОплаты(Организация, СтрокиДокумента, Назначение)

	Банк = Организация.Банк;
	ДанныеИсточник = Новый Структура;
	ДанныеИсточник.Вставить("Организация", Организация);
	ДанныеИсточник.Вставить("Банк", Банк);
	
	РеквизитыПолучателя = Обработки.ВыгрузкаВКлиентБакнк.ПолучитьРеквизитыОплаты();
	Если Назначение = "Плательщик" Тогда
	
		РеквизитыПолучателя = Обработки.ВыгрузкаВКлиентБакнк.ПолучитьРеквизитыПлательщика();
	
	КонецЕсли;
	
	ЗаполнитьРеквизитыПоСписку(ДанныеИсточник, РеквизитыПолучателя, СтрокиДокумента, Назначение);

КонецПроцедуры


Процедура ЗаполнитьНазначениеПлатежа(СведенияОГоспошлине, СтрокиДокумента)

	Организация = ПараметрыСеанса.ТекущийПользователь.Организация.НаименованиеДляПечати;
	Сумма = СведенияОГоспошлине.Госпошлина;

	СудебноеДело = СведенияОГоспошлине.СудебноеДело;
	Если СудебноеДело.Ответчики.Количество() <= 0 Тогда
	
		ВызватьИсключение "Нет ответчиков по Судебному делу! " + СудебноеДело;
	
	КонецЕсли;
	Имена = Новый Массив;
	Для каждого Ответчик Из СудебноеДело.Ответчики Цикл
	
		Имена.Добавить(Ответчик.Значение.Наименование);
	
	КонецЦикла;
	ФИО = СтрСоединить(Имена, ", ");
	
	РеквизитыНазначения = Обработки.ВыгрузкаВКлиентБакнк.ПолучитьНазначение();
	Для НомерНазначения = 0 По РеквизитыНазначения.Количество() - 1 Цикл
	
		Текст = РеквизитыНазначения[НомерНазначения];
		Текст = СтрЗаменить(Текст, "<Организация>", Организация);
		Текст = СтрЗаменить(Текст, "<ФИО>", ФИО);
		Текст = СтрЗаменить(Текст, "<Сумма>", Сумма);
		
		СтрокаПоРеквизиту = ЗаполнитьСтрокуДокумента("НазначениеПлатежа" + (НомерНазначения + 1), Текст);
		СтрокиДокумента.Добавить(СтрокаПоРеквизиту);
	
	КонецЦикла;

КонецПроцедуры

Процедура ЗаполнитьДопРеквизитыПлатежаВБюджет(СведенияОГоспошлине, СтрокиДокумента)

	Организация = ПараметрыСеанса.ТекущийПользователь.Организация.НаименованиеДляПечати;
	ДанныеИсточник = Новый Структура;
	ДанныеИсточник.Вставить("Суд", СведенияОГоспошлине.Суд);
	ДанныеИсточник.Вставить("ЭтаФорма", ЭтаФорма);
	
	РеквизитыВБюджет = Обработки.ВыгрузкаВКлиентБакнк.ПолучитьРеквизитыВБюджет();
	ЗаполнитьРеквизитыПоСписку(ДанныеИсточник, РеквизитыВБюджет, СтрокиДокумента);

КонецПроцедуры

Процедура ЗаполнитьРеквизитыПоСписку(Сведения, СписокРеквизитов, СтрокиДокумента, Назначение = "")

	Для каждого РеквизитСписка Из СписокРеквизитов Цикл
	
		ТекстКлюча = РеквизитСписка.Ключ;
		Если ТекстКлюча = "Пусто" Тогда
		
			ТекстКлюча = "";
		
		КонецЕсли;
		Если СтрНайти(ТекстКлюча, "СоставнойНомер_") Тогда
		
			СоставнойНомер = СтрРазделить(ТекстКлюча, "_");
			ТекстКлюча = СоставнойНомер[1];
		
		КонецЕсли;
		
		ТекстЗначения = "";
		Если ТипЗнч(РеквизитСписка.Значение) = Тип("Структура") Тогда
			
			Значение = Новый Массив;
			Для каждого ЧастьЗначения Из РеквизитСписка.Значение Цикл
			
				ОбъектСведения = Сведения[ЧастьЗначения.Ключ];
				Если ТипЗнч(ЧастьЗначения.Значение) = Тип("Строка") Тогда
				
					Значение.Добавить(ОбъектСведения[ЧастьЗначения.Значение]);
				
				Иначе
					Для каждого ИмяРеквизита Из ЧастьЗначения.Значение Цикл
					
						Значение.Добавить(ОбъектСведения[ИмяРеквизита]);
					
					КонецЦикла;
				КонецЕсли;
				
			КонецЦикла;
			ТекстЗначения = СтрСоединить(Значение, " ");
			
		Иначе
			ВызватьИсключение "Не обработано значение для заполнения! " + РеквизитСписка.Ключ;
		КонецЕсли;
		
		СтрокаПоРеквизиту = ЗаполнитьСтрокуДокумента(Назначение + ТекстКлюча, ТекстЗначения);
		СтрокиДокумента.Добавить(СтрокаПоРеквизиту);
	
	КонецЦикла;

КонецПроцедуры

&НаСервере
Функция ПолучитьСодержимое(СтрокиДокумента)

	НомерДокумента = ПоследнийНомер() + 1;
	Для каждого СведенияОГоспошлине Из Выгрузка Цикл
	
		НачалоБлока = ЗаполнитьСтрокуДокумента("СекцияДокумент", "Платежное поручение");
		СтрокиДокумента.Добавить(НачалоБлока);
		
		ЗаполнитьШапкуБлока(СведенияОГоспошлине, НомерДокумента, СтрокиДокумента);
		НомерДокумента = НомерДокумента + 1;
		
		ЗаполнитьПлательщика(СведенияОГоспошлине, СтрокиДокумента);
		ЗаполнитьПолучателя(СведенияОГоспошлине, СтрокиДокумента);
		
		СтрокаВидаОплаты = ЗаполнитьСтрокуДокумента("ВидОплаты", ВидОплаты);
		СтрокиДокумента.Добавить(СтрокаВидаОплаты);
		
		ЗаполнитьНазначениеПлатежа(СведенияОГоспошлине, СтрокиДокумента);
		ЗаполнитьДопРеквизитыПлатежаВБюджет(СведенияОГоспошлине, СтрокиДокумента);
		
		КонецБлока = "КонецДокумента" + СимволРазделенияДанных;
		СтрокиДокумента.Добавить(КонецБлока);
	
	КонецЦикла;

КонецФункции

&НаКлиенте
Процедура ФорматВремениСохраненияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	КонструкторыКлиент.КонструкторФорматаОткрытие(ЭтаФорма, "ФорматВремениСохранения", Истина);
КонецПроцедуры







#КонецОбласти
