#Область ТехническийИнтерфейс

Функция ТипИмущества(ПринадлежностьХарактеристики) Экспорт

	Если Не ПринадлежностьХарактеристики.Предопределенный Тогда
	
		Возврат ПринадлежностьХарактеристики.ТипИмущества;
	
	КонецЕсли;
	
	Имущество = ПланыВидовХарактеристик.Имущество;
	ПравилаСоответствия = Имущество.СоответствиеХарактеристикиТипу();
	ТипИмущества = ПравилаСоответствия.Получить(ПринадлежностьХарактеристики);
	Возврат ТипИмущества;

КонецФункции // ()

Функция ПоляИмущества(ХарактеристикаИмущества) Экспорт

	Имущество = ПланыВидовХарактеристик.Имущество;
	ДоступныеТипыИмущества = Имущество.ПолучитьВарианты(ХарактеристикаИмущества);
	Поля = ДопустимыеПоля(ДоступныеТипыИмущества);
	
	Возврат Поля;

КонецФункции // ()

Функция ДопустимыеПоля(ТипыИмущества) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СвойстваИмущества.Ссылка КАК Свойство
		|ИЗ
		|	ПланВидовХарактеристик.СвойстваИмущества КАК СвойстваИмущества
		|ГДЕ
		|	СвойстваИмущества.ПометкаУдаления = ЛОЖЬ
		|	И СвойстваИмущества.ТипИмущества В(&ТипыИмущества)";
	
	Запрос.УстановитьПараметр("ТипыИмущества", ТипыИмущества);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса.Выгрузить();

КонецФункции // ()

Процедура ЗаполнитьВсеСвойства(ВидИмущества, ТаблицаЗаполнения) Экспорт

	Поля = ПоляИмущества(ВидИмущества);
	
	Для каждого Поле Из Поля Цикл
	
		Элемент = ТаблицаЗаполнения.Добавить();
		Элемент.Свойство = Поле["Свойство"];
	
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область Конфигурация

Функция ЭлементыИмущества()

	ТипИмущества = ПланыВидовХарактеристик.Имущество;
	
	КвалификаторДлиннойСтроки = Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(1024, ДопустимаяДлина.Переменная));
	Элементы = Новый Соответствие;
	Элементы.Вставить(
		"Адрес",
		ДанныеНастройки(
			ТипИмущества.Недвижимость,
			Ложь,
			КвалификаторДлиннойСтроки
		)
	);
	Элементы.Вставить(
		"Комментарий",
		ДанныеНастройки(
			ТипИмущества.Имущество,
			Ложь,
			КвалификаторДлиннойСтроки
		)
	);
	Элементы.Вставить(
		"Марка",
		ДанныеНастройки(
			ТипИмущества.Транспорт,
			Ложь,
			КвалификаторДлиннойСтроки
		)
	);
	
	Элементы.Вставить(
		"Площадь",
		ДанныеНастройки(
			ТипИмущества.Недвижимость,
			Ложь,
			Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(10, 4))
		)
	);
	
	Элементы.Вставить(
		"КадастровыйНомер",
		ДанныеНастройки(
			ТипИмущества.Недвижимость,
			Истина,
			Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(16, ДопустимаяДлина.Фиксированная))
		)
	);
	
	Элементы.Вставить(
		"ГосНомер",
		ДанныеНастройки(
			ТипИмущества.Транспорт,
			Истина,
			Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(12, ДопустимаяДлина.Фиксированная))
		)
	);
	
	Элементы.Вставить(
		"VIN_Номер",
		ДанныеНастройки(
			ТипИмущества.Транспорт,
			Истина,
			Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(17, ДопустимаяДлина.Фиксированная))
		)
	);
	
	Элементы.Вставить(
		"ГодВыпуска",
		ДанныеНастройки(
			ТипИмущества.Транспорт,
			Истина,
			Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(4, ДопустимаяДлина.Фиксированная))
		)
	);
	
	КвалификаторСтоимости = Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(15, 2));
	Элементы.Вставить(
		"КадастроваяСтоимость",
		ДанныеНастройки(
			ТипИмущества.Недвижимость,
			Ложь,
			КвалификаторСтоимости
		)
	);
	Элементы.Вставить(
		"ОриентировочнаяСтоимость",
		ДанныеНастройки(
			ТипИмущества.Недвижимость,
			Ложь,
			КвалификаторСтоимости
		)
	);
	Элементы.Вставить(
		"Оценка",
		ДанныеНастройки(
			ТипИмущества.Недвижимость,
			Ложь,
			КвалификаторСтоимости
		)
	);
	
	КвалификаторДоли = Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(10, 0, ДопустимыйЗнак.Неотрицательный));
	Элементы.Вставить(
		"ДоляЧислитель",
		ДанныеНастройки(
			ТипИмущества.Недвижимость,
			Ложь,
			КвалификаторДоли
		)
	);
	Элементы.Вставить(
		"ДоляЗнаменатель",
		ДанныеНастройки(
			ТипИмущества.Недвижимость,
			Ложь,
			КвалификаторДоли
		)
	);
	
	КвалификаторДаты = Новый ОписаниеТипов("Дата",,,,, Новый КвалификаторыДаты(ЧастиДаты.Дата));
	Элементы.Вставить(
		"ДатаРегистрации",
		ДанныеНастройки(
			ТипИмущества.Имущество,
			Ложь,
			КвалификаторДаты
		)
	);
	Элементы.Вставить(
		"ДатаСнятияСРегистрации",
		ДанныеНастройки(
			ТипИмущества.Имущество,
			Ложь,
			КвалификаторДаты
		)
	);
	
	Элементы.Вставить(
		"Назначение",
		ДанныеНастройки(
			ТипИмущества.ЗемельныеУчастки,
			Ложь,
			Новый ОписаниеТипов("ПеречислениеСсылка.НазначениеЗемельныхУчастков")
		)
	);
	
	Возврат Элементы;

КонецФункции // ()

Функция ДанныеНастройки(ТипИмущества, ВключатьВНаименование, ТипЗначения)

	Настройка = Новый Структура;
	Настройка.Вставить("ТипИмущества", ТипИмущества);
	Настройка.Вставить("ВключатьВНаименование", ВключатьВНаименование);
	Настройка.Вставить("ТипЗначения", ТипЗначения);
	
	Возврат Настройка;

КонецФункции // ()

#КонецОбласти

#Область ПервоначальнаяНастройка

Процедура ЗаполнитьПредопределенныеЭлементы() Экспорт

	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьСборИнформации") Тогда
	
		Возврат;
	
	КонецЕсли;
	
	Элементы = ПредопределенныеЭлементы();
	
	СозданныеЭлементы = Новый Массив;
	Для каждого Элемент Из Элементы Цикл
	
		Если Не ПредопределенныйЭлементСуществует(Элемент) Тогда
		
			ПредопределенныйЭлемент = СоздатьПредопределенный(Элемент);
			СозданныеЭлементы.Добавить(ПредопределенныйЭлемент);
		
		КонецЕсли;
	
	КонецЦикла;
	
	НастройкиЭлементов = ЭлементыИмущества();
	Для каждого СозданныйЭлемент Из СозданныеЭлементы Цикл
	
		ЗаполнитьРеквизитыПредопределенных(СозданныйЭлемент, НастройкиЭлементов);
		СозданныйЭлемент.Записать();
	
	КонецЦикла;

КонецПроцедуры

// TODO - Избавиться от попытки (ОбщегоНазначения.ПредопределенныйЭлемент() После обновления БСП)
// УправлениеДанными.ПредопределенныйСуществует( -- Заменить!!!
Функция ПредопределенныйЭлементСуществует(Имя)

	Попытка
	
		Результат = ПланыВидовХарактеристик.СвойстваИмущества[Имя];
	
	Исключение
		Возврат Ложь;
	КонецПопытки;
	
	Возврат Истина;

КонецФункции // ()

Функция СоздатьПредопределенный(Имя)

	Элемент = ПланыВидовХарактеристик.СвойстваИмущества.СоздатьЭлемент();
	Элемент.ИмяПредопределенныхДанных = Имя;
	Элемент.Наименование = УправлениеСтроками.РаставитьПробелы(Имя);

	Возврат Элемент;

КонецФункции

Функция ПредопределенныеЭлементы()

	Возврат Метаданные.ПланыВидовХарактеристик.СвойстваИмущества.ПолучитьИменаПредопределенных();

КонецФункции // ()

Процедура ЗаполнитьРеквизитыПредопределенных(СозданныйОбъект, НастройкиЭлементов)

	НастройкаЭлемента = НастройкиЭлементов.Получить(СозданныйОбъект.ИмяПредопределенныхДанных);
	Если НастройкаЭлемента = Неопределено Тогда
	
		Возврат;
	
	КонецЕсли;
	ЗаполнитьЗначенияСвойств(СозданныйОбъект, НастройкаЭлемента);
	//Для каждого Свойство Из НастройкаЭлемента Цикл
	//
	//	СозданныйОбъект[Свойство.Ключ] = Свойство.Значение;
	//
	//КонецЦикла;

КонецПроцедуры

#КонецОбласти

