
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПоказыватьПроцентнаяСтавкаПериодичность 			= Истина;
	ПоказыватьПроцентнаяСтавкаПериодичностьИнтервалов 	= Истина;
	
	АдресВременногоХранилища = Параметры.АдресВременногоХранилища;
	
	Если Параметры.Свойство("ИнтервалыОтСуммы") Тогда
		ИнтервалыОтСуммы 	= Истина;
	КонецЕсли;
	
	Если Параметры.Свойство("ДатаНачала") Тогда
		ДатаНачала 		= Параметры.ДатаНачала;	
	КонецЕсли; 
	
	Если Параметры.Свойство("ДатаОкончания") Тогда
		ДатаОкончания	= Параметры.ДатаОкончания;
	КонецЕсли;

	Если Параметры.Свойство("ПроцентнаяСтавкаПериодичностьИнтервалов") Тогда
		ПроцентнаяСтавкаПериодичностьИнтервалов = Параметры.ПроцентнаяСтавкаПериодичностьИнтервалов;
	КонецЕсли;	
	
	Если Параметры.Свойство("ПроцентнаяСтавкаПериодичность") Тогда
		ПроцентнаяСтавкаПериодичность			= Параметры.ПроцентнаяСтавкаПериодичность;
	КонецЕсли;
	
	Если Параметры.Свойство("ПоказыватьПроцентнаяСтавкаПериодичностьИнтервалов") Тогда
		ПоказыватьПроцентнаяСтавкаПериодичностьИнтервалов			= Параметры.ПоказыватьПроцентнаяСтавкаПериодичностьИнтервалов;
	КонецЕсли;
	
	Если Параметры.Свойство("ПоказыватьПроцентнаяСтавкаПериодичность") Тогда
		ПоказыватьПроцентнаяСтавкаПериодичность			= Параметры.ПоказыватьПроцентнаяСтавкаПериодичность;
	КонецЕсли;
	
	Если Параметры.Свойство("ВключитьВРасчетПроцентовДеньВыдачи") Тогда
		ВключитьВРасчетПроцентовДеньВыдачи			= Параметры.ВключитьВРасчетПроцентовДеньВыдачи;
	КонецЕсли;
	
	ИнтервалыПроцентнойСтавки.Загрузить(ПолучитьИзВременногоХранилища(АдресВременногоХранилища));
	
	ОбновитьЗначенияРеквизитовФормы();
		
	ЕстьИзменияВДанных = Ложь;
	
	Элементы.ИнтервалыПроцентнойСтавки.ТолькоПросмотр = Параметры.ТолькоПросмотр;
	Элементы.ОК.Доступность = Не Параметры.ТолькоПросмотр;
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПодготовитьТаблицуИнтерваловНаКлиенте();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиРеквизитовШапкиФормы

&НаКлиенте
Процедура ПроцентнаяСтавкаПериодичностьПриИзменении(Элемент)
	
	ЕстьИзменияВДанных = Истина;
	ОбновитьЗначенияРеквизитовФормы();
	ПодготовитьТаблицуИнтерваловНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура ПроцентнаяСтавкаПериодичностьИнтерваловПриИзменении(Элемент)
	
	ЕстьИзменияВДанных = Истина;
	ОбновитьЗначенияРеквизитовФормы();
	ПодготовитьТаблицуИнтерваловНаКлиенте();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	Если ПроверитьИнтервалыПроцентныхСтавок() Тогда 
		Возврат;
	КонецЕсли;
	                
    ОбновитьРеквизитыПередЗакрытиемНаСервере();
	
	ПараметрЗакрытия = Новый Структура;
	
	ПараметрЗакрытия.Вставить("ЕстьИзменияВДанных", 						ЕстьИзменияВДанных);
	ПараметрЗакрытия.Вставить("ПроцентнаяСтавкаПериодичность", 				ПроцентнаяСтавкаПериодичность);	
	ПараметрЗакрытия.Вставить("ПроцентнаяСтавкаПериодичностьИнтервалов", 	ПроцентнаяСтавкаПериодичностьИнтервалов);
	
	Закрыть(ПараметрЗакрытия);
    
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыГрафикПлатежей

&НаКлиенте
Процедура ИнтервалыПроцентнойСтавкиПриИзменении(Элемент)
	
	ЕстьИзменияВДанных = Истина;
//	ПодготовитьТаблицуИнтерваловНаКлиенте();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Элементы = Форма.Элементы;
	
	УказанаПроцентнаяСтавкаПериодичность 			= ЗначениеЗаполнено(Форма.ПроцентнаяСтавкаПериодичность);
	УказанаПроцентнаяСтавкаПериодичностьИнтервалов 	= ЗначениеЗаполнено(Форма.ПроцентнаяСтавкаПериодичностьИнтервалов);
	
	Элементы.ПроцентнаяСтавкаПериодичность.Видимость 			= УказанаПроцентнаяСтавкаПериодичность И Форма.ПоказыватьПроцентнаяСтавкаПериодичность;	
	Элементы.ПроцентнаяСтавкаПериодичностьИнтервалов.Видимость	= УказанаПроцентнаяСтавкаПериодичностьИнтервалов И Форма.ПоказыватьПроцентнаяСтавкаПериодичностьИнтервалов;	
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьЗначенияРеквизитовФормы()
	
	Если ИнтервалыОтСуммы Тогда
		
		Валюта 				= Параметры.Валюта;
		ПроцентнаяСтавкаПериодичностьСтрокой = Валюта.Наименование;
		
	Иначе
		
		ПроцентнаяСтавкаПериодичностьСтрокой = РасчетЗадолженностиМФО.ПолучитьПредставлениеПериодичностиПлатежа(ПроцентнаяСтавкаПериодичностьИнтервалов);
		ПроцентнаяСтавкаПериодичностьСтрокой = ?(ПроцентнаяСтавкаПериодичностьСтрокой = "", НСтр("ru = 'дн.'"), ПроцентнаяСтавкаПериодичностьСтрокой); 
		//ПроцентнаяСтавкаПериодичностьСтрокой = "ПроцентнаяСтавкаПериодичностьСтрокой";
	КонецЕсли;
	
	ТекстЗаголовка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Интервал (%1)'"), СокрЛП(ПроцентнаяСтавкаПериодичностьСтрокой));
	Элементы.ИнтервалыПроцентнойСтавкиПредставлениеИнтервала.Заголовок = ТекстЗаголовка;
	
	ПроцентнаяСтавкаПериодичностьПредставление = ?(ЗначениеЗаполнено(ПроцентнаяСтавкаПериодичность), ПроцентнаяСтавкаПериодичность, "%"); 
	ТекстЗаголовка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Ставка (%1)'"), ПроцентнаяСтавкаПериодичностьПредставление);
	
	Элементы.ИнтервалыПроцентнойСтавкиПроцентнаяСтавка.Заголовок = ТекстЗаголовка;

КонецПроцедуры


&НаСервере
Процедура ОбновитьРеквизитыПередЗакрытиемНаСервере()
    
	ПоместитьВоВременноеХранилище(ИнтервалыПроцентнойСтавки.Выгрузить(), АдресВременногоХранилища);

КонецПроцедуры

&НаКлиенте
Процедура ПодготовитьТаблицуИнтерваловНаКлиенте()
	
	НомерСтроки = 0;
	ПерваяСтрока = Истина;

	Для Каждого СтрокаТЧ Из ИнтервалыПроцентнойСтавки Цикл 
		
		СтрокаТЧ.НомерСтроки 			= НомерСтроки + 1;
		
		Если ЗначениеЗаполнено(СтрокаТЧ.ИнтервалОт) ИЛИ  ЗначениеЗаполнено(СтрокаТЧ.ИнтервалДо) Тогда
			
			СтрокаТЧ.ПредставлениеИнтервала = СформироватьПредставлениеИнтервала(СтрокаТЧ.ИнтервалОт, СтрокаТЧ.ИнтервалДо, ПерваяСтрока); 
			
			Если ЗначениеЗаполнено(ДатаНачала) И ЗначениеЗаполнено(ПроцентнаяСтавкаПериодичностьИнтервалов) Тогда
				
				ИнтервалВДатах = СформироватьПредставлениеИнтервалаНаСервере(СтрокаТЧ.ИнтервалОт, СтрокаТЧ.ИнтервалДо);	
				СтрокаТЧ.ПредставлениеИнтервала = СтрокаТЧ.ПредставлениеИнтервала + ИнтервалВДатах;
				
			КонецЕсли; 
			
		КонецЕсли;
	
		ПерваяСтрока 	= Ложь;
		НомерСтроки 	= НомерСтроки + 1;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция ПроверитьИнтервалыПроцентныхСтавок()
	
	Отказ = Ложь;
	ПредСтрока 		= Неопределено;
	ПерваяСтрока 	= Истина;
	
	Для Инд = 1 По ИнтервалыПроцентнойСтавки.Количество()-1 Цикл 
		
		ПредСтрока 	= ИнтервалыПроцентнойСтавки[Инд - 1];
		СтрокаТЧ 	= ИнтервалыПроцентнойСтавки[Инд];
		
		ИнтервалДо = СтрокаТЧ.ИнтервалДо;
		
		Если Инд = ИнтервалыПроцентнойСтавки.Количество()-1 И СтрокаТЧ.ИнтервалДо = 0 Тогда 
			ИнтервалДо = 9999999999;	
		КонецЕсли;
		
		Если СтрокаТЧ.ИнтервалОт <> ПредСтрока.ИнтервалДо Или ИнтервалДо <= ПредСтрока.ИнтервалДо Тогда 
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Неверно указаны периоды применения ставок в строках %1,%2!'"), Инд-1, Инд);
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "ИнтервалыПроцентнойСтавкиНачалоПериода", "ИнтервалыПроцентнойСтавки["+Инд+"]");
			Отказ = Истина;
			Прервать;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Отказ;
	
КонецФункции

&НаКлиенте
Процедура ИнтервалыПроцентнойСтавкиКонецПериодаПриИзменении(Элемент)
	
	ПриИзмененииИнтервалаПроцентнойСтавки(); 
	
КонецПроцедуры

&НаКлиенте
Процедура ИнтервалыПроцентнойСтавкиНачалоПериодаПриИзменении(Элемент)
	
	ПриИзмененииИнтервалаПроцентнойСтавки();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииИнтервалаПроцентнойСтавки()
	
	ТекущиеДанные = Элементы.ИнтервалыПроцентнойСтавки.ТекущиеДанные;
	
	ТекИндексСтроки = ИнтервалыПроцентнойСтавки.Индекс(ТекущиеДанные);
	КолЗаписей = ИнтервалыПроцентнойСтавки.Количество()-1;
	ЭтоПоследняяСтрока = ТекИндексСтроки = КолЗаписей;
	
	Если ТекущиеДанные.ИнтервалОт >= ТекущиеДанные.ИнтервалДо И Не ЭтоПоследняяСтрока Тогда 
		
		ТекстСообщения = НСтр("ru = 'Неверно указан периоды применения ставок!'");
			 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ,"ИнтервалыПроцентнойСтавкиНачалоПериода","ИнтервалыПроцентнойСтавки[" + Строка(ТекущиеДанные.НомерСтроки - 1) + "]");
		ТекущиеДанные.ИнтервалДо = 0;
		
	КонецЕсли;
	
	ПерваяСтрока = (ТекущиеДанные.НомерСтроки - 1) = 0;
	ТекущиеДанные.ПредставлениеИнтервала = СформироватьПредставлениеИнтервала(ТекущиеДанные.ИнтервалОт, ТекущиеДанные.ИнтервалДо, ПерваяСтрока); 
	
	Если ЗначениеЗаполнено(ДатаНачала) И ЗначениеЗаполнено(ПроцентнаяСтавкаПериодичностьИнтервалов) Тогда
		ИнтервалВДатах = СформироватьПредставлениеИнтервалаНаСервере(ТекущиеДанные.ИнтервалОт, ТекущиеДанные.ИнтервалДо);
		ТекущиеДанные.ПредставлениеИнтервала = ТекущиеДанные.ПредставлениеИнтервала + ИнтервалВДатах;
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Функция СформироватьПредставлениеИнтервалаНаСервере(НачалоИнтервала, КонецИнтервала)
	
	КоличествоПериодов = КонецИнтервала - НачалоИнтервала;
	
	Если НачалоИнтервала = 0 Тогда
		
		ДатаНачалаИнтервала = ДатаНачала + ?(ВключитьВРасчетПроцентовДеньВыдачи, 0, 86400);
		
		ДатаКонцаИнтервала 	= ДобавитьПериод(ДатаНачалаИнтервала, ИмяЗначенияПеречисления(ПроцентнаяСтавкаПериодичностьИнтервалов), КоличествоПериодов) - 86400;
	ИначеЕсли КонецИнтервала = 0 Тогда
		
		ДатаНачалаИнтервала = ДобавитьПериод(ДатаНачала, ИмяЗначенияПеречисления(ПроцентнаяСтавкаПериодичностьИнтервалов), НачалоИнтервала) + ?(ВключитьВРасчетПроцентовДеньВыдачи, 0, 86400);
		
		ДатаКонцаИнтервала  = ДатаОкончания;
		
	Иначе
		
		ДатаНачалаИнтервала = ДобавитьПериод(ДатаНачала, ИмяЗначенияПеречисления(ПроцентнаяСтавкаПериодичностьИнтервалов), НачалоИнтервала) + ?(ВключитьВРасчетПроцентовДеньВыдачи, 0, 86400);
		
		ДатаКонцаИнтервала 	= ДобавитьПериод(ДатаНачалаИнтервала, ИмяЗначенияПеречисления(ПроцентнаяСтавкаПериодичностьИнтервалов), КоличествоПериодов) - 86400;
		
	КонецЕсли; 
	
	Возврат СтрШаблон(Нстр("ru = ' (%1-%2)'"), Формат(ДатаНачалаИнтервала, "ДЛФ=D"), Формат(ДатаКонцаИнтервала, "ДЛФ=D"));
	
	
	//Возврат " дней";
КонецФункции

// Добавляет заданные период к дате.
//
Функция ДобавитьПериод(Дата, Периодичность, Знач КоличествоПериодов = 1, Знак = 1, ОпределятьНачалоПериода = Ложь, ВключатьТекущийДень = Ложь) Экспорт
	
	ДатаРезультат = Дата;	
	
	Если НЕ ЗначениеЗаполнено(Дата) Или НЕ ЗначениеЗаполнено(Периодичность) Или КоличествоПериодов = 0 Или Знак = 0 Тогда
	
		Возврат ДатаРезультат;
	
	КонецЕсли;
	
	Период = ВРег(Строка(Периодичность));
	
	КолСекундВСутках = 86400;
	
	Если ОпределятьНачалоПериода Тогда
		ДатаРезультат = НачалоПериода(ДатаРезультат, Периодичность);	
	КонецЕсли; 
	
	Если Период = "ДЕНЬ" Тогда
		
		ДатаРезультат = ДатаРезультат + (Знак * КолСекундВСутках) * ?(ВключатьТекущийДень,КоличествоПериодов-1,КоличествоПериодов);
		
	ИначеЕсли Период = "НЕДЕЛЯ" Тогда
		
		ДатаРезультат = ДатаРезультат + (Знак * КолСекундВСутках * 7) * КоличествоПериодов;
		
	ИначеЕсли Период = "ДЕКАДА" Тогда
		
		ДатаРезультат = ДатаРезультат + (Знак * КолСекундВСутках * 10) * КоличествоПериодов;
		
	ИначеЕсли Период = "МЕСЯЦ" Тогда
		
		ДатаРезультат = ДобавитьМесяц(ДатаРезультат, Знак * 1 * КоличествоПериодов);
		
	ИначеЕсли Период = "КВАРТАЛ" Тогда
		
		ДатаРезультат = ДобавитьМесяц(ДатаРезультат, Знак * 3 * КоличествоПериодов);
		
	ИначеЕсли Период = "ПОЛУГОДИЕ" Тогда
		
		ДатаРезультат = ДобавитьМесяц(ДатаРезультат, Знак * 6 * КоличествоПериодов);
		
	ИначеЕсли Период = "ГОД" Тогда
		
		ДатаРезультат = ДобавитьМесяц(ДатаРезультат, Знак * 12 * КоличествоПериодов);
		
	КонецЕсли;
		
	Возврат ДатаРезультат;
	
КонецФункции

// Определяет начало периода по заданной периодичности.
//
Функция НачалоПериода(Дата, Периодичность) Экспорт
	
	ДатаРезультат = Дата;	
	
	Если НЕ ЗначениеЗаполнено(Дата) Или НЕ ЗначениеЗаполнено(Периодичность) Тогда
	
		Возврат ДатаРезультат;
	
	КонецЕсли;
	
	Период = ВРег(Строка(Периодичность));
			
	Если Период = "ДЕНЬ" Тогда
		
		ДатаРезультат = НачалоДня(ДатаРезультат);	
		
	ИначеЕсли Период = "НЕДЕЛЯ" Тогда
				
		ДатаРезультат = НачалоНедели(ДатаРезультат);	
		
	ИначеЕсли Период = "ДЕКАДА" Тогда
		
		ДатаРезультат = НачалоДня(ДатаРезультат);	
		
	ИначеЕсли Период = "МЕСЯЦ" Тогда
				
		ДатаРезультат = НачалоМесяца(ДатаРезультат);	
		
	ИначеЕсли Период = "КВАРТАЛ" Тогда
		
		ДатаРезультат = НачалоКвартала(ДатаРезультат);			
		
	ИначеЕсли Период = "ПОЛУГОДИЕ" Тогда
		
		Если Месяц(ДатаРезультат) > 6 Тогда 
			ДатаРезультат = Дата(Год(ДатаРезультат),6,1);
		Иначе 
			ДатаРезультат = НачалоГода(ДатаРезультат);
		КонецЕсли;	
		
	ИначеЕсли Период = "ГОД" Тогда
		
		ДатаРезультат = НачалоГода(ДатаРезультат);	
		
	КонецЕсли;
		
	Возврат ДатаРезультат;
	
	
КонецФункции


Функция ИмяЗначенияПеречисления(Значение) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Значение) Тогда
		Возврат "";			
	КонецЕсли;
	
	ОбъектМетаданных = Значение.Метаданные();
	
	ИндексЗначения = Перечисления[ОбъектМетаданных.Имя].Индекс(Значение);
	
	Возврат ОбъектМетаданных.ЗначенияПеречисления[ИндексЗначения].Имя;
	
КонецФункции



&НаКлиенте
Функция СформироватьПредставлениеИнтервала(НачалоИнтервала, КонецИнтервала, ПерваяСтрока = Ложь)
	
	Текст = "";
	Если  ПерваяСтрока Тогда 
		Текст = "до " + КонецИнтервала;
		Возврат Текст + " " + ПроцентнаяСтавкаПериодичностьСтрокой;
	КонецЕсли;
	
	Если НачалоИнтервала <> 0 И КонецИнтервала <> 0 Тогда 
		Текст = "от " + (НачалоИнтервала + 1) + " до " + КонецИнтервала;
	ИначеЕсли НачалоИнтервала = 0 И КонецИнтервала <> 0 Тогда
		Текст = " до " + КонецИнтервала;
	ИначеЕсли НачалоИнтервала <> 0 И КонецИнтервала = 0 Тогда
		Текст = " от " + (НачалоИнтервала + 1) + " и более";
	КонецЕсли;
	
	Возврат Текст + " " + ПроцентнаяСтавкаПериодичностьСтрокой;
	
КонецФункции

&НаКлиенте
Процедура ИнтервалыПроцентнойСтавкиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда 
		
		ТекущиеДанные = Элемент.ТекущиеДанные;
		
		КолСтрок = ИнтервалыПроцентнойСтавки.Количество();
		Если КолСтрок > 1 Тогда 
			СтокаДанные = ИнтервалыПроцентнойСтавки[КолСтрок-2];
			ТекущиеДанные.ИнтервалОт = СтокаДанные.ИнтервалДо;
			ТекущиеДанные.ИнтервалДо = 0;
		КонецЕсли;
		
		ПодготовитьТаблицуИнтерваловНаКлиенте();
		
	КонецЕсли;
	
	Если Копирование Тогда
		
		ТекущиеДанные.ПредставлениеИнтервала = "";	
		ПриИзмененииИнтервалаПроцентнойСтавки();
		
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти
