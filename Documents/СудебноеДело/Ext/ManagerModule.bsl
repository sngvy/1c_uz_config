
Процедура ПровестиПоследовательность(ЭтотОбъект) Экспорт
	//Корректировка последовательности, поиск первого документа актуализации и его ПРОГРАММНОЕ перепроведение
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	ПоступлениеПлатежа.Ссылка КАК Ссылка,
	|	ПоступлениеПлатежа.ДатаПлатежа КАК ДатаПлатежа
	|ИЗ
	|	Документ.ПоступлениеПлатежа КАК ПоступлениеПлатежа
	|ГДЕ
	|	ПоступлениеПлатежа.Займ = &Займ
	|	И ПоступлениеПлатежа.ДатаПлатежа >= &МоментВремени
	|	И ПоступлениеПлатежа.Проведен = ИСТИНА
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПоступлениеПлатежа.ДатаПлатежа,
	|	Ссылка");
	Запрос.УстановитьПараметр("Займ", ЭтотОбъект.Займ);
	Запрос.УстановитьПараметр("МоментВремени", ?(ЗначениеЗаполнено(ЭтотОбъект.ДатаВступленияВЗаконнуюСилу),ЭтотОбъект.ДатаВступленияВЗаконнуюСилу,ЭтотОбъект.ДатаИска));
	Результат = Запрос.Выполнить().Выгрузить();
	к = Результат.Количество() - 1;
	Для н = 0 по к Цикл
		ДокументОбъект = Результат[к - н].Ссылка.ПолучитьОбъект();
		ДокументОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
	КонецЦикла;   
	Для Каждого стр Из Результат Цикл
		Стадия = ОбъектыСервер.ОпределитьВариантУчетаЗадолженности2(ЭтотОбъект.Займ,Стр.ДатаПлатежа);
		ДокументОбъект = стр.Ссылка.ПолучитьОбъект();
		Если Стадия = Перечисления.СтадииЗадолженности.Судебная Тогда 
			ДокументОбъект.РаспределитьПоСудебнымРешениям();
		Иначе
			ДокументОбъект.РаспределитьПоВнесудебке();
		КонецЕсли;
		//	ДокументОбъект.РаспределитьПоСудебнымРешениям();
		ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Неоперативный);
	КонецЦикла;
	
КонецПроцедуры     


&Вместо("ПровестиПоследовательность")
Процедура доп_ПровестиПоследовательность(ЭтотОбъект)
  //Корректировка последовательности, поиск первого документа актуализации и его ПРОГРАММНОЕ перепроведение
  Запрос = Новый Запрос("ВЫБРАТЬ
  |  ПоступлениеПлатежа.Ссылка КАК Ссылка,
  |  ПоступлениеПлатежа.ДатаПлатежа КАК ДатаПлатежа
  |ИЗ
  |  Документ.ПоступлениеПлатежа КАК ПоступлениеПлатежа
  |ГДЕ
  |  ПоступлениеПлатежа.Займ = &Займ
  |  И ПоступлениеПлатежа.ДатаПлатежа >= &МоментВремени
  |  И ПоступлениеПлатежа.Проведен = ИСТИНА
  |
  |УПОРЯДОЧИТЬ ПО
  |  ПоступлениеПлатежа.ДатаПлатежа,
  |  Ссылка");
  Запрос.УстановитьПараметр("Займ", ЭтотОбъект.Займ);
  //BIT_RSG++ 
  //Вместо этого:
  //Запрос.УстановитьПараметр("МоментВремени", ЭтотОбъект.ДатаИска);
  //Подставил
  Если ЗначениеЗаполнено(ЭтотОбъект.ДатаВступленияВЗаконнуюСилу) Тогда
    Запрос.УстановитьПараметр("МоментВремени", ЭтотОбъект.ДатаВступленияВЗаконнуюСилу);
  Иначе
    Запрос.УстановитьПараметр("МоментВремени", Дата("01.01.2200 0:00:00"));
  КонецЕсли;
  //BIT_RSG--
  Результат = Запрос.Выполнить().Выгрузить();
  к = Результат.Количество() - 1;
  Для н = 0 по к Цикл
    ДокументОбъект = Результат[к - н].Ссылка.ПолучитьОбъект();
    ДокументОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
  КонецЦикла;   
  Для Каждого стр Из Результат Цикл
    Стадия = ОбъектыСервер.ОпределитьВариантУчетаЗадолженности(ЭтотОбъект.Займ,Стр.ДатаПлатежа);
    ДокументОбъект = стр.Ссылка.ПолучитьОбъект();
    Если Стадия = "Судебка" Тогда
      //BIT_RSG++ 
      //Вместо этого:
      //ДокументОбъект.РаспределитьПоСудебнымРешениям();
      //Подставил
      Если ЭтотОбъект.ИД.Количество() = 1 Тогда
        ИДСудебногоДела = ЭтотОбъект.ИД[0].ИсполнительныйДокумент;
      Иначе
        ИДСудебногоДела = "";
      КонецЕсли;
      ДокументОбъект.Доп_РаспределитьПоСудебнымРешениямСОчисткойРазнесения(ИДСудебногоДела,ЭтотОбъект.Займ.Должник);
      //BIT_RSG--
    Иначе
      ДокументОбъект.РаспределитьПоВнесудебке();
    КонецЕсли;
    //  ДокументОбъект.РаспределитьПоСудебнымРешениям();
    ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Неоперативный);
  КонецЦикла;
  
КонецПроцедуры
