
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПолеТекстовогоДокумента.УстановитьТекст(Объект.Функция);
	Если Объект.ВозвращаемыеКолонки.Количество() = 0 Тогда
		Объект.ВозвращаемыеКолонки.Добавить().Наименование = "Значение";
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Объект.Функция = ПолеТекстовогоДокумента.ПолучитьТекст();
КонецПроцедуры

&НаКлиенте
Процедура ПолеТекстовогоДокументаПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура КонструкторЗапроса(Команда)
	#Если ТолстыйКлиентУправляемоеПриложение Тогда
		Конструктор = Новый КонструкторЗапроса();
		Конструктор.РежимКомпоновкиДанных = Ложь;
		Конструктор.АвтоДобавлениеПредставлений = Ложь;
		                     
		СтарыйЗапрос = Ложь;	
		ИсходныйТекстЗапроса = "";
		ИсходныйТекст = Элементы.ПолеТекстовогоДокумента.ВыделенныйТекст;	
		// Определяем нужно ли вставить только текст запроса (по выделению). 
		// Если выделенияе ест, то дополнительные фразы писать не будем и попытаемся получить текст
		// старого запроса.
		Если НЕ ИсходныйТекст = "" Тогда
			СтарыйЗапрос = истина;
			Если Найти(ИсходныйТекст,"ВЫБРАТЬ") <> Неопределено Тогда
				ИсходныйТекстЗапроса = СтрЗаменить(ИсходныйТекст, "|", " ");
			КонецЕсли;
		КонецЕсли;	
		// Пробуем передать в конструктор текст старого запроса.
		Если ИсходныйТекстЗапроса <> "" Тогда
			Попытка
				Конструктор.Текст = ИсходныйТекстЗапроса;
			Исключение		
			КонецПопытки;
		КонецЕсли;
		
		//Чуров
		Конструктор.Показать(Новый ОписаниеОповещения("КонструкторЗапросаЗавершение", ЭтаФорма, Новый Структура("СтарыйЗапрос", СтарыйЗапрос)));
		
		//Если Конструктор.ОткрытьМодально() Тогда
		//	ТекстЗапроса = Конструктор.Текст;
		//Иначе
		//	Возврат;
		//КонецЕсли;	
		//Если ТекстЗапроса = Неопределено Или ТекстЗапроса = "" Тогда
		//	Возврат;	
		//КонецЕсли; 
		//
		////Добавляем разделители
		//ТекстЗапросаСРазделителями = "";
		//КоличествоСтрок = СтрЧислоСтрок(ТекстЗапроса);
		//Для Счетчик = 1 По КоличествоСтрок Цикл
		//	Если Счетчик = 1 И СтарыйЗапрос=Истина Тогда
		//		ТекСтрока = ""+СтрПолучитьСтроку(ТекстЗапроса, Счетчик);
		//	Иначе
		//		ТекСтрока = "|"+СтрПолучитьСтроку(ТекстЗапроса, Счетчик);		
		//	КонецЕсли;			
		//	Если Не Счетчик = КоличествоСтрок  Тогда 			
		//		ТекСтрока = ТекСтрока + Символы.ПС;
		//	КонецЕсли;	
		//	ТекстЗапросаСРазделителями = ТекстЗапросаСРазделителями + ТекСтрока;		
		//КонецЦикла;

		//ВспомогательнаяЧасть = Объект.Функция;
		//Если ЗначениеЗаполнено(ВспомогательнаяЧасть) Тогда
		//	ВспомогательнаяЧасть = ВспомогательнаяЧасть + Символы.ПС;	
		//КонецЕсли;
		//						
		//Если СтарыйЗапрос Тогда
		//	ДобавленныйТекст = ТекстЗапросаСРазделителями;
		//Иначе
		//	ДобавленныйТекст =  
		//			"Запрос = Новый Запрос();" + Символы.ПС +
		//			"Запрос.Текст = """ + Символы.ПС +
		//			ТекстЗапросаСРазделителями +
		//			""";" + Символы.ПС +
		//			"Запрос.УстановитьПараметр("""", );" + Символы.ПС +
		//			"Результат = Запрос.Выполнить();" + Символы.ПС +
		//			"Значение = Результат.Выгрузить();";
		//КонецЕсли;
		//
		//Если Не Элементы.ПолеТекстовогоДокумента.ВыделенныйТекст = "" Тогда										
		//	Элементы.ПолеТекстовогоДокумента.ВыделенныйТекст = ДобавленныйТекст;
		//Иначе
		//	Элементы.ПолеТекстовогоДокумента.ВыделенныйТекст = Элементы.ПолеТекстовогоДокумента.ВыделенныйТекст + 
		//			ДобавленныйТекст;
		//КонецЕсли;
		//Объект.Функция = ПолеТекстовогоДокумента.ПолучитьТекст();	
	#Иначе
		Сообщить("Конструктор запроса работает только под Толстый клиент (управляемое приложение)!");
	#КонецЕсли	
КонецПроцедуры

//Чуров++
&НаКлиенте
Процедура КонструкторЗапросаЗавершение(ТекстЗапроса, ДополнительнеыеПараметры) Экспорт

	Если ТекстЗапроса = Неопределено Или ТекстЗапроса = "" Тогда
		Возврат;	
	КонецЕсли; 
	
	//Добавляем разделители
	ТекстЗапросаСРазделителями = "";
	КоличествоСтрок = СтрЧислоСтрок(ТекстЗапроса);
	Для Счетчик = 1 По КоличествоСтрок Цикл
		Если Счетчик = 1 И ДополнительнеыеПараметры.СтарыйЗапрос=Истина Тогда
			ТекСтрока = ""+СтрПолучитьСтроку(ТекстЗапроса, Счетчик);
		Иначе
			ТекСтрока = "|"+СтрПолучитьСтроку(ТекстЗапроса, Счетчик);		
		КонецЕсли;			
		Если Не Счетчик = КоличествоСтрок  Тогда 			
			ТекСтрока = ТекСтрока + Символы.ПС;
		КонецЕсли;	                            
		ТекстЗапросаСРазделителями = ТекстЗапросаСРазделителями + ТекСтрока;		
	КонецЦикла;

	ВспомогательнаяЧасть = Объект.Функция;
	Если ЗначениеЗаполнено(ВспомогательнаяЧасть) Тогда
		ВспомогательнаяЧасть = ВспомогательнаяЧасть + Символы.ПС;	
	КонецЕсли;
							
	Если ДополнительнеыеПараметры.СтарыйЗапрос Тогда
		ДобавленныйТекст = ТекстЗапросаСРазделителями;
	Иначе
		ДобавленныйТекст =  
				"Запрос = Новый Запрос();" + Символы.ПС +
				"Запрос.Текст = """ + Символы.ПС +
				ТекстЗапросаСРазделителями +
				""";" + Символы.ПС +
				"Запрос.УстановитьПараметр("""", );" + Символы.ПС +
				"Результат = Запрос.Выполнить();" + Символы.ПС +
				"Значение = Результат.Выгрузить();";
	КонецЕсли;
	
	Если Не Элементы.ПолеТекстовогоДокумента.ВыделенныйТекст = "" Тогда										
		Элементы.ПолеТекстовогоДокумента.ВыделенныйТекст = ДобавленныйТекст;
	Иначе
		Элементы.ПолеТекстовогоДокумента.ВыделенныйТекст = Элементы.ПолеТекстовогоДокумента.ВыделенныйТекст + 
				ДобавленныйТекст;
	КонецЕсли;
	Объект.Функция = ПолеТекстовогоДокумента.ПолучитьТекст();
КонецПроцедуры
//Чуров--

&НаКлиенте
Процедура КонструкторФормата(Команда)
	Конструктор = Новый КонструкторФорматнойСтроки();
	
	ИсходныйТекстФормата = "";
	ИсходныйТекст = Элементы.ПолеТекстовогоДокумента.ВыделенныйТекст;
	Если НЕ ИсходныйТекст = "" Тогда
		Если Найти(ИсходныйТекст, "Формат") <> Неопределено Тогда
			Попытка
				ПерваяКовычка =Найти(ИсходныйТекст, Символ(34));
				ВтораяКовычка = Найти(Сред(ИсходныйТекст, ПерваяКовычка + 1), Символ(34));
				ИсходныйТекстФормата = Сред(ИсходныйТекст, ПерваяКовычка + 1, ВтораяКовычка - 1);
			Исключение
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;
	
	СтарыйТекст = Ложь;
	Попытка
		Конструктор.Текст = ИсходныйТекстФормата;
		Если ИсходныйТекстФормата <> "" Тогда
			СтарыйТекст = Истина;
		КонецЕсли;
	Исключение
		
	КонецПопытки;
		
	//Чуров
	Конструктор.Показать(Новый ОписаниеОповещения("КонструкторФорматаЗавершение", ЭтаФорма, Новый Структура("СтарыйТекст", СтарыйТекст)));
	
	//Если Конструктор.ОткрытьМодально() Тогда
	//    ФорматнаяСтрока = Конструктор.Текст;
	//КонецЕсли;
	//
	//Если ФорматнаяСтрока = Неопределено Или ФорматнаяСтрока = "" Тогда
	//	Возврат;	
	//КонецЕсли; 
	//
	//ВспомогательнаяЧасть = Объект.Функция;
	//Если ЗначениеЗаполнено(ВспомогательнаяЧасть) Тогда
	//	ВспомогательнаяЧасть = ВспомогательнаяЧасть + Символы.ПС;	
	//КонецЕсли;
	//Если СтарыйТекст Тогда
	//	ДобавленныйТекст = "Значение[н] = Формат(Значение[н], """ + ФорматнаяСтрока + """);"
	//Иначе
	//	ДобавленныйТекст =  
	//			"Для н = 0 По Значение.ВГраница() Цикл" + Символы.ПС + 
	//			Символы.Таб + "Значение[н] = Формат(Значение[н], """ + ФорматнаяСтрока + """);" + Символы.ПС + 
	//			"КонецЦикла;";
	//КонецЕсли;
	//
	//Если Не Элементы.ПолеТекстовогоДокумента.ВыделенныйТекст = "" Тогда										
	//	Элементы.ПолеТекстовогоДокумента.ВыделенныйТекст = ДобавленныйТекст;
	//Иначе
	//	Элементы.ПолеТекстовогоДокумента.ВыделенныйТекст = Элементы.ПолеТекстовогоДокумента.ВыделенныйТекст + 
	//			ДобавленныйТекст;
	//КонецЕсли;
	//Объект.Функция = ПолеТекстовогоДокумента.ПолучитьТекст();
КонецПроцедуры

//Чуров++
&НаКлиенте
Процедура КонструкторФорматаЗавершение(ФорматнаяСтрока, ДополнительнеыеПараметры) Экспорт
    
    Если ФорматнаяСтрока = Неопределено Или ФорматнаяСтрока = "" Тогда
		Возврат;	
	КонецЕсли; 
    
    ВспомогательнаяЧасть = Объект.Функция;
    Если ЗначениеЗаполнено(ВспомогательнаяЧасть) Тогда
		ВспомогательнаяЧасть = ВспомогательнаяЧасть + Символы.ПС;	
	КонецЕсли;
	Если ДополнительнеыеПараметры.СтарыйТекст Тогда
		ДобавленныйТекст = "Значение[н] = Формат(Значение[н], """ + ФорматнаяСтрока + """);"
	Иначе
		ДобавленныйТекст =  
				"Для н = 0 По Значение.ВГраница() Цикл" + Символы.ПС + 
				Символы.Таб + "Значение[н] = Формат(Значение[н], """ + ФорматнаяСтрока + """);" + Символы.ПС + 
				"КонецЦикла;";
	КонецЕсли;
	
	Если Не Элементы.ПолеТекстовогоДокумента.ВыделенныйТекст = "" Тогда										
		Элементы.ПолеТекстовогоДокумента.ВыделенныйТекст = ДобавленныйТекст;
	Иначе
		Элементы.ПолеТекстовогоДокумента.ВыделенныйТекст = Элементы.ПолеТекстовогоДокумента.ВыделенныйТекст + 
				ДобавленныйТекст;
	КонецЕсли;
	Объект.Функция = ПолеТекстовогоДокумента.ПолучитьТекст();
КонецПроцедуры
//Чуров--

&НаКлиенте
Процедура Тест(Команда)
	КомандаТестНаСервере();	
КонецПроцедуры

&НаСервере
Процедура КомандаТестНаСервере()
	Объект.Функция = ПолеТекстовогоДокумента.ПолучитьТекст();
	ТЧ = Объект.НаПримереОбъектов.Выгрузить();
	ТЧ = ВычислитьФункцию(Объект.Функция, ТЧ, Объект.Свойство, Объект.ОбъектНаКоторыйЗавязаноСвойство);
	Объект.НаПримереОбъектов.Загрузить(ТЧ);
КонецПроцедуры

&НаСервере
Функция ВычислитьФункцию(Знач Запрос, Знач ОбъектВх, Знач Свойство, Знач ОбъектРодитель)
	Попытка
		Выполнить(Запрос);
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	Возврат ОбъектВх;
КонецФункции
