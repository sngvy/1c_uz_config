
Процедура ЗапросПочтаРФ() Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ИсходящаяКорреспонденция.Ссылка КАК Корреспонденция,
	                      |	ИсходящаяКорреспонденция.Объект КАК Объект
	                      |ПОМЕСТИТЬ Исх
	                      |ИЗ
	                      |	РегистрНакопления.ОбъектыВРаботе.Остатки(&ТекущаяДата) КАК ОбъектыВРаботеОстатки
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ИсходящаяКорреспонденция КАК ИсходящаяКорреспонденция
	                      |		ПО ОбъектыВРаботеОстатки.Объект = ИсходящаяКорреспонденция.Объект
	                      |ГДЕ
	                      |	НЕ ИсходящаяКорреспонденция.ПометкаУдаления
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	Исх.Корреспонденция КАК Корреспонденция,
	                      |	Исх.Объект КАК Объект,
	                      |	СтатусыШПИСрезПоследних.Статус КАК Статус,
	                      |	СтатусыШПИСрезПоследних.ШПИ КАК ШПИ
	                      |ПОМЕСТИТЬ ТаблицаШПИ
	                      |ИЗ
	                      |	Исх КАК Исх
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыШПИРегистрация.СрезПоследних(&ТекущаяДата) КАК СтатусыШПИСрезПоследних
	                      |		ПО (Исх.Корреспонденция = СтатусыШПИСрезПоследних.Корреспонденция
	                      |				ИЛИ Исх.Корреспонденция = СтатусыШПИСрезПоследних.Корреспонденция.СписокИсходящейКорреспонденции.ИсходящаяКорреспонденция)
	                      |ГДЕ
	                      |	СтатусыШПИСрезПоследних.Статус = &Статус
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ТаблицаШПИ.ШПИ КАК ШПИ,
	                      |	ТаблицаШПИ.Корреспонденция КАК Корреспонденция,
	                      |	ТаблицаШПИ.Объект КАК Объект,
	                      |	ТаблицаШПИ.Статус КАК Статус,
	                      |	ВнешниеСтатусыШПИСрезПоследних.Операция КАК Операция,
	                      |	ВнешниеСтатусыШПИСрезПоследних.АтрибутОперации КАК АтрибутОперации,
	                      |	ВнешниеСтатусыШПИСрезПоследних.Индекс КАК Индекс,
	                      |	ВнешниеСтатусыШПИСрезПоследних.Период КАК Период
	                      |ИЗ
	                      |	ТаблицаШПИ КАК ТаблицаШПИ
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыШПИОтслеживание.СрезПоследних(&ТекущаяДата) КАК ВнешниеСтатусыШПИСрезПоследних
	                      |		ПО ТаблицаШПИ.ШПИ = ВнешниеСтатусыШПИСрезПоследних.ШПИ
	                      |ГДЕ
	                      |	(ЕСТЬNULL(ВнешниеСтатусыШПИСрезПоследних.АтрибутОперации, 0) = 0
	                      |			ИЛИ ВнешниеСтатусыШПИСрезПоследних.АтрибутОперации.Конечная = ЛОЖЬ)");
	Запрос.УстановитьПараметр("Статус", Перечисления.СтатусыШПИРегистрация.ПолученаФорма103);
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
	Результат = Запрос.Выполнить().Выбрать();
	к = 0;
	Пока Результат.Следующий() Цикл
		Если к = 0 Тогда
			массивНомеров = Новый Массив;
		КонецЕсли;
		массивНомеров.Добавить(Результат.ШПИ);
		к = к + 1;
		Если к = 2000 Тогда
			массивНомеров = ОбъектыСервер.УдалитьПовторяющиесяЭлементыМассива(массивНомеров);
			МножественныйЗапросКТрекеру(массивНомеров);
			к = 0;
		КонецЕсли;
	КонецЦикла;
	Если к > 0 Тогда
		массивНомеров = ОбъектыСервер.УдалитьПовторяющиесяЭлементыМассива(массивНомеров);
		МножественныйЗапросКТрекеру(массивНомеров);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура МножественныйЗапросКТрекеру(массивНомеров)

	ПочтаРФ = ОбработкаБезопасноеХранилище.ПолучитьВсеЗначения("ПочтаРФ");
	рЛогин = ПочтаРФ["Логин"];
	рПароль = ПочтаРФ["Пароль"];
	
	текЗапрос = Новый COMОбъект("WinHttp.WinHttpRequest.5.1");
	текЗапрос.Open("POST", "http://tracking.russianpost.ru/fc?wsdl", 0);
	текЗапрос.setRequestHeader("Content-Type", "text/xml; charset=utf-8");
	
	XMLБезТаблицыШтрихкодов = "<soapenv:Envelope xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" xmlns:pos=""http://fclient.russianpost.org/postserver"" xmlns:fcl=""http://fclient.russianpost.org"">
	|<soapenv:Header/>
	|<soapenv:Body>
	|   <pos:ticketRequest>
	|      <request>
	|         ТаблицаШтрихКодов
	|      </request>
	|     <login>"+рЛогин+"</login>
	|     <password>"+рПароль+"</password>
	|     <language>RUS</language>
	| </pos:ticketRequest>
	|</soapenv:Body>
	|</soapenv:Envelope>";
	
	текШтрихКоды = ДобавленияШтрихКодовСФормы(массивНомеров);
	XML = СтрЗаменить(XMLБезТаблицыШтрихкодов,"ТаблицаШтрихКодов", текШтрихКоды);
	текЗапрос.Send(XML);
	текЗапрос.WaitForResponse();
	текБилетОчереди = Сред(текЗапрос.ResponseText, 235, 31);
	
	//для проверки, выведем результат на форму
	рОтветОтСервера = текБилетОчереди;
	
	ЗаписьВРегистрСведений(
		текБилетОчереди,
		ДобавленияШтрихКодовСФормыВРегистр(массивНомеров));

КонецПроцедуры

&НаСервере
Функция ДобавленияШтрихКодовСФормы(текТаблицаШтрихКодов)
	
	текСгенерированныеШтрихода = "";
	Для каждого стр Из текТаблицаШтрихкодов Цикл
		текСгенерированныеШтрихода = текСгенерированныеШтрихода + "<fcl:Item Barcode = """ + стр + """"+"/>" + Символы.ПС;
	КонецЦикла;
	Возврат текСгенерированныеШтрихода;
	
КонецФункции // ДобавленияШтрихКодовСФормы()

Функция ДобавленияШтрихКодовСФормыВРегистр(текТаблицаШтрихКодов)
	
	текСгенерированныеШтриходаДляРегистра = "";
	Для каждого стр Из текТаблицаШтрихкодов Цикл
		текСгенерированныеШтриходаДляРегистра = текСгенерированныеШтриходаДляРегистра + стр + Символы.ПС;
	КонецЦикла;
	Возврат текСгенерированныеШтриходаДляРегистра;
	
КонецФункции

Процедура ЗаписьВРегистрСведений(пНомерТикета, пШтрихкода)
	
	текНаборЗаписей = РегистрыСведений.ЛогированиеЗапросовТрекНомеров.СоздатьНаборЗаписей();
	текНаборЗаписей.Отбор.НомерТикета.Установить(пНомерТикета);
	текНаборЗаписей.Прочитать();
	
	Если текНаборЗаписей.Количество() = 0 Тогда
		//если нет такой записи, создадим
		ТекНоваяЗапись = текНаборЗаписей.Добавить();
		ТекНоваяЗапись.НомерТикета            = пНомерТикета;
		ТекНоваяЗапись.ТрекНомера             = пШтрихкода;
		ТекНоваяЗапись.ДатаОтправленияЗапроса = ТекущаяДатаСеанса();
	ИначеЕсли текНаборЗаписей.Количество() = 1 Тогда
		ТекНоваяЗапись = текНаборЗаписей[0];
	КонецЕСли;
	
	текНаборЗаписей.Записать();
	
КонецПроцедуры

Процедура ОтветПочтаРФ() Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ
	| ЛогированиеЗапросовТрекНомеров.НомерТикета,
	| ЛогированиеЗапросовТрекНомеров.ТрекНомера,
	| ЛогированиеЗапросовТрекНомеров.ДатаОтправленияЗапроса,
	| ЛогированиеЗапросовТрекНомеров.Обработано,
	| ЛогированиеЗапросовТрекНомеров.ОтветСервера
	|ИЗ
	| РегистрСведений.ЛогированиеЗапросовТрекНомеров КАК ЛогированиеЗапросовТрекНомеров
	|ГДЕ
	| ЛогированиеЗапросовТрекНомеров.ДатаОтправленияЗапроса < &Дата
	| И ЛогированиеЗапросовТрекНомеров.Обработано = ЛОЖЬ");
	Дата = ТекущаяДатаСеанса();// - 60*15;
	Запрос.УстановитьПараметр("Дата", Дата);
	Результат = Запрос.Выполнить().Выбрать();
	Пока Результат.Следующий() Цикл
		Попытка
			ПолучитьОтветНаСервере(Результат.НомерТикета);
		Исключение
			СообщитьРуководителю(Результат.НомерТикета);
		КонецПопытки;
	КонецЦикла;
КонецПроцедуры

Процедура ПолучитьОтветНаСервере(НомерТикета)

	ПочтаРФ = ОбработкаБезопасноеХранилище.ПолучитьВсеЗначения("ПочтаРФ");
	рЛогин = ПочтаРФ["Логин"];
	рПароль = ПочтаРФ["Пароль"];
	
	текЗапрос = Новый COMОбъект("WinHttp.WinHttpRequest.5.1");
	текЗапрос.Open("POST", "http://tracking.russianpost.ru/fc?wsdl", 0);
	текЗапрос.setRequestHeader("Content-Type", "text/xml; charset=utf-8");
	
	XMLЗапросПоТикету =
	"<soapenv:Envelope xmlns:soapenv=""http://schemas.xmlsoap.org/soap/envelope/"" xmlns:pos=""http://fclient.russianpost.org/postserver"">
	|<soapenv:Header/>
	|<soapenv:Body>
	|   <pos:answerByTicketRequest>
	|     <ticket>ТекНомерТикета</ticket>
	|     <login>"+рЛогин+"</login>
	|     <password>"+рПароль+"</password>
	|     <language>RUS</language>
	| </pos:answerByTicketRequest>
	|</soapenv:Body>
	|</soapenv:Envelope>";
	
	//для выделенной строки, получим номер тикета
	XML = СтрЗаменить(XMLЗапросПоТикету, "ТекНомерТикета", НомерТикета);
	
	текЗапрос.Send(XML);
	текЗапрос.WaitForResponse();
	текОтветПоБилету = текЗапрос.ResponseText;
	
	//для проверки, выведем результат на форму
	рОтветОтСервера = текОтветПоБилету;
	
	//Распарсить ответ из строки
	СтрокуВОбъект(рОтветОтСервера);
	
	СохранитьЛогиЗапросовТрекНомеров(НомерТикета, рОтветОтСервера);

КонецПроцедуры

Процедура СохранитьЛогиЗапросовТрекНомеров(НомерТикета, рОтветОтСервера)

	НаборЗаписей = РегистрыСведений.ЛогированиеЗапросовТрекНомеров.СоздатьМенеджерЗаписи();
	НаборЗаписей.НомерТикета = НомерТикета;
	НаборЗаписей.Прочитать();
	НаборЗаписей.Обработано = Истина;
	НаборЗаписей.ОтветСервера = рОтветОтСервера;
	НаборЗаписей.Записать();

КонецПроцедуры


Процедура СтрокуВОбъект(рОтветОтСервера)
	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.УстановитьСтроку(рОтветОтСервера);
	
	Баркоды = Новый Массив;
	Пока ЧтениеXML.Прочитать() Цикл
		Если ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента И ЧтениеXML.Имя = "ns3:Item" Тогда
			Баркод = Новый Структура("Баркод, Данные");
			Баркод.Баркод = ЧтениеXML.ПолучитьАтрибут(0);
			Баркоды.Добавить(Баркод);
			ОперацииПоОтправлению = Новый Массив;
			МассивДат = Новый Массив;
		ИначеЕсли ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента И ЧтениеXML.Имя = "ns3:Operation" Тогда
			Если МассивДат.Найти(ЧтениеXML.ПолучитьАтрибут(3)) = Неопределено Тогда
				ОперацияСПисьмом = Новый Структура("OperTypeID, OperCtgID, OperName, DateOper, IndexOper");
				ОперацияСПисьмом.OperTypeID = ЧтениеXML.ПолучитьАтрибут(0);
				ОперацияСПисьмом.OperCtgID = ЧтениеXML.ПолучитьАтрибут(1);
				ОперацияСПисьмом.OperName = ЧтениеXML.ПолучитьАтрибут(2);
				ОперацияСПисьмом.DateOper = ЧтениеXML.ПолучитьАтрибут(3);
				ОперацияСПисьмом.IndexOper = ЧтениеXML.ПолучитьАтрибут(4);
				ОперацииПоОтправлению.Добавить(ОперацияСПисьмом);
				Баркод.Данные = ОперацииПоОтправлению;
			КонецЕсли;
			МассивДат.Добавить(ЧтениеXML.ПолучитьАтрибут(3));
		ИначеЕсли ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента И ЧтениеXML.Имя = "ns3:Error" Тогда
			ОперацияСПисьмом = Новый Структура("OperTypeID, OperCtgID, OperName, DateOper, IndexOper");
			ОперацияСПисьмом.OperTypeID = "Ошибка";
			ОперацияСПисьмом.OperCtgID = ЧтениеXML.ПолучитьАтрибут(0);
			ОперацияСПисьмом.OperName = "";
			ОперацияСПисьмом.DateOper = Строка(ТекущаяДатаСеанса());
			ОперацияСПисьмом.IndexOper = "";
			ОперацииПоОтправлению.Добавить(ОперацияСПисьмом);
			Баркод.Данные = ОперацииПоОтправлению;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Стр Из Баркоды Цикл
		Если Стр.Данные.Количество() > 0 Тогда
			ЗапросАтрибут = Новый Запрос("ВЫБРАТЬ
			|АтрибутыОперацийПочтаРФ.Ссылка
			|ИЗ
			|Справочник.АтрибутыОперацийПочтыРФ КАК АтрибутыОперацийПочтаРФ
			|ГДЕ
			|АтрибутыОперацийПочтаРФ.Владелец = &Владелец
			| И АтрибутыОперацийПочтаРФ.КодАтрибута = &КодАтрибута");
			ШПИ = Справочники.ШПИ.НайтиПоНаименованию(Стр.Баркод);
			Корреспонденция  = ШПИ.Владелец;
			Набор = РегистрыСведений.СтатусыШПИОтслеживание.СоздатьНаборЗаписей();
			Набор.Отбор.ШПИ.Установить(ШПИ);
			Набор.Прочитать();
			Набор.Очистить();
			Для Каждого Элемент Из Стр.Данные Цикл
				Запись = Набор.Добавить();
				Запись.ШПИ = ШПИ;
				Запись.Корреспонденция = Корреспонденция;
				Операция = Справочники.ОперацииПочтаРФ.НайтиПоРеквизиту("КодОперации", Элемент.OperTypeID);
				Если Операция = Справочники.ОперацииПочтаРФ.ПустаяСсылка() Тогда
					ОперацияОбъект = Справочники.ОперацииПочтаРФ.СоздатьЭлемент();
					ОперацияОбъект.Наименование = Элемент.OperName;
					ОперацияОбъект.КодОперации = Элемент.OperTypeID;
					ОперацияОбъект.Записать();
					Операция = ОперацияОбъект.Ссылка;
				КонецЕсли;
				Запись.Операция = Операция;
				
				ЗапросАтрибут.УстановитьПараметр("Владелец", Запись.Операция);
				ЗапросАтрибут.УстановитьПараметр("КодАтрибута", Элемент.OperCtgID);
				Результат = ЗапросАтрибут.Выполнить().Выбрать();
				Если Результат.Следующий() Тогда
					Атрибут = Результат.Ссылка;
				Иначе
					АтрибутОбъект = Справочники.АтрибутыОперацийПочтыРФ.СоздатьЭлемент();
					АтрибутОбъект.Владелец = Запись.Операция;
					АтрибутОбъект.КодАтрибута = Элемент.OperCtgID;
					АтрибутОбъект.Наименование = "";
					АтрибутОбъект.Записать();
					Атрибут = АтрибутОбъект.Ссылка;
				КонецЕсли;
				Запись.АтрибутОперации = Атрибут;
				
				Запись.Период = Дата(Элемент.DateOper);
				
				Запись.Индекс = Элемент.IndexOper;
			КонецЦикла;
			Набор.Записать();
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура СообщитьРуководителю(НомерТикета)
КонецПроцедуры

