&НаКлиенте
Перем СофтФон;

&НаКлиенте
Перем текущийКанал;

&НаКлиенте
Перем дтНачалоОжидания;

&НаКлиенте
Перем стрНомерДляИстории;


&НаКлиенте
Процедура ОбновитьСтатусРазговора()
	ИдетРазговор	= Ложь;
	ИдетЗапись		= Ложь;
	Если СофтФон <> Неопределено Тогда
		ИдетРазговор	= Софтфон.IsChannelActive(текущийКанал);
		ИдетЗапись		= Софтфон.IsRecording(текущийКанал);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДоступность()
	Элементы.ГруппаСтатус.Доступность = СтатусПодключен;
	Элементы.ГруппаКонтрагент.Доступность = СтатусПодключен;
	Элементы.кнГотовность.Доступность = СтатусПодключен;
	Элементы.кнЗавершитьРазговор.Доступность = СтатусПодключен;
КонецПроцедуры

// Работа с внешними событиями
&НаКлиенте                                                                
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	Если Источник = "1С_Софтфон" Тогда	
		Если 		Событие = "Регистрация" Тогда  			//---Регистрация(при попытке подключения к серверу)
			ОбработчикСобытияРегистрация(Данные);
		ИначеЕсли 	Событие = "ВходящийЗвонок" Тогда		//---Входящий вызов
			ОбработчикСобытияВходящийЗвонок(Данные);
		ИначеЕсли 	Событие = "СостояниеЗвонка" Тогда		//---Установка/Завершение звонка	
			ОбработчикСобытияСостояниеЗвонка(Данные);
		ИначеЕсли	Событие = "Софтфон_Ошибка" Тогда        //---Оповещение об ошибке
			ПоказатьОповещениеПользователя("Ошибка Софтфон", , Данные);
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикСобытияРегистрация(Данные)
	Если Данные = "Успешно" Тогда
		СтатусПодключен = Истина;
		ОбновитьДоступность();
	Иначе
		СтатусПодключен = Ложь;
		ОбновитьДоступность();
		ПоказатьОповещениеПользователя("Ошибка регистрации: ", , Данные);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикСобытияВходящийЗвонок(Данные)
	Канал = Число(Данные);
	СофтФон.declineCall(Канал);
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикСобытияСостояниеЗвонка(Данные)
	параметрыЗвонка = бит_ТелефонияКлиентСервер.СтрРазбить(Данные, "#");
	Состояние = параметрыЗвонка[0].Значение;
	Канал = Число(параметрыЗвонка[1].Значение);
	длительностьЗвонкаСек = Число(параметрыЗвонка[2].Значение);
	
	ВходящийВызов = СофтФон.IsIncomingCall(Канал);
	
	прямойНабор = бит_БитфонСервер.ПолучитьФлагИспользоватьПрямойНабор();
	Если НЕ прямойНабор Тогда
		стрНомерДляИстории = бит_ТелефонияКлиентСервер.СократитьНомерДляПоиска(стрНомерДляИстории);
	КонецЕсли;
	
	Если Канал = текущийКанал Тогда
		Если Состояние = "ЗвонокУспешен" Тогда			//Обработчик установки связи
			использоватьСтационарныйТелефон = бит_БитфонСервер.ПолучитьФлагИспользоватьСтационарныйТелефон();
			стрИмяФайлаЗаписи = "";
			записьОбязательна = бит_БитфонСервер.ПолучитьФлагВсегдаЗаписыватьРазговор();
			Если записьОбязательна = Истина Тогда
				стрИмяФайлаЗаписи = НачатьЗапись();
			КонецЕсли;
			//
			создаватьСобытие = бит_БитфонСервер.ПолучитьФлагСоздаватьСобытиеИсходящийЗвонок();
			Если создаватьСобытие = Истина Тогда
				ссылкаСобытие = бит_БитфонСервер.СоздатьСобытие(Ложь, Контрагент,
								Номер, КонтактноеЛицо, стрИмяФайлаЗаписи);
				бит_ТелефонияКлиентПереопределяемый.ОткрытьФормуДокументаСобытие(ссылкаСобытие);
			КонецЕсли;
			//
			Если использоватьСтационарныйТелефон Тогда
				СофтФон.Redirect(текущийКанал, Номер);
				ЗавершитьРазговор();
			КонецЕсли;
		ИначеЕсли Состояние = "ЗвонокПрерван" Тогда 	//Обработчик завершения разговора
			
			стрИмяФайлаЗаписи = СофтФон.GetRecordFilename(Канал);
			бит_ТелефонияСервер.ДобавитьВИсториюЗвонков(СвойНомер, Ложь, стрНомерДляИстории, Контрагент,
				КонтактноеЛицо,	Истина, длительностьЗвонкаСек, "", стрИмяФайлаЗаписи);
			
			СофтФон.HandleDisconnected(текущийКанал);
			ОбновитьСтатусРазговора();
			ПоказатьОповещениеПользователя("Разговор завершен");
			ОчиститьИнформацию();
			
		ИначеЕсли Состояние = "ЗвонокОтклонён" Тогда 	//На удаленной стороне сбросили вызов не поднимая трубку.
			
			Если НЕ ВходящийВызов Тогда
				бит_ТелефонияСервер.ДобавитьВИсториюЗвонков(СвойНомер, Ложь, стрНомерДляИстории, Контрагент,
					КонтактноеЛицо,	Истина, длительностьЗвонкаСек, "", "");
			КонецЕсли;
			СофтФон.HandleDisconnected(текущийКанал);
			ОбновитьСтатусРазговора();
			ПоказатьОповещениеПользователя("Звонок отклонен");
			ОчиститьИнформацию();
			
		КонецЕсли;
	КонецЕсли;
		
КонецПроцедуры

//----------------------------------------------------------------------------------------------
&НаКлиенте
Процедура ОтключитьСофтФон()
	ЗавершитьРазговор();
	СофтФон = Неопределено;
КонецПроцедуры

&НаКлиенте
Процедура Подключение()
	СвойНомер = бит_БитфонСервер.ПолучитьСвойНомер();
	Если ЗначениеЗаполнено(СвойНомер) Тогда
		Заголовок = "БИТ.Phone Оператор - " + СвойНомер;
	КонецЕсли;
	бит_БИТфонКлиент.ПодключитьСофтфон("БитФонОператор_СофтфонПодключен");
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьВремя()
	датаВремяТек = ТекущаяДата();
	ДатаВремя = Строка(датаВремяТек);
	Если Готовность = Истина Тогда
		Если датаВремяТек - дтНачалоОжидания > 5 Тогда
			// начать разговор
			Готовность = Ложь;
			ПолучитьНомерОбзвонаНачатьРазговор();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьИнформацию()
	Номер = "";
	Контрагент = Неопределено;
	КонтактноеЛицо = Неопределено;
КонецПроцедуры

&НаКлиенте
Функция НачатьЗапись()
	Если НЕ ИдетЗапись Тогда
		стрИмяФайла = бит_БИТфонКлиент.ПолучитьИмяФайлаДляЗаписи();
		Если ЗначениеЗаполнено(стрИмяФайла) Тогда
			стрФорматФайлаЗаписи = Строка(бит_БитфонСервер.ПолучитьФорматЗаписи());
			СофтФон.RecordStart(текущийКанал, стрИмяФайла, стрФорматФайлаЗаписи);
			ОбновитьСтатусРазговора();
		КонецЕсли;
		Возврат стрИмяФайла;
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПодключитьОбработчикОжидания("ОбновитьВремя", 1, Ложь);
	//
	СофтФон 			= Неопределено;
	Готовность			= Ложь;
	ИдетРазговор 		= Ложь;
	СтатусПодключен		= Ложь;
	текущийКанал		= 0;
	
	дтНачалоОжидания	= ТекущаяДата();
	
	ОбновитьДоступность();
	
	Подключение();
	
КонецПроцедуры

&НаКлиенте
Процедура Готовность(Команда)
	Если ИдетРазговор Тогда
		ПоказатьОповещениеПользователя("Идет разговор");
		Возврат;
	КонецЕсли;
	Готовность = НЕ Готовность;
	Если Готовность = Истина Тогда
		ОчиститьИнформацию();
		дтНачалоОжидания = ТекущаяДата();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Отбой(Команда)
	ЗавершитьРазговор();
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	ОтключитьСофтФон();
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьНомерОбзвонаНачатьРазговор()
	Если Не ИдетРазговор Тогда
		ОчиститьИнформацию();
		получен = бит_БитфонСервер.ПолучитьНомерДляОператора(Номер, Контрагент, КонтактноеЛицо);
		
		Если НЕ ЗначениеЗаполнено(Контрагент) Тогда
			бит_ТелефонияКлиент.ВывестиСообщение("Список окончен!");
			Возврат;
		КонецЕсли;
		

		Если НЕ получен Тогда
			бит_ТелефонияКлиент.ВывестиСообщение("Не удалось получить номер из списка обзвона");
			Возврат;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(Номер) Тогда
			бит_ТелефонияКлиент.ВывестиСообщение("Номер из списка обзвона не заполнен");
			Возврат;
		КонецЕсли;
		//фЗ- число звонков
		Если КонтрольСобытий.РезультативныеЗвонки(Контрагент) Тогда
			Готовность = истина;
			Возврат;
		КонецЕсли;
		// ФЗ - часовой пояс
		Если КонтрольСобытий.КонтрольЧасовогоПояса(Контрагент) Тогда
			Готовность = истина;
			Возврат;
		КонецЕсли;
		//ФЗ- отзыв Персональных данных
		Если ОбъектыСервер.ПолучитьЗначениеКонстанты("ОтзывПерсональныхДанных") И ОбъектыСервер.РазыменоватьСсылку(Контрагент, "ОтзывПерсональныхДанных") Тогда
			Сообщить("У данного должника отозваны персональные данные!");
			Готовность = Истина;
			Возврат;
		КонецЕсли;
		
		Номер = бит_БИТфонКлиент.СформироватьНомерСПрефиксами(Номер);
		Если ЗначениеЗаполнено(Номер) Тогда
			стрНомерДляИстории = Номер;
			использоватьСтационарныйТелефон = бит_БитфонСервер.ПолучитьФлагИспользоватьСтационарныйТелефон();
			Если использоватьСтационарныйТелефон Тогда
				стационарныйНомер = бит_БитфонСервер.ПолучитьСтационарныйТелефон();
				стационарныйНомер = бит_БИТфонКлиент.СформироватьНомерСПрефиксами(стационарныйНомер);
				Если ЗначениеЗаполнено(стационарныйНомер) Тогда
					СофтФон.Call(текущийКанал, стационарныйНомер);
				Иначе
					бит_ТелефонияКлиент.ВывестиСообщение("Ошибка перевода исходящего звонка - не задан номер стационарного телефона");
				КонецЕсли;
			Иначе
				СофтФон.Call(текущийКанал, Номер);
			КонецЕсли;
		Иначе
			ПоказатьОповещениеПользователя("Не задан номер");
		КонецЕсли;
	КонецЕсли;
	ОбновитьСтатусРазговора();
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьРазговор()
	Если ИдетРазговор Тогда
		СофтФон.Hangup(текущийКанал);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Настройки(Команда)
	уровеньЛоггирования = бит_БитфонСервер.ПолучитьУровеньЛоггирования();
	
	стрСписокУстройствВыводаЗвука = "";
	Если СофтФон <> Неопределено Тогда
		стрСписокУстройствВыводаЗвука = СофтФон.GetPlaybackDevicesList();
	КонецЕсли;
	//
	бит_БИТфонКлиент.ОткрытьФормуНастроек(стрСписокУстройствВыводаЗвука);
	
	уровеньЛоггированияНов = бит_БитфонСервер.ПолучитьУровеньЛоггирования();
	Если (уровеньЛоггированияНов <> уровеньЛоггирования) И (СофтФон <> Неопределено) Тогда
		СофтФон.SetLogLevel(уровеньЛоггированияНов, бит_БитфонСервер.ПолучитьПараметрыСоединения().Логин);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "БитФонОператор_СофтфонПодключен" Тогда
		СофтФон = Параметр.Результат;
		Если СофтФон <> Неопределено Тогда
			бит_БИТфонКлиент.ИнициализироватьСофтфонРегистрацияНаАТС(СофтФон);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

