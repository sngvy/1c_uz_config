// Не используется - Использовалось для табличных частей
//   Замена на проверку без стейта
Процедура ЗаполнитьТипыИмущества(ВариантыИмущества, ТипИмуществаСправочника) Экспорт

	ВариантыТипов = ПолучитьВарианты(ТипИмуществаСправочника);
	
	Для каждого ТипИмущества Из ВариантыТипов Цикл
	
		Запись = ВариантыИмущества.Добавить();
		Запись.Тип = ТипИмущества;
	
	КонецЦикла;

КонецПроцедуры

// Возвращает набор типов имущества по которым определяются возможные свойства
//
// Параметры:
//  ТипИмущества  - ПланВидовХарактеристикСсылка.Имущество - 
//
// Возвращаемое значение:
//   Массив из ПланВидовХарактеристикСсылка.Имущество  - Допустимые типы для Свойств
//
Функция ПолучитьВарианты(ТипИмущества) Экспорт

	Варианты = Новый Массив;
	Варианты.Добавить(Имущество);
	Если ТипИмущества <> Транспорт Тогда
	
		Варианты.Добавить(Недвижимость);
	
	КонецЕсли;
	Варианты.Добавить(ТипИмущества);
	
	Возврат Варианты;

КонецФункции // ()

Функция СоответствиеХарактеристикиТипу() Экспорт

	МодульИмущество = ПланыВидовХарактеристик.Имущество;
	
	Правила = Новый Соответствие;
	Правила.Вставить(МодульИмущество.Имущество,        Метаданные.ОпределяемыеТипы.Имущество.Тип);
	Правила.Вставить(МодульИмущество.Недвижимость,     Метаданные.ОпределяемыеТипы.Недвижимость.Тип);
	Правила.Вставить(МодульИмущество.Транспорт,        Метаданные.ОпределяемыеТипы.Транспорт.Тип);
	Правила.Вставить(МодульИмущество.ЗемельныеУчастки, Тип("СправочникСсылка.ЗемельныеУчастки"));
	Правила.Вставить(МодульИмущество.Помещения,        Тип("СправочникСсылка.Помещения"));
	
	Возврат Правила;

КонецФункции // ()

// Изменяет наименование имущества
//   Наименование формируется из Свойст с отметкой ВключатьВНаименование
//
// Параметры:
//  СправочникИмущество - СправочникСсылка.Транспорт
//              СправочникСсылка.Помещения
//              СправочникСсылка.ЗемельныеУчастки
//
Процедура ИзменитьНаименование(СправочникИмущество) Экспорт

	ИмяСправочника = СправочникИмущество.Метаданные().Имя;
	
	ИмуществоМенеджер = ПланыВидовХарактеристик.Имущество;
	РеквизитыНаименования = РегистрыСведений.СведенияОбИмуществе.РеквизитыНаименования(
		СправочникИмущество,
		ПолучитьВарианты(ИмуществоМенеджер[ИмяСправочника])
	);

	Наименование = СформироватьНаименование(
		РеквизитыНаименования,
		СправочникИмущество.Метаданные().ДлинаНаименования
	);
	
	Справочники[ИмяСправочника].ИзменитьНаименование(
		СправочникИмущество,
		Наименование
	);

КонецПроцедуры

// Принимает Массив значений и максимальную возможную длину Наименования
//   Не подходит для очень коротких Наименований
Функция СформироватьНаименование(РеквизитыНаименования, ДлинаНаименования) Экспорт

	Если РеквизитыНаименования.Количество() = 0 Тогда
	
		Возврат "<>";
	
	КонецЕсли;
	
	КоличествоРазделителей = РеквизитыНаименования.Количество() - 1;
	МаксИспользуемаяДлина = Цел((ДлинаНаименования - КоличествоРазделителей) / РеквизитыНаименования.Количество());
	
	СтроковыеЗначения = Новый Массив;
	Для каждого Реквизит Из РеквизитыНаименования Цикл
	
		Темп = Строка(Реквизит);
		Если СтрДлина(Темп) > МаксИспользуемаяДлина Тогда
		
			Темп = Лев(Темп, МаксИспользуемаяДлина - 3) + "...";
		
		КонецЕсли;
		СтроковыеЗначения.Добавить(Темп);
	
	КонецЦикла;
	Наименование = СтрСоединить(СтроковыеЗначения, " ");
	
	Возврат Лев(Наименование, ДлинаНаименования);

КонецФункции // ()

