
#Область ОписаниеПеременных

&НаКлиенте
Перем СофтФон;

&НаКлиенте
Перем обКонтроллерАТС;

&НаКлиенте
Перем текущийКанал;

&НаКлиенте
Перем дтНачалоОжидания;

&НаКлиенте
Перем стрНомерДляИстории;

// Массив структур
&НаКлиенте
Перем ИнформацияЛиний;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПодключитьОбработчикОжидания("ОбновитьВремя", 1, Ложь);
	//
	СофтФон 			= Неопределено;
	обКонтроллерАТС		= Неопределено;
	Готовность			= Ложь;
	ИдетРазговор 		= Ложь;
	СтатусПодключен		= Ложь;
	текущийКанал		= 0;
	
	ИнформацияЛиний = Новый Массив;
	Для й=0 По 3 Цикл
		инфЛиния = Новый Структура;
		инфЛиния.Вставить("ЗаписьРазговора", "");
		ИнформацияЛиний.Добавить(инфЛиния);
	КонецЦикла;
	
	дтНачалоОжидания	= ТекущаяДата();
	
	ОбновитьДоступность();
	
	Подключение();
	
КонецПроцедуры

// Работа с внешними событиями
&НаКлиенте                                                                
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	Если Источник = "1С_Софтфон" Тогда	
		Если 		Событие = "Регистрация" Тогда  			//---Регистрация(при попытке подключения к серверу)
			ОбработчикСобытияРегистрация(Данные);
		ИначеЕсли 	Событие = "ВходящийЗвонок" Тогда		//---Входящий вызов
			ОбработчикСобытияВходящийЗвонок(Данные);
		ИначеЕсли 	Событие = "СостояниеЗвонка" Тогда		//---Установка/Завершение звонка	
			ОбработчикСобытияСостояниеЗвонка(Данные);
		ИначеЕсли	Событие = "Софтфон_Ошибка" Тогда        //---Оповещение об ошибке
			бит_ТелефонияКлиент.ВывестиСообщение("Ошибка Софтфон: " + Данные);
		КонецЕсли;
	КонецЕсли;	
	
	Если Источник = ИмяИсточникаСобытийИнтегрБИТАТС() Тогда
		Если Событие = "Ошибка" Тогда
			бит_ТелефонияКлиент.ВывестиСообщение(Данные, ЭтаФорма);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	ОтключитьСофтФон();
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "БитФонОператор_СофтфонПодключен" Тогда
		СофтФон = Параметр.Результат;
		Если СофтФон <> Неопределено Тогда
			бит_БитфонКлиент.ПроверкаРазрешенногоАдреса(СофтФон, "БитФонОператор_ПроверкаАдресаПодключения");
		КонецЕсли;
	ИначеЕсли ИмяСобытия = "БитФонОператор_ПроверкаАдресаПодключения" Тогда
		Если Параметр.Результат = КодВозвратаДиалога.Да Тогда
			бит_БитфонСервер.УстановитьРазрешенныйАдрес(Параметр.ПараметрОповещения);
			бит_БитфонКлиент.ИнициализироватьСофтфонРегистрацияНаАТС(СофтФон);
		Иначе
			ОтключитьСофтФон();
		КонецЕсли;
	ИначеЕсли ИмяСобытия = "БитФон_ОбновлениеНастроек" Тогда
		СтарыеНастройки = Параметр.ПараметрОповещения;
		ОбновитьНастройки(СтарыеНастройки);
	ИначеЕсли ИмяСобытия = "БитФонОператор_ИнтегрМониторБИТАТС_ПодключениеВнешнейКомпоненты" Тогда
		обКонтроллерАТС = Параметр.Результат;
		Если обКонтроллерАТС <> Неопределено Тогда
			обКонтроллерАТС.SetMessageSourceName( ИмяИсточникаСобытийИнтегрБИТАТС() );
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Готовность(Команда)
	Если ИдетРазговор Тогда
		ПоказатьОповещениеПользователя("Идет разговор");
		Возврат;
	КонецЕсли;
	Готовность = НЕ Готовность;
	Если Готовность = Истина Тогда
		ОчиститьИнформацию();
		дтНачалоОжидания = ТекущаяДата();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Отбой(Команда)
	ЗавершитьРазговор();
КонецПроцедуры

&НаКлиенте
Процедура Настройки(Команда)
	бит_БитфонКлиент.ОткрытьФормуНастроек(СофтФон);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбновитьСтатусРазговора()
	ИдетРазговор	= Ложь;
	ИдетЗапись		= Ложь;
	Если СофтФон <> Неопределено Тогда
		ИдетРазговор	= Софтфон.IsChannelActive(текущийКанал);
		ИдетЗапись		= Софтфон.IsRecording(текущийКанал) ИЛИ ЗначениеЗаполнено(ИнформацияЛиний[текущийКанал].ЗаписьРазговора);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДоступность()
	Элементы.ГруппаСтатус.Доступность = СтатусПодключен;
	Элементы.ГруппаКонтрагент.Доступность = СтатусПодключен;
	Элементы.кнГотовность.Доступность = СтатусПодключен;
	Элементы.кнЗавершитьРазговор.Доступность = СтатусПодключен;
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикСобытияРегистрация(Данные)
	Если Данные = "Успешно" Тогда
		СтатусПодключен = Истина;
		ОбновитьДоступность();
	Иначе
		СтатусПодключен = Ложь;
		ОбновитьДоступность();
		ПоказатьОповещениеПользователя("Ошибка регистрации: ", , Данные);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикСобытияВходящийЗвонок(Данные)
	Канал = Число(Данные);
	СофтФон.declineCall(Канал);
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикСобытияСостояниеЗвонка(Данные)
	параметрыЗвонка = бит_ТелефонияКлиентСервер.СтрРазбить(Данные, "#");
	Состояние = параметрыЗвонка[0].Значение;
	Канал = Число(параметрыЗвонка[1].Значение);
	длительностьЗвонкаСек = Число(параметрыЗвонка[2].Значение);
	
	ВходящийВызов = СофтФон.IsIncomingCall(Канал);
	
	прямойНабор = бит_БитфонСервер.ПолучитьФлагИспользоватьПрямойНабор();
	Если НЕ прямойНабор Тогда
		стрНомерДляИстории = бит_ТелефонияКлиентСервер.СократитьНомерДляПоиска(стрНомерДляИстории);
	КонецЕсли;
	
	Если Канал = текущийКанал Тогда
		Если Состояние = "ЗвонокУспешен" Тогда			//Обработчик установки связи
			стрИмяФайлаЗаписи = "";
			записьОбязательна = бит_БитфонСервер.ПолучитьФлагВсегдаЗаписыватьРазговор();
			Если записьОбязательна = Истина Тогда
				стрИмяФайлаЗаписи = НачатьЗапись();
			КонецЕсли;
			//
			создаватьСобытие = бит_БитфонСервер.ПолучитьФлагСоздаватьСобытиеИсходящийЗвонок();
			Если создаватьСобытие = Истина Тогда
				структПараметрыСобытия = бит_ТелефонияКлиент.СоздатьСтруктуруПараметровСобытия(Ложь,
					Контрагент, Номер, КонтактноеЛицо, стрИмяФайлаЗаписи, "");
				ссылкаСобытие = бит_БитфонСервер.СоздатьСобытие(структПараметрыСобытия);
				бит_ТелефонияКлиентПереопределяемый.ОткрытьФормуДокументаСобытие(ссылкаСобытие);
			КонецЕсли;
		ИначеЕсли Состояние = "ЗвонокПрерван" Тогда 	//Обработчик завершения разговора
			
			стрИмяФайлаЗаписи = ПолучитьИмяФайлаЗаписи(Канал);
			бит_ТелефонияСервер.ДобавитьВИсториюЗвонков(СвойНомер, Ложь, стрНомерДляИстории, Контрагент,
				КонтактноеЛицо,	Истина, длительностьЗвонкаСек, "", стрИмяФайлаЗаписи);
			
			ИнформацияЛиний[Канал].ЗаписьРазговора = "";
			СофтФон.HandleDisconnected(текущийКанал);
			ОбновитьСтатусРазговора();
			ПоказатьОповещениеПользователя("Разговор завершен");
			ОчиститьИнформацию();
			
		ИначеЕсли Состояние = "ЗвонокОтклонён" Тогда 	//На удаленной стороне сбросили вызов не поднимая трубку.
			
			Если НЕ ВходящийВызов Тогда
				бит_ТелефонияСервер.ДобавитьВИсториюЗвонков(СвойНомер, Ложь, стрНомерДляИстории, Контрагент,
					КонтактноеЛицо,	Ложь, длительностьЗвонкаСек, "", "");
			КонецЕсли;
			ИнформацияЛиний[Канал].ЗаписьРазговора = "";
			СофтФон.HandleDisconnected(текущийКанал);
			ОбновитьСтатусРазговора();
			ПоказатьОповещениеПользователя("Звонок отклонен");
			ОчиститьИнформацию();
			
		КонецЕсли;
	КонецЕсли;
		
КонецПроцедуры

//----------------------------------------------------------------------------------------------
&НаКлиенте
Процедура ОтключитьСофтФон()
	ЗавершитьРазговор();
	СофтФон = Неопределено;
КонецПроцедуры

&НаКлиенте
Процедура Подключение()
	СвойНомер = бит_БитфонСервер.ПолучитьСвойНомер();
	Если ЗначениеЗаполнено(СвойНомер) Тогда
		Заголовок = "БИТ.Phone Оператор - " + СвойНомер;
	КонецЕсли;
	бит_БитфонКлиент.ПодключитьСофтфон("БитФонОператор_СофтфонПодключен");
	ПодключитьВКМонитораБИТАТС();
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьВремя()
	датаВремяТек = ТекущаяДата();
	ДатаВремя = Строка(датаВремяТек);
	Если Готовность = Истина Тогда
		Если датаВремяТек - дтНачалоОжидания > 5 Тогда
			// начать разговор
			Готовность = Ложь;
			ПолучитьНомерОбзвонаНачатьРазговор();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьИнформацию()
	Номер = "";
	Контрагент = Неопределено;
	КонтактноеЛицо = Неопределено;
КонецПроцедуры

&НаКлиенте
Функция НачатьЗапись()
	стрИмяФайла = "";
	Если бит_БитфонСервер.ПолучитьФлагПолучатьЗаписиРазговоровСБИТАТС() Тогда
		стрНомерДляЗаписи = бит_ТелефонияКлиентСервер.СократитьНомерДляПоиска(Номер);
		стрИмяФайла = бит_БитфонКлиент.ПолучитьЗаписьРазговораБИТАТС(обКонтроллерАТС, СвойНомер, стрНомерДляЗаписи);
	Иначе
		Если СофтФон <> Неопределено Тогда
			Если НЕ СофтФон.IsRecording(текущийКанал) Тогда
				стрИмяФайла = бит_БитфонКлиент.ПолучитьИмяФайлаДляЗаписи();
				Если ЗначениеЗаполнено(стрИмяФайла) Тогда
					стрФорматФайлаЗаписи = Строка(бит_БитфонСервер.ПолучитьФорматЗаписи());
					СофтФон.RecordStart(текущийКанал, стрИмяФайла, стрФорматФайлаЗаписи);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	ИнформацияЛиний[текущийКанал].ЗаписьРазговора = стрИмяФайла;
	ОбновитьСтатусРазговора();
	Возврат стрИмяФайла;
КонецФункции

&НаКлиенте
Функция ПолучитьИмяФайлаЗаписи(НомерКанала)
	стрИмяФайлаЗаписи = "";
	Если бит_БитфонСервер.ПолучитьФлагПолучатьЗаписиРазговоровСБИТАТС() Тогда
		стрИмяФайлаЗаписи = ИнформацияЛиний[НомерКанала].ЗаписьРазговора;
	Иначе
		Если СофтФон <> Неопределено Тогда
			стрИмяФайлаЗаписи = СофтФон.GetRecordFilename(НомерКанала);
		КонецЕсли;
	КонецЕсли;
	Возврат стрИмяФайлаЗаписи;
КонецФункции

&НаКлиенте
Процедура ПолучитьНомерОбзвонаНачатьРазговор()
	Если Не ИдетРазговор Тогда
		ОчиститьИнформацию();
		получен = бит_БитфонСервер.ПолучитьНомерДляОператора(Номер, Контрагент, КонтактноеЛицо);
		Если НЕ получен Тогда
			бит_ТелефонияКлиент.ВывестиСообщение("Не удалось получить номер из списка обзвона");
			Возврат;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(Номер) Тогда
			бит_ТелефонияКлиент.ВывестиСообщение("Номер из списка обзвона не заполнен");
			Возврат;
		КонецЕсли;
		Номер = бит_БитфонКлиент.СформироватьНомерСПрефиксами(Номер);
		Если ЗначениеЗаполнено(Номер) Тогда
			стрНомерДляИстории = Номер;
			СофтФон.Call(текущийКанал, Номер);
		Иначе
			ПоказатьОповещениеПользователя("Не задан номер");
		КонецЕсли;
	КонецЕсли;
	ОбновитьСтатусРазговора();
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьРазговор()
	Если ИдетРазговор Тогда
		СофтФон.Hangup(текущийКанал);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьНастройки(СтарыеНастройки)
	уровеньЛоггированияНов		= бит_БитфонСервер.ПолучитьУровеньЛоггирования();
	//
	Попытка
		Если (уровеньЛоггированияНов <> СтарыеНастройки.УровеньЛоггирования) И (СофтФон <> Неопределено) Тогда
			СофтФон.SetLogLevel(уровеньЛоггированияНов, бит_БитфонСервер.ПолучитьПараметрыСоединения().Логин);
		КонецЕсли;
	Исключение
		бит_ТелефонияКлиент.ВывестиСообщение(ОписаниеОшибки());
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Функция ИмяИсточникаСобытийИнтегрБИТАТС()
	Возврат "БитФонОператор_ИнтегрМониторБИТАТС";
КонецФункции

&НаКлиенте
Процедура ПодключитьВКМонитораБИТАТС()
	Если обКонтроллерАТС <> Неопределено Тогда
		обКонтроллерАТС = Неопределено;
	КонецЕсли;
	//
	Если бит_БитфонСервер.ПолучитьФлагПолучатьЗаписиРазговоровСБИТАТС() Тогда
		бит_АТСКлиент.ПодключениеКомпонентыУправлениеАТС("БитФонОператор_ИнтегрМониторБИТАТС_ПодключениеВнешнейКомпоненты");
	КонецЕсли;
КонецПроцедуры

#КонецОбласти
