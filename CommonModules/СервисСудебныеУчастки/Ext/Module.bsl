
Процедура ФоновоеЗаданиеСервис_СудебныеУчастки() Экспорт
	ПолучитьДокументыЗаполненныеВСервис();
	ПолучитьДокументКОтправке();
	НаборЗаписей = РегистрыСведений.КОтправкеДокументовСУКлиент.СоздатьНаборЗаписей();	
	НаборЗаписей.Прочитать();
	Если НаборЗаписей.Количество() = 0 Тогда
		ОтключитьОбменССервисомСУ();
	КонецЕсли;
КонецПроцедуры 

Процедура ПолучитьДокументКОтправке()		
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КОтправкеДокументовСУКлиент.Документ.Ссылка КАК ДокументСсылка,
	|	КОтправкеДокументовСУКлиент.Документ.Номер КАК ДокументНомер
	|ИЗ
	|	РегистрСведений.КОтправкеДокументовСУКлиент КАК КОтправкеДокументовСУКлиент";
	
	Запрос.УстановитьПараметр("Статус", Перечисления.ВидСтатусаЗаполненияСУ.КОтправкеКлиент);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Соответствие = Новый Соответствие;
	Пока Выборка.Следующий() Цикл
		Соответствие.Вставить(Выборка.ДокументНомер,Выборка.ДокументСсылка.ПолучитьОбъект());	
	КонецЦикла;
	Если Соответствие.Количество() > 0 Тогда
		ОтправитьДокументЗСУ(Соответствие);
	КонецЕсли;
КонецПроцедуры

Процедура ОтправитьДокументЗСУ(Документы)
	СервисСУАдрес = Константы.СервисСУАдрес.Получить();
	Логин = Константы.СервисСУЛогин.Получить();
	Пароль = Константы.СервисСУПароль.Получить();	
	Попытка
		HTTPСоединение = Новый HTTPСоединение(СервисСУАдрес,,Логин,Пароль,,60);
		HTTPЗапрос = Новый HTTPЗапрос("ServiceCourtAddresses/hs/CourtAddresses");	
		ЗапросJSON = СериализоватьОбъектJSON(Документы);	
		HTTPЗапрос.УстановитьТелоИзСтроки(ЗапросJSON,КодировкаТекста.UTF8,ИспользованиеByteOrderMark.НеИспользовать);
		HTTPЗапрос.Заголовки.Вставить("Content-type", "application/json");
		HTTPЗапрос.Заголовки.Вставить("Login", Логин);
		HTTPЗапрос.Заголовки.Вставить("Password", Пароль);
		Результат = HTTPСоединение.ВызватьHTTPМетод("POST", HTTPЗапрос);
		Если Результат.КодСостояния = 201 Тогда
			Для Каждого Документ Из Документы Цикл
				Документ.Значение.Статус = Перечисления.ВидСтатусаЗаполненияСУ.ПолученВСервисе;	
				Документ.Значение.Записать();
			КонецЦикла;
		КонецЕсли;
	Исключение
		ЗаписьЖурналаРегистрации(НСтр("ru = 'Не удалось подключится к сервису СУ'"),
		УровеньЖурналаРегистрации.Ошибка,,,
		ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));		
		Возврат;
	КонецПопытки;
КонецПроцедуры

Процедура ПолучитьДокументыЗаполненныеВСервис()
	
	СервисСУАдрес = Константы.СервисСУАдрес.Получить();
	Логин = Константы.СервисСУЛогин.Получить();
	Пароль = Константы.СервисСУПароль.Получить();
	
	Попытка
		HTTPСоединение = Новый HTTPСоединение(СервисСУАдрес,,Логин,Пароль,,60);
		HTTPЗапрос = Новый HTTPЗапрос("ServiceCourtAddresses/hs/CourtAddresses");
		HTTPЗапрос.Заголовки.Вставить("Content-type", "application/json");
		HTTPЗапрос.Заголовки.Вставить("Login", Логин);
		HTTPЗапрос.Заголовки.Вставить("Password", Пароль);
		Результат = HTTPСоединение.ВызватьHTTPМетод("GET", HTTPЗапрос);
		Если Результат.КодСостояния = 201 Тогда
			дОбъектJSON = ДесериализоватьОбъектJSON(Результат.ПолучитьТелоКакСтроку());
			Для Каждого Элемент Из дОбъектJSON Цикл
				Если ТипЗнч(Элемент.Значение) = Тип("ДокументОбъект.ЗаполнениеСудебныхУчастковДолжников") Тогда
					Элемент.Значение.Статус = Перечисления.ВидСтатусаЗаполненияСУ.ПолученКлиент;// заполненный документ получен на стороне клиента	
					НаборЗаписей = РегистрыСведений.КОтправкеДокументовСУКлиент.СоздатьНаборЗаписей();	
					НаборЗаписей.Отбор.Документ.Установить(Элемент.Значение.Ссылка);
					НаборЗаписей.Записать();
				КонецЕсли;
				Элемент.Значение.Записать();
			КонецЦикла;
			ПодтвердитьДоставкуHTTPЗапроса("GET"); //подтверждаю в сервисе, что документы получены и не нужно выгружать повторно 
		КонецЕсли;
	Исключение
		ЗаписьЖурналаРегистрации(НСтр("ru = 'Не удалось подключится к сервису СУ'"),
		УровеньЖурналаРегистрации.Ошибка,,,
		ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));			
		Возврат;	
	КонецПопытки;
КонецПроцедуры // ПолучитьДокументыЗаполненныеСервис()

Процедура ПодтвердитьДоставкуHTTPЗапроса(ИмяМетода)
	
	СервисСУАдрес = Константы.СервисСУАдрес.Получить();
	Логин = Константы.СервисСУЛогин.Получить();
	Пароль = Константы.СервисСУПароль.Получить();
	HTTPСоединение = Новый HTTPСоединение(СервисСУАдрес,,Логин,Пароль,,60);
	HTTPЗапрос = Новый HTTPЗапрос("ServiceCourtAddresses/hs/CourtAddresses");	
	HTTPЗапрос.Заголовки.Вставить("Login", Логин);
	HTTPЗапрос.Заголовки.Вставить("Password", Пароль);
	HTTPЗапрос.Заголовки.Вставить("DeliveryStatus", "True");
	Результат = HTTPСоединение.ВызватьHTTPМетод(ИмяМетода, HTTPЗапрос);
	
КонецПроцедуры // ПодтвердитьДоставкуHTTPЗапроса()

Функция СериализоватьОбъектJSON(Данные) Экспорт
	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку();
	СериализаторXDTO.ЗаписатьJSON(ЗаписьJSON, Данные,НазначениеТипаXML.Явное);
	Возврат ЗаписьJSON.Закрыть();
КонецФункции // СериализоватьОбъектJSON()

Функция ДесериализоватьОбъектJSON(СтрокаJSON) Экспорт
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(СтрокаJSON);
	Данные = СериализаторXDTO.ПрочитатьJSON(ЧтениеJSON);
	ЧтениеJSON.Закрыть();
	Возврат Данные;
КонецФункции // ДесериализоватьОбъектJSON()

Процедура ОтключитьОбменССервисомСУ()
	РеглЗад = РегламентныеЗадания.НайтиПредопределенное("Сервис_СудебныеУчастки");
	РеглЗад.Использование = Ложь;
	РеглЗад.Записать();
КонецПроцедуры // ОтключитьОбменССервисомСУ()

Функция ПолучитьБаланс() Экспорт	
	СервисСУАдрес = Константы.СервисСУАдрес.Получить();
	Логин = Константы.СервисСУЛогин.Получить();
	Пароль = Константы.СервисСУПароль.Получить();	
	Попытка
		HTTPСоединение = Новый HTTPСоединение(СервисСУАдрес,,Логин,Пароль,,60);
		HTTPЗапрос = Новый HTTPЗапрос("ServiceCourtAddresses/hs/CourtAddresses");	
		HTTPЗапрос.Заголовки.Вставить("Balance", "True");
		HTTPЗапрос.Заголовки.Вставить("Login", Логин);
		HTTPЗапрос.Заголовки.Вставить("Password", Пароль);
		Результат = HTTPСоединение.ВызватьHTTPМетод("GET", HTTPЗапрос);		
		Если Результат.КодСостояния = 201 Тогда
			дОбъектJSON = ДесериализоватьОбъектJSON(Результат.ПолучитьТелоКакСтроку());
			Возврат дОбъектJSON;  
		КонецЕсли;
	Исключение
		ЗаписьЖурналаРегистрации(НСтр("ru = 'Не удалось подключится к сервису СУ'"),
		УровеньЖурналаРегистрации.Ошибка,,,
		ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));		
		Возврат Неопределено;	
	КонецПопытки;
	Возврат Неопределено;
КонецФункции