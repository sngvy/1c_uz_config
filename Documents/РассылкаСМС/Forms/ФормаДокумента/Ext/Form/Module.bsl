
&НаКлиенте
Процедура ДействиеПриИзменении(Элемент)
//	Элементы.ОбъектыДействие.Видимость = Объект.Действие.Пустая();
	//Если Объект.Действие = ПредопределенноеЗначение("Перечисление.ВариантыДействийДляСкоринга.SMSОповещение") Тогда
	//	Элементы.УчетнаяЗаписьОтправителя.Доступность = Истина;
	//	Элементы.УчетнаяЗаписьОтправителя.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.УчетныеЗаписиSMS4B");
	//ИначеЕсли Объект.Действие = ПредопределенноеЗначение("Перечисление.ВариантыДействийДляСкоринга.EMailРассылка") Тогда
	//	Элементы.УчетнаяЗаписьОтправителя.Доступность = Истина;
	//	Элементы.УчетнаяЗаписьОтправителя.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.УчетныеЗаписиЭлектроннойПочты");
	//ИначеЕсли Объект.Действие = ПредопределенноеЗначение("Перечисление.ВариантыДействийДляСкоринга.ПустаяСсылка") Тогда
	//	Объект.УчетнаяЗаписьОтправителя = ПредопределенноеЗначение("Справочник.УчетныеЗаписиSMS4B.ПустаяСсылка");
	//	Элементы.УчетнаяЗаписьОтправителя.Доступность = Ложь;	
	//КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВидКИПриИзменении(Элемент)
	//ИзменитьВидКИ();
КонецПроцедуры

&НаСервере
Процедура ИзменитьВидКИ()
	Для Каждого Элемент ИЗ Объект.Объекты Цикл
		Элемент.Контакт = Автоинформирование.ПолучитьКонтакт(Элемент.Объект, Объект.ВидКИ);		 
	КонецЦикла;	
КонецПроцедуры

&НаСервере
Процедура ИзменитьШаблон()
	Для Каждого Элемент ИЗ Объект.Объекты Цикл
		Элемент.Текст = Автоинформирование.ПолучитьПодсказку(Элемент.Объект, Объект.Шаблон);		 
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура ШаблонПриИзменении(Элемент)
	//ИзменитьШаблон();
КонецПроцедуры

&НаСервере
Процедура ПодборВтаблЧасть(Результат)
	Об = РеквизитФормыВЗначение("Объект");		
	РаботаСДокументами.ЗанестиРезультатПодбораВТабличнуюЧасть(Об.Объекты, Результат);
	ЗначениеВРеквизитФормы(Об, "Объект");
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ОбъектыСервер.ОграничитьТипОбъекта(Элементы.ОбъектыОбъект);
	//Элементы.ОбъектыОбъект.ОграничениеТипа = ОбъектыСервер.ТипыОбъекта(Элементы.ОбъектыОбъект);
	//
	Если Объект.Ссылка.Пустая() Тогда
		Пользователи.ЗаполнитьРеквизитыПоДаннымПользователя(Объект);
	КонецЕсли;
	
	ОбъектыСервер.РасширитьТабличнуюЧасть(Объект.Объекты);
	Элементы.ОбъектыПодборПоНастройкам.Видимость = Константы.ИспользоватьНастройкиПодбораОбъектовУчета.Получить();
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ОбъектыСервер.РасширитьТабличнуюЧасть(Объект.Объекты);
КонецПроцедуры

&НаКлиенте
Процедура ОбъектыОбъектПриИзменении(Элемент)
	ОбъектыКлиент.РасширитьТекущуюСтроку(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ОбъектыПолеПриИзменении(Элемент)
	ОбъектыКлиент.РасширитьТекущуюСтрокуОбъект(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура Подбор(Команда)
	ОбъектыКлиент.Подбор(ЭтаФорма);
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ОбъектыПриИзменении(Элемент)
	//Если Не Элемент.ТекущиеДанные = Неопределено И Не Элемент.ТекущиеДанные.Объект = Неопределено Тогда
	//	Элемент.ТекущиеДанные.Контакт = ПолучитьКонтактСервер(Элемент.ТекущиеДанные.Объект, Объект.ВидКИ);
	//	Элемент.ТекущиеДанные.Текст = ПолучитьПодсказкуСервер(Элемент.ТекущиеДанные.Объект, Объект.Шаблон);
	//КонецЕсли;
КонецПроцедуры

&НаСервере 
Функция ПолучитьКонтактСервер(ДО, ВидКИ)
	Возврат Автоинформирование.ПолучитьКонтакт(ДО, ВидКИ);
КонецФункции

&НаСервере 
Функция ПолучитьПодсказкуСервер(ДО, ВидКИ)
	Возврат Автоинформирование.ПолучитьПодсказку(ДО, ВидКИ);
КонецФункции


&НаКлиенте
Процедура ЗаполнитьДанные(Команда)
	ЗаполнитьДанныеНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеНаСервере()
	мОбъекты = Объект.Объекты.Выгрузить().ВыгрузитьКолонку("Объект");
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ДолговыеОбязательства.Ссылка КАК Объект,
	                      |	КонтрагентыТелефоны.Номер КАК НомерТелефона,
	                      |	ДолговыеОбязательства.Должник КАК Должник
	                      |ИЗ
	                      |	Справочник.ДолговыеОбязательства КАК ДолговыеОбязательства
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты.Телефоны КАК КонтрагентыТелефоны
	                      |		ПО ДолговыеОбязательства.Должник = КонтрагентыТелефоны.Ссылка
	                      |ГДЕ
	                      |	ДолговыеОбязательства.Ссылка В(&Объекты)
	                      |	И КонтрагентыТелефоны.ВидТелефона = &ВидНомера");
	Запрос.УстановитьПараметр("Объекты", мОбъекты);
	Запрос.УстановитьПараметр("ВидНомера", Объект.ВидТелефона);
	
	Результат = Запрос.Выполнить().Выбрать();
	
	Объект.Сообщения.Очистить();
	Пока Результат.Следующий() Цикл
		СтрСообщение = Объект.Сообщения.Добавить();
		СтрСообщение.Объект = Результат.Объект;
		СтрСообщение.Должник = Результат.Должник;
		СтрСообщение.НомерТелефона = Рассылка.ОчиститьФорматНомера(Результат.НомерТелефона);
		СтрСообщение.ТекстСообщения = Автоинформирование.ПолучитьПодсказку(Результат.Объект, Объект.Шаблон);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура смсОтправитьСообщенияНаСервере()
//	++КазанцевЯА
//	Если ЗначениеЗаполнено(Объект.ДатаВыполнения) Тогда
//	--КазанцевЯА
		Если Объект.Сообщения.Количество() = 0 Тогда 
			Сообщить("Сначала заполните сообщения для рассылки!");
		Иначе 
			//++КазанцевЯА
			ЧасовойПоясЗвонка = Константы.ЧасовойПоясЗвонка.Получить();
			Для Каждого Строка Из Объект.Сообщения Цикл 			
				Если ЗначениеЗаполнено(ЧасовойПоясЗвонка) Тогда
					Если ПустаяСтрока(Строка.НомерТелефона) ИЛИ ПустаяСтрока(Строка.ТекстСообщения) ИЛИ ПустаяСтрока(Строка.Должник.ЧасовойПояс)Тогда
						Продолжить;
					КонецЕсли;
				Иначе
					Если ПустаяСтрока(Строка.НомерТелефона) ИЛИ ПустаяСтрока(Строка.ТекстСообщения) Тогда
						Продолжить;
					КонецЕсли;	
				КонецЕсли;
				Строка.СообщениеSMS = СоздатьСообщениеSMS(Объект.ДатаВыполнения,Строка,Объект.Автор);
				//GUID = Строка(Новый УникальныйИдентификатор);
				//НаборЗаписей = РегистрыСведений.ОтложенныеСообщенияСМС.СоздатьНаборЗаписей();
				//НаборЗаписей.Отбор.GUID.Установить(GUID);
				//НаборЗаписей.Прочитать();
				//Если НаборЗаписей.Количество() = 0 Тогда
				//	Запись = НаборЗаписей.Добавить();
				//	Запись.GUID = GUID;
				//	Запись.Дата = Объект.ДатаВыполнения;
				//	Запись.НомерТелефона = Строка.НомерТелефона;
				//	Запись.Объект = Строка.Должник;
				//	Запись.ТекстСообщения = Строка.ТекстСообщения;
				//	НаборЗаписей.Записать(Истина);
				//КонецЕсли;						
				//--КазанцевЯА
			КонецЦикла;
			Сообщить("Задания для рассылки сформированы!");
			КонецЕсли;
	//	КонецЕсли;
	//Иначе
	//	СписокСообщений = Новый Массив;
	//	Для Каждого Строка Из Объект.Сообщения Цикл
	//		Если ПустаяСтрока(Строка.НомерТелефона) Тогда
	//			Продолжить;
	//		ИначеЕсли ПустаяСтрока(Строка.ТекстСообщения) Тогда
	//			Продолжить;
	//		КонецЕсли;
	//		//++КазанцевЯА
	//		//Структура = Новый Структура;
	//		//Структура.Вставить("GUID",				Строка(Новый УникальныйИдентификатор));
	//		//Структура.Вставить("Объект",			Строка.Должник);
	//		//Структура.Вставить("НомерПолучателя",	Строка.НомерТелефона);
	//		//Структура.Вставить("КодОшибки",			0);
	//		//Структура.Вставить("ТекстСообщения",	Строка.ТекстСообщения);
	//		//СписокСообщений.Добавить(Структура); 
	//		Строка.СообщениеSMS = СоздатьСообщениеSMS(Объект.ДатаВыполнения,Строка,Объект.Автор);
			//--КазанцевЯА
		//КонецЦикла;	
		//++КазанцевЯА
		//SMS4B.ОтправитьСписокСМС(СписокСообщений);
		//--КазанцевЯА
	//КонецЕсли;
	ЭтотОбъект.Записать();
КонецПроцедуры

&НаСервере
Функция СоздатьСообщениеSMS(ДатаВыполнения,Строка,Автор)

	СообщениеSMS = Документы.СообщениеSMS.СоздатьДокумент();
	Структура = КонтрольСобытий.КонтрольСМС230ФЗ(Строка.Должник,ДатаВыполнения);
	Если Структура.Свойство("Ошибка") Тогда
		СообщениеSMS.Состояние = Перечисления.СостоянияДокументаСообщениеSMS.Черновик;
		СообщениеSMS.ПереносСрокаПоФЗ230 = "Сообщение не отправлено по причине:" + Структура.Ошибка;
	Иначе
		СообщениеSMS.Состояние = Перечисления.СостоянияДокументаСообщениеSMS.Исходящее;	
		СообщениеSMS.ПереносСрокаПоФЗ230 = "Дата отправки:" + Структура.ДатаКогдаОтправить + ", " + "Не отправлять после:" + Структура.ДатаАктуальностиОтправки; 
		СообщениеSMS.ДатаКогдаОтправить = Структура.ДатаКогдаОтправить;
		СообщениеSMS.ДатаАктуальностиОтправки = Структура.ДатаАктуальностиОтправки;	
	КонецЕсли;
	СообщениеSMS.Дата = ТекущаяДатаСеанса();
	СообщениеSMS.ТекстСообщения = Строка.ТекстСообщения;
	СообщениеSMS.Автор = Автор;
	СообщениеSMS.Ответственный = Автор;
	СтрАдресат = СообщениеSMS.Адресаты.Добавить();
	СтрАдресат.Контакт =  Строка.Должник;
	СтрАдресат.ПредставлениеКонтакта = Строка.Должник.Наименование;
	КонтактнаяИнформация = УправлениеКонтактнойИнформациейСлужебныйВызовСервера.ПривестиКонтактнуюИнформациюXML(
			Новый Структура("ЗначенияПолей, Представление, ВидКонтактнойИнформации", "", Строка.НомерТелефона, Перечисления.ТипыКонтактнойИнформации.Телефон));
	XMLДанные = КонтактнаяИнформация.ДанныеXML;
	Если ЗначениеЗаполнено(XMLДанные) Тогда
		СтрАдресат.НомерДляОтправки = УправлениеКонтактнойИнформациейСлужебныйВызовСервера.СтрокаСоставаКонтактнойИнформации(XMLДанные);
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(СтрАдресат.НомерДляОтправки) Тогда
		СтрАдресат.НомерДляОтправки = СокрЛП(Строка.НомерТелефона);
	КонецЕсли;	
	СтрАдресат.КакСвязаться = Строка.НомерТелефона;
	СтрАдресат.СостояниеСообщения = Перечисления.СостоянияСообщенияSMS.Исходящее;
	СообщениеSMS.Записать();
	
	Возврат СообщениеSMS.Ссылка;

КонецФункции // СоздатьСообщениеSMS()


&НаКлиенте
Процедура смсОтправитьСообщения(Команда)
	смсОтправитьСообщенияНаСервере();
КонецПроцедуры


&НаКлиенте
Процедура ПодборИзФайла(Команда)
	ОбъектыКлиент.ПодборИзДОК(ЭтаФорма);
КонецПроцедуры


&НаКлиенте
Процедура ПодборПоНастройкам(Команда)
	ОбъектыКлиент.ПодборПоНастройкам(ЭтаФорма);
КонецПроцедуры

