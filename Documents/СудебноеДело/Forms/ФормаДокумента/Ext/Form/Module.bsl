
&НаКлиенте
Процедура Отдельный_ИД_По_ГППриИзменении(Элемент)
	УправлениеФормой();
КонецПроцедуры


&НаСервере
Процедура УправлениеФормой()
	Если Объект.Проведен Тогда
		Элементы.ГруппаИск.ТолькоПросмотр = Истина;
	Иначе
		Элементы.ГруппаИск.ТолькоПросмотр = Ложь;
	КонецЕсли;
	
	Элементы.ГруппаРешение.Видимость = (Объект.Решение = Перечисления.СтатусыСудебногоДела.Удовлетворено Или Объект.Решение = Перечисления.СтатусыСудебногоДела.УдовлетвореноЧастично);
	
	Элементы.ВидТребований.Видимость = НЕ (Объект.ВидИска = Перечисления.ВидыИска.Индексация208);
	Элементы.ВидТребований.ТолькоПросмотр = (Объект.ВидИска = Перечисления.ВидыИска.ВзысканиеПроцентов395 ИЛИ Объект.Видиска = Перечисления.ВидыИска.ОбращениеВзыскания ИЛИ Объект.ВидИска = Перечисления.ВидыИска.Неизвестно); 
	
	
	Элементы.ГруппаРасчет395.Видимость = (Объект.ВидИска = Перечисления.ВидыИска.ВзысканиеПроцентов395); 
	Элементы.РешениеНачисленныеПроценты395.Видимость = (Объект.ВидИска = Перечисления.ВидыИска.ВзысканиеПроцентов395);
	
	Элементы.ГруппаРасчет208.Видимость 							= (Объект.ВидИска = Перечисления.ВидыИска.Индексация208);	
	Элементы.РешениеСуммаИндексации.Видимость 					= (Объект.ВидИска = Перечисления.ВидыИска.Индексация208);
	
	Элементы.ГруппаИсковыеТребования.Видимость 					= (Объект.ВидИска = Перечисления.ВидыИска.ВзысканиеПросроченнойЗадолженности ИЛИ Объект.ВидИска = Перечисления.ВидыИска.Правопреемство ИЛИ Объект.ВидИска = Перечисления.ВидыИска.Неизвестно);
	Элементы.ГруппаРешениеИсковыеТребования.Видимость 			= (Объект.ВидИска = Перечисления.ВидыИска.ВзысканиеПросроченнойЗадолженности ИЛИ Объект.ВидИска = Перечисления.ВидыИска.Правопреемство ИЛИ Объект.ВидИска = Перечисления.ВидыИска.Неизвестно);
	
	Элементы.СудебноеРешение.Видимость 							= (Объект.ВидИска = Перечисления.ВидыИска.ВзысканиеПроцентов395 ИЛИ Объект.ВидИска = Перечисления.ВидыИска.Индексация208);
	Элементы.СудебноеРешениеСуммаРешения.Видимость 				= (Объект.ВидИска = Перечисления.ВидыИска.ВзысканиеПроцентов395 ИЛИ Объект.ВидИска = Перечисления.ВидыИска.Индексация208);	
	Элементы.ГруппаГоспошлина.Видимость 						= (Объект.ВидИска = Перечисления.ВидыИска.ВзысканиеПросроченнойЗадолженности ИЛИ Объект.ВидИска = Перечисления.ВидыИска.Правопреемство ИЛИ Объект.ВидИска = Перечисления.ВидыИска.ВзысканиеПроцентов395 ИЛИ Объект.ВидИска = Перечисления.ВидыИска.ОбращениеВзыскания ИЛИ Объект.ВидИска = Перечисления.ВидыИска.Неизвестно);	
	Элементы.ГруппаГоспошлинаКНачислению.Видимость 				= Объект.ДоначислятьГоспошлину;
	Элементы.ДоначислятьГоспошлину.Видимость 					= ((Объект.ВидИска = Перечисления.ВидыИска.ВзысканиеПросроченнойЗадолженности ИЛИ Объект.ВидИска = Перечисления.ВидыИска.Правопреемство) И Объект.ВидТребований = Перечисления.ВидыИсковыхТребований.ИсковоеЗаявление);	
	
	Элементы.Отдельный_ИД_По_ГП.Видимость						= (Объект.ВидИска = Перечисления.ВидыИска.ВзысканиеПросроченнойЗадолженности) ИЛИ (Объект.ВидИска = Перечисления.ВидыИска.ВзысканиеПроцентов395) ИЛИ (Объект.ВидИска = Перечисления.ВидыИска.ОбращениеВзыскания) ИЛИ (Объект.ВидИска = Перечисления.ВидыИска.Неизвестно);
	Элементы.ИскСтавкаРефинансирования.Видимость 				= Объект.ВидИска = Перечисления.ВидыИска.ВзысканиеПроцентов395;
	Элементы.СтавкаРефинансирования.Видимость					= (Объект.ВидИска = Перечисления.ВидыИска.ВзысканиеПроцентов395) И Объект.ИскСтавкаРефинансирования;
	
	Если Не Объект.ИскСтавкаРефинансирования Тогда
		Объект.РешениеСтавкаРефинансирования = Ложь;
	КонецЕсли;
	

	
	Если Объект.ВидИска = Перечисления.ВидыИска.ВзысканиеПросроченнойЗадолженности ИЛИ Объект.ВидИска = Перечисления.ВидыИска.Правопреемство ИЛИ (Объект.ВидИска = Перечисления.ВидыИска.Неизвестно) Тогда
		Элементы.ЦенаИска.Видимость = Истина;
		Элементы.РешениеГоспошлина.Видимость = Истина;
		
		Элементы.ЧастиРешенияСуммаОсновнойДолг.Видимость 	= Истина;
		Элементы.ЧастиРешенияСуммаПроценты.Видимость 		= Истина;
		Элементы.ЧастиРешенияСуммаШтрафы.Видимость			= Истина;
		Элементы.ЧастиРешенияСуммаПени.Видимость			= Истина;
		Элементы.ЧастиРешенияСуммаГоспошлина.Видимость		= Истина;
		
	ИначеЕсли Объект.ВидИска = Перечисления.ВидыИска.Индексация208 Тогда
		Объект.ВидТребований = Перечисления.ВидыИсковыхТребований.ИсковоеЗаявление;		
		Элементы.ЦенаИска.Видимость = Ложь;
		Элементы.РешениеГоспошлина.Видимость = Ложь;
		
		Элементы.ЧастиРешенияСуммаОсновнойДолг.Видимость 	= Ложь;
		Элементы.ЧастиРешенияСуммаПроценты.Видимость 		= Истина;
		Элементы.ЧастиРешенияСуммаШтрафы.Видимость			= Ложь;
		Элементы.ЧастиРешенияСуммаПени.Видимость			= Ложь;		
		Элементы.ЧастиРешенияСуммаГоспошлина.Видимость		= Ложь;
		
	ИначеЕсли Объект.ВидИска = Перечисления.ВидыИска.ВзысканиеПроцентов395 Тогда
		Объект.ВидТребований = Перечисления.ВидыИсковыхТребований.ИсковоеЗаявление;		
		Элементы.ЦенаИска.Видимость = Ложь;
		Элементы.РешениеГоспошлина.Видимость = Истина;
		
		Элементы.ЧастиРешенияСуммаОсновнойДолг.Видимость 	= Ложь;
		Элементы.ЧастиРешенияСуммаПроценты.Видимость 		= Истина;
		Элементы.ЧастиРешенияСуммаШтрафы.Видимость			= Ложь;
		Элементы.ЧастиРешенияСуммаПени.Видимость			= Ложь;		
		Элементы.ЧастиРешенияСуммаГоспошлина.Видимость		= Истина;
		
	ИначеЕсли Объект.ВидИска = Перечисления.ВидыИска.ОбращениеВзыскания Тогда
		Объект.ВидТребований = Перечисления.ВидыИсковыхТребований.ИсковоеЗаявление;		
		Элементы.ЦенаИска.Видимость = Истина;
		Элементы.РешениеГоспошлина.Видимость = Истина;
		
		Элементы.ЧастиРешенияСуммаОсновнойДолг.Видимость 	= Ложь;
		Элементы.ЧастиРешенияСуммаПроценты.Видимость 		= Ложь;
		Элементы.ЧастиРешенияСуммаШтрафы.Видимость			= Ложь;
		Элементы.ЧастиРешенияСуммаПени.Видимость			= Ложь;		
		Элементы.ЧастиРешенияСуммаГоспошлина.Видимость		= Истина;
		
	Иначе		
		Элементы.ЦенаИска.Видимость = Истина;
				
	КонецЕсли;
		
	Если (Объект.Решение = Перечисления.СтатусыСудебногоДела.Удовлетворено ИЛИ Объект.Решение = Перечисления.СтатусыСудебногоДела.УдовлетвореноЧастично) Тогда
		Элементы.ДатаВступленияВЗаконнуюСилу.Видимость = Истина;
		Элементы.ГруппаЧастиРешения.Видимость = Истина;
		Элементы.ГруппаИсполнительныеДокументы.Видимость = Истина;
	Иначе
		Элементы.ДатаВступленияВЗаконнуюСилу.Видимость = Истина;
		Элементы.ГруппаЧастиРешения.Видимость = Истина;
		Элементы.ГруппаИсполнительныеДокументы.Видимость = Истина;
		
		Объект.ДатаВступленияВЗаконнуюСилу = Дата(1,1,1);
	КонецЕсли;
	
	ЧислоОтветчиков = Объект.ответчики.Количество();
	Если ЧислоОтветчиков > 1 Тогда
		Элементы.СолидарноеВзысканиеГоспошлины.Видимость = Истина;
		Элементы.СолидарноеВзысканиеЗадолженности.Видимость = Истина;
	Иначе
		Элементы.СолидарноеВзысканиеГоспошлины.Видимость = Ложь;
		Элементы.СолидарноеВзысканиеЗадолженности.Видимость = Ложь;		
	КонецЕсли;
	
	Если Объект.ВидТребований = Перечисления.ВидыИсковыхТребований.СудебныйПриказ Тогда
		Объект.Отдельный_ИД_По_ГП = Ложь;
		Элементы.Отдельный_ИД_По_ГП.Доступность = Ложь;
	Иначе
		Элементы.Отдельный_ИД_По_ГП.Доступность = Истина;		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВидИскаПриИзменении(Элемент)
	Объект.Решение = ПредопределенноеЗначение("Перечисление.СтатусыСудебногоДела.ПустаяСсылка");
	РешениеПриИзмененииНаСервере();
	ЗаполнитьСуммыРешенияНаСервере();	
	
	Объект.ИскОсновнойДолг = 0;
	Объект.ИскПроценты = 0;
	Объект.ИскШтрафы = 0;
	Объект.ИскПени = 0;
	Объект.ЦенаИска = 0;
	Объект.ИскСуммаИндексации208 = 0;
	Объект.ИскНачисленныеПроценты395 = 0;
	Объект.ИскГоспошлина = 0;
	Объект.ГоспошлинаКНачислению = 0;
	Объект.ОснованиеДоначисления = ПредопределенноеЗначение("Документ.СудебноеДело.ПустаяСсылка");
	Объект.Расчет208 = ПредопределенноеЗНачение("Документ.РасчетИндексацииЗадолженности208.ПустаяСсылка");
	Объект.Расчет395 = ПредопределенноеЗначение("Документ.РасчетПроцентов395.ПустаяСсылка");
	
	
	Объект.РешениеОсновнойДолг = 0;
	Объект.РешениеПроценты = 0;
	Объект.РешениеШтрафы = 0;
	Объект.РешениеПени = 0;
	Объект.СуммаРешения = 0;
	Объект.РешениеСуммаИндексации208 = 0;
	Объект.РешениеНачисленныеПроценты395 = 0;
	Объект.РешениеГоспошлина = 0;	
	
	Объект.ЧастиРешения.Очистить();
	Объект.ИД.Очистить();
	
	УправлениеФормой();
КонецПроцедуры

&НаКлиенте
Процедура СуммаИскаПриИзмененении(Элемент)
	Объект.ЦенаИска = Объект.ИскОсновнойДолг + Объект.ИскПроценты + Объект.ИскШтрафы + Объект.ИскПени;
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Объект.Ссылка.Пустая() Тогда
		Пользователи.ЗаполнитьРеквизитыПоДаннымПользователя(Объект);
		Объект.РежимЗагрузки = Перечисления.РежимыЗагрузкиСудебныхДел.Обычный;
	КонецЕсли;
	//УправлениеФормой();
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	УправлениеФормой();
	Оповестить("ОбновитьСуммыЗадолженности");
	Оповестить("ОбновитьИсковоеПроизводство");
	Оповестить("ЗаписьСД");
КонецПроцедуры


&НаСервере
Процедура РассчитатьГоспошлинуНаСервере()
	ЗначениеОбъект = РеквизитФормыВЗначение("Объект");
	ЗначениеОбъект.РассчитатьГоспошлину();
	ЗначениеВРеквизитФормы(ЗначениеОбъект, "Объект");
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьГоспошлину(Команда)
	РассчитатьГоспошлинуНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ДоначислятьГоспошлинуПриИзменении(Элемент)
	//ПересчитатьГПКНачислению();
	УправлениеФормой();
КонецПроцедуры

&НаКлиенте
Процедура ОснованиеДоначисленияПриИзменении(Элемент)
	ПересчитатьГПКНачислению();
КонецПроцедуры

&НаСервере
Процедура ПересчитатьГПКНачислению()
	Если ЗначениеЗаполнено(Объект.ОснованиеДоначисления) Тогда
		Объект.ГоспошлинаКНачислению = Объект.ИскГоспошлина - Объект.ОснованиеДоначисления.ИскГоспошлина;
	Иначе
		Объект.ГоспошлинаКНачислению = Объект.ИскГоспошлина;
	КонецЕсли;
КонецПроцедуры


&НаСервере
Процедура РешениеПриИзмененииНаСервере()
	УправлениеФормой();
		
	Если Объект.Решение = Перечисления.СтатусыСудебногоДела.Удовлетворено Или Объект.Решение = Перечисления.СтатусыСудебногоДела.УдовлетвореноЧастично Тогда
		Объект.РешениеОсновнойДолг = Объект.ИскОсновнойДолг;
		Объект.РешениеПроценты = Объект.ИскПроценты;
		Объект.РешениеШтрафы = Объект.ИскШтрафы;
		Объект.РешениеПени = Объект.ИскПени;
		Объект.РешениеГоспошлина = Объект.ИскГоспошлина;
		Объект.РешениеСуммаИндексации208 = Объект.ИскСуммаИндексации208;
		Объект.РешениеНачисленныеПроценты395 = Объект.ИскНачисленныеПроценты395;
	Иначе
		Объект.РешениеОсновнойДолг = 0;
		Объект.РешениеПроценты = 0;
		Объект.РешениеШтрафы = 0;
		Объект.РешениеПени = 0;
		Объект.РешениеГоспошлина = 0;
		Объект.РешениеСуммаИндексации208 = 0;
		Объект.РешениеНачисленныеПроценты395 = 0;
		
	КонецЕсли;	
КонецПроцедуры


&НаКлиенте
Процедура РешениеПриИзменении(Элемент)
	РешениеПриИзмененииНаСервере();
	ЗаполнитьСуммыРешенияНаСервере();
КонецПроцедуры


&НаКлиенте
Процедура Рассчитать208(Команда)
	Форма = ПолучитьФорму("Документ.РасчетИндексацииЗадолженности208.Форма.Форма",,ЭтаФорма);
	Форма.Объект.Займ = Объект.Займ;
	Форма.Объект.ДатаРасчета = Объект.ДатаИска;
	Форма.Объект.КапитализацияПроцентов = Истина;
	Форма.Объект.ПереноситьОплатыНаНачалоМесяца = Истина;
	Форма.Объект.ИсключитьКрайниеМесяцы = Истина;
	Форма.Объект.ДатаРешения = ОбъектыСервер.РазыменоватьСсылку(Объект.СудебноеРешение, "ДатаРешения");
	Форма.Объект.СуммаЗадолженности = ОбъектыСервер.РазыменоватьСсылку(Объект.СудебноеРешение, "СуммаРешения"); 
	Форма.Объект.СудебноеРешение = Объект.СудебноеРешение;
	Для Каждого Платеж из ПолучитьИсториюПлатежей(Объект.Займ) Цикл
		стр = Форма.Объект.ИсторияПлатежей.Добавить();
		ЗаполнитьЗначенияСвойств(стр,Платеж);
	КонецЦикла;	

	Форма.Открыть();
КонецПроцедуры


&НаКлиенте
Процедура Рассчитать395(Команда)
	Форма = ПолучитьФорму("Документ.РасчетПроцентов395.Форма.Форма",,ЭтаФорма);
	Форма.Объект.Займ = Объект.Займ;
	Форма.Объект.НачалоПериода = ОбъектыСервер.РазыменоватьСсылку(Объект.СудебноеРешение, "ДатаРешения");
	Форма.Объект.СуммаЗадолженности = ОбъектыСервер.РазыменоватьСсылку(Объект.СудебноеРешение, "СуммаРешения");
	Форма.Объект.КонецПериода = Объект.ДатаИска;
	Форма.Объект.СудебноеРешение = Объект.СудебноеРешение;
	Для Каждого Платеж из ПолучитьИсториюПлатежей(Объект.СудебноеРешение) Цикл
		стр = Форма.Объект.ИсторияПлатежей.Добавить();
		ЗаполнитьЗначенияСвойств(стр,Платеж);
	КонецЦикла;
	
	Форма.Открыть();
КонецПроцедуры

&НаСервере
Функция ПолучитьИсториюПлатежей(Решение)
	//Запрос = Новый Запрос("ВЫБРАТЬ
	//                      |	ИсторияПлатежей.Период КАК ДатаПлатежа,
	//                      |	ИсторияПлатежей.Задолженность КАК СуммаПлатежа,
	//                      |	ЗНАЧЕНИЕ(Перечисление.ВидДвиженияЗадолженности.Списание) КАК ВидДвижения
	//                      |ИЗ
	//                      |	РегистрНакопления.ИсторияПлатежей КАК ИсторияПлатежей
	//                      |ГДЕ
	//                      |	ИсторияПлатежей.Объект = &Объект
	//                      |
	//                      |УПОРЯДОЧИТЬ ПО
	//                      |	ДатаПлатежа");
	//Запрос.УстановитьПараметр("Объект", Займ);
	//Возврат Запрос.Выполнить().Выгрузить();	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	СУММА(ЗадолженностьПоСудебнымРешениям.Сумма) КАК СуммаПлатежа,
	                      |	ЗадолженностьПоСудебнымРешениям.Период КАК ДатаПлатежа,
	                      |	ЗадолженностьПоСудебнымРешениям.ВидДвиженияЗадолженности КАК ВидДвижения
	                      |ИЗ
	                      |	РегистрНакопления.ЗадолженностьПоСудебнымРешениям КАК ЗадолженностьПоСудебнымРешениям
	                      |ГДЕ
	                      |	ЗадолженностьПоСудебнымРешениям.Решение = &Решение
	                      |	И ЗадолженностьПоСудебнымРешениям.ВидДвиженияЗадолженности = &ВидДвиженияЗадолженности
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	ЗадолженностьПоСудебнымРешениям.Период,
	                      |	ЗадолженностьПоСудебнымРешениям.ВидДвиженияЗадолженности");
	Запрос.УстановитьПараметр("Решение", Решение);
	Запрос.УстановитьПараметр("ВидДвиженияЗадолженности", Перечисления.ВидДвиженияЗадолженности.Оплата); 
	Возврат УдалитьОбщегоНазначения.ТаблицаЗначенийВМассив(Запрос.Выполнить().Выгрузить());	
КонецФункции

&НаСервере
Процедура Расчет208ПриИзмененииНаСервере()
	Объект.ИскСуммаИндексации208 = Объект.Расчет208.СуммаИндексации;
КонецПроцедуры

&НаКлиенте
Процедура Расчет208ПриИзменении(Элемент)
	Расчет208ПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура Расчет395ПриИзмененииНаСервере()
	Объект.ИскНачисленныеПроценты395 = Объект.Расчет395.НачисленныеПроценты;
КонецПроцедуры

&НаКлиенте
Процедура Расчет395ПриИзменении(Элемент)
	Расчет395ПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоЦессииНаСервере()
	//Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
	//                      |	ЗадолженностьПоОбъектам.Регистратор КАК Регистратор,
	//                      |	ЗадолженностьПоОбъектам.Объект КАК Объект,
	//                      |	ЗадолженностьПоОбъектам.СуммаДО КАК СуммаДО,
	//                      |	ЗадолженностьПоОбъектам.ОсновнойДолгДО КАК ОсновнойДолгДО,
	//                      |	ЗадолженностьПоОбъектам.ПроцентыДО КАК ПроцентыДО,
	//                      |	ЗадолженностьПоОбъектам.ШтрафыДО КАК ШтрафыДО,
	//                      |	ЗадолженностьПоОбъектам.ПениДО КАК ПениДО,
	//                      |	ЗадолженностьПоОбъектам.Период КАК Период
	//                      |ИЗ
	//                      |	РегистрНакопления.ЗадолженностьПоОбъектам КАК ЗадолженностьПоОбъектам
	//                      |ГДЕ
	//                      |	ЗадолженностьПоОбъектам.Объект = &Объект
	//                      |	И ТИПЗНАЧЕНИЯ(ЗадолженностьПоОбъектам.Регистратор) = ТИП(Документ.АктуализацияЗадолженности)
	//                      |
	//                      |УПОРЯДОЧИТЬ ПО
	//                      |	Период УБЫВ");
	//Запрос.УстановитьПараметр("Объект", Объект.Займ);
	//Результат = Запрос.Выполнить().Выбрать();
	//Если Результат.Следующий() Тогда
	//	Объект.ИскОсновнойДолг = Результат.ОсновнойДолгДО;
	//	Объект.ИскПроценты = Результат.ПроцентыДО;
	//	Объект.ИскШтрафы = Результат.ШтрафыДО;
	//	Объект.ИскПени = Результат.ПениДО;
	//	Объект.ЦенаИска = Результат.СуммаДО;
	//Иначе
	//	Объект.ИскОсновнойДолг = 0;
	//	Объект.ИскПроценты = 0;
	//	Объект.ИскШтрафы = 0;
	//	Объект.ИскПени = 0;
	//	Объект.ЦенаИска = 0;		
	//КонецЕсли;
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ЕСТЬNULL(ЗадолженностьПоОбъектамВнесудебнаяОстатки.ОсновнойДолгРеглОстаток, 0) КАК ОсновнойДолг,
	                      |	ЕСТЬNULL(ЗадолженностьПоОбъектамВнесудебнаяОстатки.ПроцентыРеглОстаток, 0) КАК Проценты,
	                      |	ЕСТЬNULL(ЗадолженностьПоОбъектамВнесудебнаяОстатки.ШтрафыРеглОстаток, 0) КАК Штрафы,
	                      |	ЕСТЬNULL(ЗадолженностьПоОбъектамВнесудебнаяОстатки.ПениРеглОстаток, 0) КАК Пени,
	                      |	-ЕСТЬNULL(ЗадолженностьПоОбъектамВнесудебнаяОстатки.Составляющая8РеглОстаток, 0) КАК Переплата,
	                      |	ЕСТЬNULL(ЗадолженностьПоОбъектамВнесудебнаяОстатки.СуммаДООстаток, 0) КАК Итого
	                      |ИЗ
	                      |	Справочник.ДолговыеОбязательства КАК ДолговыеОбязательства
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗадолженностьПоОбъектамВнесудебная.Остатки КАК ЗадолженностьПоОбъектамВнесудебнаяОстатки
	                      |		ПО (ЗадолженностьПоОбъектамВнесудебнаяОстатки.Объект = ДолговыеОбязательства.Ссылка)
	                      |ГДЕ
	                      |	ДолговыеОбязательства.Ссылка = &Объект");
	Запрос.УстановитьПараметр("Объект", Объект.Займ);
	Результат = Запрос.Выполнить().Выбрать();
	Результат.Следующий();
	Объект.ИскОсновнойДолг 	= Результат.ОсновнойДолг;
	Объект.ИскПроценты 		= Результат.Проценты;
	Объект.ИскШтрафы		= Результат.Штрафы;
	Объект.ИскПени 			= Результат.Пени;
	Объект.ЦенаИска			= Результат.Итого;

	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоЦессии(Команда)
	ЗаполнитьПоЦессииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоГрафику(Команда)
	Форма = ПолучитьФорму("Документ.РасчетИсковыхТребований.Форма.Форма",,ЭтаФорма);
	Форма.Объект.Займ = Объект.Займ;
	Форма.Объект.ДатаРасчета = Объект.ДатаИска;
	//Форма.Объект.НачалоПериода = ОбъектыСервер.РазыменоватьСсылку(Объект.СудебноеРешение, "ДатаРешения");
	//Форма.Объект.СуммаЗадолженности = ОбъектыСервер.РазыменоватьСсылку(Объект.СудебноеРешение, "СуммаРешения");
	//Форма.Объект.КонецПериода = Объект.ДатаИска;
	//Форма.Объект.СудебноеРешение = Объект.СудебноеРешение;
	//Для Каждого Платеж из ПолучитьИсториюПлатежей(Объект.Займ) Цикл
	//	стр = Форма.Объект.ИсторияПлатежей.Добавить();
	//	ЗаполнитьЗначенияСвойств(стр,Платеж);
	//КонецЦикла;
	
	Форма.Открыть();
КонецПроцедуры

&НаСервере
Процедура РасчетИсковыхТребованийПриИзмененииНаСервере()

	Объект.ИскОсновнойДолг = Объект.РасчетИсковыхТребований.РезультатОсновнойДолг;
	Объект.ИскПроценты = Объект.РасчетИсковыхТребований.РезультатПросроченныеПроценты + Объект.РасчетИсковыхТребований.РезультатПроценты;
	Объект.ИскШтрафы = Объект.РасчетИсковыхТребований.РезультатШтрафы;
	Объект.ИскПени = Объект.РасчетИсковыхТребований.РезультатПени;
	Объект.ЦенаИска = Объект.РасчетИсковыхТребований.РезультатКУплате;
КонецПроцедуры

&НаКлиенте
Процедура РасчетИсковыхТребованийПриИзменении(Элемент)
	РасчетИсковыхТребованийПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПодсудностьНаСервере()
	ДопРекв = Константы.СудебныйУчастокОбъекта.Получить();
	Объект.Суд = ОбъектыСервер.ПолучитьЗначениеСвойства(Объект.Займ, ДопРекв.Код);
	//Объект.РОСП = ОбъектыСервер.ПолучитьЗначениеСвойства(Объект.Займ, "0063     ");
	//Объект.Пристав = ОбъектыСервер.ПолучитьЗначениеСвойства(Объект.Займ, "0065     ");
	//Запрос = Новый Запрос("ВЫБРАТЬ
	//                      |	ФССП_СлужбыСудебныхПриставов.Ссылка КАК Ссылка
	//                      |ИЗ
	//                      |	Справочник.ФССП_СлужбыСудебныхПриставов КАК ФССП_СлужбыСудебныхПриставов
	//                      |ГДЕ
	//                      |	ФССП_СлужбыСудебныхПриставов.Родитель = &Родитель
	//                      |	И ФССП_СлужбыСудебныхПриставов.КодТерриториальногоАгенства = ""0""");
	//Запрос.УстановитьПараметр("Родитель", Объект.РОСП.Родитель);
	//Результат = Запрос.Выполнить().Выбрать();
	//Если Результат.Следующий() Тогда
	//	Объект.УФССП = Результат.Ссылка;
	//Иначе
	//	Объект.УФССП = Справочники.ФССП_СлужбыСудебныхПриставов.ПустаяСсылка();
	//КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПодсудность(Команда)
	ЗаполнитьПодсудностьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ВидТребованийПриИзменении(Элемент)
	УправлениеФормой();
КонецПроцедуры

&НаКлиенте
Процедура ВидОтветчикаПриИзменении(Элемент)
	Элементы.Ответчик.РежимВыбораИзСписка = Истина;
	Элементы.Ответчик.СписокВыбора.Очистить();
	СписокОтветчиков = СписокОтветчиков(Объект.Займ, Объект.ВидОтветчика);
	Для Каждого Ответчик Из СписокОтветчиков Цикл
		Элементы.Ответчик.СписокВыбора.Добавить(Ответчик);
	КонецЦикла;
	Если СписокОтветчиков.Количество() = 1 Тогда
		Объект.Ответчик = СписокОтветчиков[0];
	Иначе
		Объект.Ответчик = ПредопределенноеЗначение("Справочник.Контрагенты.ПустаяСсылка");
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция СписокОтветчиков(Займ, ВидОтветчика)
	СписокОтветчиков = Новый Массив;
	Если ВидОтветчика = Перечисления.ВидыОтветчиков.Поручитель Тогда
		Запрос = Новый Запрос("ВЫБРАТЬ
		                      |	Поручительства.Поручитель КАК Поручитель
		                      |ИЗ
		                      |	РегистрСведений.Поручительства КАК Поручительства
		                      |ГДЕ
		                      |	Поручительства.ДолговоеОбязательство = &ДолговоеОбязательство");
		Запрос.УстановитьПараметр("ДолговоеОбязательство", Займ);
		Результат = Запрос.Выполнить().Выбрать();
		Пока Результат.Следующий() Цикл
			СписокОтветчиков.Добавить(Результат.Поручитель);
		КонецЦикла;
	ИначеЕсли ВидОтветчика = Перечисления.ВидыОтветчиков.Наследник Тогда
		Запрос = Новый Запрос("ВЫБРАТЬ
		                      |	Наследники.Наследник КАК Наследник
		                      |ИЗ
		                      |	РегистрСведений.Наследники КАК Наследники
		                      |ГДЕ
		                      |	Наследники.ДолговоеОбязательство = &ДолговоеОбязательство");
		Запрос.УстановитьПараметр("ДолговоеОбязательство", Займ);
		Результат = Запрос.Выполнить().Выбрать();
		Пока Результат.Следующий() Цикл
			СписокОтветчиков.Добавить(Результат.Наследник);
		КонецЦикла;			
	ИначеЕсли ВидОтветчика = Перечисления.ВидыОтветчиков.Должник Тогда
		СписокОтветчиков.Добавить(Займ.Должник);
	Иначе
	КонецЕсли;
	Возврат СписокОтветчиков;
КонецФункции

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УправлениеФормой();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСуммыРешенияНаСервере()
	ЗначениеОбъект = РеквизитФормыВЗначение("Объект");
	ЗначениеОбъект.ЗаполнитьСуммыРешения();
	ЗначениеВРеквизитФормы(ЗначениеОбъект, "Объект");
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСуммыРешения(Элемент)
	ЗаполнитьСуммыРешенияНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура СуммаРешенияПриИзмененении(Элемент)
	ЗаполнитьСуммыРешенияНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЧастиРешенияНаСервере()
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ДокументОбъект.ЗаполнитьЧастиРешения();
	ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьЧастиРешения(Команда)
	ЭтаФорма.Модифицированность = Истина;
	ЗаполнитьЧастиРешенияНаСервере(); 
	ЭтаФорма.ТекущийЭлемент = ЭтаФорма.Элементы.ЧастиРешения;
КонецПроцедуры

&НаКлиенте
Процедура СоздатьИД(Команда)
	Если Элементы.ИД.ТекущиеДанные <> Неопределено Тогда
		Форма = ПолучитьФорму("Справочник.ИсполнительныеДокументы.Форма.ФормаЭлемента",Новый Структура("ПредметИсполнения", "Задолженность"),ЭтаФорма);
		Форма.Объект.Владелец = Объект.Займ;
		Форма.Объект.Должник = Элементы.ИД.ТекущиеДанные.Ответчик;
		ФИО = ОбъектыСервер.РазыменоватьСсылку(Элементы.ИД.ТекущиеДанные.Ответчик, "ФИО_Действующее");
		стр = Форма.Элементы.ОтветчикФИО.СписокВыбора.Добавить();
		стр.Значение = ФИО;
		стр.Представление = ФИО;
		Форма.Объект.ОтветчикФИО = ФИО;

		Форма.Объект.Взыскатель = Объект.Истец;
		
		Форма.Объект.ВидОтветчика = Элементы.ИД.ТекущиеДанные.ВидОтветчика;
		
		
		Форма.Объект.ТипИД = Элементы.ИД.ТекущиеДанные.ВидРешения;	
		
		Если Объект.ВидТребований = ПредопределенноеЗНачение("Перечисление.ВидыИсковыхТребований.СудебныйПриказ") Тогда
			Форма.Объект.СерияНомерИД = Объект.НомерДела;
			Форма.Объект.НомерДела = Объект.НомерДела;
			Форма.Объект.ДатаИД = Объект.ДатаРешения;
			Форма.Объект.ВидИД = ПредопределенноеЗначение("Справочник.ФССП_ТипыИсполнительныхДокументов.СудебныйПриказ");
		ИначеЕсли Объект.ВидТребований = ПредопределенноеЗначение("Перечисление.ВидыИсковыхТребований.ИсковоеЗаявление") Тогда
			Форма.Объект.ВидИД = ПредопределенноеЗНачение("Справочник.ФССП_ТипыИсполнительныхДокументов.ИсполнительныйЛист");
		КонецЕсли;
		Форма.Объект.КодИД = Форма.Объект.НомерДела + " " + Формат(Форма.Объект.ДатаИД, "ДФ='dd.MM.yyyy'") +  " " + ОбъектыСервер.РазыменоватьСсылку(Элементы.ИД.ТекущиеДанные.Ответчик, "КодКонтрагента");
		Форма.Объект.СудебноеРешение = Объект.Ссылка;
		Форма.Объект.ЧастьРешения = Элементы.ИД.ТекущиеДанные.ЧастьРешения;
		Форма.Объект.СтатусИД = ПредопределенноеЗначение("Справочник.СтатусыИсполнительногоДокумента.ВРаботе");
		
		Форма.Объект.РОСП = Объект.РОСП;
		
		Массив = РасчетЗадолженностиСудопроизводство.СписокРеквизитовДокументаСудебноеДело();
		Для Каждого стр из Массив Цикл
			Форма["СД_" + стр] = Объект[стр];
		КонецЦикла;		
		
		стр = Новый Структура("ЧастьРешения", Элементы.ИД.ТекущиеДанные.ЧастьРешения);
		строки = Объект.ЧастиРешения.НайтиСтроки(стр);
		Если Строки.Количество() > 0 Тогда
			Форма.СД_СуммаРешения = Строки[0].СуммаРешения;
		КонецЕсли;
		
		Форма.Открыть();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЧастиРешенияПриИзмененииНаСервере()
	СуммаОсновнойДолг = 0;
	СуммаПроценты = 0;
	СуммаШтрафы = 0;
	СуммаПени = 0;
	СуммаГоспошлина = 0;
	
	Для Каждого Стр Из Объект.ЧастиРешения Цикл
		стр.СуммаРешения = стр.СуммаОсновнойДолг + стр.СуммаПроценты + стр.СуммаШтрафы + стр.СуммаПени + стр.СуммаГоспошлина;
		//СуммаОсновнойДолг = 
		СуммаОсновнойДолг = СуммаОсновнойДолг + стр.СуммаОсновнойДолг;
		СуммаПроценты = СуммаПроценты + стр.СуммаПроценты;
		СуммаШтрафы = СуммаШтрафы + стр.СуммаШтрафы;
		СуммаПени = СуммаПени + стр.СуммаПени;
		СуммаГоспошлина = СуммаГоспошлина + стр.СуммаГоспошлина;
	КонецЦикла;
	
	Если Объект.ВидИска = Перечисления.ВидыИска.ВзысканиеПроцентов395 Тогда
		Объект.РешениеНачисленныеПроценты395 = СуммаПроценты;
		Объект.РешениеГоспошлина = СуммаГоспошлина;
	ИначеЕсли Объект.ВидИска = Перечисления.ВидыИска.Индексация208 Тогда
		Объект.РешениеСуммаИндексации208 = СуммаПроценты;
	ИначеЕсли Объект.ВидИска = Перечисления.ВидыИска.ОбращениеВзыскания Тогда
		Объект.РешениеГоспошлина = СуммаГоспошлина;
	Иначе
		Объект.РешениеОсновнойДолг = СуммаОсновнойДолг;
		Объект.РешениеПроценты = СуммаПроценты;
		Объект.РешениеШтрафы = СуммаШтрафы;
		Объект.РешениеПени = СуммаПени;
		Объект.РешениеГоспошлина = СуммаГоспошлина;
	КонецЕсли;
	
	ЗаполнитьСуммыРешенияНаСервере();

КонецПроцедуры

&НаКлиенте
Процедура ЧастиРешенияПриИзменении(Элемент)
	ЧастиРешенияПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ОтветчикиПриИзменении(Элемент)
	УправлениеФормой();
КонецПроцедуры


