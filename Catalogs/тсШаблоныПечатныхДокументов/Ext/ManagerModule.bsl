Функция ФорматУниверсальногоФайла() Экспорт

	Возврат ".docx";

КонецФункции

Процедура ВыделитьПараметры(МассивПараметров, Знач Текст) Экспорт

	НачалоТега = "{v8 ";
	КонецТега = "}";
	
	НачалоПараметра = СтрНайти(Текст, НачалоТега);
	
	Если НачалоПараметра <= 0 Тогда
	
		Возврат;
	
	КонецЕсли;

	Текст = Прав(Текст, СтрДлина(Текст) - (НачалоПараметра + СтрДлина(НачалоТега) - 1));
	КонецПараметра = СтрНайти(Текст, КонецТега);
	Если КонецПараметра > 0 Тогда
	
		ТекстПараметра = СокрЛП(Лев(Текст, КонецПараметра - 1));
		МассивПараметров.Добавить(ТекстПараметра);
		Текст = Прав(Текст, СтрДлина(Текст) - (СтрДлина(ТекстПараметра) + 1));
	
	КонецЕсли;
	
	НачалоПараметра = СтрНайти(Текст, НачалоТега);
	Если НачалоПараметра > 0 Тогда
	
		ВыделитьПараметры(МассивПараметров, Текст);
	
	КонецЕсли;

КонецПроцедуры

Функция НастройкаСоответствияРеквизитов(ВидШаблона) Экспорт

	Запрос = Новый Запрос;

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	тсШаблоныПечатныхДокументовРеквизитыИСвойства.Поле КАК Поле,
	|	тсШаблоныПечатныхДокументовРеквизитыИСвойства.ИмяОбласти КАК ИмяОбласти,
	|	тсШаблоныПечатныхДокументовОбластиШаблона.ТипОбласти КАК ТипОбласти,
	|	тсШаблоныПечатныхДокументовРеквизитыИСвойства.Значение КАК Значение,
	|	тсШаблоныПечатныхДокументовРеквизитыИСвойства.Функция КАК Функция,
	|	тсШаблоныПечатныхДокументовРеквизитыИСвойства.ТипПоля КАК ТипПоля,
	|	тсШаблоныПечатныхДокументов.НачалоТега КАК НачалоТега,
	|	тсШаблоныПечатныхДокументов.КонецТега КАК КонецТега,
	|	тсШаблоныПечатныхДокументовРеквизитыИСвойства.СтрокаХранилище КАК СтрокаХранилище
	|ПОМЕСТИТЬ втРеквизитыОбласти
	|ИЗ
	|	Справочник.тсШаблоныПечатныхДокументов.РеквизитыИСвойства КАК тсШаблоныПечатныхДокументовРеквизитыИСвойства
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.тсШаблоныПечатныхДокументов КАК тсШаблоныПечатныхДокументов
	|		ПО тсШаблоныПечатныхДокументовРеквизитыИСвойства.Ссылка = тсШаблоныПечатныхДокументов.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.тсШаблоныПечатныхДокументов.ОбластиШаблона КАК тсШаблоныПечатныхДокументовОбластиШаблона
	|		ПО тсШаблоныПечатныхДокументовРеквизитыИСвойства.ИмяОбласти = тсШаблоныПечатныхДокументовОбластиШаблона.ИмяОбласти
	|			И (тсШаблоныПечатныхДокументовОбластиШаблона.ТипОбласти <> ""СтрокаТаблицы"")
	|ГДЕ
	|	тсШаблоныПечатныхДокументовРеквизитыИСвойства.Ссылка = &Ссылка
	|	И тсШаблоныПечатныхДокументовРеквизитыИСвойства.Используется = ИСТИНА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втРеквизитыОбласти.Поле КАК Поле,
	|	втРеквизитыОбласти.ИмяОбласти КАК ИмяОбласти,
	|	втРеквизитыОбласти.ТипОбласти КАК ТипОбласти,
	|	втРеквизитыОбласти.Значение КАК Значение,
	|	втРеквизитыОбласти.Функция КАК Функция,
	|	втРеквизитыОбласти.ТипПоля КАК ТипПоля,
	|	втРеквизитыОбласти.НачалоТега КАК НачалоТега,
	|	втРеквизитыОбласти.КонецТега КАК КонецТега,
	|	втРеквизитыОбласти.СтрокаХранилище КАК СтрокаХранилище
	|ИЗ
	|	втРеквизитыОбласти КАК втРеквизитыОбласти
	|ГДЕ
	|	втРеквизитыОбласти.ТипОбласти = ""Общая""
	|	И втРеквизитыОбласти.ИмяОбласти <> ""Абзац""";
	
	Запрос.УстановитьПараметр("Ссылка", ВидШаблона);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выгрузить();
	
	ВыборкаДетальныеЗаписи.Свернуть("Поле, ИмяОбласти, ТипОбласти, Значение, Функция, ТипПоля, НачалоТега, КонецТега, СтрокаХранилище");
	
	Возврат ВыборкаДетальныеЗаписи;

КонецФункции

Функция НастройкаСоответствияТабличнойЧасти(ВидШаблона) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	тсШаблоныПечатныхДокументов.НачалоТега КАК НачалоТега,
		|	тсШаблоныПечатныхДокументов.КонецТега КАК КонецТега,
		|	тсШаблоныПечатныхДокументовТаблицаВыбораТаблиц.ПолеТаблицы КАК ИмяОбласти,
		|	тсШаблоныПечатныхДокументовОбластиШаблона.ТипОбласти КАК ТипОбласти,
		|	тсШаблоныПечатныхДокументовТаблицаВыбораТаблиц.Функция КАК ФункцияОбласти,
		|	тсШаблоныПечатныхДокументовТаблицаТаблиц.Поле КАК Поле,
		|	тсШаблоныПечатныхДокументовТаблицаТаблиц.Значение КАК Значение,
		|	тсШаблоныПечатныхДокументовТаблицаТаблиц.Функция КАК Функция
		|ИЗ
		|	Справочник.тсШаблоныПечатныхДокументов.ТаблицаВыбораТаблиц КАК тсШаблоныПечатныхДокументовТаблицаВыбораТаблиц
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.тсШаблоныПечатныхДокументов.ОбластиШаблона КАК тсШаблоныПечатныхДокументовОбластиШаблона
		|		ПО тсШаблоныПечатныхДокументовТаблицаВыбораТаблиц.ПолеТаблицы = тсШаблоныПечатныхДокументовОбластиШаблона.ИмяОбласти
		|			И (тсШаблоныПечатныхДокументовОбластиШаблона.ТипОбласти = ""СтрокаТаблицы"")
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.тсШаблоныПечатныхДокументов.ТаблицаТаблиц КАК тсШаблоныПечатныхДокументовТаблицаТаблиц
		|		ПО тсШаблоныПечатныхДокументовТаблицаВыбораТаблиц.UID = тсШаблоныПечатныхДокументовТаблицаТаблиц.UID
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.тсШаблоныПечатныхДокументов КАК тсШаблоныПечатныхДокументов
		|		ПО тсШаблоныПечатныхДокументовТаблицаВыбораТаблиц.Ссылка = тсШаблоныПечатныхДокументов.Ссылка
		|ГДЕ
		|	тсШаблоныПечатныхДокументовТаблицаВыбораТаблиц.Ссылка = &Ссылка
		|	И тсШаблоныПечатныхДокументовТаблицаВыбораТаблиц.Используется = ИСТИНА
		|
		|УПОРЯДОЧИТЬ ПО
		|	ИмяОбласти";
	
	Запрос.УстановитьПараметр("Ссылка", ВидШаблона);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выгрузить();
	
	Возврат ВыборкаДетальныеЗаписи;

КонецФункции

Функция ПорядокОбластей(ВидШаблона) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	тсШаблоныПечатныхДокументовОбластиШаблона.ИмяОбласти КАК ИмяОбласти,
		|	тсШаблоныПечатныхДокументовОбластиШаблона.ТипОбласти КАК ТипОбласти
		|ИЗ
		|	Справочник.тсШаблоныПечатныхДокументов.ОбластиШаблона КАК тсШаблоныПечатныхДокументовОбластиШаблона
		|ГДЕ
		|	тсШаблоныПечатныхДокументовОбластиШаблона.Ссылка = &Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	тсШаблоныПечатныхДокументовОбластиШаблона.НомерСтроки";
	
	Запрос.УстановитьПараметр("Ссылка", ВидШаблона);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выгрузить();
	
	Возврат ВыборкаДетальныеЗаписи;

КонецФункции // ()

Функция УжеЕстьПрикрепление(Основание, ТипПрикрепляемогоФайла) Экспорт

	Возврат ОбъектыСервер.ПроверитьТипФайлаОбъекта(Основание, ТипПрикрепляемогоФайла.Код);

КонецФункции // ()

