
&НаКлиенте
Перем ТСТочкаИмя;
&НаКлиенте
Перем ТСМероприятиеНаименование;

&НаСервере
Перем ГлубинаРек;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Объект.Ссылка.Пустая() Тогда
		Пользователи.ЗаполнитьРеквизитыПоДаннымПользователя(Объект);
	КонецЕсли;
	
	Если Параметры.ЗначенияЗаполнения.Свойство("Объект") Тогда
		Объект.Объект = Параметры.ЗначенияЗаполнения.Объект;
	КонецЕсли;
	
	ОбработатьОбъектУчета();
	
	Элементы.Схема.ТолькоПросмотр = 
			(Объект.Операция = ПредопределенноеЗначение("Справочник.ОперацииБП.Произвольная"));
	
	УстановитьОтбор("БизнесПроцесс", Объект.Ссылка);
	СписокДеревоБП.Добавить().НомерСтроки = 1;
	СоздатьДерево();
	
	Если Объект.Стартован Тогда
		Элементы.ГруппаТочкаСтарта.Видимость = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	СхемаПриИзменении(Неопределено);
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы



#КонецОбласти

#Область ОбработчикиКомандФормы



#КонецОбласти

#Область СлужебныеПроцедурыИФункции



#КонецОбласти




#Область ОбработкаОбъектовУчета

&НаКлиенте
Процедура ОбъектПриИзменении(Элемент)

	УстановитьЗаголовокОбъекта();
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьОбъектУчета()

	УстановитьЗаголовокОбъекта();
	
	Если Объект.Стартован Тогда
	
		Элементы.Схема.Доступность = Ложь;
		Элементы.Объект.Доступность = Ложь;
		Элементы.Стартован.Доступность = Ложь;
		Элементы.Завершен.Доступность = Ложь;
	
	КонецЕсли;

КонецПроцедуры

Процедура УстановитьЗаголовокОбъекта()

	НовыйЗаголовок = "Объект";
	Если ЗначениеЗаполнено(Объект.Объект) Тогда
	
		НовыйЗаголовок = УправлениеЗаполнением.ПолучитьПредставлениеОбъекта(Объект.Объект);
	
	КонецЕсли;
	Элементы.Объект.Заголовок = НовыйЗаголовок;

КонецПроцедуры




#КонецОбласти



&НаСервере
Функция ЗагрузитьКартуИзХранилища(Ссылка)
	Если ТипЗнч(Ссылка) <> Тип("Строка") И Не Ссылка.Пустая() Тогда
		Возврат Ссылка.Схема.Получить(); 
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура СхемаПриИзменении(Элемент)
	СоздатьДерево();	
	Если ДеревоБП.ПолучитьЭлементы().Количество() > 0 Тогда
		Элементы.ДеревоБП.Развернуть(ДеревоБП.ПолучитьЭлементы()[0].ПолучитьИдентификатор(), Ложь);
	КонецЕсли;
	
	//Элементы.ГруппаОбъектУчета.Доступность = Ложь;
	//Если Не Объект.Схема.Пустая() Тогда
	//	Элементы.ГруппаОбъектУчета.Доступность = Истина;
	//	
	//	Элементы.ОбъектУчета_Пусто.Доступность = Ложь;
	//	Элементы.ОбъектУчета_Контрагенты.Видимость = Ложь;
	//	Элементы.ОбъектУчета_ДоговорыКонтрагентов.Видимость = Ложь;
	//	Элементы.ОбъектУчета_УслугиПоДоговорам.Видимость = Ложь;
	//	Элементы.ОбъектУчета_ДолговыеОбязательства.Видимость = Ложь;
	//	Элементы.ОбъектУчета_ИсполнительныеДокументы.Видимость = Ложь;
	//	Элементы.ОбъектУчета_Залоги.Видимость = Ложь;
	//	
	//	
	//	ОбъектСхемаОбъектУчета = ОбъектыСервер.РазыменоватьСсылку(Объект.Схема, "ОбъектУчета");
	//	Если ОбъектСхемаОбъектУчета.Пустая() Тогда
	//		Элементы.ОбъектУчета_Пусто.Доступность = Истина;
	//		Элементы.ГруппаОбъектУчета.ТекущаяСтраница = Элементы.ОбъектУчета_Пусто;
	//		ТекущийЭлемент = Элементы.Объект;
	//	ИначеЕсли ОбъектСхемаОбъектУчета = ПредопределенноеЗначение("Перечисление.ОбъектыУчета.Контрагенты") Тогда
	//		Элементы.ОбъектУчета_Контрагенты.Видимость = Истина;
	//		Элементы.ГруппаОбъектУчета.ТекущаяСтраница = Элементы.ОбъектУчета_Контрагенты;
	//		ТекущийЭлемент = Элементы.Контрагент;
	//	ИначеЕсли ОбъектСхемаОбъектУчета = ПредопределенноеЗначение("Перечисление.ОбъектыУчета.ДоговорыКонтрагентов") Тогда
	//		Элементы.ОбъектУчета_ДоговорыКонтрагентов.Видимость = Истина;
	//		Элементы.ГруппаОбъектУчета.ТекущаяСтраница = Элементы.ОбъектУчета_ДоговорыКонтрагентов;
	//		ТекущийЭлемент = Элементы.ДоговорКонтрагента;
	//	ИначеЕсли ОбъектСхемаОбъектУчета = ПредопределенноеЗначение("Перечисление.ОбъектыУчета.УслугиПоДоговорам") Тогда
	//		Элементы.ОбъектУчета_УслугиПоДоговорам.Видимость = Истина;
	//		Элементы.ГруппаОбъектУчета.ТекущаяСтраница = Элементы.ОбъектУчета_УслугиПоДоговорам;
	//		ТекущийЭлемент = Элементы.УслугаПоДоговору;
	//	ИначеЕсли ОбъектСхемаОбъектУчета = ПредопределенноеЗначение("Перечисление.ОбъектыУчета.ДолговыеОбязательства") Тогда
	//		Элементы.ОбъектУчета_ДолговыеОбязательства.Видимость = Истина;
	//		Элементы.ГруппаОбъектУчета.ТекущаяСтраница = Элементы.ОбъектУчета_ДолговыеОбязательства;
	//		ТекущийЭлемент = Элементы.ДолговоеОбязательство;
	//	ИначеЕсли ОбъектСхемаОбъектУчета = ПредопределенноеЗначение("Перечисление.ОбъектыУчета.ИсполнительныеДокументы") Тогда
	//		Элементы.ОбъектУчета_ИсполнительныеДокументы.Видимость = Истина;
	//		Элементы.ГруппаОбъектУчета.ТекущаяСтраница = Элементы.ОбъектУчета_ИсполнительныеДокументы;
	//		ТекущийЭлемент = Элементы.ИсполнительныйДокумент;	
	//	ИначеЕсли ОбъектСхемаОбъектУчета = ПредопределенноеЗначение("Перечисление.ОбъектыУчета.Залоги") Тогда
	//		Элементы.ОбъектУчета_Залоги.Видимость = Истина;
	//		Элементы.ГруппаОбъектУчета.ТекущаяСтраница = Элементы.ОбъектУчета_Залоги;
	//		ТекущийЭлемент = Элементы.Залог;
	//	КонецЕсли;

	//КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура РаскраситьРамкиЭлементов()
	//Закраска фона
	Для Каждого ЭлементСхемы Из Карта.ЭлементыГрафическойСхемы Цикл	
		Если ТипЗнч(ЭлементСхемы) = Тип("ЭлементГрафическойСхемыВыборВарианта") Тогда
			СтрокаЭлемента = СтадииДляРаскраски.НайтиСтроки(Новый Структура("Идентификатор", ЭлементСхемы.Имя))[0]; 
			Если СтрокаЭлемента.ВидСтадии = ПредопределенноеЗначение("Перечисление.ВидыСтадийБП.Мероприятие") Тогда
				ЭлементСхемы.ЦветФона = Новый Цвет(253,251,150);
				Для Каждого Вариант Из ЭлементСхемы.Элементы Цикл
					Вариант.ЦветФона = Новый Цвет(254,253,214);
				КонецЦикла;
			ИначеЕсли СтрокаЭлемента.ВидСтадии = ПредопределенноеЗначение("Перечисление.ВидыСтадийБП.БизнесПроцесс") Тогда
				ЭлементСхемы.ЦветФона = Новый Цвет(200,200,233); 
				Для Каждого Вариант Из ЭлементСхемы.Элементы Цикл
					Вариант.ЦветФона = Новый Цвет(224,224,243);
				КонецЦикла;
			ИначеЕсли СтрокаЭлемента.ВидСтадии = ПредопределенноеЗначение("Перечисление.ВидыСтадийБП.Функция") Тогда
				ЭлементСхемы.ЦветФона = Новый Цвет(250,200,100); 
				Для Каждого Вариант Из ЭлементСхемы.Элементы Цикл
					Вариант.ЦветФона = Новый Цвет(250,230,180);
				КонецЦикла;
			КонецЕсли;
		ИначеЕсли ТипЗнч(ЭлементСхемы) = Тип("ЭлементГрафическойСхемыДекорация") Тогда
			ЭлементСхемы.ЦветФона = Новый Цвет(150,200,250);
		КонецЕсли;  		
	КонецЦикла;
	
	//Закраска рамок
	Для Каждого ЭлементСхемы Из Карта.ЭлементыГрафическойСхемы Цикл	
		Если ТипЗнч(ЭлементСхемы) = Тип("ЭлементГрафическойСхемыДекоративнаяЛиния") Тогда
			ЭлементСхемы.ЦветЛинии = Новый Цвет(179,172,134);                  
			ЭлементСхемы.Линия = Новый Линия(ТипСоединительнойЛинии.Сплошная, 1);
		Иначе                                   
			ЭлементСхемы.ЦветРамки = Новый Цвет(179,172,134);
			Если ТипЗнч(ЭлементСхемы) <> Тип("ЭлементГрафическойСхемыДекорация") Тогда
				ЭлементСхемы.Рамка = Новый Линия(ТипСоединительнойЛинии.Сплошная, 1);
			КонецЕсли;
		КонецЕсли;   		
	КонецЦикла;	
	 	
	//Если ИндексВыбраннойСтадии > -1 Тогда
	//	Карта.ЭлементыГрафическойСхемы[ИндексВыбраннойСтадии].ЦветРамки = Новый Цвет(255,0,0);  //120,114,75);
	//	Карта.ЭлементыГрафическойСхемы[ИндексВыбраннойСтадии].Рамка = Новый Линия(ТипСоединительнойЛинии.Сплошная, 1);	
	//КонецЕсли;
	//Если ИндексВыбраннойЗадержки > -1 Тогда
	//	Карта.ЭлементыГрафическойСхемы[ИндексВыбраннойЗадержки].ЦветЛинии = Новый Цвет(255,0,0);  //120,114,75);
	//	Карта.ЭлементыГрафическойСхемы[ИндексВыбраннойЗадержки].Линия = Новый Линия(ТипСоединительнойЛинии.Сплошная, 2);
	//КонецЕсли;
		
	ОбновитьОтображениеДанных();
	//ОбновитьВидимостьКнопок();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуСтадийДляРаскраски(Схема)
	СтадииДляРаскраски.Загрузить(Схема.Стадии.Выгрузить(, "Идентификатор, ВидСтадии, ЗапретСтарта"));
КонецПроцедуры

&НаКлиенте
Процедура ПередСтартом(Отказ)
	Отказ = Истина;
	
	Если Объект.Стартован Тогда
		Если Не СинхронизироватьРеквизитыМероприятий() Тогда
			Отказ = Истина;
			Сообщить("Ошибка записи!");
			Возврат;
		КонецЕсли;
		Если Объект.Завершен Тогда
			Сообщить("Бизнес-процесс уже завершен!");
		Иначе	
			Сообщить("Бизнес-процесс уже запущен!");
		КонецЕсли;
	ИначеЕсли Объект.Схема.Пустая() ИЛИ ТипЗнч(Объект.Объект) <> ПолучитьТипСхемаОбъектУчета() Тогда
		Сообщить("Обязательные реквизиты должны быть заполнены!");
	ИначеЕсли ТССтартоватьСВыбраннойСтадии И Не ЗначениеЗаполнено(ТСМероприятие) Тогда	
		Сообщить("Необходимо указать мероприятие для старта!");
	Иначе		
		ТСТочка2 = ТСТочка;
		ТСОбъектРодитель2 = ТСОбъектРодитель;
		ТССхема2 = ТССхема; 
		ТСТипМероприятия2 = ТСТипМероприятия; 
		ТСИсполнитель2 = ТСИсполнитель;
		КопироватьТСМассив(0);
		
		Записать();
		
		ТСТочка = ТСТочка2;
		ТСОбъектРодитель = ТСОбъектРодитель2;
		ТССхема = ТССхема2; 
		ТСТипМероприятия = ТСТипМероприятия2;  
		ТСИсполнитель = ТСИсполнитель2;
		КопироватьТСМассив(1);
		
		Если Не ЗапуститьБизнесПроцесс() Тогда
			Отказ = Истина;
			Сообщить("Ошибка записи!");
			Возврат;
		КонецЕсли;
		Если Объект.Стартован Тогда
			Элементы.ГруппаТочкаСтарта.Видимость = Ложь;
		КонецЕсли;	
		Элементы.СписокМероприятий.Обновить();
		ДеревоБППриАктивизацииСтроки(Неопределено);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьТипСхемаОбъектУчета()
	Возврат Перечисления.ОбъектыУчета.ПолучитьТипСправочника(Объект.Схема.ОбъектУчета);
КонецФункции

&НаСервере
Процедура КопироватьТСМассив(Флаг)
	Если Флаг = 1 Тогда
		ТСМассив.Загрузить(ТСМассив2.Выгрузить());
	Иначе
		ТСМассив2.Загрузить(ТСМассив.Выгрузить());
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ЗапуститьБизнесПроцесс()
	Отказ = Ложь;
	ЭлементОбъект = РеквизитФормыВЗначение("Объект");
	НачатьТранзакцию();
	Попытка
		Если ТССтартоватьСВыбраннойСтадии Тогда         
			ЭлементОбъект.ЗапуститьБизнесПроцессСТочки(Отказ, ТСТочка, ТСОбъектРодитель, ТССхема, ТСТипМероприятия, ТСМассив, 
					ТСИсполнитель);
		Иначе
			ЭлементОбъект.ЗапуститьБизнесПроцесс(Отказ);
		КонецЕсли;
		
		Если Отказ Тогда
			ВызватьИсключение "";
		КонецЕсли;
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		Возврат Ложь;
	КонецПопытки;
	ЗначениеВРеквизитФормы(ЭлементОбъект, "Объект");
	Возврат Истина;
КонецФункции

&НаСервере
Процедура УстановитьОтбор(Поле, Значение)
	ПолеКомпоновки = Новый ПолеКомпоновкиДанных(Поле);	
	Для Каждого ЭлементОтбораСобытий Из СписокМероприятий.КомпоновщикНастроек.Настройки.Отбор.Элементы Цикл
		Если ЭлементОтбораСобытий.ЛевоеЗначение = ПолеКомпоновки Тогда
			ЭлементОтбораСобытий.ПравоеЗначение = Значение;
			Прервать;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура СоздатьДерево()
	ДеревоБП.ПолучитьЭлементы().Очистить();
	Для Каждого Элемент Из СписокДеревоБП Цикл
		Элемент.Схема = Неопределено;
		Элемент.ОбъектРодитель = "";
	КонецЦикла;
	
	НоваяСтрока = СписокДеревоБП.Добавить();
	НоваяСтрока.Схема = Объект.Схема;
	НоваяСтрока.НомерСтроки = СписокДеревоБП.Количество();
	
	НовыйЭлемент = ДеревоБП.ПолучитьЭлементы().Добавить();
	НовыйЭлемент.Схема = Объект.Схема;	
	НовыйЭлемент.Наименование = Строка(Объект.Схема);
	ГлубинаРек = 0;
	ЗаполнитьДерево(НовыйЭлемент.ПолучитьЭлементы(), НовыйЭлемент.Схема, НовыйЭлемент.ОбъектРодитель);
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДерево(ЭлементДерева, Схема, ОбъектРодитель)
	//Если ТипЗнч(Схема) = Тип("Строка") Тогда
	//	Возврат;
	//КонецЕсли;
	
	Строки = Схема.Стадии.НайтиСтроки(Новый Структура("ВидСтадии", Перечисления.ВидыСтадийБП.БизнесПроцесс));
	Для Каждого Элемент Из Строки Цикл
		Если ТипЗнч(Элемент.Стадия) = Тип("СправочникСсылка.КартыМаршрутов") Тогда
		    ВложеннаяСхема = Элемент.Стадия;
		ИначеЕсли ТипЗнч(Элемент.Стадия) = Тип("СправочникСсылка.ТипыМероприятий") Тогда
			//ВложеннаяСхема = Неопределено;
			ВложеннаяСхема = РегистрыСведений.НастройкиБП.ПолучитьСхемуПоОперации(Справочники.Организации.ПустаяСсылка(),
					Справочники.ПодразделенияОрганизаций.ПустаяСсылка(), Элемент.Операция);
		КонецЕсли;
				
		НоваяСтрока = СписокДеревоБП.Добавить();
		НоваяСтрока.Схема = ВложеннаяСхема;
		НоваяСтрока.ОбъектРодитель = ОбъектРодитель + "_" + Элемент.Идентификатор;
		НоваяСтрока.НомерСтроки = СписокДеревоБП.Количество();
		
		НовыйЭлемент = ЭлементДерева.Добавить();
		НовыйЭлемент.ОбъектРодитель = ОбъектРодитель + "_" + Элемент.Идентификатор;
		НовыйЭлемент.Наименование = Элемент.Наименование;
		Если ВложеннаяСхема = Неопределено Тогда
			НовыйЭлемент.Схема = "<Нет доступа>";	
		Иначе
			НовыйЭлемент.Схема = ВложеннаяСхема;
			ГлубинаРек = ГлубинаРек + 1;
			Если ГлубинаРек < 6 Тогда
				ЗаполнитьДерево(НовыйЭлемент.ПолучитьЭлементы(), НовыйЭлемент.Схема, НовыйЭлемент.ОбъектРодитель);
			КонецЕсли;	
			ГлубинаРек = ГлубинаРек - 1;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоБППриАктивизацииСтроки(Элемент)
	ТСМассив.Очистить();
	Если Элементы.ДеревоБП.ТекущиеДанные <> Неопределено Тогда
		Если Не Объект.Стартован Тогда
			ТСПуть = ЗаполнитьПутьСхемПоНомеру(ДеревоБП.ПолучитьЭлементы(), Элементы.ДеревоБП.ТекущаяСтрока);
			ТССхема = Элементы.ДеревоБП.ТекущиеДанные.Схема;
			ТСОбъектРодитель = Элементы.ДеревоБП.ТекущиеДанные.ОбъектРодитель;
			ТСМероприятие = "";
			ТСТипМероприятия = Неопределено;
			ТСТочка = "";
		КонецЕсли;
		ПодсветитьСтроки(Элементы.ДеревоБП.ТекущиеДанные.Схема);
		ПоказатьКарту(Элементы.ДеревоБП.ТекущиеДанные.Схема);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция ЗаполнитьПутьСхемПоНомеру(ЭлементДерева, НомерЭлемента)
	Результат = "";
	Для Каждого Элемент Из ЭлементДерева Цикл
		Если Элемент.ПолучитьИдентификатор() = НомерЭлемента Тогда
			Результат = Элемент.Наименование;
			
			НоваяСтрока = ТСМассив.Добавить();
			НоваяСтрока.Схема = Элемент.Схема;
			НоваяСтрока.ОбъектРодитель = Элемент.ОбъектРодитель;
			Прервать;
		Иначе
			Результат = ЗаполнитьПутьСхемПоНомеру(Элемент.ПолучитьЭлементы(), НомерЭлемента);
			Если Результат <> "" Тогда
				Результат = Элемент.Наименование + " -> " + Результат;
				
				НоваяСтрока = ТСМассив.Добавить();
				НоваяСтрока.Схема = Элемент.Схема;
				НоваяСтрока.ОбъектРодитель = Элемент.ОбъектРодитель;
				
				Идентификатор = ТСМассив[ТСМассив.Количество() - 2].ОбъектРодитель;
				Идентификатор = СтрЗаменить(Идентификатор, "_", Символы.ПС);
				Идентификатор = СтрПолучитьСтроку(Идентификатор, СтрЧислоСтрок(Идентификатор));
				НоваяСтрока.Идентификатор = Идентификатор;
				Прервать;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Возврат Результат;
КонецФункции

&НаКлиенте
Процедура ЗаписатьКартуСТекстом(Текст, ИмяФайла)
	ТекстовыйДокумент = Новый ТекстовыйДокумент();
	ТекстовыйДокумент.УстановитьТекст(
		"{5,
		|{
		|{1,
		|{3,3,
		|{-10}
		|},0,20,20,3,6,6,
		|{""N"",10},7,
		|{""N"",10},8,
		|{""N"",10},9,
		|{""N"",10},13,
		|{""N"",0},16,
		|{""N"",0}
		|}
		|},1,0,
		|{
		|{4,1,
		|{1,1,
		|{""#"",""" + Текст + """}
		|},""Декорация1"",1},2,
		|{
		|{
		|{6,
		|{3,3,
		|{-10}
		|},
		|{3,0,
		|{8826035}
		|},
		|{3,3,
		|{-17}
		|},
		|{6,1,62,
		|{0},160,400,0,0,0,1},
		|{1,0},0,0,1,0,0,1,0},6,21,22,510,245,4,
		|{3,0,
		|{0},"""",-1,-1,1,0},1,0,0,0}
		|}
		|},1}");
	ТекстовыйДокумент.Записать(ИмяФайла);
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьКарту(Схема)
	#Если ВебКлиент Тогда
		Сообщить("Графическая схема недоступна на Веб-клиенте!");
		//ЗаполнитьТаблицуСтадийДляРаскраски(Схема);
		//ДвоичныеДанные = ЗагрузитьКартуИзХранилища(Схема);	
		//Если Не ДвоичныеДанные = Неопределено Тогда
		//	ПутьТемпФайла = КаталогВременныхФайлов();
		//	ИмяТемпФайла = ПутьТемпФайла + "gph.tmp";
		//	ДвоичныеДанные.Записать(ИмяТемпФайла);
		//	
		//	НачатьЗапускПриложения(Новый ОписаниеОповещения("КонецЗапускаПриложения",ЭтаФорма),);
			//Карта.Прочитать(ИмяТемпФайла);
			//Карта.Показать(,ИмяТемпФайла);
		//	УдалитьФайлы(ИмяТемпФайла);
		//Иначе
		//	ПутьТемпФайла = КаталогВременныхФайлов();
		//	ИмяТемпФайла = ПутьТемпФайла + "gph.tmp";
			
			//НоваяСхема = Новый ГрафическаяСхема();
			//НоваяСхема.Записать(ИмяТемпФайла);
			//ЗаписатьКартуСТекстом("Нет доступа!", ИмяТемпФайла);
			//Карта.Показать(,ИмяТемпФайла);
			//Карта.Прочитать(ИмяТемпФайла);
			//ПрочитатьКартуСервер(Карта, ИмяТемпФайла);
		//	УдалитьФайлы(ИмяТемпФайла);	
		//КонецЕсли;	
		//
		//РаскраситьРамкиЭлементов();
		
		
	#Иначе
		ЗаполнитьТаблицуСтадийДляРаскраски(Схема);
		
		ДвоичныеДанные = ЗагрузитьКартуИзХранилища(Схема);	
		Если Не ДвоичныеДанные = Неопределено Тогда
			ИмяТемпФайла = ПолучитьИмяВременногоФайла();
			ДвоичныеДанные.Записать(ИмяТемпФайла);		
			Карта.Прочитать(ИмяТемпФайла);
			УдалитьФайлы(ИмяТемпФайла);
		Иначе
			ИмяТемпФайла = ПолучитьИмяВременногоФайла();
			
			//НоваяСхема = Новый ГрафическаяСхема();
			//НоваяСхема.Записать(ИмяТемпФайла);
			ЗаписатьКартуСТекстом("Нет доступа!", ИмяТемпФайла);
			
			Карта.Прочитать(ИмяТемпФайла);
			УдалитьФайлы(ИмяТемпФайла);	
		КонецЕсли;	
		
		РаскраситьРамкиЭлементов();
	#КонецЕсли
	
КонецПроцедуры
&НаКлиенте
Процедура КонецЗапускаПриложения(Параметр) Экспорт
	//
КонецПроцедуры	

&НаКлиенте
Процедура СтартоватьИЗакрыть(Команда)
	Отказ = Ложь;
	ПередСтартом(Отказ);
	Если Объект.Стартован Тогда
		Закрыть();
		Если ТипЗнч(ЭтаФорма.ВладелецФормы) = Тип("ТаблицаФормы") Тогда
			ЭтаФорма.ВладелецФормы.Обновить();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПодсветитьСтроки(Схема)
	УсловноеОформление.Элементы[0].Отбор.Элементы[0].ПравоеЗначение = Схема;
КонецПроцедуры

&НаКлиенте
Процедура СписокМероприятийПриАктивизацииСтроки(Элемент)
	ТекущиеДанные = Элементы.СписокМероприятий.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		ПодсветитьСтроки(ТекущиеДанные.Схема);	
		//Элементы.ДеревоБП.ТекущаяСтрока = СписокДеревоБП.НайтиСтроки(Новый Структура("Схема, ОбъектРодитель", 
		//		ТекущиеДанные.Схема, ТекущиеДанные.ОбъектРодитель))[0].НомерСтроки; 
		                         
		ОбъектРодитель = СтрЗаменить(ТекущиеДанные.ОбъектРодитель, "*", Символы.ПС);
		ОбъектРодитель2 = "";
		Для Номер = 1 По СтрЧислоСтрок(ОбъектРодитель) Цикл
			Стр = СтрПолучитьСтроку(ОбъектРодитель, Номер);
			Номер2 = Найти(Стр, "_");
			Если Номер2 > 0 Тогда
				ОбъектРодитель2 = ОбъектРодитель2 + Сред(Стр, Номер2);
			КонецЕсли;
		КонецЦикла;
		
		Результат = НайтиЭлементВДереве(ДеревоБП.ПолучитьЭлементы(), ТекущиеДанные.Схема, ОбъектРодитель2);		
		Элементы.ДеревоБП.ТекущаяСтрока = Результат;		
	КонецЕсли;                                                                              
КонецПроцедуры

&НаКлиенте
Функция НайтиЭлементВДереве(ЭлементДерева, ПараметрСхема, ПараметрОбъектРодитель)
	Результат = -1;
	Для Каждого Элемент Из ЭлементДерева Цикл
		Если Элемент.Схема = ПараметрСхема И Элемент.ОбъектРодитель = ПараметрОбъектРодитель Тогда
			Результат = Элемент.ПолучитьИдентификатор();
			Прервать;
		Иначе
			Результат = НайтиЭлементВДереве(Элемент.ПолучитьЭлементы(), ПараметрСхема, ПараметрОбъектРодитель);
			Если Результат > -1 Тогда
				Прервать;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Возврат Результат;
КонецФункции

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	ДеревоБППриАктивизацииСтроки(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьБП(Команда)
	Форма = ПолучитьФорму("БизнесПроцесс.БизнесПроцессы.Форма.ФормаЗавершенияБП",, ЭтаФорма);
	Форма.Схема = Объект.Схема;
	//Чуров А.И.
	ОткрытьФорму(Форма);
	//Если Форма.ОткрытьМодально() = Истина Тогда
	//	Объект.РезультатБПНаименование = Форма.Наименование;
	//	Объект.РезультатБП = Форма.Результат;
	//	УстановитьПометкуУдаления(Объект.Ссылка);
	//	Объект.Завершен = Истина;
	//	
	//	Записать();
	//КонецЕсли;
КонецПроцедуры

//Чуров
&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "БизнесПроцессыФормаЗавершенияБПЗавершение" Тогда
		Объект.РезультатБПНаименование = Параметр.Наименование;
		Объект.РезультатБП = Параметр.Результат;
		УстановитьПометкуУдаления(Объект.Ссылка);
		Объект.Завершен = Истина;
		
		Записать();
	КонецЕсли;
КонецПроцедуры


&НаСервереБезКонтекста
Процедура УстановитьПометкуУдаления(Ссылка)
	
	БизнесПроцессы.БизнесПроцессы
		.ПометитьНаУдалениеНеВыполненныеМероприятия(Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ОперацияПриИзменении(Элемент)
	Элементы.Схема.ТолькоПросмотр = (Объект.Операция = 
			ПредопределенноеЗначение("Справочник.ОперацииБП.Произвольная"));
	ЗаполнитьСхему();
	СхемаПриИзменении(Неопределено);
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСхему();
	Объект.Схема = РегистрыСведений.НастройкиБП.ПолучитьСхемуПоОперации(Объект.Организация, Объект.Подразделение, 
			Объект.Операция);
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	УстановитьОтбор("БизнесПроцесс", Объект.Ссылка);
	
	Если Не СинхронизироватьРеквизитыМероприятий() Тогда
		Сообщить("Ошибка записи!"); //!!!
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция СинхронизироватьРеквизитыМероприятий()
	Если Объект.Ссылка.Пустая() Тогда
		Возврат Истина;
	КонецЕсли;
	
	НачатьТранзакцию();
	Попытка
		//Поиск и заполнение реквизитов мероприятий относящихся к этому БП
		Запрос = Новый Запрос("ВЫБРАТЬ
		                      |	Мероприятие.Ссылка
		                      |ИЗ
		                      |	Задача.Мероприятие КАК Мероприятие
		                      |ГДЕ
		                      |	Мероприятие.БизнесПроцесс = &БизнесПроцесс
		                      |	И Мероприятие.Объект <> &Объект");
		Запрос.УстановитьПараметр("БизнесПроцесс", Объект.Ссылка);
		Запрос.УстановитьПараметр("Объект", Объект.Объект);
		Результат = Запрос.Выполнить().Выбрать();
		Пока Результат.Следующий() Цикл
			ОбъектМ = Результат.Ссылка.ПолучитьОбъект();
			ОбъектМ.Объект = Объект.Объект;
			ОбъектМ.Записать();
		КонецЦикла;
		ЗафиксироватьТранзакцию();
		Возврат Истина;
	Исключение
		ОтменитьТранзакцию();
		Возврат Ложь;
	КонецПопытки;
КонецФункции

&НаКлиенте
Процедура КартаВыбор(Элемент)
	Если Не Элементы.Карта.ТекущийЭлемент = Неопределено И 
			ТипЗнч(Элементы.Карта.ТекущийЭлемент) = Тип("ЭлементГрафическойСхемыВыборВарианта") И
			Не Объект.Стартован Тогда
			
		//Вместо "Объект.Схема.Стадии" ставим "СтадииДляРаскраски"  	
		СтрокаСтадии = СтадииДляРаскраски.НайтиСтроки(Новый Структура("Идентификатор", 
				Элементы.Карта.ТекущийЭлемент.Имя));	
		Если СтрокаСтадии[0].ЗапретСтарта Тогда		
			Сообщить("С выбранного мероприятия старт бизнесс-процесса запрещен!");
		КонецЕсли;		
				
		ТСТочкаИмя = Элементы.Карта.ТекущийЭлемент.Имя;
		ТСМероприятиеНаименование = ?(СтрокаСтадии[0].ЗапретСтарта, "", Элементы.Карта.ТекущийЭлемент.Наименование);		
		ПодключитьОбработчикОжидания("ВыделитьСтрокуТаблицы", 0.01, Истина);	    
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВыделитьСтрокуТаблицы()
	ТССхемаСтадии(ТСТочкаИмя);	
	
	Если ТСТипМероприятия.Пустая() Тогда
		ТСТочка = "";
		ТСМероприятие = "";
	Иначе
		ТСТочка = ТСТочкаИмя;
		ТСМероприятие = ТСМероприятиеНаименование;
		
		ТСМассив[0].Идентификатор = ТСТочка; 
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура ТССхемаСтадии(ТСТочкаИмя_)
	СтрокиСтадии = ТССхема.Стадии.НайтиСтроки(Новый Структура("Идентификатор", ТСТочкаИмя_));
	Попытка
		ТСТипМероприятия = СтрокиСтадии[0].Стадия;
		ТСИсполнитель = СтрокиСтадии[0].Исполнитель;
	Исключение
		ТСТипМероприятия = Неопределено;
		ТСИсполнитель = Неопределено;
	КонецПопытки;
КонецПроцедуры




#Область СтароеОтВерсии_7_6

&НаКлиенте
Процедура ПоказатьВсеГруппы(Команда)
	Элементы.ОбъектУчета_Пусто.Видимость = Истина;
	Элементы.ОбъектУчета_Контрагенты.Видимость = Истина;
	Элементы.ОбъектУчета_ДоговорыКонтрагентов.Видимость = Истина;
	Элементы.ОбъектУчета_УслугиПоДоговорам.Видимость = Истина;
	Элементы.ОбъектУчета_ДолговыеОбязательства.Видимость = Истина;
	Элементы.ОбъектУчета_ИсполнительныеДокументы.Видимость = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ОбъектПростойПриИзменении(Элемент)
	Если Элементы.ГруппаОбъектУчета.ТекущаяСтраница = Элементы.ОбъектУчета_Контрагенты Тогда
		Объект.Объект = Контрагент;		
	ИначеЕсли Элементы.ГруппаОбъектУчета.ТекущаяСтраница = Элементы.ОбъектУчета_ДоговорыКонтрагентов Тогда	
		Объект.Объект = ДоговорКонтрагента;		
	ИначеЕсли Элементы.ГруппаОбъектУчета.ТекущаяСтраница = Элементы.ОбъектУчета_УслугиПоДоговорам Тогда	
		Объект.Объект = УслугаПоДоговору;
	ИначеЕсли Элементы.ГруппаОбъектУчета.ТекущаяСтраница = Элементы.ОбъектУчета_ДолговыеОбязательства Тогда
		Объект.Объект = ДолговоеОбязательство;
	ИначеЕсли Элементы.ГруппаОбъектУчета.ТекущаяСтраница = Элементы.ОбъектУчета_ИсполнительныеДокументы Тогда	
		Объект.Объект = ИсполнительныйДокумент;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция НастройкаУчета()

	Данные = Новый Соответствие;
	
	Настройка = СтрокаНастройки(
		Элементы.ОбъектУчета_Контрагенты,
		Элементы.ДоговорКонтрагента
	);
	Данные.Вставить(Тип("СправочникСсылка.Контрагенты"), Настройка);
	
	Настройка = СтрокаНастройки(
		Элементы.ОбъектУчета_ДоговорыКонтрагентов,
		Элементы.ДоговорКонтрагента
	);
	Данные.Вставить(Тип("СправочникСсылка.ДоговорыКонтрагентов"), Настройка);
	
	Настройка = СтрокаНастройки(
		Элементы.ОбъектУчета_УслугиПоДоговорам,
		Элементы.УслугаПоДоговору
	);
	Данные.Вставить(Тип("СправочникСсылка.УслугиПоДоговору"), Настройка);
	
	Настройка = СтрокаНастройки(
		Элементы.ОбъектУчета_ДолговыеОбязательства,
		Элементы.ДолговоеОбязательство
	);
	Данные.Вставить(Тип("СправочникСсылка.ДолговыеОбязательства"), Настройка);
	
	Настройка = СтрокаНастройки(
		Элементы.ОбъектУчета_Залоги,
		Элементы.Залог
	);
	Данные.Вставить(Тип("СправочникСсылка.Залоги"), Настройка);
	
	Настройка = СтрокаНастройки(
		Элементы.ОбъектУчета_ИсполнительныеДокументы,
		Элементы.ИсполнительныйДокумент
	);
	Данные.Вставить(Тип("СправочникСсылка.ИсполнительныеДокументы"), Настройка);
	
	Возврат Данные;

КонецФункции // ()

&НаСервере
Функция СтрокаНастройки(Группа, Элемент)

	Настройка = Новый Структура;
	Настройка.Вставить("Группа", Группа);
	Настройка.Вставить("Элемент", Элемент);
	
	Возврат Настройка;

КонецФункции // ()



#КонецОбласти
