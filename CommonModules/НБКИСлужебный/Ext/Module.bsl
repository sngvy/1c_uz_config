
// Функция генерирует UUID по варианту 1 (на основании MAC-адреса и текущего времени)
//
// Параметры:
//  МеткаВремени  - Дата - время UTC
//  АдресСетевойКарты  - Строка - MAC-адрес сетевой карты формата "XX:XX:XX:XX:XX:XX"
//
// Возвращаемое значение:
//   Строка   - уникальный идентификатор в формате "XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX"
//
Функция СформироватьУидПоПравиламЦБ(МеткаВремени = Неопределено, АдресСетевойКарты = Неопределено) Экспорт 
	
	Если МеткаВремени = Неопределено Тогда
		МеткаВремени = ТекущаяДата();
	КонецЕсли;
	
	Если АдресСетевойКарты = Неопределено Тогда
		АдресСетевойКарты = ПолучитьMACАдрес();
	КонецЕсли;

	ГЧ = Новый ГенераторСлучайныхЧисел;
	СлучайноеЧисло = ГЧ.СлучайноеЧисло(0, 16383); // Максимальное 14-битное число.
	
	ДатаГригорианскойРеформы = Дата("15821015");
	РазностьДатВСек = МеткаВремени - ДатаГригорианскойРеформы;
	НаносекундныхИнтервалов = РазностьДатВСек * 1000 * 10000;
	
	БДДН = Новый БуферДвоичныхДанных(8, ПорядокБайтов.BigEndian);
	БДДН.ЗаписатьЦелое64(0, НаносекундныхИнтервалов);
	БДДН.Установить(0, УстановитьБит(БДДН[0], 4, Истина));
	
	БДДС = Новый БуферДвоичныхДанных(2, ПорядокБайтов.BigEndian);
	БДДС.ЗаписатьЦелое16(0, СлучайноеЧисло);
	БДДС.Установить(0, УстановитьБит(БДДС[0], 7, Истина));
	
	TimeLow             = ПолучитьHexСтрокуИзБуфераДвоичныхДанных(БДДН.ПолучитьСрез(4));
	TimeMid             = ПолучитьHexСтрокуИзБуфераДвоичныхДанных(БДДН.ПолучитьСрез(2, 2));
	VersionAndTimeHigh  = ПолучитьHexСтрокуИзБуфераДвоичныхДанных(БДДН.ПолучитьСрез(0, 2));
	
	VariantAndClockSeqHigh = ПолучитьHexСтрокуИзБуфераДвоичныхДанных(БДДС.ПолучитьСрез(0, 1));
	ClockSeqLow            = ПолучитьHexСтрокуИзБуфераДвоичныхДанных(БДДС.ПолучитьСрез(1));
	
	Node = СтрЗаменить(АдресСетевойКарты, ":", "");
	
	Возврат НРег(TimeLow + "-" + TimeMid + "-" + VersionAndTimeHigh + "-" + VariantAndClockSeqHigh + ClockSeqLow + "-" + Node);
	
КонецФункции // СформироватьUUIDver1()

Функция ПолучитьMACАдрес() Экспорт  

	WinMGMT = "";
	Win32_NetworkAdapterConfiguration ="";
	NetworkAdapterConfiguration = "";
	MAC_IP = "";
	MACAddress = "";
	IPAddress = "";
	Computer = ".";
	
	MAC_IP = Новый ТаблицаЗначений;
	MAC_IP.Колонки.Добавить("MAC");
	MAC_IP.Колонки.Добавить("IP");
	
	Попытка
		WinMGMT = ПолучитьCOMОбъект("winmgmts:\\" + Computer + "\root\cimv2");
		Win32_NetworkAdapterConfiguration = WinMGMT.ExecQuery("SELECT * From Win32_NetworkAdapterConfiguration Where IPEnabled = True");
		Для Каждого NetworkAdapterConfiguration ИЗ Win32_NetworkAdapterConfiguration Цикл
			MACAddress = NetworkAdapterConfiguration.MACAddress;
			
			NetworkAdapterConfigurationInfo = MAC_IP.Добавить();
			NetworkAdapterConfigurationInfo.MAC = MACAddress;
			
			Если ЗначениеЗаполнено(MACAddress) Тогда
				Для Каждого IPAddress ИЗ NetworkAdapterConfiguration.IPAddress Цикл
					Если ЗначениеЗаполнено(IPAddress) Тогда
						NetworkAdapterConfigurationInfo.IP = IPAddress;
						Прервать;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
		КонецЦикла;
	Исключение
	КонецПопытки;
	
	Возврат MAC_IP[0].MAC;
	
КонецФункции

Функция СгенерироватьКонтрольныйСимвол(УУИД) Экспорт
	
  i = 1;
  p = 0;
  s = 0;
  c = "";
  
  Для p = 1 по СтрДлина(УУИД) Цикл
    c = Сред(УУИД,p,1);
    c = ОбъектыСервер.ПреобразоватьВDec(c);
    s = s + (c*i);
    i = i + 1;
    Если i > 10  Тогда
      i = 1;
    КонецЕсли;  
  КонецЦикла;  
  
  Деление = s%16;
  StoHex = ОбъектыСервер.DecToAny(Деление,16);
  
  Возврат Нрег(Строка(StoHex)); 
  
КонецФункции