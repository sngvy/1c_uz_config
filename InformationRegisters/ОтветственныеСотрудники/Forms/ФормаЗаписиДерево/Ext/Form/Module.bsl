
&НаКлиенте
Процедура ЗаписатьЭлемент(Команда)
	Отказ = Ложь;
	ЗаписатьСервер(Отказ);
	Если Отказ Тогда
		Сообщить("Ошибка записи!");
	Иначе
		Модифицированность = Ложь;
		ОповеститьОЗаписиНового(ПредопределенноеЗначение("ПланВидовХарактеристик.ТипыСотрудников.ПустаяСсылка"));
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьЭлементИЗакрыть(Команда)
	Отказ = Ложь;
	ЗаписатьСервер(Отказ);
	Если Отказ Тогда
		Сообщить("Ошибка записи!");
	Иначе
		Модифицированность = Ложь;
		ОповеститьОЗаписиНового(ПредопределенноеЗначение("ПланВидовХарактеристик.ТипыСотрудников.ПустаяСсылка"));
    	Закрыть();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	Если Модифицированность Тогда
		//Чуров
		Если не ВыполняетсяЗакрытие Тогда			
			Отказ = истина;
			ПоказатьВопрос(Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтаФорма), "Сохранить изменения?", РежимДиалогаВопрос.ДаНетОтмена);
			
		КонецЕсли;
		//Результат = Неопределено;
		//Результат = Вопрос("Сохранить изменения?", РежимДиалогаВопрос.ДаНетОтмена);
		//Если Результат = КодВозвратаДиалога.Да Тогда
		//	ЗаписатьЭлементИЗакрыть(Неопределено);
		//ИначеЕсли Результат = КодВозвратаДиалога.Отмена Тогда
		//	Отказ = Ложь;
		//КонецЕсли;
		
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	Результат = РезультатВопроса;
	Если Результат = КодВозвратаДиалога.Да Тогда
		ВыполняетсяЗакрытие = Истина;
		ЗаписатьЭлементИЗакрыть(Неопределено);
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		ВыполняетсяЗакрытие = Истина;
		ЭтаФорма.Закрыть();
	КонецЕсли;	 
КонецПроцедуры

&НаСервере
Процедура ЗаписатьСервер(Отказ)
	Если ЗначениеЗаполнено(Объект) И ЗначениеЗаполнено(ТипСотрудника) И ЗначениеЗаполнено(Пользователь) Тогда
		Если ЗначениеЗаполнено(ИсходныйОбъект) Тогда //Открыт на изменение
			Если ИсходныйРуководительГруппы Тогда //Исх. Рук. Группы
				//Записываем в РС Отв.Сотр.
				Набор = РегистрыСведений.ОтветственныеСотрудники.СоздатьМенеджерЗаписи();
				Набор.Объект        = ИсходныйОбъект;
				Набор.ТипСотрудника = ИсходныйТипСотрудника;
				Набор.Пользователь  = ИсходныйПользователь;
				Набор.Прочитать();
				
				Набор.Объект        = Объект;
				Набор.ТипСотрудника = ТипСотрудника;
				Набор.Пользователь  = Пользователь;
				Попытка
					Набор.Записать();
				Исключение
					Отказ = Истина;
					Возврат;
				КонецПопытки;
				
				ИсходныйОбъект        = Набор.Объект;
				ИсходныйТипСотрудника = Набор.ТипСотрудника;
				ИсходныйПользователь  = Набор.Пользователь;
				
				//Удаляем из РС ВПомощь
				Набор = РегистрыСведений.СотрудникиВПомощь.СоздатьМенеджерЗаписи();
				Набор.Объект        = Объект;
				Набор.ТипСотрудника = ТипСотрудника;
				Набор.Пользователь  = Пользователь;
				Набор.Прочитать();
				Если ЗначениеЗаполнено(Набор.Объект) Тогда
					Попытка
						Набор.Удалить();
					Исключение
						Отказ = Истина;
						Возврат;
					КонецПопытки;
				КонецЕсли;
				
			Иначе //Не Исх. Рук. Группы
				//Проверяем на наличие в РС Отв.Сотр.
				Набор = РегистрыСведений.ОтветственныеСотрудники.СоздатьМенеджерЗаписи();
				Набор.Объект        = Объект;
				Набор.ТипСотрудника = ТипСотрудника;
				Набор.Прочитать();
				
				Если Набор.Пользователь = Пользователь Тогда //Если есть, то отказ
					Отказ = Истина;
					Возврат;
				Иначе //Перезаписываем РС Помощь
					Набор = РегистрыСведений.СотрудникиВПомощь.СоздатьМенеджерЗаписи();
					Набор.Объект        = ИсходныйОбъект;
					Набор.ТипСотрудника = ИсходныйТипСотрудника;
					Набор.Пользователь  = ИсходныйПользователь;
					Набор.Прочитать();
					
					Набор.Объект        = Объект;
					Набор.ТипСотрудника = ТипСотрудника;
					Набор.Пользователь  = Пользователь;
					
					Попытка
						Набор.Записать();
					Исключение
						Отказ = Истина;
						Возврат;
					КонецПопытки;
					
					ИсходныйОбъект        = Набор.Объект;
					ИсходныйТипСотрудника = Набор.ТипСотрудника;
					ИсходныйПользователь  = Набор.Пользователь;
				КонецЕсли;
			КонецЕсли;
							
		Иначе //Создается новая запись	
			//Если РС Отв.Сотр. пустой		
			Набор = РегистрыСведений.ОтветственныеСотрудники.СоздатьМенеджерЗаписи();
			Набор.Объект = Объект;
			Набор.ТипСотрудника = ТипСотрудника;
			Набор.Прочитать();	
			Если Константы.ТолькоОдинОтветственный.Получить() ИЛИ Набор.Пользователь.Пустая() Тогда //Если РС Отв.Сотр. пустой - создаем в РС Отв.Сотр.
				Набор.Объект = Объект;
				Набор.ТипСотрудника = ТипСотрудника;
				Набор.Пользователь = Пользователь;
				Попытка
					Набор.Записать();
				Исключение
					Отказ = Истина;
					Возврат;
				КонецПопытки;
				ИсходныйРуководительГруппы = Истина;
				
			ИначеЕсли Набор.Пользователь = Пользователь Тогда //он есть в РС Отв.Сотр.
				ИсходныйРуководительГруппы = Истина;
				
			Иначе //его нет в РС Отв.Сотр., перезаписываем в РС ВПомощь
				Набор = РегистрыСведений.СотрудникиВПомощь.СоздатьМенеджерЗаписи();
				Набор.Объект = Объект;
				Набор.ТипСотрудника = ТипСотрудника;
				Набор.Пользователь = Пользователь;
				
				Попытка
					Набор.Записать();
				Исключение
					Отказ = Истина;
					Возврат;
				КонецПопытки;	
				ИсходныйРуководительГруппы = Ложь;
			КонецЕсли;
			
			ИсходныйОбъект        = Набор.Объект;
			ИсходныйТипСотрудника = Набор.ТипСотрудника;
			ИсходныйПользователь  = Набор.Пользователь;
		КонецЕсли;
		
	Иначе
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбъектПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ТипСотрудникаПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПользовательПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры
