
&НаКлиенте
Процедура Сформировать(Команда)
	СформироватьНаСервере();
КонецПроцедуры

&НаСервере
Процедура СформироватьНаСервере()
    Макет = Отчеты.МировыеСоглашения.ПолучитьМакет("Макет");
	ТабДок.Очистить();
	
    ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ТабДок.Вывести(ОбластьЗаголовок);		
	ОбластьШапка = ?(Отчет.КолонкаКредитор, Макет.ПолучитьОбласть("Шапка1"), Макет.ПолучитьОбласть("Шапка"));
	ОбластьШапка.Параметры.ПериодОтчетаС = Строка(Формат(НачалоПериода, "ДЛФ=Д"));
	ОбластьШапка.Параметры.ПериодОтчетаПо = Строка(Формат(КонецПериода, "ДЛФ=Д"));
	//ОбластьШапка.Параметры.НомерДоговора = Контрагент.НомерДоговора;
	ТабДок.Вывести(ОбластьШапка);
	
	ТабДок.ФиксацияСверху = 4;
	ОбластьДанных = ?(Отчет.КолонкаКредитор, Макет.ПолучитьОбласть("ДанныеОтчета1"), Макет.ПолучитьОбласть("ДанныеОтчета"));
	
	//Подготовка таблицы с ДО подходящими по стадии
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ОбъектыВРаботеОстатки.Объект КАК ДолговоеОбязательство
	                      |ИЗ
	                      |	РегистрНакопления.ОбъектыВРаботе.Остатки(
	                      |			,
	                      |			Подразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	                      |				И Сотрудник = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)) КАК ОбъектыВРаботеОстатки");
	ТаблицаДО = Запрос.Выполнить().Выгрузить();
	ОтобратьПоСтадии(ТаблицаДО);
	
	Если Должник.Пустая() И Контрагент.Пустая() И Кредитор.Пустая() Тогда
		Запрос.Текст = "ВЫБРАТЬ
		               |	ТаблицаДО.ДолговоеОбязательство
		               |ПОМЕСТИТЬ ТаблицаДО
		               |ИЗ
		               |	&ТаблицаДО КАК ТаблицаДО";
	Иначе
		Запрос.Текст = "ВЫБРАТЬ
		               |	ТаблицаДО.ДолговоеОбязательство
					   |ПОМЕСТИТЬ ТаблицаДОВрем
		               |ИЗ
		               |	&ТаблицаДО КАК ТаблицаДО
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ТаблицаДОВрем.ДолговоеОбязательство
		               |ПОМЕСТИТЬ ТаблицаДО
		               |ИЗ
		               |	ТаблицаДОВрем КАК ТаблицаДОВрем
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДолговыеОбязательства.Контрагенты КАК ДолговыеОбязательстваКонтрагенты
		               |		ПО ТаблицаДОВрем.ДолговоеОбязательство = ДолговыеОбязательстваКонтрагенты.Ссылка
		               |			И (ДолговыеОбязательстваКонтрагенты.ВидКонтрагента = ЗНАЧЕНИЕ(Перечисление.ВидыКонтрагентов.Должник)
		               |					И ДолговыеОбязательстваКонтрагенты.Значение = &Должник
		               |				ИЛИ ДолговыеОбязательстваКонтрагенты.ВидКонтрагента = ЗНАЧЕНИЕ(Перечисление.ВидыКонтрагентов.Контрагент)
		               |					И ДолговыеОбязательстваКонтрагенты.Значение = &Контрагент
		               |				ИЛИ ДолговыеОбязательстваКонтрагенты.ВидКонтрагента = ЗНАЧЕНИЕ(Перечисление.ВидыКонтрагентов.Кредитор)
		               |					И ДолговыеОбязательстваКонтрагенты.Значение = &Кредитор)
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ТаблицаДОВрем.ДолговоеОбязательство
		               |
		               |ИМЕЮЩИЕ
		               |	КОЛИЧЕСТВО(*) >= &КолВо";	
		Запрос.УстановитьПараметр("Должник", Должник);
		Запрос.УстановитьПараметр("Контрагент", Контрагент);
		Запрос.УстановитьПараметр("Кредитор", Кредитор);
		Запрос.УстановитьПараметр("КолВо", Число(Не Должник.Пустая()) + Число(Не Контрагент.Пустая()) + 
				Число(Не Кредитор.Пустая()));
	КонецЕсли;
	Запрос.УстановитьПараметр("ТаблицаДО", ТаблицаДО);
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
	Запрос.ВыполнитьПакет();
	//
	
	
	///////////////////////////////////////
	// Выбор должника и номера закладной //
	///////////////////////////////////////
	Если Сотрудник.Пустая() Тогда
		Запрос.Текст = "ВЫБРАТЬ
		               |	ОбъектыВРаботеОстатки.Объект.ВладелецДолжник КАК Должник,
					   |	ОбъектыВРаботеОстатки.Объект.ВладелецКредитор КАК Кредитор,
		               |	ЕСТЬNULL(ЕСТЬNULL(ДополнительныеСведения.Значение, ДолговыеОбязательстваДополнительныеРеквизиты.Значение), ОбъектыВРаботеОстатки.Объект) КАК НомерПоБазе,
		               |	ОбъектыВРаботеОстатки.Объект КАК ДолговоеОбязательство,
					   |	ОтветственныеСотрудники.Пользователь КАК Ответственный,
		               |	ОбъектыВРаботеОстатки.Объект.Должник КАК ДолжникНаименование,
					   |	ОбъектыВРаботеОстатки.Объект.Кредитор КАК КредиторНаименование
		               |ИЗ
		               |	РегистрНакопления.ОбъектыВРаботе.Остатки(
		               |			&ДатаОтчета,
		               |			Подразделение = &Подразделение
		               |				И Сотрудник = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяССылка)
		               |				И (Объект = &ДолговоеОбязательство
		               |					ИЛИ &ПустоеДО)) КАК ОбъектыВРаботеОстатки
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДО КАК ТаблицаДО
		               |		ПО ОбъектыВРаботеОстатки.Объект = ТаблицаДО.ДолговоеОбязательство
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
		               |		ПО ОбъектыВРаботеОстатки.Объект = ДополнительныеСведения.Объект
		               |			И (ДополнительныеСведения.Свойство.Код = ""     0078"")
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеСотрудники КАК ОтветственныеСотрудники
		               |		ПО ОбъектыВРаботеОстатки.Объект = ОтветственныеСотрудники.Объект
		               |			И (ОтветственныеСотрудники.ТипСотрудника.Код = ""     0002"")
		               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДолговыеОбязательства.ДополнительныеРеквизиты КАК ДолговыеОбязательстваДополнительныеРеквизиты
		               |		ПО ОбъектыВРаботеОстатки.Объект = ДолговыеОбязательстваДополнительныеРеквизиты.Ссылка
		               |			И (ДолговыеОбязательстваДополнительныеРеквизиты.Свойство.Код = ""     0078"")
		               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДолговыеОбязательства.ДополнительныеРеквизиты КАК ДопРеквизитыРегион
		               |		ПО ОбъектыВРаботеОстатки.Объект = ДопРеквизитыРегион.Ссылка
		               |			И (ДопРеквизитыРегион.Свойство.Код = ""     0125"")
		               |			И (ДопРеквизитыРегион.Значение = &Регион
		               |				ИЛИ &НезаполненРегион)
		               |ГДЕ
		               |	НЕ ОбъектыВРаботеОстатки.Объект.ПометкаУдаления
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Должник";
	Иначе
		Запрос.Текст = "ВЫБРАТЬ
		               |	ОбъектыВРаботеОстатки.Объект.ВладелецДолжник КАК Должник,
					   |	ОбъектыВРаботеОстатки.Объект.ВладелецКредитор КАК Кредитор,
		               |	ЕСТЬNULL(ЕСТЬNULL(ДополнительныеСведения.Значение, ДолговыеОбязательстваДополнительныеРеквизиты.Значение), ОбъектыВРаботеОстатки.Объект) КАК НомерПоБазе,
		               |	ОбъектыВРаботеОстатки.Объект КАК ДолговоеОбязательство,
					   |	&Пользователь КАК Ответственный,
		               |	ОбъектыВРаботеОстатки.Объект.Должник КАК ДолжникНаименование,
					   |	ОбъектыВРаботеОстатки.Объект.Кредитор КАК КредиторНаименование
		               |ИЗ
		               |	РегистрНакопления.ОбъектыВРаботе.Остатки(
		               |			&ДатаОтчета,
		               |			Подразделение = &Подразделение
		               |				И Сотрудник = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяССылка)
		               |				И (Объект = &ДолговоеОбязательство
		               |					ИЛИ &ПустоеДО)) КАК ОбъектыВРаботеОстатки
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДО КАК ТаблицаДО
		               |		ПО ОбъектыВРаботеОстатки.Объект = ТаблицаДО.ДолговоеОбязательство
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
		               |		ПО ОбъектыВРаботеОстатки.Объект = ДополнительныеСведения.Объект
		               |			И (ДополнительныеСведения.Свойство.Код = ""     0078"")
		               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДолговыеОбязательства.ДополнительныеРеквизиты КАК ДолговыеОбязательстваДополнительныеРеквизиты
		               |		ПО ОбъектыВРаботеОстатки.Объект = ДолговыеОбязательстваДополнительныеРеквизиты.Ссылка
		               |			И (ДолговыеОбязательстваДополнительныеРеквизиты.Свойство.Код = ""     0078"")
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеСотрудники КАК ОтветственныеСотрудники
		               |		ПО ОбъектыВРаботеОстатки.Объект = ОтветственныеСотрудники.Объект
		               |			И (ОтветственныеСотрудники.Пользователь = &Пользователь)
		               |			И (ОтветственныеСотрудники.ТипСотрудника.Код = ""     0002"")
		               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДолговыеОбязательства.ДополнительныеРеквизиты КАК ДопРеквизитыРегион
		               |		ПО ОбъектыВРаботеОстатки.Объект = ДопРеквизитыРегион.Ссылка
		               |			И (ДопРеквизитыРегион.Свойство.Код = ""     0125"")
		               |			И (ДопРеквизитыРегион.Значение = &Регион
		               |				ИЛИ &НезаполненРегион)
		               |ГДЕ
		               |	НЕ ОбъектыВРаботеОстатки.Объект.ПометкаУдаления
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Должник";
	КонецЕсли;
	Запрос.УстановитьПараметр("ДатаОтчета", КонецДня(ДатаОтчета));
	Запрос.УстановитьПараметр("Пользователь", Сотрудник);
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	Запрос.УстановитьПараметр("ДолговоеОбязательство", ДолговоеОбязательство);
	Запрос.УстановитьПараметр("ПустоеДО", ДолговоеОбязательство.Пустая());
	Запрос.УстановитьПараметр("Регион", Регион);
	Запрос.УстановитьПараметр("НеЗаполненРегион", Регион.Пустая());
	
	Выборка = Запрос.Выполнить().Выбрать();
	НомерЗаписи = 0;
	Пока Выборка.Следующий() Цикл
		НомерЗаписи = НомерЗаписи + 1;
		ДатаРезультатаМС = Дата(3000, 1, 1);
		
		ОбластьДанных.Параметры.Номер      = НомерЗаписи; 
		ОбластьДанных.Параметры.Должник    = Выборка.Должник;
		ОбластьДанных.Параметры.ДолжникРас = Выборка.ДолжникНаименование;
		Если Отчет.КолонкаКредитор Тогда
			ОбластьДанных.Параметры.Кредитор    = Выборка.Кредитор;		
			ОбластьДанных.Параметры.КредиторРас = Выборка.КредиторНаименование;
		КонецЕсли;
		ОбластьДанных.Параметры.НомерЗакладной        = Выборка.НомерПоБазе;
		ОбластьДанных.Параметры.ДолговоеОбязательство = Выборка.ДолговоеОбязательство;
		
		ДатаМероприятия = Неопределено;
		ОбластьДанных.Параметры.ДатаУтверждения       = ЗаписатьКолонку(11, Выборка.ДолговоеОбязательство, ДатаМероприятия); //11
		ОбластьДанных.Параметры.ДатаВступлениявСилу   = ЗаписатьКолонку(12, Выборка.ДолговоеОбязательство, ДатаМероприятия); //12
		ОбластьДанных.Параметры.ДатаОкончанияДействия = ЗаписатьКолонку(13, Выборка.ДолговоеОбязательство, ДатаМероприятия); //13
		ОбластьДанных.Параметры.Результат = ЗаписатьКолонкуРезультат(Выборка.ДолговоеОбязательство, ДатаРезультатаМС,
				ДатаМероприятия); //14
		Если ВРег(Прав(СокрЛП(ОбластьДанных.Параметры.Результат), 12)) <> "НЕ ИСПОЛНЕНО" Тогда
			ОбластьДанных.Параметры.Примечание = ПолучитьТекущиеСтадии(Выборка.ДолговоеОбязательство) + 
					ПолучитьСобытияЗаПериод(Выборка.ДолговоеОбязательство); //15
		Иначе
			ОбластьДанных.Параметры.Примечание = ПолучитьТекущуюСтадию2(Выборка.ДолговоеОбязательство);		
		КонецЕсли;			
		ОбластьДанных.Параметры.ДатаИЛ = ЗаписатьКолонкуДатаИЛИП(16, Выборка.ДолговоеОбязательство, ДатаРезультатаМС); //16
		ОбластьДанных.Параметры.ДатаИП = ЗаписатьКолонкуДатаИЛИП(4, Выборка.ДолговоеОбязательство, ДатаРезультатаМС); //17
		
		ТабДок.Вывести(ОбластьДанных);		
	КонецЦикла;	
КонецПроцедуры

&НаСервере
Функция ПолучитьТекущиеСтадии(ДО)
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	Мероприятие.Схема
	                      |ИЗ
	                      |	Задача.Мероприятие КАК Мероприятие
	                      |ГДЕ
	                      |	(Мероприятие.Объект = &ДО
	                      |			ИЛИ Мероприятие.Объект.Владелец = &ДО)
	                      |	И Мероприятие.ДатаВыполнения < &ТекДата
	                      |	И Мероприятие.Выполнена
	                      |	И НЕ Мероприятие.ПометкаУдаления
	                      |	И (Мероприятие.БизнесПроцесс = ЗНАЧЕНИЕ(БизнесПроцесс.БизнесПроцессы.ПустаяСсылка)
	                      |			ИЛИ НЕ Мероприятие.БизнесПроцесс.ПометкаУдаления)
	                      |	И Мероприятие.Схема <> ЗНАЧЕНИЕ(Справочник.КартыМаршрутов.ПустаяСсылка)
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	Мероприятие.Схема
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Мероприятие.Схема.Наименование");	
	Запрос.УстановитьПараметр("ТекДата", КонецДня(ДатаОтчета));	
	Запрос.УстановитьПараметр("ДО", ДО);	
	Результат = Запрос.Выполнить().Выбрать();
	Стр = "";
	Пока Результат.Следующий() Цикл
		Стр = Стр + Результат.Схема.Наименование + ", ";
	КонецЦикла;	
	
	Если Стр <> "" Тогда
		Стр = "МС заключено на стадии: " + Лев(Стр, СтрДлина(Стр) - 2) + "." + Символы.ПС;
	КонецЕсли;
	
	Возврат Стр;
КонецФункции

&НаСервере
Функция ПолучитьСобытияЗаПериод(ДО)
	Запрос2 = Новый Запрос("ВЫБРАТЬ
	                       |	Мероприятие.ТипМероприятия,
	                       |	Мероприятие.ФактическаяДата КАК ФактическаяДата,
	                       |	Мероприятие.Комментарий,
	                       |	Мероприятие.Ссылка
	                       |ИЗ
	                       |	Задача.Мероприятие КАК Мероприятие
	                       |ГДЕ
	                       |	Мероприятие.ФактическаяДата МЕЖДУ &НачалоПериода И &КонецПериода
	                       |	И Мероприятие.Выполнена
	                       |	И (Мероприятие.Объект = &ДолговоеОбязательство
	                       |			ИЛИ Мероприятие.Объект.Владелец = &ДолговоеОбязательство)
	                       |	И (Мероприятие.БизнесПроцесс = ЗНАЧЕНИЕ(БизнесПроцесс.БизнесПроцессы.ПустаяСсылка)
	                       |			ИЛИ (НЕ Мероприятие.БизнесПроцесс.ПометкаУдаления))
	                       |	И НЕ Мероприятие.ВыполненоКакНеАктуальное
	                       |
	                       |УПОРЯДОЧИТЬ ПО
	                       |	ФактическаяДата");
	Запрос2.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос2.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));
	Запрос2.УстановитьПараметр("ДолговоеОбязательство", ДО);
	Выборка2 = Запрос2.Выполнить().Выбрать();
	СтрокаДействий = "";
	
	
	//СтрСокр_0 - текущий комментарий
	//СтрСокр_1 - результат функции комментария
	//Стр_0 - предыдущий комментарий
	//Стр_1 - предыдущий результат функции комментария
	Номер = 1;
	Стр_0 = "";	
	Стр_1 = "";
	Стр_ = "";
	Пока Выборка2.Следующий() Цикл
		СтрСокр_0 = СокрЛП(Выборка2.Комментарий);
		СтрСокр_1 = ?(Выборка2.Ссылка.Результат.ШаблонКомментария.Пустая(), "", 
				Справочники.ФункцииКомментариев.ВычислитьФункцию(
					Выборка2.Ссылка.Результат.ШаблонКомментария.Функция, Выборка2.Ссылка, ""));
		
		Если СтрСокр_0 <> "" И Стр_0 <> СтрСокр_0 И (Стр_1 <> СтрСокр_1 ИЛИ СтрСокр_1 = "") И Стр_ <> СтрСокр_0 Тогда
			Стр = Формат(Номер, "ЧГ=") + ") " + СтрСокр_0;
			СтрокаДействий = СтрокаДействий + Стр + Символы.ПС;
			Номер = Номер + 1;
			Стр_0 = СтрСокр_0;
			Стр_1 = СтрСокр_1;
			Стр_ = СтрСокр_0;
			
		ИначеЕсли СтрСокр_0 = "" И СтрСокр_1 <> "" И Стр_1 <> СтрСокр_1 И Стр_ <> СтрСокр_1 Тогда
			Стр = Формат(Номер, "ЧГ=") + ") " + СтрСокр_1;
			СтрокаДействий = СтрокаДействий + Стр + Символы.ПС;
			Номер = Номер + 1;
			Стр_0 = СтрСокр_1;
			Стр_1 = СтрСокр_1;
			Стр_ = СтрСокр_1;
				
		Иначе
			Стр_1 = СтрСокр_1;			
		КонецЕсли;		
	КонецЦикла;
	
	Возврат СокрЛП(СтрокаДействий);
КонецФункции

&НаСервере
Функция ПолучитьТекущуюСтадию2(ДО)
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ТабКод.КодТипаМероприятия,
	                      |	ТабКод.КодДопРеквизитаМероприятия,
	                      |	ТабКод.НомерКолонки,
	                      |	ТабКод.КодРезультата
	                      |ПОМЕСТИТЬ ТабКод
	                      |ИЗ
	                      |	&ТабКод КАК ТабКод
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	Мероприятие.Ссылка,
	                      |	Мероприятие.Результат.Код,
	                      |	Мероприятие.ТипМероприятия.Код
	                      |ПОМЕСТИТЬ ТабМеропр
	                      |ИЗ
	                      |	Задача.Мероприятие КАК Мероприятие
	                      |ГДЕ
	                      |	Мероприятие.Выполнена
	                      |	И НЕ Мероприятие.ПометкаУдаления
	                      |	И Мероприятие.ДатаВыполнения < &ТекДата
	                      |	И (Мероприятие.Объект = &ДО
	                      |			ИЛИ Мероприятие.Объект.Владелец = &ДО)
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ ПЕРВЫЕ 1
	                      |	ТабКод.НомерКолонки
	                      |ИЗ
	                      |	ТабМеропр КАК ТабМеропр
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТабКод КАК ТабКод
	                      |		ПО ТабМеропр.ТипМероприятияКод = ТабКод.КодТипаМероприятия
	                      |			И ТабМеропр.РезультатКод = ТабКод.КодРезультата
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	ТабКод.НомерКолонки УБЫВ");
	Запрос.УстановитьПараметр("ТекДата", КонецДня(ДатаОтчета));
	Запрос.УстановитьПараметр("ДО", ДО);
	Запрос.УстановитьПараметр("ТабКод", ТабКод.Выгрузить());
	Результат = Запрос.Выполнить().Выбрать();
	                                   
	Если Результат.Следующий() Тогда
		Если Результат.НомерКолонки = 22 Тогда
			Возврат "Текущая стадия: Наложен арест.";
		ИначеЕсли Результат.НомерКолонки = 23 Тогда
			Возврат "Текущая стадия: Реализация имущества.";
		ИначеЕсли Результат.НомерКолонки = 24 Тогда
			Возврат "Текущая стадия: Оставление имущества за взыскателем.";
		ИначеЕсли Результат.НомерКолонки = 25 Тогда
			Возврат "Текущая стадия: Получено свидетельство о регистрации права собственности.";
		КонецЕсли;
	КонецЕсли;	
	Возврат "";
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ДатаОтчета = ТекущаяДата();
	НачалоПериода = НачалоМесяца(ТекущаяДата());
	КонецПериода = ТекущаяДата();
	
	ЗаполнитьТаблицуКодов();
КонецПроцедуры

&НаСервере
Функция ЗаписатьКолонку(НомерКолонки, ДО, ДатаМероприятия = Неопределено)
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ТабКод.КодТипаМероприятия,
	                      |	ТабКод.КодДопРеквизитаМероприятия,
	                      |	ТабКод.НомерКолонки,
	                      |	ТабКод.КодРезультата
	                      |ПОМЕСТИТЬ ТабКод
	                      |ИЗ
	                      |	&ТабКод КАК ТабКод
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ВЫБОР
	                      |		КОГДА ТабКод.КодДопРеквизитаМероприятия = """"
	                      |			ТОГДА Мероприятие.ФактическаяДата
	                      |		ИНАЧЕ МероприятиеДополнительныеРеквизиты.Значение
	                      |	КОНЕЦ КАК ДатаМероприятия
	                      |ИЗ
	                      |	Задача.Мероприятие КАК Мероприятие
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ Задача.Мероприятие.ДополнительныеРеквизиты КАК МероприятиеДополнительныеРеквизиты
	                      |		ПО (МероприятиеДополнительныеРеквизиты.Ссылка = Мероприятие.Ссылка)
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТабКод КАК ТабКод
	                      |		ПО Мероприятие.ТипМероприятия.Код = ТабКод.КодТипаМероприятия
	                      |			И (ТабКод.КодДопРеквизитаМероприятия = """"
	                      |				ИЛИ МероприятиеДополнительныеРеквизиты.Свойство.Код = ТабКод.КодДопРеквизитаМероприятия)
	                      |			И (ТабКод.НомерКолонки = &НомерКолонки)
	                      |			И (Мероприятие.Результат.Код = ТабКод.КодРезультата
	                      |				ИЛИ ТабКод.КодРезультата = """")
	                      |ГДЕ
	                      |	(Мероприятие.Объект = &ДО
	                      |			ИЛИ Мероприятие.Объект.Владелец = &ДО)
	                      |	И Мероприятие.ФактическаяДата <= &ДатаОтчета
						  |	И Мероприятие.ФактическаяДата >= &ДатаМероприятия
	                      |	И (НЕ Мероприятие.ПометкаУдаления)
	                      |	И Мероприятие.Выполнена
	                      |	И (Мероприятие.БизнесПроцесс = ЗНАЧЕНИЕ(БизнесПроцесс.БизнесПроцессы.ПустаяСсылка)
	                      |			ИЛИ (НЕ Мероприятие.БизнесПроцесс.ПометкаУдаления))
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	ДатаМероприятия");	
	Запрос.УстановитьПараметр("НомерКолонки", НомерКолонки);	
    Запрос.УстановитьПараметр("ТабКод", ТабКод.Выгрузить());
	Запрос.УстановитьПараметр("ДО", ДО);
	Запрос.УстановитьПараметр("ДатаОтчета", КонецДня(ДатаОтчета));
	Запрос.УстановитьПараметр("ДатаМероприятия", ?(ДатаМероприятия = Неопределено, Дата(1,1,1), ДатаМероприятия));	
	Результат = Запрос.Выполнить().Выбрать();
	СтрокаТМП = "";
	Счетчик = 0;
	ПоследняяДата = Дата(1,1,1);
	Пока Результат.Следующий() Цикл
		СтрДата = Формат(Результат.ДатаМероприятия, "ДЛФ=Д");
		Счетчик = Счетчик + 1;
		//СтрокаТМП = СтрокаТМП + СтрДата + Символы.ПС;
		СтрокаТМП = СтрДата;
		ПоследняяДата = Результат.ДатаМероприятия;
	КонецЦикла;
	
	Если ДатаМероприятия = Неопределено Тогда
		ДатаМероприятия = ПоследняяДата;
	КонецЕсли;
	
    Возврат СокрЛП(СтрокаТМП);	
КонецФункции

&НаСервере
Функция ЗаписатьКолонкуРезультат(ДО, ДатаРезультатаМС, ДатаМероприятия)
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	Мероприятие.Результат.Наименование КАК Наименование,
	                      |	Мероприятие.ФактическаяДата
	                      |ИЗ
	                      |	Задача.Мероприятие КАК Мероприятие
	                      |ГДЕ
	                      |	(Мероприятие.Объект = &ДО
	                      |			ИЛИ Мероприятие.Объект.Владелец = &ДО)
	                      |	И Мероприятие.ФактическаяДата <= &ДатаОтчета
						  |	И Мероприятие.ФактическаяДата >= &ДатаМероприятия
	                      |	И (НЕ Мероприятие.ПометкаУдаления)
	                      |	И Мероприятие.Выполнена
	                      |	И (Мероприятие.БизнесПроцесс = ЗНАЧЕНИЕ(БизнесПроцесс.БизнесПроцессы.ПустаяСсылка)
	                      |			ИЛИ (НЕ Мероприятие.БизнесПроцесс.ПометкаУдаления))
	                      |	И Мероприятие.ТипМероприятия.Код В (""     0121"", ""     0145"")
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Мероприятие.ФактическаяДата");
	Запрос.УстановитьПараметр("ДО", ДО);
	Запрос.УстановитьПараметр("ДатаОтчета", КонецДня(ДатаОтчета));
	Запрос.УстановитьПараметр("ДатаМероприятия", ДатаМероприятия);	
	Результат = Запрос.Выполнить().Выбрать();
	СтрокаТМП = "";
	Пока Результат.Следующий() Цикл
		СтрокаТМП = СтрокаТМП + Результат.Наименование + Символы.ПС;
		ДатаРезультатаМС = Результат.ФактическаяДата;
	КонецЦикла;
    Возврат СокрЛП(СтрокаТМП);	
КонецФункции

&НаСервере
Функция ЗаписатьКолонкуДатаИЛИП(НомерКолонки, ДО, ДатаРезультатаМС)
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ТабКод.КодТипаМероприятия,
	                      |	ТабКод.КодДопРеквизитаМероприятия,
	                      |	ТабКод.НомерКолонки,
	                      |	ТабКод.КодРезультата
	                      |ПОМЕСТИТЬ ТабКод
	                      |ИЗ
	                      |	&ТабКод КАК ТабКод
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ВЫБОР
	                      |		КОГДА ТабКод.КодДопРеквизитаМероприятия = """"
	                      |			ТОГДА Мероприятие.ФактическаяДата
	                      |		ИНАЧЕ МероприятиеДополнительныеРеквизиты.Значение
	                      |	КОНЕЦ КАК ДатаМероприятия
	                      |ИЗ
	                      |	Задача.Мероприятие КАК Мероприятие
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ Задача.Мероприятие.ДополнительныеРеквизиты КАК МероприятиеДополнительныеРеквизиты
	                      |		ПО (МероприятиеДополнительныеРеквизиты.Ссылка = Мероприятие.Ссылка)
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТабКод КАК ТабКод
	                      |		ПО Мероприятие.ТипМероприятия.Код = ТабКод.КодТипаМероприятия
	                      |			И (ТабКод.КодДопРеквизитаМероприятия = """"
	                      |				ИЛИ МероприятиеДополнительныеРеквизиты.Свойство.Код = ТабКод.КодДопРеквизитаМероприятия)
	                      |			И (ТабКод.НомерКолонки = &НомерКолонки)
	                      |			И (Мероприятие.Результат.Код = ТабКод.КодРезультата
	                      |				ИЛИ ТабКод.КодРезультата = """")
	                      |ГДЕ
	                      |	(Мероприятие.Объект = &ДО
	                      |			ИЛИ Мероприятие.Объект.Владелец = &ДО)
	                      |	И Мероприятие.ФактическаяДата <= &ДатаОтчета
	                      |	И Мероприятие.ФактическаяДата >= &ДатаРезультатаМС
	                      |	И (НЕ Мероприятие.ПометкаУдаления)
	                      |	И Мероприятие.Выполнена
	                      |	И (Мероприятие.БизнесПроцесс = ЗНАЧЕНИЕ(БизнесПроцесс.БизнесПроцессы.ПустаяСсылка)
	                      |			ИЛИ (НЕ Мероприятие.БизнесПроцесс.ПометкаУдаления))
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	ДатаМероприятия");	
	Запрос.УстановитьПараметр("НомерКолонки", НомерКолонки);	
    Запрос.УстановитьПараметр("ТабКод", ТабКод.Выгрузить());
	Запрос.УстановитьПараметр("ДО", ДО);
	Запрос.УстановитьПараметр("ДатаОтчета", КонецДня(ДатаОтчета));
	Запрос.УстановитьПараметр("ДатаРезультатаМС", ДатаРезультатаМС);	
	Результат = Запрос.Выполнить().Выбрать();
	СтрокаТМП = "";
	Счетчик = 0;
	Пока Результат.Следующий() Цикл
		СтрДата = Формат(Результат.ДатаМероприятия, "ДЛФ=Д");
		Счетчик = Счетчик + 1;
		СтрокаТМП = СтрокаТМП + СтрДата + Символы.ПС;		
	КонецЦикла;
    Возврат СокрЛП(СтрокаТМП);	
КонецФункции

&НаСервере
Процедура ЗаполнитьТаблицуКодов()
	ТабКод.Очистить();	
	
	НоваяСтрока = ТабКод.Добавить();
	НоваяСтрока.КодТипаМероприятия = "     0034";
	НоваяСтрока.КодДопРеквизитаМероприятия = "     2037";
	НоваяСтрока.НомерКолонки = 11;
	НоваяСтрока.КодРезультата = "     0182";
	
	НоваяСтрока = ТабКод.Добавить();
	НоваяСтрока.КодТипаМероприятия = "     0050";
	НоваяСтрока.КодДопРеквизитаМероприятия = "     2037";
	НоваяСтрока.НомерКолонки = 11;
	НоваяСтрока.КодРезультата = "     0180";
	
	
	НоваяСтрока = ТабКод.Добавить();
	НоваяСтрока.КодТипаМероприятия = "     0144";
	НоваяСтрока.КодДопРеквизитаМероприятия = "     2050";
	НоваяСтрока.НомерКолонки = 12;
	НоваяСтрока.КодРезультата = "     0220";
	
	НоваяСтрока = ТабКод.Добавить();
	НоваяСтрока.КодТипаМероприятия = "     0217";
	НоваяСтрока.КодДопРеквизитаМероприятия = "     2050";
	НоваяСтрока.НомерКолонки = 12;
	НоваяСтрока.КодРезультата = "     0315";
	
	
	НоваяСтрока = ТабКод.Добавить();
	НоваяСтрока.КодТипаМероприятия = "     0144";
	НоваяСтрока.КодДопРеквизитаМероприятия = "     2048";
	НоваяСтрока.НомерКолонки = 13;
	НоваяСтрока.КодРезультата = "     0220";
	
	НоваяСтрока = ТабКод.Добавить();
	НоваяСтрока.КодТипаМероприятия = "     0217";
	НоваяСтрока.КодДопРеквизитаМероприятия = "     2048";
	НоваяСтрока.НомерКолонки = 13;
	НоваяСтрока.КодРезультата = "     0315";
	
	
	НоваяСтрока = ТабКод.Добавить();
	НоваяСтрока.КодТипаМероприятия = "     0098";
	НоваяСтрока.КодДопРеквизитаМероприятия = "     2038";
	НоваяСтрока.НомерКолонки = 16;
	НоваяСтрока.КодРезультата = "     0151";
	
	НоваяСтрока = ТабКод.Добавить();
	НоваяСтрока.КодТипаМероприятия = "     0040";
	НоваяСтрока.КодДопРеквизитаМероприятия = "     2038";
	НоваяСтрока.НомерКолонки = 16;
	НоваяСтрока.КодРезультата = "     0079";
	
	
	НоваяСтрока = ТабКод.Добавить();
	НоваяСтрока.КодТипаМероприятия = "     0070";
	НоваяСтрока.КодДопРеквизитаМероприятия = "     2017";
	НоваяСтрока.НомерКолонки = 4;
	НоваяСтрока.КодРезультата = "     0100";
	
	
	НоваяСтрока = ТабКод.Добавить();
	НоваяСтрока.КодТипаМероприятия = "     0071";
	НоваяСтрока.КодДопРеквизитаМероприятия = "";
	НоваяСтрока.НомерКолонки = 22;
	НоваяСтрока.КодРезультата = "     0101";
	
	НоваяСтрока = ТабКод.Добавить();
	НоваяСтрока.КодТипаМероприятия = "     0072";
	НоваяСтрока.КодДопРеквизитаМероприятия = "";
	НоваяСтрока.НомерКолонки = 23;
	НоваяСтрока.КодРезультата = "     0102";
	
	НоваяСтрока = ТабКод.Добавить();
	НоваяСтрока.КодТипаМероприятия = "     0051";
	НоваяСтрока.КодДопРеквизитаМероприятия = "";
	НоваяСтрока.НомерКолонки = 24;
	НоваяСтрока.КодРезультата = "     0081";
	
	НоваяСтрока = ТабКод.Добавить();
	НоваяСтрока.КодТипаМероприятия = "     0141";
	НоваяСтрока.КодДопРеквизитаМероприятия = "";
	НоваяСтрока.НомерКолонки = 25;
	НоваяСтрока.КодРезультата = "     0216";
КонецПроцедуры

&НаКлиенте
Процедура РегионНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	 Параметр  = Новый ПараметрВыбора("Отбор.Владелец", НайтиПВХПоКоду("     0125"));
	 НовыйМассив = Новый Массив();
	 НовыйМассив.Добавить(Параметр);
	 НовыеПараметры = Новый ФиксированныйМассив(НовыйМассив);
	 Элементы.Регион.ПараметрыВыбора = НовыеПараметры;
КонецПроцедуры

&НаСервере
Функция НайтиПВХПоКоду(Код)
 	Возврат ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоКоду(Код); 
КонецФункции // НайтиПВХПоКоду()

&НаСервере
Процедура ОтобратьПоСтадии(Таблица)
	МассивРезультатовМС = Новый Массив();	
	МассивРезультатовМС.Добавить(Справочники.РезультатыМероприятий.НайтиПоКоду("     0220"));
	МассивРезультатовМС.Добавить(Справочники.РезультатыМероприятий.НайтиПоКоду("     0315"));
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	Таблица.ДолговоеОбязательство
	                      |ПОМЕСТИТЬ Таблица
	                      |ИЗ
	                      |	&Таблица КАК Таблица
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	Таблица.ДолговоеОбязательство
	                      |ИЗ
	                      |	Таблица КАК Таблица
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Задача.Мероприятие КАК Мероприятие
	                      |		ПО (Таблица.ДолговоеОбязательство = Мероприятие.Объект
	                      |				ИЛИ Таблица.ДолговоеОбязательство = Мероприятие.Объект.Владелец)
	                      |			И (Мероприятие.Выполнена)
	                      |			И (Мероприятие.Результат В (&МассивРезультатовМС))
	                      |			И (Мероприятие.ДатаВыполнения < &ТекДата)
	                      |			И (НЕ Мероприятие.ПометкаУдаления)
	                      |			И (Мероприятие.БизнесПроцесс = ЗНАЧЕНИЕ(БизнесПроцесс.БизнесПроцессы.ПустаяСсылка)
	                      |				ИЛИ НЕ Мероприятие.БизнесПроцесс.ПометкаУдаления)
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	Таблица.ДолговоеОбязательство");
	Запрос.УстановитьПараметр("Таблица", Таблица);
	Запрос.УстановитьПараметр("МассивРезультатовМС", МассивРезультатовМС);
	Запрос.УстановитьПараметр("ТекДата", КонецДня(ДатаОтчета));
	
	Таблица = Запрос.Выполнить().Выгрузить();	
КонецПроцедуры
