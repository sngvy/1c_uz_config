
&НаСервере
Процедура ЗаполнитьПоДоговору()
	Для Каждого Реквизит Из Метаданные.Документы.ДоговорМикрозайма.Реквизиты Цикл
		Попытка
			Объект[Реквизит.Имя] = ВладелецФормы.Объект.ТекущийДоговор[Реквизит.Имя];
		Исключение
			
		КонецПопытки;
	КонецЦикла;
	//Объект.ИнтервалыПроцентнойСтавки.Загрузить(ВладелецФормы
КонецПроцедуры

&НаСервере
Процедура ЗаймПриИзмененииНаСервере()
	Объект.ТекущийДоговор = РасчетЗадолженностиМФО.ПолучитьТекущийДоговор(Объект.Займ, НачалоДня(ТекущаяДата()));
	Если ЗначениеЗаполнено(Объект.ТекущийДоговор) Тогда
		ЗаполнитьПоДоговору();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗаймПриИзменении(Элемент)
	ЗаймПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура РассчитатьСписокПлатежейНаСервере()
	Объект.СписокПлатежей.Очистить();
	Список = РасчетЗадолженностиМФО.РассчитатьСписокПлатежей(Объект);
	Для Каждого Элемент Из Список Цикл
		стр = Объект.СписокПлатежей.Добавить();
		ЗаполнитьЗначенияСвойств(стр, Элемент);
	КонецЦикла
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСписокПлатежей(Команда)
	РассчитатьСписокПлатежейНаСервере();
КонецПроцедуры

&НаСервере
Процедура РассчитатьГрафикПлатежейНаСервере()
	Объект.ГрафикПлатежей.Очистить();
	График = РасчетЗадолженностиМФО.РассчитатьГрафикПлановыхПогашений(Объект, Объект.СписокПлатежей.Выгрузить());
	Для Каждого Элемент из График Цикл
		стр = Объект.ГрафикПлатежей.Добавить();
		ЗаполнитьЗначенияСвойств(стр, Элемент);
	КонецЦикла;
	ЗаполнитьГрафикПлатежей();
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьГрафикПлатежей(Команда)
	Если Не ЗначениеЗаполнено(Объект.ПрограммаРасчета) Тогда
		Сообщить("Сперва заполните программу расчета!");
		Возврат;
	КонецЕсли;	
	Если Не ЗначениеЗаполнено(Объект.Срок) Тогда
		Сообщить("Сперва укажите срок выдачи!");
		Возврат;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Объект.СуммаВыданногоЗайма) Тогда
		Сообщить("Сперва укажите сумму!");
		Возврат;
	КонецЕсли;	
	Объект.СписокПлатежей.Сортировать("ДатаПлатежа");
	РассчитатьГрафикПлатежейНаСервере();
КонецПроцедуры


&НаКлиенте
Процедура СписокПлатежейПриИзменении(Элемент)
	ЗаполнитьДатуПогашения();	
КонецПроцедуры


&НаСервере
Функция ДатаПоследнегоПлатежаВСписке()
	МаксимальнаяДата = Дата(1, 1, 1);
	Для Каждого Элемент из Объект.СписокПлатежей Цикл
		Если Элемент.ДатаПлатежа > МаксимальнаяДата Тогда
			МаксимальнаяДата = Элемент.ДатаПлатежа;
		КонецЕсли;
	КонецЦикла;
	Возврат МаксимальнаяДата;
КонецФункции



&НаКлиенте
Процедура Добавить(Команда)
	ВладелецФормы.Объект.ГрафикПлатежей.Очистить();
	Для Каждого Элемент Из Объект.ГрафикПлатежей Цикл
		стр = ВладелецФормы.Объект.ГрафикПлатежей.Добавить();
		ЗаполнитьЗначенияСвойств(стр, Элемент);
	КонецЦикла;
	
	ВладелецФормы.ГрафикПлатежей.Очистить();
	ИтогоСуммаПлатежа = 0;
	ИтогоОсновнойДолг = 0;
	ИтогоПроценты = 0;
	Для Каждого стр из Объект.ГрафикПлатежей Цикл
		Если стр.СуммаПлатежа > 0 Тогда
			стрТаб = ВладелецФормы.ГрафикПлатежей.Добавить();
			ЗаполнитьЗначенияСвойств(стрТаб, стр);
			ИтогоСуммаПлатежа 	= ИтогоСуммаПлатежа + стр.СуммаПлатежа;
			ИтогоОсновнойДолг 	= ИтогоОсновнойДолг + стр.ОплатаОсновнойДолг;
			ИтогоПроценты		= ИтогоПроценты		+ стр.ОплатаПроценты;
		КонецЕсли;
	КонецЦикла;
	ВладелецФормы.Элементы.ГрафикСуммаПлатежа.ТекстПодвала  		= Формат(ИтогоСуммаПлатежа, "ЧДЦ=2; ЧН=' '");
	ВладелецФормы.Элементы.ГрафикОплатаОсновнойДолг.ТекстПодвала  = Формат(ИтогоОсновнойДолг, "ЧДЦ=2; ЧН=' '");
	ВладелецФормы.Элементы.ГрафикОплатаПроценты.ТекстПодвала = Формат(ИтогоПроценты, "ЧДЦ=2; ЧН=' '");
	
	ВладелецФормы.Модифицированность = Истина;
	
	ЭтаФорма.Закрыть();
КонецПроцедуры



&НаСервере
Процедура УправлениеФормой()
	Элементы.СпособПогашения.ТолькоПросмотр = (Объект.ВидПлатежа = Перечисления.ВидыПлатежей.Аннуитетный) ИЛИ (Объект.ВидПлатежа = Перечисления.ВидыПлатежей.Индивидуальный);	
	Элементы.ВидПроцентнойСтавки.ТолькоПросмотр = Истина;
	Элементы.ДатаПогашенияЗадолженности.ТолькоПросмотр = Истина;
	Элементы.ПериодичностьСрокаЗайма.ТолькоПросмотр = (Объект.ВидПлатежа = Перечисления.ВидыПлатежей.Индивидуальный);
	Попытка
		Элементы.Калькулятор.Видимость = (Объект.ВидПлатежа = Перечисления.ВидыПлатежей.Индивидуальный);
	Исключение
	Конецпопытки;
	Элементы.РассчитатьГрафик.Видимость = Не (Объект.ВидПлатежа = Перечисления.ВидыПлатежей.Индивидуальный);	
КонецПроцедуры

&НаСервере
Процедура ВидПлатежаПриИзмененииНаСервере()
	Если Объект.ВидПлатежа = Перечисления.ВидыПлатежей.Аннуитетный Тогда
		Объект.СпособПогашения = Перечисления.СпособыПогашенияЗаймов.Равномерно;
	ИначеЕсли Объект.ВидПлатежа = Перечисления.ВидыПлатежей.Индивидуальный Тогда
		Объект.СпособПогашения = Перечисления.СпособыПогашенияЗаймов.Равномерно;
		Объект.ПериодичностьСрокаЗайма = Перечисления.ПериодичностьСрокаЗайма.День;
		ЗаполнитьДатуПогашения();
	КонецЕсли;
	
	УправлениеФормой();
КонецПроцедуры

&НаКлиенте
Процедура ВидПлатежаПриИзменении(Элемент)
	ВидПлатежаПриИзмененииНаСервере();
	Объект.ГрафикПлатежей.Очистить();
	ЗаполнитьГрафикПлатежей();
КонецПроцедуры

&НаКлиенте
Процедура ПрограммаРасчетаПриИзменении(Элемент)
	ЗаполнитьПоПрограмме();
	Объект.ГрафикПлатежей.Очистить();
	ЗаполнитьГрафикПлатежей();	
КонецПроцедуры

&НаКлиенте
Процедура СрокПриИзменении(Элемент)
	ЗаполнитьДатуПогашения();
	Объект.ГрафикПлатежей.Очистить();
	ЗаполнитьГрафикПлатежей();	
КонецПроцедуры

&НаКлиенте
Процедура ПериодичностьСрокаЗаймаПриИзменении(Элемент)
	ЗаполнитьДатуПогашения();
	Объект.ГрафикПлатежей.Очистить();
	ЗаполнитьГрафикПлатежей();	
КонецПроцедуры

&НаКлиенте
Процедура ДатаВыдачиЗаймаПриИзменении(Элемент)
	ЗаполнитьДатуПогашения();
	Объект.ГрафикПлатежей.Очистить();
	ЗаполнитьГрафикПлатежей();	
КонецПроцедуры

&НаКлиенте
Процедура СуммаВыданногоЗаймаПриИзменении(Элемент)
	Объект.ГрафикПлатежей.Очистить();
	ЗаполнитьГрафикПлатежей();
КонецПроцедуры

&НаКлиенте
Процедура ДатаДоговораПриИзменении(Элемент)
	Объект.ГрафикПлатежей.Очистить();
	ЗаполнитьГрафикПлатежей();
КонецПроцедуры

&НаКлиенте
Процедура ВидПроцентнойСтавкиПриИзменении(Элемент)
	Объект.ГрафикПлатежей.Очистить();
	ЗаполнитьГрафикПлатежей();
КонецПроцедуры

&НаКлиенте
Процедура ПроцентнаяСтавкаПриИзменении(Элемент)
	Объект.ГрафикПлатежей.Очистить();
	ЗаполнитьГрафикПлатежей();
КонецПроцедуры

&НаКлиенте
Процедура ПериодичностьПроцентнойСтавкиПриИзменении(Элемент)
	Объект.ГрафикПлатежей.Очистить();
	ЗаполнитьГрафикПлатежей();
КонецПроцедуры

&НаКлиенте
Процедура СпособПогашенияПриИзменении(Элемент)
	Объект.ГрафикПлатежей.Очистить();
	ЗаполнитьГрафикПлатежей();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоПрограмме()
	Если ЗначениеЗаполнено(Объект.ПрограммаРасчета) Тогда
		Объект.ВидПлатежа = Объект.ПрограммаРасчета.ВидПлатежа;
		Объект.ВидПроцентнойСтавки = Объект.ПрограммаРасчета.ВидПроцентнойСтавки;
		Объект.ПериодичностьПроцентнойСтавки = Объект.ПрограммаРасчета.ПериодичностьПроцентнойСтавки;
		Объект.ПериодичностьСрокаЗайма = Объект.ПрограммаРасчета.ПериодичностьСрокаЗайма;
		Объект.СпособПогашения = Объект.ПрограммаРасчета.СпособПогашения;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДатуПогашения()
	Если Объект.ВидПлатежа = Перечисления.ВидыПлатежей.Индивидуальный Тогда
		Объект.ДатаПогашения = ДатаПоследнегоПлатежаВСписке();
		Объект.Срок = (Объект.ДатаПогашения - Объект.ДатаВыдачиЗайма)/86400;
	ИначеЕсли Объект.ВидПлатежа = Перечисления.ВидыПлатежей.Аннуитетный Тогда
		Объект.ДатаПогашения = РасчетЗадолженностиМФО.РассчитатьДатуПогашения(Объект);
	ИначеЕсли Объект.ВидПлатежа = Перечисления.ВидыПлатежей.Дифференцированный Тогда
		Объект.ДатаПогашения = РасчетЗадолженностиМФО.РассчитатьДатуПогашения(Объект);		
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьГрафикПлатежей()
	ГрафикПлатежей.Очистить();
	ИтогоСуммаПлатежа = 0;
	ИтогоОсновнойДолг = 0;
	ИтогоПроценты = 0;
	Для Каждого стр из Объект.ГрафикПлатежей Цикл
		Если стр.СуммаПлатежа > 0 Тогда
			стрТаб = ГрафикПлатежей.Добавить();
			ЗаполнитьЗначенияСвойств(стрТаб, стр);
			ИтогоСуммаПлатежа 	= ИтогоСуммаПлатежа + стр.СуммаПлатежа;
			ИтогоОсновнойДолг 	= ИтогоОсновнойДолг + стр.ОплатаОсновнойДолг;
			ИтогоПроценты		= ИтогоПроценты		+ стр.ОплатаПроценты;
		КонецЕсли;
	КонецЦикла;
	Элементы.ГрафикСуммаПлатежа.ТекстПодвала  		= Формат(ИтогоСуммаПлатежа, "ЧДЦ=2; ЧН=' '");
	Элементы.ГрафикОплатаОсновнойДолг.ТекстПодвала  = Формат(ИтогоОсновнойДолг, "ЧДЦ=2; ЧН=' '");
	Элементы.ГрафикОплатаПроценты.ТекстПодвала = Формат(ИтогоПроценты, "ЧДЦ=2; ЧН=' '");
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
КонецПроцедуры

&НаСервере
Функция СписокРеквизитовДоговорМикрозайма()
	Возврат РасчетЗадолженностиМФО.СписокРеквизитовДоговорМикрозайма();	
КонецФункции

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Список = СписокРеквизитовДоговорМикрозайма();
	Для Каждого Реквизит Из Список Цикл
		Попытка
			Объект[Реквизит] = ВладелецФормы.Объект[Реквизит];
		Исключение
			
		КонецПопытки;
	КонецЦикла;
	
	Попытка
		Для Каждого стр Из ВладелецФормы.Объект.ИнтервалыПроцентнойСтавки Цикл
			Интервал = Объект.ИнтервалыПроцентнойСтавки.Добавить();
			ЗаполнитьЗначенияСвойств(Интервал, стр);
		КонецЦикла;	
	Исключение
		
	КонецПопытки;
	
	Попытка
		ЗаполнитьГрафикПлатежей();
	Исключение
		
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура СписатьОстаток(Команда)
	к = ГрафикПлатежей.Количество();
	Если к > 0 Тогда
		Остаток = ГрафикПлатежей[к-1].КУплате;
		стр = Объект.СписокПлатежей.Добавить();
		стр.ДатаПлатежа = Объект.ДатаПогашения;
		стр.СуммаПлатежа = Остаток;		
		РассчитатьГрафикПлатежейНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьИзExcel(Команда)
	ФормаЗаполнения = ПолучитьФорму("Обработка.КалькуляторПлановыхПлатежей.Форма.ФормаЗагрузкиСпискаПлатежей",,ЭтаФорма);
	ОткрытьФорму(ФормаЗаполнения);
КонецПроцедуры

&НаКлиенте
Процедура УбратьПереплату(Команда)
	к = ГрафикПлатежей.Количество();
	Если к > 0 Тогда
		Переплата = ГрафикПлатежей[к-1].Переплата;
		н = Объект.СписокПлатежей.Количество();
		
		Пока Переплата > 0 И н > 0 Цикл
			СуммаПлатежа = мин(Объект.СписокПлатежей[н-1].СуммаПлатежа, Переплата);
			Объект.СписокПлатежей[н-1].СуммаПлатежа = Объект.СписокПлатежей[н-1].СуммаПлатежа - СуммаПлатежа;
			Переплата = Переплата - СуммаПлатежа;
			Если Объект.СписокПлатежей[н-1].СуммаПлатежа = 0 Тогда
				Объект.СписокПлатежей.Удалить(н-1);
			КонецЕсли;
			н = н - 1;
		КонецЦикла;		
		РассчитатьГрафикПлатежейНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоСуммеПлатежаНаСервере()
	Объект.СписокПлатежей.Очистить();
	Дата = Объект.ДатаВыдачиЗайма;
	Для к = 1 по Объект.Срок Цикл
		стр = Объект.СписокПлатежей.Добавить();
		стр.СуммаПлатежа = Объект.СуммаПлатежа;
		стр.ДатаПлатежа = РасчетЗадолженностиМФО.ДобавитьПериодКДате(Дата, Объект.ПериодичностьСрокаЗайма, Объект.КоличествоПериодичностей);
		Дата = стр.ДатаПлатежа;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоСуммеПлатежа(Команда)
	ЗаполнитьПоСуммеПлатежаНаСервере();
КонецПроцедуры


