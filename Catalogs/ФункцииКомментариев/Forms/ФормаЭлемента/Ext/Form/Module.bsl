
&НаКлиенте
Процедура КонструкторЗапроса(Команда)
	#Если ТолстыйКлиентУправляемоеПриложение Тогда
		Конструктор = Новый КонструкторЗапроса();
		Конструктор.РежимКомпоновкиДанных = Ложь;
		Конструктор.АвтоДобавлениеПредставлений=Ложь;
		                     
		СтарыйЗапрос = Ложь;	
		ИсходныйТекстЗапроса = "";
		ИсходныйТекст = Элементы.ПолеТекстовогоДокумента.ВыделенныйТекст;	
		// Определяем нужно ли вставить только текст запроса (по выделению). 
		// Если выделенияе ест, то дополнительные фразы писать не будем и попытаемся получить текст
		// старого запроса.
		Если НЕ ИсходныйТекст = "" Тогда
			СтарыйЗапрос = истина;
			Если Найти(ИсходныйТекст,"ВЫБРАТЬ") <> Неопределено Тогда
				ИсходныйТекстЗапроса = СтрЗаменить(ИсходныйТекст,"|"," ");
			КонецЕсли;
		КонецЕсли;	
		// Пробуем передать в конструктор текст старого запроса.
		Если ИсходныйТекстЗапроса <> "" Тогда
			Попытка
				Конструктор.Текст = ИсходныйТекстЗапроса;
			Исключение
				Конструктор.Текст = "";
			КонецПопытки;
		КонецЕсли;
		
		
		Если Конструктор.ОткрытьМодально() Тогда
			ТекстЗапроса = Конструктор.Текст;
		Иначе
			Возврат;
		КонецЕсли;	
		Если ТекстЗапроса = Неопределено Или ТекстЗапроса = "" Тогда
			Возврат;	
		КонецЕсли; 
		
		//Добавляем разделители
		ТекстЗапросаСРазделителями = "";
		КоличествоСтрок = СтрЧислоСтрок(ТекстЗапроса);
		Для Счетчик = 1 По КоличествоСтрок Цикл
			Если Счетчик=1 И СтарыйЗапрос=Истина Тогда
				ТекСтрока =  ""+СтрПолучитьСтроку(ТекстЗапроса, Счетчик);
			Иначе
				ТекСтрока = "|"+СтрПолучитьСтроку(ТекстЗапроса, Счетчик);		
			КонецЕсли;			
			Если Не Счетчик = КоличествоСтрок  Тогда 			
				ТекСтрока = ТекСтрока + Символы.ПС;
			КонецЕсли;	
			ТекстЗапросаСРазделителями = ТекстЗапросаСРазделителями + ТекСтрока;		
		КонецЦикла;

		ВспомогательнаяЧасть = Объект.Функция;
		Если ЗначениеЗаполнено(ВспомогательнаяЧасть) Тогда
			ВспомогательнаяЧасть = ВспомогательнаяЧасть + Символы.ПС;	
		КонецЕсли;
								
		Если СтарыйЗапрос Тогда
			ДобавленныйТекст = ТекстЗапросаСРазделителями;
		Иначе
			ДобавленныйТекст =  
				"Запрос = Новый Запрос();"+Символы.ПС
				+"Запрос.Текст = """+Символы.ПС
				+ ТекстЗапросаСРазделителями
				+""";"+Символы.ПС
				+"Запрос.УстановитьПараметр("""", );"+Символы.ПС
				+"Результат = Запрос.Выполнить();"+Символы.ПС
				+"Значение = Результат.Выгрузить();";
		КонецЕсли;
		
		Если НЕ Элементы.ПолеТекстовогоДокумента.ВыделенныйТекст = "" Тогда										
			Элементы.ПолеТекстовогоДокумента.ВыделенныйТекст = ДобавленныйТекст;
		Иначе
			Элементы.ПолеТекстовогоДокумента.ВыделенныйТекст = Элементы.ПолеТекстовогоДокумента.ВыделенныйТекст + 
					ДобавленныйТекст;
		КонецЕсли;
		Объект.Функция = ПолеТекстовогоДокумента.ПолучитьТекст();	
	#Иначе
		Сообщить("Конструктор запроса работает только под Толстый клиент (управляемое приложение)!");
	#КонецЕсли	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПолеТекстовогоДокумента.УстановитьТекст(Объект.Функция);
КонецПроцедуры

&НаКлиенте
Процедура Тест(Команда)
	Если Мероприятие.Пустая() Тогда
		Сообщить("Поле ""МероприятиеТекущее"" должно быть заполнено!");
	Иначе
		Объект.Функция = ПолеТекстовогоДокумента.ПолучитьТекст();
		ТестНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ТестНаСервере()
	ЗначениеВРеквизитФормы(Мероприятие.ПолучитьОбъект(), "МероприятиеТекущее");
	//Если МероприятиеСледующее = Неопределено Тогда
	//	ЗначениеВРеквизитФормы(Задачи.Мероприятие.СоздатьЗадачу(), "МероприятиеСледующее");
	//КонецЕсли;
		
	Попытка
		Значение = "";
		ВычислитьФункцию(Объект.Функция, МероприятиеТекущее, Значение);
		Сообщить("Ок!");
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	ПолученныйРеквизит = Значение;
КонецПроцедуры

&НаСервере
Функция ВычислитьФункцию(Знач Запрос, МероприятиеТекущее, Значение)
	Выполнить(Запрос);
	Возврат Значение;
КонецФункции

&НаКлиенте
Процедура ПолеТекстовогоДокументаПриИзменении(Элемент)
	Модифицированность = Истина;
	Объект.Функция = ПолеТекстовогоДокумента.ПолучитьТекст();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Мероприятие = Задачи.Мероприятие.НайтиПоНомеру(Объект.НаПримереМероприятия);
КонецПроцедуры

&НаКлиенте
Процедура КонструкторФормата(Команда)

	КонструкторыКлиент.КонструкторФорматаОткрытие(ЭтаФорма);
	
КонецПроцедуры
//Чуров--

&НаКлиенте
Процедура МероприятиеПриИзменении(Элемент)
	Объект.НаПримереМероприятия = ОбъектыСервер.РазыменоватьСсылку(Мероприятие, "Номер");
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Объект.НаПримереМероприятия = ОбъектыСервер.РазыменоватьСсылку(Мероприятие, "Номер");
КонецПроцедуры
