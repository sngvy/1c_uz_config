
&НаСервере
Функция ПолучитьПодсказку(Объект, Шаблон)
	Текст = Шаблон.ШаблонТекста;
	Для Каждого Элемент Из Шаблон.Настройка Цикл
		Если Элемент.Используется Тогда
			Если Элемент.ТипПоля = ПредопределенноеЗначение("Перечисление.ТипыЗначенийДляШаблонов.Текст") Тогда
				СтрокаЗамены = Элемент.Значение;
				
			ИначеЕсли Элемент.ТипПоля = ПредопределенноеЗначение("Перечисление.ТипыЗначенийДляШаблонов.Реквизит") Тогда	
				
				//Массив = Элемент.Хранилище.Получить();
				Массив = УЭДСервер.ПолучитьМассивИзСтроки(Элемент.СтрокаХранилище);
				
				СтрокаЗамены = Справочники.ШаблоныТекстаДляАвтоинформирования.РазобратьСтроку(
				Элемент.СтрокаДляПолученияЗначения, Элемент.Значение, Объект, Массив);
				
			ИначеЕсли Элемент.ТипПоля = ПредопределенноеЗначение("Перечисление.ТипыЗначенийДляШаблонов.Файл") И 
				Не Элемент.Значение.Пустая() Тогда	
				СтрокаЗамены = "{" + Элемент.Значение.Путь + "}";			
			КонецЕсли;			
			
			Если Не Элемент.Функция.Пустая() Тогда
				СтрокаЗамены = Справочники.ШаблоныТекстаДляАвтоинформирования.ВычислитьФункцию(Элемент.Функция.Функция, 
				Объект, СтрокаЗамены);	
			КонецЕсли; 		
			
			Текст = СтрЗаменить(Текст, Элемент.Поле, СтрокаЗамены);
		КонецЕсли;
	КонецЦикла;
	Текст = СтрЗаменить(Текст, Символы.ПС, " ");
	Текст = СтрЗаменить(Текст, Символы.НПП, "");
	Возврат Текст;	
КонецФункции
 
 
&НаКлиенте
Процедура КартаВыбор(Элемент)
	Если Элемент.ТекущийЭлемент <> Неопределено И 
		ТипЗнч(Элемент.ТекущийЭлемент) <> Тип("ЭлементГрафическойСхемыСоединительнаяЛиния") Тогда			
		СтрокаВыбор = Объект.Дерево.НайтиСтроки(Новый Структура("Идентификатор", Элемент.ТекущийЭлемент.Имя))[0];
		Если Не ЗначениеЗаполнено(СтрокаВыбор.Шаблон) Тогда
			ПодсказкаПользователю = СтрокаВыбор.ПодсказкаПользователю;
		Иначе
			Шаблон = СтрокаВыбор.Шаблон;
			ПодсказкаПользователю = ПолучитьПодсказку(ВладелецФормы.Объект.Объект, Шаблон);
		КонецЕСли;
		
		УбратьУЭлементаДереваПунктВыбран(
				?(СтрокаВыбор.Родитель <> "", СтрокаВыбор.Родитель, СтрокаВыбор.Идентификатор), Истина);
		
		Если СтрокаВыбор.ВыборИзСписка = "Да" Тогда
			//0 Запускаем форму для добавления нового элемента
			Форма = ПолучитьФорму("Справочник.КонтактныеЛицаПоДолжнику.Форма.ФормаЭлемента",, ЭтаФорма);
			Если ТипЗнч(ВладелецФормы.Объект.Объект) = Тип("СправочникСсылка.Контрагенты") Тогда
				Форма.Объект.Владелец = ВладелецФормы.Объект.Объект;
			Иначе
				Попытка
					Форма.Объект.Владелец = ОбъектыСервер.РазыменоватьСсылку(ВладелецФормы.Объект.Объект, "Должник");
				Исключение
					Попытка 
						Форма.Объект.Владелец = ОбъектыСервер.РазыменоватьСсылку(ВладелецФормы.Объект.Объект, "Контрагент");
					Исключение
					КонецПопытки;
				КонецПопытки;
			КонецЕсли;
			//Форма.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
			Форма.ОткрытьМодально();
			Если Форма.Объект.Ссылка.Пустая() Тогда
				Возврат;
			КонецЕсли;
													
			//Добавить новый элемент в каждый элемент выбора из списка
			НоваяСтрокаВыбор = ВыборИзСтрок.Добавить();
			НоваяСтрокаВыбор.Код = Форма.Объект.Код;
			НоваяСтрокаВыбор.Наименование = Форма.Объект.Наименование;
			НоваяСтрокаВыбор.Ссылка = Форма.Объект.Ссылка;
					
			СтрокиСписков = Объект.Дерево.НайтиСтроки(Новый Структура("ВыборИзСписка", "Да"));
			Для Каждого Элемент Из СтрокиСписков Цикл
				ТекЭлемент = КартаОригинал.ЭлементыГрафическойСхемы.Найти(Элемент.Идентификатор);
				ДобавитьЭлементСтадияВверх(ТекЭлемент, НоваяСтрокаВыбор.Код, НоваяСтрокаВыбор.Наименование, 
						НоваяСтрокаВыбор.Наименование,,, НоваяСтрокаВыбор.Ссылка);
				//ПереместитьЭлементВверхИлиВниз(Элемент.Идентификатор, РаботаСГрафическойСхемой82.НаправлениеВниз());			
			КонецЦикла;	 
			Объект.РазмерСхемыВерх = Объект.РазмерСхемыВерх + 70;		
			СтрокаВыбор = Объект.Дерево.НайтиСтроки(Новый Структура("РодительСписок, СсылкаВыбор", 
					СтрокаВыбор.Идентификатор, НоваяСтрокаВыбор.Ссылка))[0];
		КонецЕсли;
					
		Если СтрокаВыбор.РодительСписок <> "" Тогда
			ВладелецФормы.Объект.КонтактноеЛицо = СтрокаВыбор.СсылкаВыбор;
			Если СтрокаВыбор.КоличествоДетей = 0 Тогда
				//Выбрано значение из динамического списка 
				//Перекидываем родителей элементов	
				СтрокиДетей = Объект.Дерево.НайтиСтроки(Новый Структура("Родитель2", СтрокаВыбор.РодительСписок));
				Если СтрокиДетей.Количество() > 0 Тогда
					СтрокаСтарыйРодитель = Объект.Дерево.НайтиСтроки(Новый Структура("Идентификатор", СтрокиДетей[0].Родитель))[0];	
					СтрокаВыбор.КоличествоДетей = СтрокаСтарыйРодитель.КоличествоДетей;		
					СтрокаСтарыйРодитель.КоличествоДетей = 0;	
	                //Перекидываем стрелки
					РаботаСГрафическойСхемой82.ПересоединитьСтрелки(СтрокаВыбор.Идентификатор, СтрокаСтарыйРодитель.Идентификатор, 
							Объект.Дерево, КартаОригинал);
					Для Каждого Элемент Из СтрокиДетей Цикл
						Элемент.Родитель = СтрокаВыбор.Идентификатор;
					КонецЦикла;
				КонецЕсли;	
			КонецЕсли;
		КонецЕсли;
		//Иначе выбран обычный элемент дерева
		СтрокаВыбор.Выбран = Истина;							
		ПросчитатьИОбновитьДерево();
		
		ВладелецФормы.Объект.Результат = СтрокаВыбор.РезультатМероприятия;
		Если СтрокаВыбор.КоличествоДетей = 0 Тогда
			//ВладелецФормы.Объект.Результат = СтрокаВыбор.РезультатМероприятия;
			Закрыть(Истина);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьЭлементВверхИлиВниз(ТекЭлементИмя, Направление)
	//1 Найти оба элемента для замены местами
	СтрокаТекЭлемент = Объект.Дерево.НайтиСтроки(Новый Структура("Идентификатор", ТекЭлементИмя))[0];
	Если Направление = РаботаСГрафическойСхемой82.НаправлениеВверх() Тогда
		ВыборкаСтрок = Объект.Дерево.НайтиСтроки(Новый Структура("Родитель, Номер", СтрокаТекЭлемент.Родитель, 
				СтрокаТекЭлемент.Номер - 1));
	ИначеЕсли Направление = РаботаСГрафическойСхемой82.НаправлениеВниз() Тогда
        ВыборкаСтрок = Объект.Дерево.НайтиСтроки(Новый Структура("Родитель, Номер", СтрокаТекЭлемент.Родитель, 
				СтрокаТекЭлемент.Номер + 1));
	КонецЕсли;
	//Поменять местами		
	Если ВыборкаСтрок.Количество() = 0 Тогда		
	ИначеЕсли ВыборкаСтрок.Количество() = 1 Тогда
		Номер = СтрокаТекЭлемент.Номер;
		СтрокаТекЭлемент.Номер = ВыборкаСтрок[0].Номер;
		ВыборкаСтрок[0].Номер = Номер;
		МодифицированностьКарты = Истина;
		ПросчитатьИОбновитьДерево();
	Иначе
		Сообщить("Ошибка в дереве!");
	КонецЕсли;			
КонецПроцедуры

&НаКлиенте
Процедура УбратьУЭлементаДереваПунктВыбран(Идентификатор, УКорняОставитьВыбран = Ложь)
	Объект.Дерево.НайтиСтроки(Новый Структура("Идентификатор", Идентификатор))[0].Выбран = УКорняОставитьВыбран;
	СтрокиДетей = Объект.Дерево.НайтиСтроки(Новый Структура("Родитель", Идентификатор));
	Для Каждого Элемент Из СтрокиДетей Цикл
		УбратьУЭлементаДереваПунктВыбран(Элемент.Идентификатор);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция ЗагрузитьКартуИзХранилища(Ссылка)
	Если Не Ссылка.Пустая() Тогда
		Возврат Ссылка.Схема.Получить(); 
	КонецЕсли;
КонецФункции

&НаСервере
Процедура ЗаполнитьДеревоПоМакету(Ссылка, Знач Должник)
	ОбъектВх = Должник;
	Если ТипЗнч(Должник) <> Тип("СправочникСсылка.Контрагенты") Тогда
		Попытка
			Должник = Должник.Должник;
		Исключение
			Попытка 
				Должник = Должник.Контрагент;
			Исключение
			КонецПопытки;
		КонецПопытки;
	КонецЕсли;	
	
	Объект.Дерево.Загрузить(Ссылка.Дерево.Выгрузить());
	Для Каждого Элемент Из Объект.Дерево Цикл
		Элемент.Выбран = Ложь;
        Элемент.РодительСписок = "";
		Элемент.СсылкаВыбор = Неопределено;
	КонецЦикла;
	Объект.Дерево[0].Выбран = Истина;
	Если ЗначениеЗаполнено(Объект.Дерево[0].ПодсказкаПользователю) Тогда
		ПодсказкаПользователю = Объект.Дерево[0].ПодсказкаПользователю;
	Иначе
		ПодсказкаПользователю = ПолучитьПодсказку(ОбъектВх, Объект.Дерево[0].Шаблон);
	КонецЕсли;
	
	СтрокиСписков = Объект.Дерево.НайтиСтроки(Новый Структура("ВыборИзСписка", "Да"));
	Если СтрокиСписков.Количество() > 0 Тогда
		Запрос = Новый Запрос("ВЫБРАТЬ
		                      |	КонтактныеЛицаПоДолжнику.Код,
		                      |	КонтактныеЛицаПоДолжнику.Наименование КАК Наименование,
		                      |	КонтактныеЛицаПоДолжнику.Ссылка
		                      |ИЗ
		                      |	Справочник.КонтактныеЛицаПоДолжнику КАК КонтактныеЛицаПоДолжнику
		                      |ГДЕ
		                      |	КонтактныеЛицаПоДолжнику.Владелец = &Должник
		                      |
		                      |УПОРЯДОЧИТЬ ПО
		                      |	Наименование");
		Запрос.УстановитьПараметр("Должник", Должник);
		ВыборИзСтрок.Загрузить(Запрос.Выполнить().Выгрузить());
	КонецЕсли;	 
КонецПроцедуры

&НаКлиенте
Процедура МакетПриИзменении(Элемент)
	ЗаполнитьДеревоПоМакету(Макет, ВладелецФормы.Объект.Объект);
	
	//Чуров
	#Если не ВебКлиент Тогда 
	ДвоичныеДанные = ЗагрузитьКартуИзХранилища(Макет);
		Если Не ДвоичныеДанные = Неопределено Тогда
			ИмяТемпФайла = ПолучитьИмяВременногоФайла();
			ДвоичныеДанные.Записать(ИмяТемпФайла);
			КартаОригинал.Прочитать(ИмяТемпФайла);		
			Карта.Прочитать(ИмяТемпФайла);
			УдалитьФайлы(ИмяТемпФайла);
		КонецЕсли;	
	#КонецЕсли 
	
	РаботаСГрафическойСхемой82.ДобавитьСписокЭлементов(Объект.Дерево, КартаОригинал, ВыборИзСтрок);
	//////СтрокиСписков = Объект.Дерево.НайтиСтроки(Новый Структура("ВыборИзСписка", "Да"));
	//////Для Каждого Элемент Из СтрокиСписков Цикл
	//////	//Переименование динамического элемента характеризующего справочник
	//////	Элемент.Наименование = "Новое контактное лицо";
	//////	РаботаСГрафическойСхемой82.СинхронизироватьЭлементаГрафическойСхемыСДеревом(КартаОригинал, Элемент);
	//////	
	//////	СтрокиДетей = Объект.Дерево.НайтиСтроки(Новый Структура("Родитель", Элемент.Идентификатор));
	//////	Для Каждого ЭлементДетя Из СтрокиДетей Цикл
	//////		ЭлементДетя.Родитель2 = ЭлементДетя.Родитель;
	//////	КонецЦикла;
	//////	
	//////	//Добавление новых элементов в карту и дерево
	//////	ТекЭлемент = КартаОригинал.ЭлементыГрафическойСхемы.Найти(Элемент.Идентификатор);	
	//////	Для Каждого ЭлементВыбор Из ВыборИзСтрок Цикл
	//////		//ТекЭлемент = Карта.ЭлементыГрафическойСхемы.Найти(Элемент.Идентификатор);
	//////		ДобавитьЭлементСтадияВниз(ТекЭлемент, ЭлементВыбор.Код, ЭлементВыбор.Наименование, 
	//////				ЭлементВыбор.Наименование,,,ЭлементВыбор.Ссылка);
	//////		ПереместитьЭлементВверхИлиВниз(Элемент.Идентификатор, РаботаСГрафическойСхемой82.НаправлениеВниз());
	//////	КонецЦикла;
	//////КонецЦикла;
	
	РаботаСГрафическойСхемой82.РасставитьЭлементыВДереве2(Объект.Дерево, 0, 20, 20, Объект.РазмерСхемыЛево, 
			Объект.РазмерСхемыВерх);
	РаботаСГрафическойСхемой82.СоздатьДекорацию(КартаОригинал, Объект.РазмерСхемыЛево, Объект.РазмерСхемыВерх);
	
	ПросчитатьИОбновитьДерево();
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьЭлементСтадияВверх(ТекЭлемент, ЭлементКод = "", ЭлементНаименование, ЭлементПодсказка = "", 
		РезультатМероприятия = Неопределено, ВыборИзСписка = "Нет", СсылкаВыбор = Неопределено)
		
	СтрокаТекЭлемента = Объект.Дерево.НайтиСтроки(Новый Структура("Идентификатор", ТекЭлемент.Имя))[0];
	//Ищем родителя текущего элемента
    РодительТекущегоЭлемента = КартаОригинал.ЭлементыГрафическойСхемы.Найти(СтрокаТекЭлемента.Родитель);
	

	ИмяДобавленногоЭлемента = РаботаСГрафическойСхемой82.СоздатьУзел(РодительТекущегоЭлемента, КартаОригинал, 
			"ТочкаДействия", ЭлементНаименование, РаботаСГрафическойСхемой82.НаправлениеВправо(),,,
			"Стадия-" + ЭлементКод + "-", ЭлементПодсказка);
	ДобавленныйЭлемент = КартаОригинал.ЭлементыГрафическойСхемы.Найти(ИмяДобавленногоЭлемента);
				
	//1 Найти и поправить строчку родителя
	СтрокаРодитель = Объект.Дерево.НайтиСтроки(Новый Структура("Идентификатор", РодительТекущегоЭлемента.Имя))[0];
	СтрокаРодитель.КоличествоДетей = СтрокаРодитель.КоличествоДетей + 1;
	//2 Найти строку текущего элемента и получить его Номер
	//СтрокаТекЭлемента = Объект.Дерево.НайтиСтроки(Новый Структура("Идентификатор", ТекЭлемент.Имя))[0];
	//3 Перебрать всех братьев у которых Номер больще текущего и увеличить их Номер
	СтрокиБратьев = Объект.Дерево.НайтиСтроки(Новый Структура("Родитель", СтрокаРодитель.Идентификатор));
	Для Каждого Элемент Из СтрокиБратьев Цикл
		Если Элемент.Номер > СтрокаТекЭлемента.Номер Тогда
			Элемент.Номер = Элемент.Номер + 1;
		КонецЕсли;
	КонецЦикла;
	//4 Добавить новую строчку	
	НоваяСтрока = Объект.Дерево.Добавить();
	НоваяСтрока.Уровень = СтрокаТекЭлемента.Уровень;
	НоваяСтрока.Номер   = СтрокаТекЭлемента.Номер;
	СтрокаТекЭлемента.Номер	= СтрокаТекЭлемента.Номер + 1;
	НоваяСтрока.Родитель  = СтрокаТекЭлемента.Родитель;
	НоваяСтрока.Родитель2 = СтрокаТекЭлемента.Родитель2;
	Если СтрокаТекЭлемента.ВыборИзСписка = "Да" Тогда
		НоваяСтрока.РодительСписок = СтрокаТекЭлемента.Идентификатор;
	Иначе
		НоваяСтрока.РодительСписок = СтрокаТекЭлемента.РодительСписок;
	КонецЕсли;
	НоваяСтрока.Идентификатор = ДобавленныйЭлемент.Имя;
	НоваяСтрока.КоличествоДетей = 0;
	НоваяСтрока.Наименование = ДобавленныйЭлемент.Наименование;
	НоваяСтрока.Ширина = ДобавленныйЭлемент.Ширина;
	НоваяСтрока.Высота = ДобавленныйЭлемент.Высота;
	НоваяСтрока.Верх   = ДобавленныйЭлемент.Верх;
	НоваяСтрока.Лево   = ДобавленныйЭлемент.Лево;		
	НоваяСтрока.РезультатМероприятия = РезультатМероприятия;
	НоваяСтрока.ВыборИзСписка = ВыборИзСписка;	
	НоваяСтрока.Выбран = Ложь;
	НоваяСтрока.СсылкаВыбор = СсылкаВыбор;
	НоваяСтрока.РезультатМероприятия = СтрокаТекЭлемента.РезультатМероприятия;
КонецПроцедуры

&НаКлиенте
Процедура ПросчитатьИОбновитьДерево()
	Для Каждого Элемент Из Объект.Дерево Цикл
		Элемент.НеУдалять = Ложь;
	КонецЦикла;
	РаботаСГрафическойСхемой82.РасставитьЭлементыВДеревеСУчетомВыбранных2(Объект.Дерево, 0, 20, 20);
	//Чуров
	#Если не ВебКлиент Тогда 
		ИмяТемпФайла = ПолучитьИмяВременногоФайла();
		КартаОригинал.Записать(ИмяТемпФайла);
		КартаОригинал.Прочитать(ИмяТемпФайла);
		Карта.Прочитать(ИмяТемпФайла);
		УдалитьФайлы(ИмяТемпФайла);
	#КонецЕсли	
		РаботаСГрафическойСхемой82.СинхронизироватьРасположениеЭлементовСДеревомВыбранных(Карта, Объект.Дерево);
		//РаботаСГрафическойСхемой82.СинхронизироватьИменаГрафическойСхемыСИдентификаторамиДерева(Карта, Объект.Дерево); //001	
		РаскраситьРамкиЭлементов();
КонецПроцедуры

&НаКлиенте
Процедура РаскраситьРамкиЭлементов()
	Для Каждого ЭлементСхемы Из Карта.ЭлементыГрафическойСхемы Цикл	
		Если (ТипЗнч(ЭлементСхемы) <> Тип("ЭлементГрафическойСхемыСоединительнаяЛиния"))
				И (ТипЗнч(ЭлементСхемы) <> Тип("ЭлементГрафическойСхемыДекорация")) Тогда
			СтрокаЭлемента = Объект.Дерево.НайтиСтроки(Новый Структура("Идентификатор", ЭлементСхемы.Имя))[0];
			
			Если ТипЗнч(ЭлементСхемы) = Тип("ЭлементГрафическойСхемыДействие") Тогда
				Если СтрокаЭлемента.ВыборИзСписка = "Да" Тогда
					ЭлементСхемы.ЦветФона = Новый Цвет(253,169,167);
				ИначеЕсли СтрокаЭлемента.РодительСписок <> "" Тогда
					ЭлементСхемы.ЦветФона = Новый Цвет(230,150,150);
				ИначеЕсли СтрокаЭлемента.РезультатМероприятия.Пустая() Тогда
					ЭлементСхемы.ЦветФона = Новый Цвет(254,253,214);	
				Иначе
					ЭлементСхемы.ЦветФона = Новый Цвет(187,239,235); 	
				КонецЕсли;
			КонецЕсли;	
				
			Если СтрокаЭлемента.Выбран Тогда
				ЭлементСхемы.ЦветРамки = Новый Цвет(120,114,75); 
				ЭлементСхемы.Рамка = Новый Линия(ТипСоединительнойЛинии.Сплошная, 3);
            КонецЕсли;	
		КонецЕсли;   		
	КонецЦикла;		
	ОбновитьОтображениеДанных();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если Не Макет.Пустая() Тогда
		МакетПриИзменении(Неопределено);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	Оповестить("ЗакрытиеСценария");
КонецПроцедуры
