Перем ИмяСправочникаПриставов Экспорт ;
Перем ИмяСправочникаССП Экспорт ;

Процедура ЗагрузитьДанные(ПолеИсходнойТаблицы, ОтправлятьСообщенияОбОшибке) Экспорт
	ИмяСправочникаПриставов = бит_ФССП_Переопределяемый.ПолучитьИмяСправочникаСудебныеПриставы();
	ИмяСправочникаССП = бит_ФССП_Переопределяемый.ПолучитьИмяСправочникаСлужбыСудебныхПриставов();
	ВидТелефона = бит_ФССП_Переопределяемый.ПолучитьВидТелефонаРабочий();
	//Получить Список Регионов-папок
	ТаблицаРегионов = ПоискПапкиРегионаОСП(); 
	
	//Получить список ОСП-элементов                                              
	ТаблицаОСПЭлементов = ЕстьТакойОСП();
	//Получить список ОСП-папок
	ТаблицаОСПГрупп = ЕстьТакаяПапка();
	
	Для НомерСтроки = 2 По ПолеИсходнойТаблицы.ВысотаТаблицы Цикл
		
		КодРегионаЗнач = ПолеИсходнойТаблицы.Область("R" + Формат(НомерСтроки, "ЧГ=") + "C" + Формат(ЭтотОбъект.КодРегиона, "ЧГ=")).Текст;
		НаименованиеОСПЗнач = ПолеИсходнойТаблицы.Область("R" + Формат(НомерСтроки, "ЧГ=") + "C" + Формат(ЭтотОбъект.НаименованиеОСП, "ЧГ=")).Текст;
		ДолжностьЗнач = ПолеИсходнойТаблицы.Область("R" + Формат(НомерСтроки, "ЧГ=") + "C" + Формат(ЭтотОбъект.Должность, "ЧГ=")).Текст;
		ФИОЗнач = ПолеИсходнойТаблицы.Область("R" + Формат(НомерСтроки, "ЧГ=") + "C" + Формат(ЭтотОбъект.ФИО, "ЧГ=")).Текст;
		РабочийТелефон1Знач = ПолеИсходнойТаблицы.Область("R" + Формат(НомерСтроки, "ЧГ=") + "C" + Формат(ЭтотОбъект.РабочийТелефон1, "ЧГ=")).Текст;
		
		ФамилияИО = СократитьИмя(ФИОЗнач);
		
		 //Поиск Папки-региона, которая будет родителем для ОСП-ПАПКИ
		Если ЗначениеЗаполнено(КодРегионаЗнач) Тогда
			РегионПапка = ТаблицаРегионов.Найти(Число(КодРегионаЗнач));
		Иначе Продолжить;
		КонецЕсли;
		
		Если РегионПапка = Неопределено Тогда
			РегионГруппаОбъект = Справочники[ИмяСправочникаПриставов].СоздатьГруппу();
			РегионГруппаОбъект.Наименование = КодРегионаЗнач;
			РегионГруппаОбъект.КодРегиона = КодРегионаЗнач;
			РегионГруппаОбъект.Записать();
			ПапкаРегиона = РегионГруппаОбъект.Ссылка;
		Иначе
			ПапкаРегиона = РегионПапка.Ссылка;
		КонецЕсли;
	    // Поиск осп среди элементов справочника СлужбыСудебныхПриставов
		Отбор = Новый Структура;
    	Отбор.Вставить("КодРегиона", Число(КодРегионаЗнач));
		Отбор.Вставить("НаименованиеПолное",НаименованиеОСПЗнач);
		ОСП = ТаблицаОСПЭлементов.НайтиСтроки(Отбор);
		Если ОСП.Количество() > 0  Тогда
			//Если есть ОСП, есть ли его папка в справочнике приставов
			Отбор = Новый Структура;
			Отбор.Вставить("КодРегиона", Число(КодРегионаЗнач));
			Отбор.Вставить("ПолноеНаименованиеССП",НаименованиеОСПЗнач);
			//ОСП_Группа = ЕстьТакаяПапка(КодРегионаЗнач,НаименованиеОСПЗнач);
			ОСП_Группа = ТаблицаОСПГрупп.НайтиСтроки(Отбор);
			Если ОСП_Группа.Количество() > 0 Тогда  //ОСП_Группа <> Справочники.СудебныеПриставы.ПустаяСсылка()
				// Если есть осп-элемент и есть осп-папка
				ОСП_Папка = ОСП_Группа[0].Ссылка;
			Иначе
				//Если есть осп-элемент, но нет осп-папки
				ОСП_ПапкаОбъект = Справочники[ИмяСправочникаПриставов].СоздатьГруппу();
				ОСП_ПапкаОбъект.КодРегиона = КодРегионаЗнач;
				ОСП_ПапкаОбъект.Наименование = НаименованиеОСПЗнач;
				ОСП_ПапкаОбъект.ПолноеНаименованиеССП = НаименованиеОСПЗнач;
				ОСП_ПапкаОбъект.Родитель = ПапкаРегиона;
				ОСП_ПапкаОбъект.Записать();
				ОСП_Папка = ОСП_ПапкаОбъект.Ссылка;
				//Таблица = Новый ТаблицаЗначений;
				НоваястрОСП = ТаблицаОСПГрупп.Добавить();
				НоваяСтрОСП.Ссылка= ОСП_Папка;
				НоваяСтрОСП.Наименование = ОСП_ПапкаОбъект.Наименование;
				НоваяСтрОСП.ПолноеНаименованиеССП = ОСП_ПапкаОбъект.ПолноеНаименованиеССП;
				НоваяСтрОСП.КодРегиона = ОСП_ПапкаОбъект.КодРегиона;
			КонецЕсли;
		Иначе
			//Если нет осп-элемента, идем к следующей строке дальше
			Продолжить;
		КонецЕсли;
		
		
		//Поиск пристава
		
		Пристав = ЕстьТакойПристав(КодРегионаЗнач,НаименованиеОСПЗнач,ФИОЗнач);
		
		Если Пристав <> Справочники[ИмяСправочникаПриставов].ПустаяСсылка() Тогда
			//Есть пристав, перезаписываем

			ПриставОбъект = Пристав.ПолучитьОбъект();
			//ПриставОбъект = Справочники.СудебныеПриставы.СоздатьЭлемент();
			ПриставОбъект.Наименование = ФИОЗнач;
			//ПриставОбъект.Родитель = ОСП_Папка;
			ПриставОбъект.Должность = ДолжностьЗнач;
			ПриставОбъект.ФамилияИО = ФамилияИО;
			
			Если ЗначениеЗаполнено(РабочийТелефон1Знач) Тогда
				БезСимволов = ПреобразоватьТелефон(РабочийТелефон1Знач); 
				НайденнаяСтрока = ПриставОбъект.Телефоны.Найти(Прав(БезСимволов, 10), бит_ФССП_Переопределяемый.ПолучитьКолонкуТЧТелефоны());
				Если НайденнаяСтрока = Неопределено Тогда
					Телефон = ПриставОбъект.Телефоны.Добавить();
					бит_ФССП_Переопределяемый.ОбработатьНомерТелефона(Телефон,БезСимволов);
					//УправлениеКонтактнойИнформацией.РазбитьНомерТелефонаНаСоставляющие(Телефон,БезСимволов);
					Телефон.ВидТелефона = ВидТелефона;
				КонецЕсли;
			КонецЕсли;
			ПриставОбъект.Записать();

		Иначе
			//Нет пристава, создаем, Родитель = ОСП_Папка
			ПриставОбъект = Справочники[ИмяСправочникаПриставов].СоздатьЭлемент();
			ПриставОбъект.Наименование = ФИОЗнач;
			ПриставОбъект.Родитель = ОСП_Папка;
			ПриставОбъект.Должность = ДолжностьЗнач;
			ПриставОбъект.ФамилияИО = ФамилияИО;
			
			Если ЗначениеЗаполнено(РабочийТелефон1Знач) Тогда
				БезСимволов = ПреобразоватьТелефон(РабочийТелефон1Знач); 
				НайденнаяСтрока = ПриставОбъект.Телефоны.Найти(Прав(БезСимволов, 10), бит_ФССП_Переопределяемый.ПолучитьКолонкуТЧТелефоны());
				Если НайденнаяСтрока = Неопределено Тогда
					Телефон = ПриставОбъект.Телефоны.Добавить();
					бит_ФССП_Переопределяемый.ОбработатьНомерТелефона(Телефон,БезСимволов);
					//УправлениеКонтактнойИнформацией.РазбитьНомерТелефонаНаСоставляющие(Телефон,БезСимволов);
					Телефон.ВидТелефона = ВидТелефона;
				КонецЕсли;
			КонецЕсли;
			ПриставОбъект.Записать();
		КонецЕсли;
	КонецЦикла;	
КонецПроцедуры

Процедура ЗагрузитьДанныеПриставы(ПолеИсходнойТаблицы, НомераКолонок) Экспорт
	ИмяСправочникаПриставов = бит_ФССП_Переопределяемый.ПолучитьИмяСправочникаСудебныеПриставы();
	ИмяСправочникаССП = бит_ФССП_Переопределяемый.ПолучитьИмяСправочникаСлужбыСудебныхПриставов();
	ВидТелефона = бит_ФССП_Переопределяемый.ПолучитьВидТелефонаРабочий();
	//Получить Список Регионов-папок
	ТаблицаРегионов = ПоискПапкиРегионаОСП(); 
	
	//Получить список ОСП-элементов                                              
	ТаблицаОСПЭлементов = ЕстьТакойОСП();
	//Получить список ОСП-папок
	ТаблицаОСПГрупп = ЕстьТакаяПапка();
	
	Для НомерСтроки = 2 По ПолеИсходнойТаблицы.ВысотаТаблицы Цикл
		
		КодРегионаЗнач = ПолеИсходнойТаблицы.Область(НомерСтроки, НомераКолонок["КодРегиона"]).Текст;
		НаименованиеОСПЗнач = ПолеИсходнойТаблицы.Область(НомерСтроки, НомераКолонок["НаименованиеОСП"]).Текст;
		ДолжностьЗнач = ПолеИсходнойТаблицы.Область(НомерСтроки, НомераКолонок["Должность"]).Текст;
		ФИОЗнач = ПолеИсходнойТаблицы.Область(НомерСтроки, НомераКолонок["ФИО"]).Текст;
		РабочийТелефон1Знач = ПолеИсходнойТаблицы.Область(НомерСтроки, НомераКолонок["РабочийТелефон1"]).Текст;
		
		ФамилияИО = СократитьИмя(ФИОЗнач);
		
		 //Поиск Папки-региона, которая будет родителем для ОСП-ПАПКИ
		Если ЗначениеЗаполнено(КодРегионаЗнач) Тогда
			РегионПапка = ТаблицаРегионов.Найти(Число(КодРегионаЗнач));
		Иначе Продолжить;
		КонецЕсли;
		
		Если РегионПапка = Неопределено Тогда
			РегионГруппаОбъект = Справочники[ИмяСправочникаПриставов].СоздатьГруппу();
			РегионГруппаОбъект.Наименование = КодРегионаЗнач;
			РегионГруппаОбъект.КодРегиона = КодРегионаЗнач;
			РегионГруппаОбъект.Записать();
			ПапкаРегиона = РегионГруппаОбъект.Ссылка;
		Иначе
			ПапкаРегиона = РегионПапка.Ссылка;
		КонецЕсли;
	    // Поиск осп среди элементов справочника СлужбыСудебныхПриставов
		Отбор = Новый Структура;
    	Отбор.Вставить("КодРегиона", Число(КодРегионаЗнач));
		Отбор.Вставить("НаименованиеПолное",НаименованиеОСПЗнач);
		ОСП = ТаблицаОСПЭлементов.НайтиСтроки(Отбор);
		Если ОСП.Количество() > 0  Тогда
			//Если есть ОСП, есть ли его папка в справочнике приставов
			Отбор = Новый Структура;
			Отбор.Вставить("КодРегиона", Число(КодРегионаЗнач));
			Отбор.Вставить("ПолноеНаименованиеССП",НаименованиеОСПЗнач);
			//ОСП_Группа = ЕстьТакаяПапка(КодРегионаЗнач,НаименованиеОСПЗнач);
			ОСП_Группа = ТаблицаОСПГрупп.НайтиСтроки(Отбор);
			Если ОСП_Группа.Количество() > 0 Тогда  //ОСП_Группа <> Справочники.СудебныеПриставы.ПустаяСсылка()
				// Если есть осп-элемент и есть осп-папка
				ОСП_Папка = ОСП_Группа[0].Ссылка;
			Иначе
				//Если есть осп-элемент, но нет осп-папки
				ОСП_ПапкаОбъект = Справочники[ИмяСправочникаПриставов].СоздатьГруппу();
				ОСП_ПапкаОбъект.КодРегиона = КодРегионаЗнач;
				ОСП_ПапкаОбъект.Наименование = НаименованиеОСПЗнач;
				ОСП_ПапкаОбъект.ПолноеНаименованиеССП = НаименованиеОСПЗнач;
				ОСП_ПапкаОбъект.Родитель = ПапкаРегиона;
				ОСП_ПапкаОбъект.Записать();
				ОСП_Папка = ОСП_ПапкаОбъект.Ссылка;
				//Таблица = Новый ТаблицаЗначений;
				НоваястрОСП = ТаблицаОСПГрупп.Добавить();
				НоваяСтрОСП.Ссылка= ОСП_Папка;
				НоваяСтрОСП.Наименование = ОСП_ПапкаОбъект.Наименование;
				НоваяСтрОСП.ПолноеНаименованиеССП = ОСП_ПапкаОбъект.ПолноеНаименованиеССП;
				НоваяСтрОСП.КодРегиона = ОСП_ПапкаОбъект.КодРегиона;
			КонецЕсли;
		Иначе
			//Если нет осп-элемента, идем к следующей строке дальше
			Продолжить;
		КонецЕсли;
		
		
		//Поиск пристава
		
		Пристав = ЕстьТакойПристав(КодРегионаЗнач,НаименованиеОСПЗнач,ФИОЗнач);
		
		Если Пристав <> Справочники[ИмяСправочникаПриставов].ПустаяСсылка() Тогда
			//Есть пристав, перезаписываем

			ПриставОбъект = Пристав.ПолучитьОбъект();
			//ПриставОбъект = Справочники.СудебныеПриставы.СоздатьЭлемент();
			ПриставОбъект.Наименование = ФИОЗнач;
			//ПриставОбъект.Родитель = ОСП_Папка;
			ПриставОбъект.Должность = ДолжностьЗнач;
			ПриставОбъект.ФамилияИО = ФамилияИО;
			
			Если ЗначениеЗаполнено(РабочийТелефон1Знач) Тогда
				БезСимволов = ПреобразоватьТелефон(РабочийТелефон1Знач); 
				НайденнаяСтрока = ПриставОбъект.Телефоны.Найти(Прав(БезСимволов, 10), бит_ФССП_Переопределяемый.ПолучитьКолонкуТЧТелефоны());
				Если НайденнаяСтрока = Неопределено Тогда
					Телефон = ПриставОбъект.Телефоны.Добавить();
					бит_ФССП_Переопределяемый.ОбработатьНомерТелефона(Телефон,БезСимволов);
					//УправлениеКонтактнойИнформацией.РазбитьНомерТелефонаНаСоставляющие(Телефон,БезСимволов);
					Телефон.ВидТелефона = ВидТелефона;
				КонецЕсли;
			КонецЕсли;
			ПриставОбъект.Записать();

		Иначе
			//Нет пристава, создаем, Родитель = ОСП_Папка
			ПриставОбъект = Справочники[ИмяСправочникаПриставов].СоздатьЭлемент();
			ПриставОбъект.Наименование = ФИОЗнач;
			ПриставОбъект.Родитель = ОСП_Папка;
			ПриставОбъект.Должность = ДолжностьЗнач;
			ПриставОбъект.ФамилияИО = ФамилияИО;
			
			Если ЗначениеЗаполнено(РабочийТелефон1Знач) Тогда
				БезСимволов = ПреобразоватьТелефон(РабочийТелефон1Знач); 
				НайденнаяСтрока = ПриставОбъект.Телефоны.Найти(Прав(БезСимволов, 10), бит_ФССП_Переопределяемый.ПолучитьКолонкуТЧТелефоны());
				Если НайденнаяСтрока = Неопределено Тогда
					Телефон = ПриставОбъект.Телефоны.Добавить();
					бит_ФССП_Переопределяемый.ОбработатьНомерТелефона(Телефон,БезСимволов);
					//УправлениеКонтактнойИнформацией.РазбитьНомерТелефонаНаСоставляющие(Телефон,БезСимволов);
					Телефон.ВидТелефона = ВидТелефона;
				КонецЕсли;
			КонецЕсли;
			ПриставОбъект.Записать();
		КонецЕсли;
	КонецЦикла;	
КонецПроцедуры


Процедура ЗаполнитьНомераСтолбцов() Экспорт
	ЭтотОбъект.КодРегиона = 1;
	ЭтотОбъект.НаименованиеОСП = 2;
	ЭтотОбъект.Должность = 3;
	ЭтотОбъект.ФИО = 4;
	ЭтотОбъект.РабочийТелефон1 = 6;
КонецПроцедуры

Функция ПоискПапкиРегионаОСП()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СудебныеПриставы.Ссылка КАК Ссылка,
	               |	СудебныеПриставы.КодРегиона КАК КодРегиона,
	               |	СудебныеПриставы.Наименование КАК Наименование
	               |ИЗ
	               |	Справочник."+ИмяСправочникаПриставов+" КАК СудебныеПриставы
	               |ГДЕ
	               |	СудебныеПриставы.ЭтоГруппа = ИСТИНА
	               |	И СудебныеПриставы.ПометкаУдаления = ЛОЖЬ
				   | 	И СудебныеПриставы.Родитель = &Родитель";
	
	//Запрос.УстановитьПараметр("КодРегиона",Число(НомерРегиона));
	Запрос.УстановитьПараметр("Родитель",Справочники[ИмяСправочникаПриставов].ПустаяСсылка());
	Результат = Запрос.Выполнить().Выгрузить();
	Возврат Результат; 	
КонецФункции	

Функция ЕстьТакойОСП()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СлужбыСудебныхПриставов.Ссылка КАК Ссылка,
	               |	СлужбыСудебныхПриставов.Наименование КАК Наименование,
	               |	СлужбыСудебныхПриставов.КодРегиона КАК КодРегиона,
	               |	СлужбыСудебныхПриставов.КодТерриториальногоАгенства КАК КодТерриториальногоАгенства,
	               |	СлужбыСудебныхПриставов.НаименованиеПолное КАК НаименованиеПолное
	               |ИЗ
	               |	Справочник."+ИмяСправочникаССП+" КАК СлужбыСудебныхПриставов
	               |ГДЕ
	               |	СлужбыСудебныхПриставов.ЭтоГруппа = ЛОЖЬ
	               |	И СлужбыСудебныхПриставов.ПометкаУдаления = ЛОЖЬ";
	
	//Запрос.УстановитьПараметр("Наименование",Название);
	//Запрос.УстановитьПараметр("КодРегиона",Число(Регион));
	
	Результат = Запрос.Выполнить().Выгрузить();
	Возврат Результат;
		
КонецФункции

Функция ЕстьТакаяПапка()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СудебныеПриставы.Ссылка КАК Ссылка,
	               |	СудебныеПриставы.Наименование КАК Наименование,
	               |	СудебныеПриставы.КодРегиона КАК КодРегиона,
	               |	СудебныеПриставы.ПолноеНаименованиеССП КАК ПолноеНаименованиеССП
	               |ИЗ
	               |	Справочник."+ИмяСправочникаПриставов+" КАК СудебныеПриставы
	               |ГДЕ
	               |	СудебныеПриставы.ЭтоГруппа = ИСТИНА
	               |	И СудебныеПриставы.ПометкаУдаления = ЛОЖЬ";
	
	
	Результат = Запрос.Выполнить().Выгрузить();
	Возврат Результат;	
КонецФункции

Функция ПреобразоватьТелефон(СтрТелефон)
	УдалитьПробел = СтрЗаменить(СтрТелефон," ","");
	УдалитьСимвол = СтрЗаменить(УдалитьПробел,Символы.НПП,"");
	УдалитьСкобки = СтрЗаменить(УдалитьСимвол,"(","");
	УдалитьСкобки = СтрЗаменить(УдалитьСкобки,")","");
	УдалитьПлюс = СтрЗаменить(УдалитьСкобки,"+","");
	УдалитьРавно = СтрЗаменить(УдалитьПлюс,"=","");
	УдалитьТире = СтрЗаменить(УдалитьРавно,"-","");
	
	ДлинаСтроки = СтрДлина(УдалитьТире);
	СтрокаПроверки = "АБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЫЬЪЭЮЯABCDEFGHIJKLMNOPQRSTUVWXYZ";
	ТелефонМассив = Новый Массив;
	
	Для Счетчик = 1 по ДлинаСтроки Цикл
		ТелефонМассив.Добавить(Сред(УдалитьТире,Счетчик,1));
	КонецЦикла;	
	
	
	Для каждого символ из ТелефонМассив Цикл
		Если стрНайти(СтрокаПроверки,Символ,,,) = 0 Тогда
			СтрокаТелефонБезСимволов = Строка(СтрокаТелефонБезСимволов)+Символ;
		КонецЕсли;
	КонецЦикла;	
	
	Возврат СтрокаТелефонБезСимволов;
КонецФункции	

функция РазбитьРабочиеТелефоны(НомерТелефона) 
	ИсходнаяСтрока = Строка(НомерТелефона);
	//ИсходнаяСтрока = "999999;99999;666666;888888";
	Массив = Новый Массив;
	Пока Истина Цикл
		Поз = Найти(ИсходнаяСтрока, ",");
		Если Поз = 0 Тогда
			Телефон = ИсходнаяСтрока;
		Иначе
			Телефон = Лев(ИсходнаяСтрока,Поз-1);
		КонецЕсли;
		Массив.Добавить(Телефон);
		Если СтрДлина(Телефон) = СтрДлина(ИсходнаяСтрока) Тогда
			Прервать;
		КонецЕсли;
		
		ИсходнаяСтрока = Сред(ИсходнаяСтрока,СтрДлина(Телефон)+2);
	КонецЦикла;
	Возврат Массив;
КонецФункции

Функция УдалитьПовторяющиесяЭлементыМассива(Массив) Экспорт 
	
	
	ТекущийИндекс = 0; 
	
	
	ВсегоЭлементов = Массив.Количество(); 
	
	
	Пока ТекущийИндекс < ВсегоЭлементов Цикл 
		
		
		Индекс2 = ТекущийИндекс + 1; 
		
		
		Пока Индекс2 < ВсегоЭлементов Цикл 
			
			
			Если Массив[Индекс2] = Массив[ТекущийИндекс] Тогда 
				
				
				Массив.Удалить(Индекс2); 
				
				
				ВсегоЭлементов = ВсегоЭлементов - 1; 
				
				
			Иначе 
				
				
				Индекс2 = Индекс2 + 1; 
				
				
			КонецЕсли; 
			
			
		КонецЦикла; 
		
		
		ТекущийИндекс = ТекущийИндекс + 1; 
		
		
	КонецЦикла; 
	
	
	Возврат Массив; 
	
	
КонецФункции 

Функция СократитьИмя(СтрокаФИО)
	ИмяП = СтрокаФИО;
	ИмяП = СтрЗаменить(ИмяП,"."," ");
	ИмяП = СтрЗаменить(ИмяП,"  "," ");
	
	Если Лев(ИмяП,1) = " " Тогда
		ИмяП = Прав(ИмяП, СтрДлина(ИмяП)-1);
	КонецЕсли;
	ИмяП = СтрЗаменить(ИмяП, " ",Символы.ПС);
	ЧислоСтрок = СтрЧислоСтрок(ИмяП);
	
	Фамилия = СтрПолучитьСтроку(ИмяП,1);
	Имя = СтрПолучитьСтроку(ИмяП,2);
	Отчество = СтрПолучитьСтроку(ИмяП,3);
	
	ФамилияИнициалы = Фамилия;
	Если СтрДлина(Имя) > 0 Тогда
		ФамилияИнициалы = ФамилияИнициалы + "_" + Лев(Имя,1);
	КонецЕсли;
	
	Если СтрДлина(Отчество) > 0 Тогда
		ФамилияИнициалы = ФамилияИнициалы + "_" + Лев(Отчество,1);
	КонецЕсли;
	Возврат(ФамилияИнициалы);
КонецФункции

Функция ЕстьТакойПристав(Регион,НазваниеОСП,ИмяПристава)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СудебныеПриставы.Ссылка КАК Ссылка
	               |ИЗ
	               |	Справочник."+ИмяСправочникаПриставов+" КАК СудебныеПриставы
	               |ГДЕ
	               |	СудебныеПриставы.Наименование = &Наименование
	               |	И СудебныеПриставы.Родитель.Наименование = &ОСП
	               |	И СудебныеПриставы.Родитель.Родитель.КодРегиона = &КодРегиона
	               |	И СудебныеПриставы.ПометкаУдаления = ЛОЖЬ
	               |	И СудебныеПриставы.ЭтоГруппа = ЛОЖЬ";
	
	Запрос.УстановитьПараметр("Наименование",ИмяПристава);
	Запрос.УстановитьПараметр("КодРегиона",Число(Регион));
	Запрос.УстановитьПараметр("ОСП",НазваниеОСП);
	
	Результат = Запрос.Выполнить().Выбрать();
	
	Если Результат.Следующий() Тогда
		Возврат Результат.Ссылка;
	Иначе
		Возврат Справочники[ИмяСправочникаПриставов].ПустаяСсылка();
	КонецЕсли;	
КонецФункции
//Функция ПоискПапкиРегионаОСП(НомерРегиона)
//	Запрос = Новый Запрос;
//	Запрос.Текст = "ВЫБРАТЬ
//	               |	СудебныеПриставы.Ссылка КАК Ссылка,
//	               |	СудебныеПриставы.КодРегиона КАК КодРегиона,
//	               |	СудебныеПриставы.Наименование КАК Наименование
//	               |ИЗ
//	               |	Справочник.СудебныеПриставы КАК СудебныеПриставы
//	               |ГДЕ
//	               |	СудебныеПриставы.ЭтоГруппа = ИСТИНА
//	               |	И СудебныеПриставы.ПометкаУдаления = ЛОЖЬ
//	               |	И СудебныеПриставы.КодРегиона = &КодРегиона";
//	
//	Запрос.УстановитьПараметр("КодРегиона",Число(НомерРегиона));
//	Результат = Запрос.Выполнить().Выбрать();
//	
//	Если Результат.Следующий() Тогда
//		Возврат Результат.Ссылка;
//	Иначе
//		Возврат Справочники.СлужбыСудебныхПриставов.ПустаяСсылка();
//	КонецЕсли;	
//	
//КонецФункции	

//Функция ЕстьТакойОСП(Регион,Название)
//	Запрос = Новый Запрос;
//	Запрос.Текст = "ВЫБРАТЬ
//	               |	СлужбыСудебныхПриставов.Ссылка КАК Ссылка,
//	               |	СлужбыСудебныхПриставов.Наименование КАК Наименование,
//	               |	СлужбыСудебныхПриставов.КодРегиона КАК КодРегиона,
//	               |	СлужбыСудебныхПриставов.КодТерриториальногоАгенства КАК КодТерриториальногоАгенства,
//	               |	СлужбыСудебныхПриставов.НаименованиеПолное КАК НаименованиеПолное
//	               |ИЗ
//	               |	Справочник.СлужбыСудебныхПриставов КАК СлужбыСудебныхПриставов
//	               |ГДЕ
//	               |	СлужбыСудебныхПриставов.ЭтоГруппа = ЛОЖЬ
//	               |	И СлужбыСудебныхПриставов.НаименованиеПолное = &Наименование
//	               |	И СлужбыСудебныхПриставов.КодРегиона = &КодРегиона
//	               |	И СлужбыСудебныхПриставов.ПометкаУдаления = ЛОЖЬ";
//	
//	Запрос.УстановитьПараметр("Наименование",Название);
//	Запрос.УстановитьПараметр("КодРегиона",Число(Регион));
//	
//	Результат = Запрос.Выполнить().Выбрать();
//	
//	Если Результат.Следующий() Тогда
//		Возврат Результат.Ссылка;
//	Иначе
//		Возврат Справочники.СлужбыСудебныхПриставов.ПустаяСсылка();
//	КонецЕсли;	
//КонецФункции

//Функция ЕстьТакаяПапка(Регион,Название)
//	Запрос = Новый Запрос;
//	Запрос.Текст = "ВЫБРАТЬ
//	               |	СудебныеПриставы.Ссылка КАК Ссылка,
//	               |	СудебныеПриставы.Наименование КАК Наименование,
//	               |	СудебныеПриставы.КодРегиона КАК КодРегиона,
//	               |	СудебныеПриставы.ПолноеНаименованиеССП КАК ПолноеНаименованиеССП
//	               |ИЗ
//	               |	Справочник.СудебныеПриставы КАК СудебныеПриставы
//	               |ГДЕ
//	               |	СудебныеПриставы.ЭтоГруппа = ИСТИНА
//	               |	И СудебныеПриставы.ПолноеНаименованиеССП = &Наименование
//	               |	И СудебныеПриставы.КодРегиона = &КодРегиона
//	               |	И СудебныеПриставы.ПометкаУдаления = ЛОЖЬ";
//	
//	Запрос.УстановитьПараметр("Наименование",Название);
//	Запрос.УстановитьПараметр("КодРегиона",Число(Регион));
//	
//	Результат = Запрос.Выполнить().Выбрать();
//	
//	Если Результат.Следующий() Тогда
//		Возврат Результат.Ссылка;
//	Иначе
//		Возврат Справочники.СудебныеПриставы.ПустаяСсылка();
//	КонецЕсли;	
//КонецФункции

