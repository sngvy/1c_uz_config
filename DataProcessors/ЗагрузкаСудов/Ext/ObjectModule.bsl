
Процедура ЗагрузитьДанные(ПолеИсходнойТаблицы, ОтправлятьСообщенияОбОшибке) Экспорт   
	
	ТаблицаСудовВБазе = ВыгрузитьСуды();  
	КлассификаторПустой = (ТаблицаСудовВБазе.Количество() = 0); 
	ПерезаписыватьПоКлассКоду = ЭтотОбъект.ОбновлятьРанееЗаписанные;
	
	МассивРанееОбработанныхКодов = Новый Массив;
	ТолькоУникальныеКласКоды = ЭтотОбъект.ТолькоУникальныеКлассификационныеКоды;   
	
	
	//Определим константные значения  
	ИФНСТекст = "Управление Федерального казначейства по Тульской области (Межрегиональная инспекция Федеральной налоговой службы по управлению долгом)";
	КБК = "18210803010011050110";  
	БИКТульскийБанк = "017003983";
	РасчетныйСчетДубль = "03100643000000018500";
	Банк = Справочники.Банки.НайтиПоКоду(БИКТульскийБанк, Истина);
	
	Если НЕ ЗначениеЗаполнено(Банк) Тогда
		Банк = СоздатьКарточкуТульскийБанк(БИКТульскийБанк);
	КонецЕсли;	
	
	
	Для НомерСтроки = 2 По ПолеИсходнойТаблицы.ВысотаТаблицы Цикл 
		
		темпСтруктура = Новый Структура("Наименование, Адрес, Телефон, ОКАТО, КлассификационныйКод, КодСубъектаРФ, Регион, Город, Сайт, ГрафикРаботы, email, КодИФНС");
		
		темпСтруктура.КлассификационныйКод = ПолеИсходнойТаблицы.Область("R" + Формат(НомерСтроки, "ЧГ=") + "C" + Формат(ЭтотОбъект.КлассификационныйКод, "ЧГ=")).Текст;
		
		Если ТолькоУникальныеКласКоды Тогда
			Обработан = МассивРанееОбработанныхКодов.Найти(темпСтруктура.КлассификационныйКод); 
			Если Обработан <> Неопределено Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;	 
				
		темпСтруктура.Наименование = ПолеИсходнойТаблицы.Область("R" + Формат(НомерСтроки, "ЧГ=") + "C" + Формат(ЭтотОбъект.Наименование, "ЧГ=")).Текст;
		темпСтруктура.Адрес = ПолеИсходнойТаблицы.Область("R" + Формат(НомерСтроки, "ЧГ=") + "C" + Формат(ЭтотОбъект.Адрес, "ЧГ=")).Текст;
		
		ТелефонЗнач = ПолеИсходнойТаблицы.Область("R" + Формат(НомерСтроки, "ЧГ=") + "C" + Формат(ЭтотОбъект.Телефон, "ЧГ=")).Текст;
		темпСтруктура.Телефон = ПреобразоватьТелефон(ТелефонЗнач);
		
		ОкатоЗнач = ПолеИсходнойТаблицы.Область("R" + Формат(НомерСтроки, "ЧГ=") + "C" + Формат(ЭтотОбъект.ОКАТО, "ЧГ=")).Текст; 
		ОкатоЗнач = СтрЗаменить(ОкатоЗнач,Символы.НПП, "");
		темпСтруктура.ОКАТО = СтрЗаменить(ОкатоЗнач," ", "");
		
		темпСтруктура.КодСубъектаРФ = ПолеИсходнойТаблицы.Область("R" + Формат(НомерСтроки, "ЧГ=") + "C" + Формат(ЭтотОбъект.КодСубъектаРФ, "ЧГ=")).Текст;
		темпСтруктура.Регион = ПолеИсходнойТаблицы.Область("R" + Формат(НомерСтроки, "ЧГ=") + "C" + Формат(ЭтотОбъект.Регион, "ЧГ=")).Текст;
		темпСтруктура.Город = ПолеИсходнойТаблицы.Область("R" + Формат(НомерСтроки, "ЧГ=") + "C" + Формат(ЭтотОбъект.Город, "ЧГ=")).Текст;
		темпСтруктура.Сайт = ПолеИсходнойТаблицы.Область("R" + Формат(НомерСтроки, "ЧГ=") + "C" + Формат(ЭтотОбъект.Сайт, "ЧГ=")).Текст;
		темпСтруктура.ГрафикРаботы = ПолеИсходнойТаблицы.Область("R" + Формат(НомерСтроки, "ЧГ=") + "C" + Формат(ЭтотОбъект.ГрафикРаботы, "ЧГ=")).Текст;
		темпСтруктура.email = ПолеИсходнойТаблицы.Область("R" + Формат(НомерСтроки, "ЧГ=") + "C" + Формат(ЭтотОбъект.email, "ЧГ=")).Текст;
		темпСтруктура.КодИФНС = ПолеИсходнойТаблицы.Область("R" + Формат(НомерСтроки, "ЧГ=") + "C" + Формат(ЭтотОбъект.КодИФНС, "ЧГ=")).Текст;
				
		
		Если Не КлассификаторПустой Тогда
			Если ЗначениеЗаполнено(темпСтруктура.КлассификационныйКод) И ПерезаписыватьПоКлассКоду Тогда
				Суд = ТаблицаСудовВБазе.Найти(темпСтруктура.КлассификационныйКод, "КлассификационныйКод");
				Если Суд = Неопределено Тогда
					Суд_Объект = Справочники.СудебныеУчастки.СоздатьЭлемент(); 
				Иначе
					Суд_Объект = Суд.Ссылка.ПолучитьОбъект();	
				КонецЕсли; 
			Иначе
				Суд_Объект = Справочники.СудебныеУчастки.СоздатьЭлемент();
			КонецЕсли;
		Иначе
			Суд_Объект = Справочники.СудебныеУчастки.СоздатьЭлемент();
		КонецЕсли;	
		
		ЗаполнитьЗначенияСвойств(Суд_Объект, ТемпСтруктура);
		Суд_Объект.Банк = Банк;
		Суд_Объект.КБК = КБК;
		Суд_Объект.ИФНС = ИФНСТекст; 
		Суд_Объект.РасчетныйСчет = РасчетныйСчетДубль; 
						
		Суд_Объект.Записать();
		
		Если ТолькоУникальныеКласКоды Тогда
			МассивРанееОбработанныхКодов.Добавить(темпСтруктура.КлассификационныйКод);
		КонецЕсли	
		
	КонецЦикла;	
КонецПроцедуры

Функция ВыгрузитьСуды()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СудебныеУчастки.Ссылка КАК Ссылка,
	               |	СудебныеУчастки.КлассификационныйКод КАК КлассификационныйКод,
	               |	СудебныеУчастки.Банк КАК Банк
	               |ИЗ
	               |	Справочник.СудебныеУчастки КАК СудебныеУчастки
	               |ГДЕ
	               |	НЕ СудебныеУчастки.ПометкаУдаления";

	Результат = Запрос.Выполнить().Выгрузить();
	
	Возврат Результат;	

КонецФункции

Функция СоздатьКарточкуТульскийБанк(БИК) Экспорт
	БанкОбъект = Справочники.Банки.СоздатьЭлемент();
	БанкОбъект.Код = БИК;
	БанкОбъект.Наименование = "ОТДЕЛЕНИЕ ТУЛА БАНКА РОССИИ//УФК по Тульской области, г Тула"; 
	БанкОбъект.Город = "г. Тула";
	БанкОбъект.Адрес = "300041, Тульская обл., Тула, ул. Сойфера, 18";
	БанкОбъект.Телефоны = "84872326001";
	БанкОбъект.РасчетныйСчет = "03100643000000018500";
	БанкОбъект.КоррСчет = "40102810445370000059";
	БанкОбъект.ИНН = "7727406020";
	БанкОбъект.КПП = "770801001";
	БанкОбъект.Записать();
	Возврат БанкОбъект.Ссылка;
	
КонецФункции

Процедура ЗаполнитьНомераСтолбцов() Экспорт
	ЭтотОбъект.Наименование = 1;
	ЭтотОбъект.Адрес = 2;
	ЭтотОбъект.Телефон = 3;  
	ЭтотОбъект.ОКАТО = 4;
	ЭтотОбъект.КлассификационныйКод = 5;
	ЭтотОбъект.КодСубъектаРФ = 6;
	ЭтотОбъект.Регион = 7;
	ЭтотОбъект.Город = 8;  
	ЭтотОбъект.Сайт = 9;
	ЭтотОбъект.ГрафикРаботы = 10;
	ЭтотОбъект.email = 11;
	ЭтотОбъект.КодИФНС = 12;
КонецПроцедуры


Функция ПреобразоватьТелефон(СтрТелефон)
	УдалитьПробел = СтрЗаменить(СтрТелефон," ","");
	УдалитьСимвол = СтрЗаменить(УдалитьПробел,Символы.НПП,"");
	УдалитьСкобки = СтрЗаменить(УдалитьСимвол,"(","");
	УдалитьСкобки = СтрЗаменить(УдалитьСкобки,")","");
	УдалитьПлюс = СтрЗаменить(УдалитьСкобки,"+","");
	УдалитьРавно = СтрЗаменить(УдалитьПлюс,"=","");
	УдалитьТире = СтрЗаменить(УдалитьРавно,"-","");
	
	ДлинаСтроки = СтрДлина(УдалитьТире);
	СтрокаПроверки = "АБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЫЬЪЭЮЯABCDEFGHIJKLMNOPQRSTUVWXYZ";
	ТелефонМассив = Новый Массив;
	
	Для Счетчик = 1 по ДлинаСтроки Цикл
		ТелефонМассив.Добавить(Сред(УдалитьТире,Счетчик,1));
	КонецЦикла;	
	
	
	Для каждого символ из ТелефонМассив Цикл
		Если стрНайти(СтрокаПроверки,Символ,,,) = 0 Тогда
			СтрокаТелефонБезСимволов = Строка(СтрокаТелефонБезСимволов)+Символ;
		КонецЕсли;
	КонецЦикла;	
	
	Возврат СтрокаТелефонБезСимволов;
КонецФункции	

функция РазбитьРабочиеТелефоны(НомерТелефона) 
	ИсходнаяСтрока = Строка(НомерТелефона);
	//ИсходнаяСтрока = "999999;99999;666666;888888";
	Массив = Новый Массив;
	Пока Истина Цикл
		Поз = Найти(ИсходнаяСтрока, ",");
		Если Поз = 0 Тогда
			Телефон = ИсходнаяСтрока;
		Иначе
			Телефон = Лев(ИсходнаяСтрока,Поз-1);
		КонецЕсли;
		Массив.Добавить(Телефон);
		Если СтрДлина(Телефон) = СтрДлина(ИсходнаяСтрока) Тогда
			Прервать;
		КонецЕсли;
		
		ИсходнаяСтрока = Сред(ИсходнаяСтрока,СтрДлина(Телефон)+2);
	КонецЦикла;
	Возврат Массив;
КонецФункции

Функция УдалитьПовторяющиесяЭлементыМассива(Массив) Экспорт 
	
	
	ТекущийИндекс = 0; 
	
	
	ВсегоЭлементов = Массив.Количество(); 
	
	
	Пока ТекущийИндекс < ВсегоЭлементов Цикл 
		
		
		Индекс2 = ТекущийИндекс + 1; 
		
		
		Пока Индекс2 < ВсегоЭлементов Цикл 
			
			
			Если Массив[Индекс2] = Массив[ТекущийИндекс] Тогда 
				
				
				Массив.Удалить(Индекс2); 
				
				
				ВсегоЭлементов = ВсегоЭлементов - 1; 
				
				
			Иначе 
				
				
				Индекс2 = Индекс2 + 1; 
				
				
			КонецЕсли; 
			
			
		КонецЦикла; 
		
		
		ТекущийИндекс = ТекущийИндекс + 1; 
		
		
	КонецЦикла; 
	
	
	Возврат Массив; 
	
	
КонецФункции 


Процедура ЕдиныйБанкНаОплатуГП() Экспорт 
	ТаблицаСудоввБазе =  ВыгрузитьСуды(); 
	БИКТульскийБанк = "017003983";
	Банк = Справочники.Банки.НайтиПоКоду(БИКТульскийБанк, Истина); 
	ПерезаписыватьБанк = ЭтотОбъект.ЕдиныйБанкДляВсех;
	
	Если НЕ ЗначениеЗаполнено(Банк) Тогда
		Банк = СоздатьКарточкуТульскийБанк(БИКТульскийБанк);
	КонецЕсли;
	
	Для Каждого Суд Из ТаблицаСудоввБазе Цикл
		Если ПерезаписыватьБанк Тогда 
			СудОбъект = Суд.Ссылка.ПолучитьОбъект();
			СудОбъект.Банк = Банк;
			СудОбъект.Записать();
		Иначе  
			Если ЗначениеЗаполнено(Суд.Банк) Тогда
				Продолжить;
			Иначе
				СудОбъект = Суд.Ссылка.ПолучитьОбъект();
				СудОбъект.Банк = Банк;
				СудОбъект.Записать();	
			КонецЕсли;	
		КонецЕсли;	
		
	КонецЦикла;
	
КонецПроцедуры 

	