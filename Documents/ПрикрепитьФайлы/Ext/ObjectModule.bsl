
Процедура ОбработкаПроведения(Отказ, Режим)	
	Движения.ПрикрепляемыеФайлы.Записывать = Истина;
	Для Каждого ТекСтрокаФайлы Из Файлы Цикл
		Движение = Движения.ПрикрепляемыеФайлы.Добавить();
		Движение.Период = Дата;
		Движение.Объект = Объект;
		Движение.ТипФайла = ТекСтрокаФайлы.ТипФайла;
		Движение.РазмерФайла = ТекСтрокаФайлы.Размер;
		Движение.НомерСтроки_ = ТекСтрокаФайлы.НомерСтроки;
		Файл = Новый Файл(ТекСтрокаФайлы.Путь);
		Движение.ИмяФайла = Файл.Имя;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьФайлыНаСервер(Файлы, Отказ)
	КаталогХранения = Константы.КаталогХраненияПрикрепляемыхФайловНаСервере.Получить();
	Ф = Новый Файл(КаталогХранения); 	
	Если Ф.Существует() = Ложь Тогда
		Сообщить("Каталог хранения прикрепляемых файлов задан неверно!");
		Возврат;
	КонецЕсли;
	
	Для Каждого Эл Из Файлы Цикл
		Если Не Эл.Загружен Тогда
			Попытка
				Файл = Новый Файл(Эл.Путь);
				Эл.УИД = Новый УникальныйИдентификатор();
				ДвДанные = Новый ДвоичныеДанные(Эл.Путь);
				ДвДанные.Записать(КаталогХранения + "\" + Строка(Эл.УИД) + Файл.Расширение);
			Исключение
				Отказ = Истина;
				Сообщить(ОписаниеОшибки());
				Возврат;
			КонецПопытки;
		КонецЕсли;	
	КонецЦикла;	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	Если ДанныеЗаполнения <> Неопределено Тогда
		//Организация = ДанныеЗаполнения.Организация;
		Объект = ДанныеЗаполнения;
	КонецЕсли;
КонецПроцедуры

Процедура ПоместитьВХранилище(МассивДанных) Экспорт
	Индекс = 0;
	Для Каждого Элемент Из ЭтотОбъект.Файлы Цикл
		Если МассивДанных[Индекс] <> Неопределено Тогда
			Элемент.Хранилище = Новый ХранилищеЗначения(МассивДанных[Индекс], Новый СжатиеДанных(9));
		КонецЕсли;
		Индекс = Индекс + 1;
	КонецЦикла;
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	//НаСервере = Константы.ХранитьПрикрепляемыеФайлыНаСервере.Получить();
	//Если НаСервере Тогда
	//	Каталог = Константы.КаталогХраненияПрикрепляемыхФайловНаСервере.Получить();
	//КонецЕсли;
	//Если Константы.ХранитьПрикрепляемыеФайлыНаСервере.Получить() Тогда
	//	// 1. Если хранить файлы на сервере
	//	КаталогХранения = Константы.КаталогХраненияПрикрепляемыхФайловНаСервере.Получить();
	//	Ф = Новый Файл(КаталогХранения); 	
	//	Если Ф.Существует() = Ложь Тогда
	//		Сообщить("Каталог хранения прикрепляемых файлов задан неверно!");
	//		Возврат;
	//	КонецЕсли;
	//	
	//	Для Каждого Эл Из Файлы Цикл
	//		Если Не Эл.Загружен Тогда
	//			Попытка
	//				Файл = Новый Файл(Эл.Путь);
	//				Эл.УИД = Новый УникальныйИдентификатор();
	//				ДвДанные = Новый ДвоичныеДанные(Эл.Путь);
	//				ДвДанные.Записать(КаталогХранения + "\" + Строка(Эл.УИД) + Файл.Расширение);
	//				Эл.Загружен = Истина;
	//			Исключение
	//				Отказ = Истина;
	//				Сообщить(ОписаниеОшибки());
	//				Возврат;
	//			КонецПопытки;
	//		КонецЕсли;	
	//	КонецЦикла;					
	//Иначе	
	//	// 2. Если хранить файлы в базе в хранилище значений		
	//	МассивДанных = Новый Массив();
	//	Для Каждого Элемент Из Файлы Цикл
	//		Данные = Неопределено;
	//		Если Не Элемент.Загружен Тогда
	//			Попытка
	//				Элемент.УИД = Новый УникальныйИдентификатор();
	//				Данные = Новый ДвоичныеДанные(Элемент.Путь);
	//				Элемент.Загружен = Истина;
	//			Исключение
	//				Отказ = Истина;
	//				Сообщить("Файл """ + Элемент.Путь + """ не найден!");
	//				Возврат;
	//			КонецПопытки;
	//		КонецЕсли;	
	//		МассивДанных.Добавить(Данные);		
	//	КонецЦикла;
	//	ПоместитьВХранилище(МассивДанных);
	//КонецЕсли;	

КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	Файлы.Очистить();
	РегистраторКорреспонденции = Неопределено; //Справочники.ВходящаяКорреспонденция.ПустаяСсылка();
КонецПроцедуры
