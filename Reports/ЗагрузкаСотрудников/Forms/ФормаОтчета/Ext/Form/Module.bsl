
&НаКлиенте
Процедура Сформировать(Команда)
	СформироватьСервер();
КонецПроцедуры

&НаСервере
Процедура СформироватьСервер()
	Макет = Отчеты.ЗагрузкаСотрудников.ПолучитьМакет("Макет");
	ТабДок.Очистить();
	
	//Печать шапки
	Область = Макет.ПолучитьОбласть("Шапка");
	ТабДок.Вывести(Область);
	
	//Заполнение шапки Организация
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	Организации.Ссылка
	                      |ИЗ
	                      |	Справочник.Организации КАК Организации
	                      |ГДЕ
	                      |	(НЕ Организации.ПометкаУдаления)
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Организации.Наименование");
	РезультатОрг = Запрос.Выполнить().Выбрать();
	Пока РезультатОрг.Следующий() Цикл
		ЗаполнитьОрганизацию(Макет, РезультатОрг.Ссылка);
		
		Запрос.Текст = "ВЫБРАТЬ
		               |	ПодразделенияОрганизаций.Ссылка
		               |ИЗ
		               |	Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
		               |ГДЕ
		               |	ПодразделенияОрганизаций.Владелец = &Организация
		               |	И (НЕ ПодразделенияОрганизаций.ПометкаУдаления)
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	ПодразделенияОрганизаций.Наименование";
		Запрос.УстановитьПараметр("Организация", РезультатОрг.Ссылка);
		РезультатПодр = Запрос.Выполнить().Выбрать();
		Пока РезультатПодр.Следующий() Цикл
			ЗаполнитьПодразделение(Макет, РезультатПодр.Ссылка);
			
			Запрос.Текст = "ВЫБРАТЬ
			               |	Пользователи.Ссылка
			               |ИЗ
			               |	Справочник.Пользователи КАК Пользователи
			               |ГДЕ
			               |	Пользователи.Подразделение = &Подразделение
			               |	И (НЕ Пользователи.ПометкаУдаления)
			               |	И (НЕ Пользователи.Уволен)
			               |
			               |УПОРЯДОЧИТЬ ПО
			               |	Пользователи.Наименование";
			Запрос.УстановитьПараметр("Подразделение", РезультатПодр.Ссылка);
			РезультатСотр = Запрос.Выполнить().Выбрать();
			Пока РезультатСотр.Следующий() Цикл
				ЗаполнитьСотрудника(Макет, РезультатСотр.Ссылка);
			КонецЦикла;
			Если РезультатПодр.Ссылка = Справочники.ПодразделенияОрганизаций.НайтиПоКоду("000000001") Тогда
				Область = Макет.ПолучитьОбласть("Сотрудник");
				Область.Параметры.Сотрудник = "Для контроля";
				ТабДок.Вывести(Область);
				ТабДок.НачатьГруппуСтрок(, Ложь);
											
				КритерииОтбораДел(Макет, "ИскНеПодан", "000000001");
				КритерииОтбораДел(Макет, "НеизвестнаДатаСЗ", "000000002");
				КритерииОтбораДел(Макет, "РешениеНеВынесено", "000000003");
				КритерииОтбораДел(Макет, "ВИскеОтказано", "000000004");
				КритерииОтбораДел(Макет, "НетОтметкиОВступленииВЗаконнуюСилу", "000000005");
				КритерииОтбораДел(Макет, "НетРезультатаОбжалования", "000000006");
				КритерииОтбораДел(Макет, "НеПоданыИЛ", "000000007");
				КритерииОтбораДел(Макет, "НеВозбужденоИП", "000000008");
				КритерииОтбораДел(Макет, "НетАреста", "000000009");
				КритерииОтбораДел(Макет, "НеНазначеныПервыеТорги", "000000010");
				КритерииОтбораДел(Макет, "НеНазначеныВторыеТорги", "000000011");
				КритерииОтбораДел(Макет, "НеОтправленоСогласиеНаОставлениеИмущества", "000000012");
				КритерииОтбораДел(Макет, "НеПоданыДокументыНаРегистрацию", "000000013");
				КритерииОтбораДел(Макет, "НетРезультатаОХодеИП", "000000014");
				ТабДок.ЗакончитьГруппуСтрок();
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьОрганизацию(Макет, Ссылка)
	Область = Макет.ПолучитьОбласть("Подразделение");
	Область.Параметры.Подразделение = Ссылка;
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ЕСТЬNULL(СУММА(ОбъектыВРаботеОстатки.КоличествоОстаток), 0) КАК КолВо
	                      |ИЗ
	                      |	РегистрНакопления.ОбъектыВРаботе.Остатки(
	                      |			&Период,
	                      |			Организация = &Организация
	                      |				И Подразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	                      |				И Сотрудник = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)) КАК ОбъектыВРаботеОстатки
	                      |ГДЕ
	                      |	(НЕ ОбъектыВРаботеОстатки.Объект.ПометкаУдаления)");
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.УстановитьПараметр("Организация", Ссылка);	
	Область.Параметры.КолРук = Запрос.Выполнить().Выгрузить()[0].КолВо;	

	Запрос.Текст = "ВЫБРАТЬ
	               |	ЕСТЬNULL(СУММА(ОбъектыВРаботеОстатки.КоличествоОстаток), 0) КАК КолВо
	               |ИЗ
	               |	РегистрНакопления.ОбъектыВРаботе.Остатки(
	               |			&Период,
	               |			Организация = &Организация
	               |				И Сотрудник <> ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)) КАК ОбъектыВРаботеОстатки
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеСотрудники КАК ОтветственныеСотрудники
	               |		ПО ОбъектыВРаботеОстатки.Объект = ОтветственныеСотрудники.Объект
	               |			И (ОтветственныеСотрудники.ТипСотрудника.Код = ""     0001"")
				   |			И (ОбъектыВРаботеОстатки.Сотрудник = ОтветственныеСотрудники.Пользователь)
	               |			И ((НЕ ОбъектыВРаботеОстатки.Сотрудник.Уволен))
	               |ГДЕ
	               |	(НЕ ОбъектыВРаботеОстатки.Объект.ПометкаУдаления)";
	Кол = Область.Параметры.КолРук - Запрос.Выполнить().Выгрузить()[0].КолВо;
	Если Кол <> 0 Тогда
		Сообщить("Не совпадает на " + Строка(Кол) + " ДО ""Количество дел в работе организации"" и " +
				"""Количество дел с назначенными руководителями""! Возможно это из-за увольнения руководителя подразделения.");
	КонецЕсли;
	ТабДок.Вывести(Область);
	
	//
	ТабДок.НачатьГруппуСтрок(, Ложь);
	
	//Подготовка таблицы с ДО подходящими по стадии
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ОбъектыВРаботеОстатки.Объект КАК ДолговоеОбязательство
	                      |ИЗ
	                      |	РегистрНакопления.ОбъектыВРаботе.Остатки(
	                      |			&Период,
	                      |			Организация = &Организация
	                      |				И Подразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
	                      |				И Сотрудник = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)) КАК ОбъектыВРаботеОстатки
	                      |ГДЕ
	                      |	(НЕ ОбъектыВРаботеОстатки.Объект.ПометкаУдаления)");
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.УстановитьПараметр("Организация", Ссылка);
	Запрос.УстановитьПараметр("ТекДата", КонецДня(Период));
	ТаблицаДО = Запрос.Выполнить().Выгрузить();
	СтрТабл = ОтобратьПоСтадии(ТаблицаДО);
	
	МассивРезультатовМС = Новый Массив();	
	МассивРезультатовМС.Добавить(Справочники.РезультатыМероприятий.НайтиПоКоду("     0220"));
	МассивРезультатовМС.Добавить(Справочники.РезультатыМероприятий.НайтиПоКоду("     0315"));
	МассивРезультатовМС.Добавить(Справочники.РезультатыМероприятий.НайтиПоКоду("     0221"));
	МассивРезультатовМС.Добавить(Справочники.РезультатыМероприятий.НайтиПоКоду("     0183"));	
	МассивРезультатовМС.Добавить(Справочники.РезультатыМероприятий.НайтиПоКоду("     0222"));
	МассивРезультатовМС.Добавить(Справочники.РезультатыМероприятий.НайтиПоКоду("     0184"));
	Запрос.УстановитьПараметр("РезультатМС", МассивРезультатовМС);
	
	КолМС = 0;
	КолМСИсп = 0;
	КолМСНеИсп = 0;
	КолОИ = 0;
	КолПО = 0;
	КолПС = 0;
	КолПД = 0;
	
	Для Каждого Выборка Из ТаблицаДО Цикл
		СтрокаДействий = "";
		Запрос.УстановитьПараметр("ДО", Выборка.ДолговоеОбязательство);	
		Если Сред(Выборка.СтадияФлаг, 1, 1) = "1" Тогда
			Запрос.Текст = "ВЫБРАТЬ
			               |	Мероприятие.Результат.Код КАК Код
			               |ИЗ
			               |	Задача.Мероприятие КАК Мероприятие
			               |ГДЕ
			               |	Мероприятие.Выполнена
			               |	И Мероприятие.Результат В(&РезультатМС)
			               |	И (Мероприятие.Объект = &ДО
	                       |			ИЛИ Мероприятие.Объект.Владелец = &ДО)
			               |	И Мероприятие.ДатаВыполнения < &ТекДата
			               |	И (НЕ Мероприятие.ПометкаУдаления)
			               |	И (Мероприятие.БизнесПроцесс = ЗНАЧЕНИЕ(БизнесПроцесс.БизнесПроцессы.ПустаяСсылка)
			               |			ИЛИ (НЕ Мероприятие.БизнесПроцесс.ПометкаУдаления))
			               |
			               |УПОРЯДОЧИТЬ ПО
			               |	Мероприятие.ФактическаяДата";
			Результат3 = Запрос.Выполнить().Выбрать();
			ТекМС = Ложь;
			ПоследнееДО = Неопределено;
			Пока Результат3.Следующий() Цикл
				Если (Результат3.Код = "     0220" ИЛИ Результат3.Код = "     0315") И ПоследнееДО = Неопределено Тогда
					ТекМС = Истина;
					СтрокаДействий = СтрокаДействий + "УТВЕРЖДЕНО МИРОВОЕ СОГЛАШЕНИЕ" + Символы.ПС;
					КолМС = КолМС + 1;
					ПоследнееДО = Выборка.ДолговоеОбязательство;
				ИначеЕсли (Результат3.Код = "     0221" ИЛИ Результат3.Код = "     0183") И ТекМС И ПоследнееДО <> Неопределено Тогда
					ТекМС = Ложь;
					СтрокаДействий = СокрЛП(СтрокаДействий) + ", ИСПОЛНЕНО" + Символы.ПС;
					КолМСИсп = КолМСИсп + 1;
				ИначеЕсли (Результат3.Код = "     0222" ИЛИ Результат3.Код = "     0184") И ТекМС И ПоследнееДО <> Неопределено Тогда
					ТекМС = Ложь;
					СтрокаДействий = СокрЛП(СтрокаДействий) + ", НЕ ИСПОЛНЕНО" + Символы.ПС;
					КолМСНеИсп = КолМСНеИсп + 1;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		Если Сред(Выборка.СтадияФлаг, 2, 1) = "1" Тогда
			СтрокаДействий = СтрокаДействий + "ОТКАЗ ОТ ИСКА" + Символы.ПС;
			КолОИ = КолОИ + 1;
		КонецЕсли;
		Если Сред(Выборка.СтадияФлаг, 3, 1) = "1" Тогда
			Запрос.Текст = "ВЫБРАТЬ
			               |	МероприятиеДополнительныеРеквизиты.Ссылка,
			               |	МероприятиеДополнительныеРеквизиты.Значение
			               |ИЗ
			               |	Задача.Мероприятие.ДополнительныеРеквизиты КАК МероприятиеДополнительныеРеквизиты
			               |ГДЕ
			               |	(МероприятиеДополнительныеРеквизиты.Ссылка.Объект = &ДО
			               |			ИЛИ МероприятиеДополнительныеРеквизиты.Ссылка.Объект.Владелец = &ДО)
			               |	И МероприятиеДополнительныеРеквизиты.Ссылка.Выполнена
			               |	И МероприятиеДополнительныеРеквизиты.Свойство = &Свойство
			               |	И МероприятиеДополнительныеРеквизиты.Значение >= &ТекДата
			               |	И МероприятиеДополнительныеРеквизиты.Ссылка.ДатаВыполнения < &ТекДата
			               |	И НЕ МероприятиеДополнительныеРеквизиты.Ссылка.ПометкаУдаления
			               |	И (МероприятиеДополнительныеРеквизиты.Ссылка.БизнесПроцесс = ЗНАЧЕНИЕ(БизнесПроцесс.БизнесПроцессы.ПустаяСсылка)
			               |			ИЛИ НЕ МероприятиеДополнительныеРеквизиты.Ссылка.БизнесПроцесс.ПометкаУдаления)
			               |
			               |УПОРЯДОЧИТЬ ПО
			               |	МероприятиеДополнительныеРеквизиты.Значение";
			Запрос.УстановитьПараметр("Свойство", 
					ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоКоду("     2051")); //ДопРеквизитыМероприятий
			Результат3 = Запрос.Выполнить().Выбрать();
			Пока Результат3.Следующий() Цикл
				СтрокаДействий = СтрокаДействий + "ПРЕДОСТАВЛЕНА ОТСРОЧКА ДО " + Формат(Результат3.Значение, "ДЛФ=D") + Символы.ПС;
				КолПО = КолПО + 1;
			КонецЦикла;	
		КонецЕсли;
		Если Сред(Выборка.СтадияФлаг, 4, 1) = "1" Тогда
			СтрокаДействий = СтрокаДействий + "ПОЛУЧЕНО СВИДЕТЕЛЬСТВО О РЕГИСТРАЦИИ ПРАВА СОБСТВЕННОСТИ" + Символы.ПС;
			КолПС = КолПС + 1;
		КонецЕсли;
		Если Сред(Выборка.СтадияФлаг, 5, 1) = "1" Тогда
			СтрокаДействий = СтрокаДействий + "ПЕРЕЧИСЛЕНЫ ДЕНЕЖНЫЕ СРЕДСТВА" + Символы.ПС;
			КолПД = КолПД + 1;
		КонецЕсли;
	КонецЦикла;	
		
	//--
	Результат_Т = ПолучитьСписокИсключающихДО(СтрТабл);
	//--
	
	Для Каждого Элемент Из Стадии Цикл
		Область = Макет.ПолучитьОбласть("Стадия");
		Если ТипЗнч(Элемент.Значение) = Тип("СправочникСсылка.КартыМаршрутов") Тогда
			Область.Параметры.Стадия = Элемент.Значение;
			Запрос.Текст = "ВЫБРАТЬ
			               |	ОбъектыВРаботеОстатки.Объект КАК ДолговоеОбязательство
			               |ИЗ
			               |	РегистрНакопления.ОбъектыВРаботе.Остатки(
			               |			&Период,
			               |			Организация = &Организация
			               |				И Подразделение = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
			               |				И Сотрудник = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)) КАК ОбъектыВРаботеОстатки
			               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Задача.Мероприятие КАК Мероприятие
			               |		ПО (ОбъектыВРаботеОстатки.Объект В (Мероприятие.Объект, Мероприятие.Объект.Владелец))
			               |			И (Мероприятие.Выполнена = ЛОЖЬ)
			               |			И (Мероприятие.Схема = &Схема)
			               |			И (НЕ Мероприятие.БизнесПроцесс.Завершен)
			               |			И (Мероприятие.БизнесПроцесс.Стартован)
			               |			И (НЕ Мероприятие.ПометкаУдаления)
			               |			И (НЕ Мероприятие.БизнесПроцесс.ПометкаУдаления)
			               |ГДЕ
			               |	НЕ ОбъектыВРаботеОстатки.Объект.ПометкаУдаления
			               |	И НЕ ОбъектыВРаботеОстатки.Объект В(&Т)
			               |
			               |СГРУППИРОВАТЬ ПО
			               |	ОбъектыВРаботеОстатки.Объект"; 
			Запрос.УстановитьПараметр("Схема", Элемент.Значение); 			   		   
			//--
			Запрос.УстановитьПараметр("Т", Результат_Т); 	
			//--
			Результат =  Запрос.Выполнить().Выгрузить();			
			Область.Параметры.КолРук = Результат.Количество();			
			ТабДок.Вывести(Область);
			
			ТабДок.НачатьГруппуСтрок(, Ложь);
			Для Каждого Эл Из Результат Цикл
				Область = Макет.ПолучитьОбласть("ДО");
				//Область.Параметры.ДО = Эл.ДолговоеОбязательство.ВладелецДолжник;
				//Область.Параметры.ДОРас = Эл.ДолговоеОбязательство;
				Область.Параметры.ДО = Эл.ДолговоеОбязательство;
				Область.Параметры.ДОРас = Эл.ДолговоеОбязательство;
                Область.Параметры.Должник = Эл.ДолговоеОбязательство.Должник;
				Область.Параметры.ДолжникРас = Эл.ДолговоеОбязательство.Должник;
				
				ТабДок.Вывести(Область);
			КонецЦикла;
			ТабДок.ЗакончитьГруппуСтрок();
		ИначеЕсли Элемент.Значение = Перечисления.СостоянияДел.МировоеСоглашение Тогда
			Область.Параметры.Стадия = Элемент.Представление;
			Область.Параметры.КолРук = Строка(КолМС) + " (" + Строка(КолМСИсп) + "/" + Строка(КолМСНеИсп) + ")";
			ТабДок.Вывести(Область);
			
			ТабДок.НачатьГруппуСтрок(, Ложь);
			Для Каждого Эл Из СтрТабл.МировоеСоглашение Цикл
				Область = Макет.ПолучитьОбласть("ДО");
				//Область.Параметры.ДО = Эл.ДолговоеОбязательство;
				//Область.Параметры.ДОРас = Эл.ДолговоеОбязательство;
				Область.Параметры.ДО = Эл.ДолговоеОбязательство;
				Область.Параметры.ДОРас = Эл.ДолговоеОбязательство;
				Область.Параметры.Должник = Эл.ДолговоеОбязательство.Должник;
				Область.Параметры.ДолжникРас = Эл.ДолговоеОбязательство.Должник;
				
				ТабДок.Вывести(Область);
			КонецЦикла;
			ТабДок.ЗакончитьГруппуСтрок();
			
		ИначеЕсли Элемент.Значение = Перечисления.СостоянияДел.ОтказОтИска Тогда
			Область.Параметры.Стадия = Элемент.Представление;
			Область.Параметры.КолРук = КолОИ;
			ТабДок.Вывести(Область);
			
			ТабДок.НачатьГруппуСтрок(, Ложь);
			Для Каждого Эл Из СтрТабл.ОтказОтИска Цикл
				Область = Макет.ПолучитьОбласть("ДО");
				//Область.Параметры.ДО = Эл.ДолговоеОбязательство;
				//Область.Параметры.ДОРас = Эл.ДолговоеОбязательство;
				Область.Параметры.ДО = Эл.ДолговоеОбязательство;
				Область.Параметры.ДОРас = Эл.ДолговоеОбязательство;
				Область.Параметры.Должник = Эл.ДолговоеОбязательство.Должник;
				Область.Параметры.ДолжникРас = Эл.ДолговоеОбязательство.Должник;

				ТабДок.Вывести(Область);
			КонецЦикла;
			ТабДок.ЗакончитьГруппуСтрок();
			
		ИначеЕсли Элемент.Значение = Перечисления.СостоянияДел.ПредоставленаОтсрочка Тогда
			Область.Параметры.Стадия = Элемент.Представление;
			Область.Параметры.КолРук = КолПО;
			ТабДок.Вывести(Область);
			
			ТабДок.НачатьГруппуСтрок(, Ложь);
			Для Каждого Эл Из СтрТабл.ПредоставленаОтсрочка Цикл
				Область = Макет.ПолучитьОбласть("ДО");
				//Область.Параметры.ДО = Эл.ДолговоеОбязательство;
				//Область.Параметры.ДОРас = Эл.ДолговоеОбязательство;
				Область.Параметры.ДО = Эл.ДолговоеОбязательство;
				Область.Параметры.ДОРас = Эл.ДолговоеОбязательство;
				Область.Параметры.Должник = Эл.ДолговоеОбязательство.Должник;
				Область.Параметры.ДолжникРас = Эл.ДолговоеОбязательство.Должник;

				ТабДок.Вывести(Область);
			КонецЦикла;
			ТабДок.ЗакончитьГруппуСтрок();
			
		ИначеЕсли Элемент.Значение = Перечисления.СостоянияДел.ПолученоСвидетельство Тогда
			Область.Параметры.Стадия = Элемент.Представление;
			Область.Параметры.КолРук = КолПС;
			ТабДок.Вывести(Область);
			
			ТабДок.НачатьГруппуСтрок(, Ложь);
			Для Каждого Эл Из СтрТабл.ПолученоСвидетельство Цикл
				Область = Макет.ПолучитьОбласть("ДО");
				//Область.Параметры.ДО = Эл.ДолговоеОбязательство;
				//Область.Параметры.ДОРас = Эл.ДолговоеОбязательство;
				Область.Параметры.ДО = Эл.ДолговоеОбязательство;
				Область.Параметры.ДОРас = Эл.ДолговоеОбязательство;
				Область.Параметры.Должник = Эл.ДолговоеОбязательство.Должник;
				Область.Параметры.ДолжникРас = Эл.ДолговоеОбязательство.Должник;

				ТабДок.Вывести(Область);
			КонецЦикла;
			ТабДок.ЗакончитьГруппуСтрок();
			
		ИначеЕсли Элемент.Значение = Перечисления.СостоянияДел.ПеречисленыДенежныеСредства Тогда
			Область.Параметры.Стадия = Элемент.Представление;
			Область.Параметры.КолРук = КолПД;
			ТабДок.Вывести(Область);
			
			ТабДок.НачатьГруппуСтрок(, Ложь);
			Для Каждого Эл Из СтрТабл.ПеречисленыДС Цикл
				Область = Макет.ПолучитьОбласть("ДО");
				//Область.Параметры.ДО = Эл.ДолговоеОбязательство;
				//Область.Параметры.ДОРас = Эл.ДолговоеОбязательство;
				Область.Параметры.ДО = Эл.ДолговоеОбязательство;
				Область.Параметры.ДОРас = Эл.ДолговоеОбязательство;
				Область.Параметры.Должник = Эл.ДолговоеОбязательство.Должник;
				Область.Параметры.ДолжникРас = Эл.ДолговоеОбязательство.Должник;

				ТабДок.Вывести(Область);
			КонецЦикла;
			ТабДок.ЗакончитьГруппуСтрок();
			
		ИначеЕсли Элемент.Значение = Перечисления.Стадии.БезМероприятий Тогда
			Область.Параметры.Стадия = Элемент.Представление;
			Область.Параметры.КолРук = СтрТабл.БезМероприятий.Количество();
			ТабДок.Вывести(Область);
			
			ТабДок.НачатьГруппуСтрок(, Ложь);
			Для Каждого Эл Из СтрТабл.БезМероприятий Цикл
				Область = Макет.ПолучитьОбласть("ДО");
				//Область.Параметры.ДО = Эл.ДолговоеОбязательство;
				//Область.Параметры.ДОРас = Эл.ДолговоеОбязательство;
				Область.Параметры.ДО = Эл.ДолговоеОбязательство;
				Область.Параметры.ДОРас = Эл.ДолговоеОбязательство;
				Область.Параметры.Должник = Эл.ДолговоеОбязательство.Должник;
				Область.Параметры.ДолжникРас = Эл.ДолговоеОбязательство.Должник;

				ТабДок.Вывести(Область);
			КонецЦикла;
			ТабДок.ЗакончитьГруппуСтрок();
		ИначеЕсли Элемент.Значение = Перечисления.Стадии.БезОтветственного Тогда
			Область.Параметры.Стадия = Элемент.Представление;
			Область.Параметры.КолРук = СтрТабл.БезОтветственного.Количество();
			ТабДок.Вывести(Область);
			
			ТабДок.НачатьГруппуСтрок(, Ложь);
			Для Каждого Эл Из СтрТабл.БезОтветственного Цикл
				Область = Макет.ПолучитьОбласть("ДО");
				//Область.Параметры.ДО = Эл.ДолговоеОбязательство;
				//Область.Параметры.ДОРас = Эл.ДолговоеОбязательство;
				Область.Параметры.ДО = Эл.ДолговоеОбязательство;
				Область.Параметры.ДОРас = Эл.ДолговоеОбязательство;
				Область.Параметры.Должник = Эл.ДолговоеОбязательство.Должник;
				Область.Параметры.ДолжникРас = Эл.ДолговоеОбязательство.Должник;

				ТабДок.Вывести(Область);
			КонецЦикла;
			ТабДок.ЗакончитьГруппуСтрок();
		ИначеЕсли Элемент.Значение = Перечисления.Стадии.Завершенные Тогда
			Область.Параметры.Стадия = Элемент.Представление;
			Область.Параметры.КолРук = СтрТабл.Завершенные.Количество();
			ТабДок.Вывести(Область);
			
			ТабДок.НачатьГруппуСтрок(, Ложь);
			Для Каждого Эл Из СтрТабл.Завершенные Цикл
				Область = Макет.ПолучитьОбласть("ДО");
				//Область.Параметры.ДО = Эл.ДолговоеОбязательство;
				//Область.Параметры.ДОРас = Эл.ДолговоеОбязательство;
				Область.Параметры.ДО = Эл.ДолговоеОбязательство;
				Область.Параметры.ДОРас = Эл.ДолговоеОбязательство;
				Область.Параметры.Должник = Эл.ДолговоеОбязательство.Должник;
				Область.Параметры.ДолжникРас = Эл.ДолговоеОбязательство.Должник;

				ТабДок.Вывести(Область);
			КонецЦикла;
			ТабДок.ЗакончитьГруппуСтрок();
		КонецЕсли;
	КонецЦикла;
	
	ТабДок.ЗакончитьГруппуСтрок();	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПодразделение(Макет, Ссылка)
	Область = Макет.ПолучитьОбласть("Подразделение");
	Область.Параметры.Подразделение = Ссылка;
	
	Запрос = Новый Запрос("ВЫБРАТЬ
			               |	ЕСТЬNULL(СУММА(ОбъектыВРаботеОстатки.КоличествоОстаток), 0) КАК КолВо
			               |ИЗ
			               |	РегистрНакопления.ОбъектыВРаботе.Остатки(
			               |			&Период,
			               |			Подразделение = &Подразделение
			               |				И Сотрудник = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)) КАК ОбъектыВРаботеОстатки
			               |ГДЕ
			               |	(НЕ ОбъектыВРаботеОстатки.Объект.ПометкаУдаления)");
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.УстановитьПараметр("Подразделение", Ссылка);	
	Область.Параметры.КолРук = Запрос.Выполнить().Выгрузить()[0].КолВо;
	ТабДок.Вывести(Область);
	
	Если Не ИнфоПодразделения Тогда
		Возврат;
	КонецЕсли;
	
	ТабДок.НачатьГруппуСтрок(, Ложь);
	
	//Подготовка таблицы с ДО подходящими по стадии
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ОбъектыВРаботеОстатки.Объект КАК ДолговоеОбязательство
	                      |ИЗ
	                      |	РегистрНакопления.ОбъектыВРаботе.Остатки(
	                      |			&Период,
	                      |			Подразделение = &Подразделение
	                      |				И Сотрудник = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)) КАК ОбъектыВРаботеОстатки
	                      |ГДЕ
	                      |	(НЕ ОбъектыВРаботеОстатки.Объект.ПометкаУдаления)");
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.УстановитьПараметр("Подразделение", Ссылка);
	Запрос.УстановитьПараметр("ТекДата", КонецДня(Период));
	ТаблицаДО = Запрос.Выполнить().Выгрузить();
	СтрТабл = ОтобратьПоСтадии(ТаблицаДО);
	
	МассивРезультатовМС = Новый Массив();	
	МассивРезультатовМС.Добавить(Справочники.РезультатыМероприятий.НайтиПоКоду("     0220"));
	МассивРезультатовМС.Добавить(Справочники.РезультатыМероприятий.НайтиПоКоду("     0315"));
	МассивРезультатовМС.Добавить(Справочники.РезультатыМероприятий.НайтиПоКоду("     0221"));
	МассивРезультатовМС.Добавить(Справочники.РезультатыМероприятий.НайтиПоКоду("     0183"));	
	МассивРезультатовМС.Добавить(Справочники.РезультатыМероприятий.НайтиПоКоду("     0222"));
	МассивРезультатовМС.Добавить(Справочники.РезультатыМероприятий.НайтиПоКоду("     0184"));
	Запрос.УстановитьПараметр("РезультатМС", МассивРезультатовМС);
	
	КолМС = 0;
	КолМСИсп = 0;
	КолМСНеИсп = 0;
	КолОИ = 0;
	КолПО = 0;
	КолПС = 0;
	КолПД = 0;
	
	Для Каждого Выборка Из ТаблицаДО Цикл
		СтрокаДействий = "";
		Запрос.УстановитьПараметр("ДО", Выборка.ДолговоеОбязательство);	
		Если Сред(Выборка.СтадияФлаг, 1, 1) = "1" Тогда
			Запрос.Текст = "ВЫБРАТЬ
			               |	Мероприятие.Результат.Код КАК Код
			               |ИЗ
			               |	Задача.Мероприятие КАК Мероприятие
			               |ГДЕ
			               |	Мероприятие.Выполнена
			               |	И Мероприятие.Результат В(&РезультатМС)
			               |	И (Мероприятие.Объект = &ДО
	                       |			ИЛИ Мероприятие.Объект.Владелец = &ДО)
			               |	И Мероприятие.ДатаВыполнения < &ТекДата
			               |	И (НЕ Мероприятие.ПометкаУдаления)
			               |	И (Мероприятие.БизнесПроцесс = ЗНАЧЕНИЕ(БизнесПроцесс.БизнесПроцессы.ПустаяСсылка)
			               |			ИЛИ (НЕ Мероприятие.БизнесПроцесс.ПометкаУдаления))
			               |
			               |УПОРЯДОЧИТЬ ПО
			               |	Мероприятие.ФактическаяДата";
			Результат3 = Запрос.Выполнить().Выбрать();
			ТекМС = Ложь;
			ПоследнееДО = Неопределено;
			Пока Результат3.Следующий() Цикл
				Если (Результат3.Код = "     0220" ИЛИ Результат3.Код = "     0315") И ПоследнееДО = Неопределено Тогда
					ТекМС = Истина;
					СтрокаДействий = СтрокаДействий + "УТВЕРЖДЕНО МИРОВОЕ СОГЛАШЕНИЕ" + Символы.ПС;
					КолМС = КолМС + 1;
					ПоследнееДО = Выборка.ДолговоеОбязательство;
				ИначеЕсли (Результат3.Код = "     0221" ИЛИ Результат3.Код = "     0183") И ТекМС И ПоследнееДО <> Неопределено Тогда
					ТекМС = Ложь;
					СтрокаДействий = СокрЛП(СтрокаДействий) + ", ИСПОЛНЕНО" + Символы.ПС;
					КолМСИсп = КолМСИсп + 1;
				ИначеЕсли (Результат3.Код = "     0222" ИЛИ Результат3.Код = "     0184") И ТекМС И ПоследнееДО <> Неопределено Тогда
					ТекМС = Ложь;
					СтрокаДействий = СокрЛП(СтрокаДействий) + ", НЕ ИСПОЛНЕНО" + Символы.ПС;
					КолМСНеИсп = КолМСНеИсп + 1;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		Если Сред(Выборка.СтадияФлаг, 2, 1) = "1" Тогда
			СтрокаДействий = СтрокаДействий + "ОТКАЗ ОТ ИСКА" + Символы.ПС;
			КолОИ = КолОИ + 1;
		КонецЕсли;
		Если Сред(Выборка.СтадияФлаг, 3, 1) = "1" Тогда
			Запрос.Текст = "ВЫБРАТЬ
			               |	МероприятиеДополнительныеРеквизиты.Ссылка,
			               |	МероприятиеДополнительныеРеквизиты.Значение
			               |ИЗ
			               |	Задача.Мероприятие.ДополнительныеРеквизиты КАК МероприятиеДополнительныеРеквизиты
			               |ГДЕ
			               |	(МероприятиеДополнительныеРеквизиты.Ссылка.Объект = &ДО
			               |			ИЛИ МероприятиеДополнительныеРеквизиты.Ссылка.Объект.Владелец = &ДО)
			               |	И МероприятиеДополнительныеРеквизиты.Ссылка.Выполнена
			               |	И МероприятиеДополнительныеРеквизиты.Свойство = &Свойство
			               |	И МероприятиеДополнительныеРеквизиты.Значение >= &ТекДата
			               |	И МероприятиеДополнительныеРеквизиты.Ссылка.ДатаВыполнения < &ТекДата
			               |	И НЕ МероприятиеДополнительныеРеквизиты.Ссылка.ПометкаУдаления
			               |	И (МероприятиеДополнительныеРеквизиты.Ссылка.БизнесПроцесс = ЗНАЧЕНИЕ(БизнесПроцесс.БизнесПроцессы.ПустаяСсылка)
			               |			ИЛИ НЕ МероприятиеДополнительныеРеквизиты.Ссылка.БизнесПроцесс.ПометкаУдаления)
			               |
			               |УПОРЯДОЧИТЬ ПО
			               |	МероприятиеДополнительныеРеквизиты.Значение";
			Запрос.УстановитьПараметр("Свойство", 
					ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоКоду("     2051")); //ДопРеквизитыМероприятий
			Результат3 = Запрос.Выполнить().Выбрать();
			Пока Результат3.Следующий() Цикл
				СтрокаДействий = СтрокаДействий + "ПРЕДОСТАВЛЕНА ОТСРОЧКА ДО " + Формат(Результат3.Значение, "ДЛФ=D") + Символы.ПС;
				КолПО = КолПО + 1;
			КонецЦикла;	
		КонецЕсли;
		Если Сред(Выборка.СтадияФлаг, 4, 1) = "1" Тогда
			СтрокаДействий = СтрокаДействий + "ПОЛУЧЕНО СВИДЕТЕЛЬСТВО О РЕГИСТРАЦИИ ПРАВА СОБСТВЕННОСТИ" + Символы.ПС;
			КолПС = КолПС + 1;
		КонецЕсли;
		Если Сред(Выборка.СтадияФлаг, 5, 1) = "1" Тогда
			СтрокаДействий = СтрокаДействий + "ПЕРЕЧИСЛЕНЫ ДЕНЕЖНЫЕ СРЕДСТВА" + Символы.ПС;
			КолПД = КолПД + 1;
		КонецЕсли;
	КонецЦикла;	
	
	//--
	Результат_Т = ПолучитьСписокИсключающихДО(СтрТабл);
	//--
	Для Каждого Элемент Из Стадии Цикл
		Область = Макет.ПолучитьОбласть("Стадия");
		Если ТипЗнч(Элемент.Значение) = Тип("СправочникСсылка.КартыМаршрутов") Тогда
			Область.Параметры.Стадия = Элемент.Значение;
			
			Запрос.Текст = "ВЫБРАТЬ
			               |	ОбъектыВРаботеОстатки.Объект КАК ДолговоеОбязательство
			               |ИЗ
			               |	РегистрНакопления.ОбъектыВРаботе.Остатки(
			               |			&Период,
			               |			Подразделение = &Подразделение
			               |				И Сотрудник = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)) КАК ОбъектыВРаботеОстатки
			               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Задача.Мероприятие КАК Мероприятие
			               |		ПО (ОбъектыВРаботеОстатки.Объект В (Мероприятие.Объект, Мероприятие.Объект.Владелец))
			               |			И (Мероприятие.Выполнена = ЛОЖЬ)
			               |			И (Мероприятие.Схема = &Схема)
			               |			И (НЕ Мероприятие.БизнесПроцесс.Завершен)
			               |			И (Мероприятие.БизнесПроцесс.Стартован)
			               |			И (НЕ Мероприятие.ПометкаУдаления)
			               |			И (НЕ Мероприятие.БизнесПроцесс.ПометкаУдаления)
			               |ГДЕ
			               |	НЕ ОбъектыВРаботеОстатки.Объект.ПометкаУдаления
						   |	И НЕ ОбъектыВРаботеОстатки.Объект В(&Т)
			               |
			               |СГРУППИРОВАТЬ ПО
			               |	ОбъектыВРаботеОстатки.Объект"; 
			Запрос.УстановитьПараметр("Схема", Элемент.Значение); 	
			//--
			Запрос.УстановитьПараметр("Т", Результат_Т); 	
			//--
			
			Результат =  Запрос.Выполнить().Выгрузить();			
			Область.Параметры.КолРук = Результат.Количество();			
			ТабДок.Вывести(Область);
			
			ТабДок.НачатьГруппуСтрок(, Ложь);
			Для Каждого Эл Из Результат Цикл
				Область = Макет.ПолучитьОбласть("ДО");
				//Область.Параметры.ДО = Эл.ДолговоеОбязательство.ВладелецДолжник;
				//Область.Параметры.ДОРас = Эл.ДолговоеОбязательство;
				Область.Параметры.ДО = Эл.ДолговоеОбязательство;
				Область.Параметры.ДОРас = Эл.ДолговоеОбязательство;
				Область.Параметры.Должник = Эл.ДолговоеОбязательство.Должник;
				Область.Параметры.ДолжникРас = Эл.ДолговоеОбязательство.Должник;

				ТабДок.Вывести(Область);
			КонецЦикла;
			ТабДок.ЗакончитьГруппуСтрок();
		ИначеЕсли Элемент.Значение = Перечисления.СостоянияДел.МировоеСоглашение Тогда
			Область.Параметры.Стадия = Элемент.Представление;
			Область.Параметры.КолРук = Строка(КолМС) + "(" + Строка(КолМСИсп) + "/" + Строка(КолМСНеИсп) + ")";
			ТабДок.Вывести(Область);
			
			ТабДок.НачатьГруппуСтрок(, Ложь);
			Для Каждого Эл Из СтрТабл.МировоеСоглашение Цикл
				Область = Макет.ПолучитьОбласть("ДО");
				//Область.Параметры.ДО = Эл.ДолговоеОбязательство;
				//Область.Параметры.ДОРас = Эл.ДолговоеОбязательство;
				Область.Параметры.ДО = Эл.ДолговоеОбязательство;
				Область.Параметры.ДОРас = Эл.ДолговоеОбязательство;
				Область.Параметры.Должник = Эл.ДолговоеОбязательство.Должник;
				Область.Параметры.ДолжникРас = Эл.ДолговоеОбязательство.Должник;

				ТабДок.Вывести(Область);
			КонецЦикла;
			ТабДок.ЗакончитьГруппуСтрок();
			
		ИначеЕсли Элемент.Значение = Перечисления.СостоянияДел.ОтказОтИска Тогда
			Область.Параметры.Стадия = Элемент.Представление;
			Область.Параметры.КолРук = КолОИ;
			ТабДок.Вывести(Область);
			
			ТабДок.НачатьГруппуСтрок(, Ложь);
			Для Каждого Эл Из СтрТабл.ОтказОтИска Цикл
				Область = Макет.ПолучитьОбласть("ДО");
				//Область.Параметры.ДО = Эл.ДолговоеОбязательство;
				//Область.Параметры.ДОРас = Эл.ДолговоеОбязательство;
				Область.Параметры.ДО = Эл.ДолговоеОбязательство;
				Область.Параметры.ДОРас = Эл.ДолговоеОбязательство;
				Область.Параметры.Должник = Эл.ДолговоеОбязательство.Должник;
				Область.Параметры.ДолжникРас = Эл.ДолговоеОбязательство.Должник;

				ТабДок.Вывести(Область);
			КонецЦикла;
			ТабДок.ЗакончитьГруппуСтрок();
			
		ИначеЕсли Элемент.Значение = Перечисления.СостоянияДел.ПредоставленаОтсрочка Тогда
			Область.Параметры.Стадия = Элемент.Представление;
			Область.Параметры.КолРук = КолПО;
			ТабДок.Вывести(Область);
			
			ТабДок.НачатьГруппуСтрок(, Ложь);
			Для Каждого Эл Из СтрТабл.ПредоставленаОтсрочка Цикл
				Область = Макет.ПолучитьОбласть("ДО");
				//Область.Параметры.ДО = Эл.ДолговоеОбязательство;
				//Область.Параметры.ДОРас = Эл.ДолговоеОбязательство;
				Область.Параметры.ДО = Эл.ДолговоеОбязательство;
				Область.Параметры.ДОРас = Эл.ДолговоеОбязательство;
				Область.Параметры.Должник = Эл.ДолговоеОбязательство.Должник;
				Область.Параметры.ДолжникРас = Эл.ДолговоеОбязательство.Должник;

				ТабДок.Вывести(Область);
			КонецЦикла;
			ТабДок.ЗакончитьГруппуСтрок();
			
		ИначеЕсли Элемент.Значение = Перечисления.СостоянияДел.ПолученоСвидетельство Тогда
			Область.Параметры.Стадия = Элемент.Представление;
			Область.Параметры.КолРук = КолПС;
			ТабДок.Вывести(Область);
			
			ТабДок.НачатьГруппуСтрок(, Ложь);
			Для Каждого Эл Из СтрТабл.ПолученоСвидетельство Цикл
				Область = Макет.ПолучитьОбласть("ДО");
				//Область.Параметры.ДО = Эл.ДолговоеОбязательство;
				//Область.Параметры.ДОРас = Эл.ДолговоеОбязательство;
				Область.Параметры.ДО = Эл.ДолговоеОбязательство;
				Область.Параметры.ДОРас = Эл.ДолговоеОбязательство;
				Область.Параметры.Должник = Эл.ДолговоеОбязательство.Должник;
				Область.Параметры.ДолжникРас = Эл.ДолговоеОбязательство.Должник;

				ТабДок.Вывести(Область);
			КонецЦикла;
			ТабДок.ЗакончитьГруппуСтрок();
			
		ИначеЕсли Элемент.Значение = Перечисления.СостоянияДел.ПеречисленыДенежныеСредства Тогда
			Область.Параметры.Стадия = Элемент.Представление;
			Область.Параметры.КолРук = КолПД;
			ТабДок.Вывести(Область);
			
			ТабДок.НачатьГруппуСтрок(, Ложь);
			Для Каждого Эл Из СтрТабл.ПеречисленыДС Цикл
				Область = Макет.ПолучитьОбласть("ДО");
				//Область.Параметры.ДО = Эл.ДолговоеОбязательство;
				//Область.Параметры.ДОРас = Эл.ДолговоеОбязательство;
				Область.Параметры.ДО = Эл.ДолговоеОбязательство;
				Область.Параметры.ДОРас = Эл.ДолговоеОбязательство;
				Область.Параметры.Должник = Эл.ДолговоеОбязательство.Должник;
				Область.Параметры.ДолжникРас = Эл.ДолговоеОбязательство.Должник;

				ТабДок.Вывести(Область);
			КонецЦикла;
			ТабДок.ЗакончитьГруппуСтрок();
						
		ИначеЕсли Элемент.Значение = Перечисления.Стадии.БезМероприятий Тогда
			Область.Параметры.Стадия = Элемент.Представление;
			Область.Параметры.КолРук = СтрТабл.БезМероприятий.Количество();
			ТабДок.Вывести(Область);
			
			ТабДок.НачатьГруппуСтрок(, Ложь);
			Для Каждого Эл Из СтрТабл.БезМероприятий Цикл
				Область = Макет.ПолучитьОбласть("ДО");
				//Область.Параметры.ДО = Эл.ДолговоеОбязательство;
				//Область.Параметры.ДОРас = Эл.ДолговоеОбязательство;
				Область.Параметры.ДО = Эл.ДолговоеОбязательство;
				Область.Параметры.ДОРас = Эл.ДолговоеОбязательство;
				Область.Параметры.Должник = Эл.ДолговоеОбязательство.Должник;
				Область.Параметры.ДолжникРас = Эл.ДолговоеОбязательство.Должник;

				ТабДок.Вывести(Область);
			КонецЦикла;
			ТабДок.ЗакончитьГруппуСтрок();
		ИначеЕсли Элемент.Значение = Перечисления.Стадии.БезОтветственного Тогда
			Область.Параметры.Стадия = Элемент.Представление;
			Область.Параметры.КолРук = СтрТабл.БезОтветственного.Количество();
			ТабДок.Вывести(Область);
			
			ТабДок.НачатьГруппуСтрок(, Ложь);
			Для Каждого Эл Из СтрТабл.БезОтветственного Цикл
				Область = Макет.ПолучитьОбласть("ДО");
				//Область.Параметры.ДО = Эл.ДолговоеОбязательство;
				//Область.Параметры.ДОРас = Эл.ДолговоеОбязательство;
				Область.Параметры.ДО = Эл.ДолговоеОбязательство;
				Область.Параметры.ДОРас = Эл.ДолговоеОбязательство;
				Область.Параметры.Должник = Эл.ДолговоеОбязательство.Должник;
				Область.Параметры.ДолжникРас = Эл.ДолговоеОбязательство.Должник;

				ТабДок.Вывести(Область);
			КонецЦикла;
			ТабДок.ЗакончитьГруппуСтрок();
		ИначеЕсли Элемент.Значение = Перечисления.Стадии.Завершенные Тогда
			Область.Параметры.Стадия = Элемент.Представление;
			Область.Параметры.КолРук = СтрТабл.Завершенные.Количество();
			ТабДок.Вывести(Область);
			
			ТабДок.НачатьГруппуСтрок(, Ложь);
			Для Каждого Эл Из СтрТабл.Завершенные Цикл
				Область = Макет.ПолучитьОбласть("ДО");
				//Область.Параметры.ДО = Эл.ДолговоеОбязательство;
				//Область.Параметры.ДОРас = Эл.ДолговоеОбязательство;
				Область.Параметры.ДО = Эл.ДолговоеОбязательство;
				Область.Параметры.ДОРас = Эл.ДолговоеОбязательство;
				Область.Параметры.Должник = Эл.ДолговоеОбязательство.Должник;
				Область.Параметры.ДолжникРас = Эл.ДолговоеОбязательство.Должник;

				ТабДок.Вывести(Область);
			КонецЦикла;
			ТабДок.ЗакончитьГруппуСтрок();
		КонецЕсли;
	КонецЦикла;
	
	ТабДок.ЗакончитьГруппуСтрок();	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСотрудника(Макет, Ссылка)
	Область = Макет.ПолучитьОбласть("Сотрудник");
	Область.Параметры.Сотрудник = Ссылка;
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	               |	ЕСТЬNULL(СУММА(ОбъектыВРаботеОстатки.КоличествоОстаток), 0) КАК КолВо
	               |ИЗ
	               |	РегистрНакопления.ОбъектыВРаботе.Остатки(&Период, Сотрудник = &Сотрудник) КАК ОбъектыВРаботеОстатки
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеСотрудники КАК ОтветственныеСотрудники
	               |		ПО ОбъектыВРаботеОстатки.Объект = ОтветственныеСотрудники.Объект 
				   |			И (ОбъектыВРаботеОстатки.Сотрудник = ОтветственныеСотрудники.Пользователь)
	               |			И (ОтветственныеСотрудники.ТипСотрудника.Код = ""     0001"")
	               |ГДЕ
	               |	(НЕ ОбъектыВРаботеОстатки.Объект.ПометкаУдаления)");
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.УстановитьПараметр("Сотрудник", Ссылка);	
	Область.Параметры.КолРук = Запрос.Выполнить().Выгрузить()[0].КолВо;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЕСТЬNULL(СУММА(ОбъектыВРаботеОстатки.КоличествоОстаток), 0) КАК КолВо
	               |ИЗ
	               |	РегистрНакопления.ОбъектыВРаботе.Остатки(&Период, Сотрудник = &Сотрудник) КАК ОбъектыВРаботеОстатки
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеСотрудники КАК ОтветственныеСотрудники
	               |		ПО ОбъектыВРаботеОстатки.Объект = ОтветственныеСотрудники.Объект 
				   |			И (ОбъектыВРаботеОстатки.Сотрудник = ОтветственныеСотрудники.Пользователь)
	               |			И (ОтветственныеСотрудники.ТипСотрудника.Код = ""     0002"")
	               |ГДЕ
	               |	(НЕ ОбъектыВРаботеОстатки.Объект.ПометкаУдаления)";
	Область.Параметры.КолОтв = Запрос.Выполнить().Выгрузить()[0].КолВо;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЕСТЬNULL(СУММА(ОбъектыВРаботеОстатки.КоличествоОстаток), 0) КАК КолВо
	               |ИЗ
	               |	РегистрНакопления.ОбъектыВРаботе.Остатки(&Период, Сотрудник = &Сотрудник) КАК ОбъектыВРаботеОстатки
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеСотрудники КАК ОтветственныеСотрудники
	               |		ПО ОбъектыВРаботеОстатки.Объект = ОтветственныеСотрудники.Объект
				   |			И (ОбъектыВРаботеОстатки.Сотрудник = ОтветственныеСотрудники.Пользователь)
	               |			И (ОтветственныеСотрудники.ТипСотрудника.Код = ""     0003"")
	               |ГДЕ
	               |	(НЕ ОбъектыВРаботеОстатки.Объект.ПометкаУдаления)";
	Область.Параметры.КолРег = Запрос.Выполнить().Выгрузить()[0].КолВо;	
	ТабДок.Вывести(Область);
	
	Если Не ИнфоСотрудники Тогда
		Возврат;
	КонецЕсли;
	
	ТабДок.НачатьГруппуСтрок(, Ложь);
	
	//Подготовка таблицы с ДО подходящими по стадии
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ОбъектыВРаботеОстатки.Объект КАК ДолговоеОбязательство
	                      |ИЗ
	                      |	РегистрНакопления.ОбъектыВРаботе.Остатки(&Период, Сотрудник = &Сотрудник) КАК ОбъектыВРаботеОстатки
	                      |ГДЕ
	                      |	(НЕ ОбъектыВРаботеОстатки.Объект.ПометкаУдаления)");
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.УстановитьПараметр("Сотрудник", Ссылка);
	Запрос.УстановитьПараметр("ТекДата", КонецДня(Период));
	ТаблицаДО = Запрос.Выполнить().Выгрузить();
	СтрТабл = ОтобратьПоСтадии(ТаблицаДО);
	
	МассивРезультатовМС = Новый Массив();	
	МассивРезультатовМС.Добавить(Справочники.РезультатыМероприятий.НайтиПоКоду("     0220"));
	МассивРезультатовМС.Добавить(Справочники.РезультатыМероприятий.НайтиПоКоду("     0315"));
	МассивРезультатовМС.Добавить(Справочники.РезультатыМероприятий.НайтиПоКоду("     0221"));
	МассивРезультатовМС.Добавить(Справочники.РезультатыМероприятий.НайтиПоКоду("     0183"));	
	МассивРезультатовМС.Добавить(Справочники.РезультатыМероприятий.НайтиПоКоду("     0222"));
	МассивРезультатовМС.Добавить(Справочники.РезультатыМероприятий.НайтиПоКоду("     0184"));
	Запрос.УстановитьПараметр("РезультатМС", МассивРезультатовМС);
	
	КолМС = 0;
	КолМСИсп = 0;
	КолМСНеИсп = 0;
	КолОИ = 0;
	КолПО = 0;
	КолПС = 0;
	КолПД = 0;
	
	Для Каждого Выборка Из ТаблицаДО Цикл
		СтрокаДействий = "";
		Запрос.УстановитьПараметр("ДО", Выборка.ДолговоеОбязательство);	
		Если Сред(Выборка.СтадияФлаг, 1, 1) = "1" Тогда
			Запрос.Текст = "ВЫБРАТЬ
			               |	Мероприятие.Результат.Код КАК Код
			               |ИЗ
			               |	Задача.Мероприятие КАК Мероприятие
			               |ГДЕ
			               |	Мероприятие.Выполнена
			               |	И Мероприятие.Результат В(&РезультатМС)
			               |	И (Мероприятие.Объект = &ДО
	                       |			ИЛИ Мероприятие.Объект.Владелец = &ДО)
			               |	И Мероприятие.ДатаВыполнения < &ТекДата
			               |	И (НЕ Мероприятие.ПометкаУдаления)
			               |	И (Мероприятие.БизнесПроцесс = ЗНАЧЕНИЕ(БизнесПроцесс.БизнесПроцессы.ПустаяСсылка)
			               |			ИЛИ (НЕ Мероприятие.БизнесПроцесс.ПометкаУдаления))
			               |
			               |УПОРЯДОЧИТЬ ПО
			               |	Мероприятие.ФактическаяДата";
			Результат3 = Запрос.Выполнить().Выбрать();
			ТекМС = Ложь;
			ПоследнееДО = Неопределено;
			Пока Результат3.Следующий() Цикл
				Если (Результат3.Код = "     0220" ИЛИ Результат3.Код = "     0315") И ПоследнееДО = Неопределено Тогда
					ТекМС = Истина;
					СтрокаДействий = СтрокаДействий + "УТВЕРЖДЕНО МИРОВОЕ СОГЛАШЕНИЕ" + Символы.ПС;
					КолМС = КолМС + 1;
					ПоследнееДО = Выборка.ДолговоеОбязательство;
				ИначеЕсли (Результат3.Код = "     0221" ИЛИ Результат3.Код = "     0183") И ТекМС И ПоследнееДО <> Неопределено Тогда
					ТекМС = Ложь;
					СтрокаДействий = СокрЛП(СтрокаДействий) + ", ИСПОЛНЕНО" + Символы.ПС;
					КолМСИсп = КолМСИсп + 1;
				ИначеЕсли (Результат3.Код = "     0222" ИЛИ Результат3.Код = "     0184") И ТекМС И ПоследнееДО <> Неопределено Тогда
					ТекМС = Ложь;
					СтрокаДействий = СокрЛП(СтрокаДействий) + ", НЕ ИСПОЛНЕНО" + Символы.ПС;
					КолМСНеИсп = КолМСНеИсп + 1;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		Если Сред(Выборка.СтадияФлаг, 2, 1) = "1" Тогда
			СтрокаДействий = СтрокаДействий + "ОТКАЗ ОТ ИСКА" + Символы.ПС;
			КолОИ = КолОИ + 1;
		КонецЕсли;
		Если Сред(Выборка.СтадияФлаг, 3, 1) = "1" Тогда
			Запрос.Текст = "ВЫБРАТЬ
			               |	МероприятиеДополнительныеРеквизиты.Ссылка,
			               |	МероприятиеДополнительныеРеквизиты.Значение
			               |ИЗ
			               |	Задача.Мероприятие.ДополнительныеРеквизиты КАК МероприятиеДополнительныеРеквизиты
			               |ГДЕ
			               |	(МероприятиеДополнительныеРеквизиты.Ссылка.Объект = &ДО
			               |			ИЛИ МероприятиеДополнительныеРеквизиты.Ссылка.Объект.Владелец = &ДО)
			               |	И МероприятиеДополнительныеРеквизиты.Ссылка.Выполнена
			               |	И МероприятиеДополнительныеРеквизиты.Свойство = &Свойство
			               |	И МероприятиеДополнительныеРеквизиты.Значение >= &ТекДата
			               |	И МероприятиеДополнительныеРеквизиты.Ссылка.ДатаВыполнения < &ТекДата
			               |	И НЕ МероприятиеДополнительныеРеквизиты.Ссылка.ПометкаУдаления
			               |	И (МероприятиеДополнительныеРеквизиты.Ссылка.БизнесПроцесс = ЗНАЧЕНИЕ(БизнесПроцесс.БизнесПроцессы.ПустаяСсылка)
			               |			ИЛИ НЕ МероприятиеДополнительныеРеквизиты.Ссылка.БизнесПроцесс.ПометкаУдаления)
			               |
			               |УПОРЯДОЧИТЬ ПО
			               |	МероприятиеДополнительныеРеквизиты.Значение";
			Запрос.УстановитьПараметр("Свойство", 
					ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоКоду("     2051")); //ДопРеквизитыМероприятий
			Результат3 = Запрос.Выполнить().Выбрать();
			Пока Результат3.Следующий() Цикл
				СтрокаДействий = СтрокаДействий + "ПРЕДОСТАВЛЕНА ОТСРОЧКА ДО " + Формат(Результат3.Значение, "ДЛФ=D") + Символы.ПС;
				КолПО = КолПО + 1;
			КонецЦикла;	
		КонецЕсли;
		Если Сред(Выборка.СтадияФлаг, 4, 1) = "1" Тогда
			СтрокаДействий = СтрокаДействий + "ПОЛУЧЕНО СВИДЕТЕЛЬСТВО О РЕГИСТРАЦИИ ПРАВА СОБСТВЕННОСТИ" + Символы.ПС;
			КолПС = КолПС + 1;
		КонецЕсли;
		Если Сред(Выборка.СтадияФлаг, 5, 1) = "1" Тогда
			СтрокаДействий = СтрокаДействий + "ПЕРЕЧИСЛЕНЫ ДЕНЕЖНЫЕ СРЕДСТВА" + Символы.ПС;
			КолПД = КолПД + 1;
		КонецЕсли;
	КонецЦикла;	
	
	//--
	Результат_Т = ПолучитьСписокИсключающихДО(СтрТабл);
	//--
	Для Каждого Элемент Из Стадии Цикл
		Область = Макет.ПолучитьОбласть("Стадия");
		Если ТипЗнч(Элемент.Значение) = Тип("СправочникСсылка.КартыМаршрутов") Тогда
			Область.Параметры.Стадия = Элемент.Значение;
			
			Запрос.Текст = "ВЫБРАТЬ
			               |	ОбъектыВРаботеОстатки.Объект КАК ДолговоеОбязательство
			               |ИЗ
			               |	РегистрНакопления.ОбъектыВРаботе.Остатки(&Период, Сотрудник = &Сотрудник) КАК ОбъектыВРаботеОстатки
			               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Задача.Мероприятие КАК Мероприятие
			               |		ПО (ОбъектыВРаботеОстатки.Объект В (Мероприятие.Объект, Мероприятие.Объект.Владелец))
			               |			И (Мероприятие.Выполнена = ЛОЖЬ)
			               |			И (Мероприятие.Схема = &Схема)
			               |			И (НЕ Мероприятие.БизнесПроцесс.Завершен)
			               |			И (Мероприятие.БизнесПроцесс.Стартован)
			               |			И (НЕ Мероприятие.ПометкаУдаления)
			               |			И (НЕ Мероприятие.БизнесПроцесс.ПометкаУдаления)
			               |ГДЕ
			               |	НЕ ОбъектыВРаботеОстатки.Объект.ПометкаУдаления
						   |	И НЕ ОбъектыВРаботеОстатки.Объект В(&Т) И (Не &Схема В (&СхемаПЗ, &СхемаРС) ИЛИ (&Схема = &СхемаПЗ И Не Мероприятие.ТипМероприятия В (&М1)) ИЛИ (&Схема = &СхемаРС И ))
			               |
			               |СГРУППИРОВАТЬ ПО
			               |	ОбъектыВРаботеОстатки.Объект"; 
			Запрос.УстановитьПараметр("Схема", Элемент.Значение);
			Запрос.УстановитьПараметр("СхемаПЗ", Справочники.КартыМаршрутов.НайтиПоКоду("000000017"));
			Запрос.УстановитьПараметр("СхемаРС", Справочники.КартыМаршрутов.НайтиПоКоду("000000019"));
			Запрос.УстановитьПараметр("СвойствоКК", ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоКоду(
					"000002166"));
			//--
			Запрос.УстановитьПараметр("Т", Результат_Т); 	
			//--
			
			Результат =  Запрос.Выполнить().Выгрузить();			
			Область.Параметры.КолРук = Результат.Количество();			
			ТабДок.Вывести(Область);
			
			ТабДок.НачатьГруппуСтрок(, Ложь);
			Для Каждого Эл Из Результат Цикл
				Область = Макет.ПолучитьОбласть("ДО");
				//Область.Параметры.ДО = Эл.ДолговоеОбязательство.ВладелецДолжник;
				//Область.Параметры.ДОРас = Эл.ДолговоеОбязательство;
				Область.Параметры.ДО = Эл.ДолговоеОбязательство;
				Область.Параметры.ДОРас = Эл.ДолговоеОбязательство;
				Область.Параметры.Должник = Эл.ДолговоеОбязательство.Должник;
				Область.Параметры.ДолжникРас = Эл.ДолговоеОбязательство.Должник;

				ТабДок.Вывести(Область);
			КонецЦикла;
			ТабДок.ЗакончитьГруппуСтрок();
		ИначеЕсли Элемент.Значение = Перечисления.СостоянияДел.МировоеСоглашение Тогда
			Область.Параметры.Стадия = Элемент.Представление;
			Область.Параметры.КолРук = Строка(КолМС) + "(" + Строка(КолМСИсп) + "/" + Строка(КолМСНеИсп) + ")";
			ТабДок.Вывести(Область);
			
			ТабДок.НачатьГруппуСтрок(, Ложь);
			Для Каждого Эл Из СтрТабл.МировоеСоглашение Цикл
				Область = Макет.ПолучитьОбласть("ДО");
				//Область.Параметры.ДО = Эл.ДолговоеОбязательство;
				//Область.Параметры.ДОРас = Эл.ДолговоеОбязательство;
				Область.Параметры.ДО = Эл.ДолговоеОбязательство;
				Область.Параметры.ДОРас = Эл.ДолговоеОбязательство;
				Область.Параметры.Должник = Эл.ДолговоеОбязательство.Должник;
				Область.Параметры.ДолжникРас = Эл.ДолговоеОбязательство.Должник;

				ТабДок.Вывести(Область);
			КонецЦикла;
			ТабДок.ЗакончитьГруппуСтрок();
			
		ИначеЕсли Элемент.Значение = Перечисления.СостоянияДел.ОтказОтИска Тогда
			Область.Параметры.Стадия = Элемент.Представление;
			Область.Параметры.КолРук = КолОИ;
			ТабДок.Вывести(Область);
			
			ТабДок.НачатьГруппуСтрок(, Ложь);
			Для Каждого Эл Из СтрТабл.ОтказОтИска Цикл
				Область = Макет.ПолучитьОбласть("ДО");
				//Область.Параметры.ДО = Эл.ДолговоеОбязательство;
				//Область.Параметры.ДОРас = Эл.ДолговоеОбязательство;
				Область.Параметры.ДО = Эл.ДолговоеОбязательство;
				Область.Параметры.ДОРас = Эл.ДолговоеОбязательство;
				Область.Параметры.Должник = Эл.ДолговоеОбязательство.Должник;
				Область.Параметры.ДолжникРас = Эл.ДолговоеОбязательство.Должник;

				ТабДок.Вывести(Область);
			КонецЦикла;
			ТабДок.ЗакончитьГруппуСтрок();
			
		ИначеЕсли Элемент.Значение = Перечисления.СостоянияДел.ПредоставленаОтсрочка Тогда
			Область.Параметры.Стадия = Элемент.Представление;
			Область.Параметры.КолРук = КолПО;
			ТабДок.Вывести(Область);
			
			ТабДок.НачатьГруппуСтрок(, Ложь);
			Для Каждого Эл Из СтрТабл.ПредоставленаОтсрочка Цикл
				Область = Макет.ПолучитьОбласть("ДО");
				//Область.Параметры.ДО = Эл.ДолговоеОбязательство;
				//Область.Параметры.ДОРас = Эл.ДолговоеОбязательство;
				Область.Параметры.ДО = Эл.ДолговоеОбязательство;
				Область.Параметры.ДОРас = Эл.ДолговоеОбязательство;
				Область.Параметры.Должник = Эл.ДолговоеОбязательство.Должник;
				Область.Параметры.ДолжникРас = Эл.ДолговоеОбязательство.Должник;

				ТабДок.Вывести(Область);
			КонецЦикла;
			ТабДок.ЗакончитьГруппуСтрок();
			
		ИначеЕсли Элемент.Значение = Перечисления.СостоянияДел.ПолученоСвидетельство Тогда
			Область.Параметры.Стадия = Элемент.Представление;
			Область.Параметры.КолРук = КолПС;
			ТабДок.Вывести(Область);
			
			ТабДок.НачатьГруппуСтрок(, Ложь);
			Для Каждого Эл Из СтрТабл.ПолученоСвидетельство Цикл
				Область = Макет.ПолучитьОбласть("ДО");
				//Область.Параметры.ДО = Эл.ДолговоеОбязательство;
				//Область.Параметры.ДОРас = Эл.ДолговоеОбязательство;
				Область.Параметры.ДО = Эл.ДолговоеОбязательство;
				Область.Параметры.ДОРас = Эл.ДолговоеОбязательство;
				Область.Параметры.Должник = Эл.ДолговоеОбязательство.Должник;
				Область.Параметры.ДолжникРас = Эл.ДолговоеОбязательство.Должник;

				ТабДок.Вывести(Область);
			КонецЦикла;
			ТабДок.ЗакончитьГруппуСтрок();
			
		ИначеЕсли Элемент.Значение = Перечисления.СостоянияДел.ПеречисленыДенежныеСредства Тогда
			Область.Параметры.Стадия = Элемент.Представление;
			Область.Параметры.КолРук = КолПД;
			ТабДок.Вывести(Область);
			
			ТабДок.НачатьГруппуСтрок(, Ложь);
			Для Каждого Эл Из СтрТабл.ПеречисленыДС Цикл
				Область = Макет.ПолучитьОбласть("ДО");
				//Область.Параметры.ДО = Эл.ДолговоеОбязательство;
				//Область.Параметры.ДОРас = Эл.ДолговоеОбязательство;
				Область.Параметры.ДО = Эл.ДолговоеОбязательство;
				Область.Параметры.ДОРас = Эл.ДолговоеОбязательство;
				Область.Параметры.Должник = Эл.ДолговоеОбязательство.Должник;
				Область.Параметры.ДолжникРас = Эл.ДолговоеОбязательство.Должник;

				ТабДок.Вывести(Область);
			КонецЦикла;
			ТабДок.ЗакончитьГруппуСтрок();
			
		ИначеЕсли Элемент.Значение = Перечисления.Стадии.БезМероприятий Тогда
			Область.Параметры.Стадия = Элемент.Представление;
			Область.Параметры.КолРук = СтрТабл.БезМероприятий.Количество();
			ТабДок.Вывести(Область);
			
			ТабДок.НачатьГруппуСтрок(, Ложь);
			Для Каждого Эл Из СтрТабл.БезМероприятий Цикл
				Область = Макет.ПолучитьОбласть("ДО");
				//Область.Параметры.ДО = Эл.ДолговоеОбязательство;
				//Область.Параметры.ДОРас = Эл.ДолговоеОбязательство;
				Область.Параметры.ДО = Эл.ДолговоеОбязательство;
				Область.Параметры.ДОРас = Эл.ДолговоеОбязательство;
				Область.Параметры.Должник = Эл.ДолговоеОбязательство.Должник;
				Область.Параметры.ДолжникРас = Эл.ДолговоеОбязательство.Должник;

				ТабДок.Вывести(Область);
			КонецЦикла;
			ТабДок.ЗакончитьГруппуСтрок();
		ИначеЕсли Элемент.Значение = Перечисления.Стадии.БезОтветственного Тогда
			Область.Параметры.Стадия = Элемент.Представление;
			Область.Параметры.КолРук = СтрТабл.БезОтветственного.Количество();
			ТабДок.Вывести(Область);
			
			ТабДок.НачатьГруппуСтрок(, Ложь);
			Для Каждого Эл Из СтрТабл.БезОтветственного Цикл
				Область = Макет.ПолучитьОбласть("ДО");
				//Область.Параметры.ДО = Эл.ДолговоеОбязательство;
				//Область.Параметры.ДОРас = Эл.ДолговоеОбязательство;
				Область.Параметры.ДО = Эл.ДолговоеОбязательство;
				Область.Параметры.ДОРас = Эл.ДолговоеОбязательство;
				Область.Параметры.Должник = Эл.ДолговоеОбязательство.Должник;
				Область.Параметры.ДолжникРас = Эл.ДолговоеОбязательство.Должник;

				ТабДок.Вывести(Область);
			КонецЦикла;
			ТабДок.ЗакончитьГруппуСтрок();
		ИначеЕсли Элемент.Значение = Перечисления.Стадии.Завершенные Тогда
			Область.Параметры.Стадия = Элемент.Представление;
			Область.Параметры.КолРук = СтрТабл.Завершенные.Количество();
			ТабДок.Вывести(Область);
			
			ТабДок.НачатьГруппуСтрок(, Ложь);
			Для Каждого Эл Из СтрТабл.Завершенные Цикл
				Область = Макет.ПолучитьОбласть("ДО");
				//Область.Параметры.ДО = Эл.ДолговоеОбязательство;
				//Область.Параметры.ДОРас = Эл.ДолговоеОбязательство;
				Область.Параметры.ДО = Эл.ДолговоеОбязательство;
				Область.Параметры.ДОРас = Эл.ДолговоеОбязательство;
				Область.Параметры.Должник = Эл.ДолговоеОбязательство.Должник;
				Область.Параметры.ДолжникРас = Эл.ДолговоеОбязательство.Должник;

				ТабДок.Вывести(Область);
			КонецЦикла;
			ТабДок.ЗакончитьГруппуСтрок();			
		КонецЕсли;
	КонецЦикла;
	
	ТабДок.ЗакончитьГруппуСтрок();	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Период = ТекущаяДатаСеанса();
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	КартыМаршрутов.Ссылка
	                      |ИЗ
	                      |	Справочник.КартыМаршрутов КАК КартыМаршрутов
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	КартыМаршрутов.Наименование");
	Стадии.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	Стадии.Добавить(Перечисления.СостоянияДел.МировоеСоглашение, "Мировое соглашение (исп./не исп.)");
	Стадии.Добавить(Перечисления.СостоянияДел.ОтказОтИска, "Отказ от иска");
	Стадии.Добавить(Перечисления.СостоянияДел.ПолученоСвидетельство, "Получено свидетельство");
	Стадии.Добавить(Перечисления.СостоянияДел.ПредоставленаОтсрочка, "Предоставлена отсрочка");
	Стадии.Добавить(Перечисления.СостоянияДел.ПеречисленыДенежныеСредства, "Перечислены денежные средства");
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	Стадии.Ссылка
	               |ИЗ
	               |	Перечисление.Стадии КАК Стадии
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Стадии.Порядок";
	Результат = Запрос.Выполнить().Выбрать();
	Пока Результат.Следующий() Цикл
		Стадии.Добавить(Результат.Ссылка, Строка(Результат.Ссылка));
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция ОтобратьПоСтадии(Таблица)
	МассивСтадий = Новый Массив();	
	ФлагПоискаМС = Ложь;
	ФлагПоискаОИ = Ложь;
	ФлагПоискаПО = Ложь;
	ФлагПоискаПС = Ложь;
	ФлагПоискаПД = Ложь;	
	Для Каждого Элемент Из Стадии Цикл
		Если ТипЗнч(Элемент.Значение) = Тип("СправочникСсылка.КартыМаршрутов") Тогда
			МассивСтадий.Добавить(Элемент.Значение);			
		ИначеЕсли Элемент.Значение = Перечисления.СостоянияДел.МировоеСоглашение Тогда
			ФлагПоискаМС = Истина;
		ИначеЕсли Элемент.Значение = Перечисления.СостоянияДел.ОтказОтИска Тогда
			ФлагПоискаОИ = Истина;
		ИначеЕсли Элемент.Значение = Перечисления.СостоянияДел.ПредоставленаОтсрочка Тогда
			ФлагПоискаПО = Истина;
		ИначеЕсли Элемент.Значение = Перечисления.СостоянияДел.ПолученоСвидетельство Тогда
			ФлагПоискаПС = Истина;
		ИначеЕсли Элемент.Значение = Перечисления.СостоянияДел.ПеречисленыДенежныеСредства Тогда
			ФлагПоискаПД = Истина;	
		КонецЕсли;
	КонецЦикла;
							  
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	Таблица.ДолговоеОбязательство
	                      |ПОМЕСТИТЬ Таблица
	                      |ИЗ
	                      |	&Таблица КАК Таблица
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	Мероприятие.Ссылка,
	                      |	ЕСТЬNULL(Мероприятие.Объект.Владелец, Мероприятие.Объект) КАК Объект,
	                      |	Мероприятие.Схема,
	                      |	Мероприятие.БизнесПроцесс,
	                      |	Мероприятие.Результат,
	                      |	Мероприятие.Дата,
	                      |	Мероприятие.ДатаВыполнения,
	                      |	Мероприятие.Выполнена,
	                      |	Мероприятие.ТипМероприятия
	                      |ПОМЕСТИТЬ ТаблицаМ
	                      |ИЗ
	                      |	Задача.Мероприятие КАК Мероприятие
	                      |ГДЕ
	                      |	НЕ Мероприятие.ПометкаУдаления
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	Таблица.ДолговоеОбязательство,
	                      |	МАКСИМУМ(ВЫБОР
	                      |			КОГДА МероприятиеМС.Ссылка ЕСТЬ NULL 
	                      |				ТОГДА ""0""
	                      |			ИНАЧЕ ""1""
	                      |		КОНЕЦ) + МАКСИМУМ(ВЫБОР
	                      |			КОГДА МероприятиеОИ.Ссылка ЕСТЬ NULL 
	                      |				ТОГДА ""0""
	                      |			ИНАЧЕ ""1""
	                      |		КОНЕЦ) + МАКСИМУМ(ВЫБОР
	                      |			КОГДА МероприятиеПО.Ссылка ЕСТЬ NULL 
	                      |				ТОГДА ""0""
	                      |			ИНАЧЕ ""1""
	                      |		КОНЕЦ) + МАКСИМУМ(ВЫБОР
	                      |			КОГДА МероприятиеПС.Ссылка ЕСТЬ NULL 
	                      |				ТОГДА ""0""
	                      |			ИНАЧЕ ""1""
	                      |		КОНЕЦ) + МАКСИМУМ(ВЫБОР
	                      |			КОГДА МероприятиеПД.Ссылка ЕСТЬ NULL 
	                      |				ТОГДА ""0""
	                      |			ИНАЧЕ ""1""
	                      |		КОНЕЦ) КАК СтадияФлаг
	                      |ПОМЕСТИТЬ ТаблицаР
	                      |ИЗ
	                      |	Таблица КАК Таблица
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаМ КАК МероприятиеСтадии
	                      |		ПО Таблица.ДолговоеОбязательство = МероприятиеСтадии.Объект
	                      |			И (МероприятиеСтадии.Схема В (&МассивСтадий))
	                      |			И (МероприятиеСтадии.ДатаВыполнения > &ТекДата
	                      |				ИЛИ НЕ МероприятиеСтадии.Выполнена)
	                      |			И (МероприятиеСтадии.Дата < &ТекДата)
	                      |			И (НЕ МероприятиеСтадии.БизнесПроцесс.ПометкаУдаления)
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаМ КАК МероприятиеМС
	                      |		ПО Таблица.ДолговоеОбязательство = МероприятиеМС.Объект
	                      |			И (МероприятиеМС.Выполнена)
	                      |			И (МероприятиеМС.Результат В (&МассивРезультатовМС))
	                      |			И (МероприятиеМС.ДатаВыполнения < &ТекДата)
	                      |			И (МероприятиеМС.БизнесПроцесс = ЗНАЧЕНИЕ(БизнесПроцесс.БизнесПроцессы.ПустаяСсылка)
	                      |				ИЛИ НЕ МероприятиеМС.БизнесПроцесс.ПометкаУдаления)
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаМ КАК МероприятиеОИ
	                      |		ПО Таблица.ДолговоеОбязательство = МероприятиеОИ.Объект
	                      |			И (МероприятиеОИ.Выполнена)
	                      |			И (МероприятиеОИ.Результат В (&МассивРезультатовОИ))
	                      |			И (МероприятиеОИ.ДатаВыполнения < &ТекДата)
	                      |			И (МероприятиеОИ.БизнесПроцесс = ЗНАЧЕНИЕ(БизнесПроцесс.БизнесПроцессы.ПустаяСсылка)
	                      |				ИЛИ НЕ МероприятиеОИ.БизнесПроцесс.ПометкаУдаления)
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ Задача.Мероприятие.ДополнительныеРеквизиты КАК МероприятиеПО
	                      |		ПО (Таблица.ДолговоеОбязательство = ЕСТЬNULL(МероприятиеПО.Ссылка.Объект.Владелец, МероприятиеПО.Ссылка.Объект))
	                      |			И (МероприятиеПО.Ссылка.Выполнена)
	                      |			И (МероприятиеПО.Свойство В (&МассивРезультатовПО))
	                      |			И (МероприятиеПО.Значение >= &ТекДата)
	                      |			И (МероприятиеПО.Ссылка.ДатаВыполнения < &ТекДата)
	                      |			И (МероприятиеПО.Ссылка.БизнесПроцесс = ЗНАЧЕНИЕ(БизнесПроцесс.БизнесПроцессы.ПустаяСсылка)
	                      |				ИЛИ НЕ МероприятиеПО.Ссылка.БизнесПроцесс.ПометкаУдаления)
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаМ КАК МероприятиеПС
	                      |		ПО Таблица.ДолговоеОбязательство = МероприятиеПС.Объект
	                      |			И (МероприятиеПС.Выполнена)
	                      |			И (МероприятиеПС.Результат В (&МассивРезультатовПС))
	                      |			И (МероприятиеПС.ДатаВыполнения < &ТекДата)
	                      |			И (МероприятиеПС.БизнесПроцесс = ЗНАЧЕНИЕ(БизнесПроцесс.БизнесПроцессы.ПустаяСсылка)
	                      |				ИЛИ НЕ МероприятиеПС.БизнесПроцесс.ПометкаУдаления)
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаМ КАК МероприятиеПД
	                      |		ПО Таблица.ДолговоеОбязательство = МероприятиеПД.Объект
	                      |			И (МероприятиеПД.Выполнена)
	                      |			И (МероприятиеПД.ТипМероприятия В (&МассивТиповМероприятийПД))
	                      |			И (МероприятиеПД.ДатаВыполнения < &ТекДата)
	                      |			И (МероприятиеПД.БизнесПроцесс = ЗНАЧЕНИЕ(БизнесПроцесс.БизнесПроцессы.ПустаяСсылка)
	                      |				ИЛИ НЕ МероприятиеПД.БизнесПроцесс.ПометкаУдаления)
	                      |ГДЕ
	                      |	(&ФлагБезУсловий
	                      |			ИЛИ НЕ МероприятиеСтадии.Ссылка ЕСТЬ NULL 
	                      |			ИЛИ НЕ МероприятиеМС.Ссылка ЕСТЬ NULL 
	                      |			ИЛИ НЕ МероприятиеОИ.Ссылка ЕСТЬ NULL 
	                      |			ИЛИ НЕ МероприятиеПО.Ссылка ЕСТЬ NULL 
	                      |			ИЛИ НЕ МероприятиеПС.Ссылка ЕСТЬ NULL 
	                      |			ИЛИ НЕ МероприятиеПД.Ссылка ЕСТЬ NULL )
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	Таблица.ДолговоеОбязательство
	                      |
	                      |ИМЕЮЩИЕ
	                      |	(&ФлагБезУсловий
	                      |		ИЛИ &ФлагПоискаСтадии
	                      |			И МАКСИМУМ(ВЫБОР
	                      |					КОГДА МероприятиеСтадии.Ссылка ЕСТЬ NULL 
	                      |						ТОГДА 0
	                      |					ИНАЧЕ 1
	                      |				КОНЕЦ) = 1
	                      |		ИЛИ &ФлагПоискаМС
	                      |			И МАКСИМУМ(ВЫБОР
	                      |					КОГДА МероприятиеМС.Ссылка ЕСТЬ NULL 
	                      |						ТОГДА 0
	                      |					ИНАЧЕ 1
	                      |				КОНЕЦ) = 1
	                      |		ИЛИ &ФлагПоискаОИ
	                      |			И МАКСИМУМ(ВЫБОР
	                      |					КОГДА МероприятиеОИ.Ссылка ЕСТЬ NULL 
	                      |						ТОГДА 0
	                      |					ИНАЧЕ 1
	                      |				КОНЕЦ) = 1
	                      |		ИЛИ &ФлагПоискаПО
	                      |			И МАКСИМУМ(ВЫБОР
	                      |					КОГДА МероприятиеПО.Ссылка ЕСТЬ NULL 
	                      |						ТОГДА 0
	                      |					ИНАЧЕ 1
	                      |				КОНЕЦ) = 1
	                      |		ИЛИ &ФлагПоискаПС
	                      |			И МАКСИМУМ(ВЫБОР
	                      |					КОГДА МероприятиеПС.Ссылка ЕСТЬ NULL 
	                      |						ТОГДА 0
	                      |					ИНАЧЕ 1
	                      |				КОНЕЦ) = 1
	                      |		ИЛИ &ФлагПоискаПД
	                      |			И МАКСИМУМ(ВЫБОР
	                      |					КОГДА МероприятиеПД.Ссылка ЕСТЬ NULL 
	                      |						ТОГДА 0
	                      |					ИНАЧЕ 1
	                      |				КОНЕЦ) = 1)
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	Таблица.ДолговоеОбязательство
	                      |ИЗ
	                      |	Таблица КАК Таблица
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеСотрудники КАК ОтветственныеСотрудники
	                      |		ПО Таблица.ДолговоеОбязательство = ОтветственныеСотрудники.Объект
	                      |			И (ОтветственныеСотрудники.ТипСотрудника.Код = ""     0001"")
	                      |ГДЕ
	                      |	ОтветственныеСотрудники.Объект ЕСТЬ NULL 
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	Таблица.ДолговоеОбязательство,
	                      |	ЕСТЬNULL(ДополнительныеСведения.Значение, ЛОЖЬ) КАК Значение
	                      |ПОМЕСТИТЬ Таблица3
	                      |ИЗ
	                      |	Таблица КАК Таблица
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаМ КАК ТаблицаМ
	                      |		ПО Таблица.ДолговоеОбязательство = ТаблицаМ.Объект
	                      |			И (НЕ ТаблицаМ.Выполнена)
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
	                      |		ПО Таблица.ДолговоеОбязательство = ДополнительныеСведения.Объект
	                      |			И (ДополнительныеСведения.Свойство = &Свойство)
	                      |ГДЕ
	                      |	ТаблицаМ.Ссылка ЕСТЬ NULL 
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	Таблица3.ДолговоеОбязательство
	                      |ИЗ
	                      |	Таблица3 КАК Таблица3
	                      |ГДЕ
	                      |	Таблица3.Значение = ЛОЖЬ
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	Таблица3.ДолговоеОбязательство
	                      |ИЗ
	                      |	Таблица3 КАК Таблица3
	                      |ГДЕ
	                      |	Таблица3.Значение = ИСТИНА
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ТаблицаР.ДолговоеОбязательство,
	                      |	ТаблицаР.СтадияФлаг
	                      |ИЗ
	                      |	ТаблицаР КАК ТаблицаР
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ТаблицаР.ДолговоеОбязательство
	                      |ИЗ
	                      |	ТаблицаР КАК ТаблицаР
	                      |ГДЕ
	                      |	ТаблицаР.СтадияФлаг ПОДОБНО ""1%""
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ТаблицаР.ДолговоеОбязательство
	                      |ИЗ
	                      |	ТаблицаР КАК ТаблицаР
	                      |ГДЕ
	                      |	ТаблицаР.СтадияФлаг ПОДОБНО ""_1%""
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ТаблицаР.ДолговоеОбязательство
	                      |ИЗ
	                      |	ТаблицаР КАК ТаблицаР
	                      |ГДЕ
	                      |	ТаблицаР.СтадияФлаг ПОДОБНО ""__1%""
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ТаблицаР.ДолговоеОбязательство
	                      |ИЗ
	                      |	ТаблицаР КАК ТаблицаР
	                      |ГДЕ
	                      |	ТаблицаР.СтадияФлаг ПОДОБНО ""___1%""
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ТаблицаР.ДолговоеОбязательство
						  |ИЗ
	                      |	ТаблицаР КАК ТаблицаР
	                      |ГДЕ
	                      |	ТаблицаР.СтадияФлаг ПОДОБНО ""____1%""");					  						  
	Запрос.УстановитьПараметр("Таблица", Таблица);
	Запрос.УстановитьПараметр("МассивСтадий", МассивСтадий);
	Запрос.УстановитьПараметр("ФлагБезУсловий", МассивСтадий.Количество() = 0 И Не ФлагПоискаМС И Не ФлагПоискаОИ И 
			Не ФлагПоискаПО И Не ФлагПоискаПС И Не ФлагПоискаПД);
	Запрос.УстановитьПараметр("ТекДата", КонецДня(Период));
	Запрос.УстановитьПараметр("Свойство", ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоКоду("     2118"));
	
	Запрос.УстановитьПараметр("ФлагПоискаСтадии", МассивСтадий.Количество() > 0);
	Запрос.УстановитьПараметр("ФлагПоискаМС", ФлагПоискаМС);
	Запрос.УстановитьПараметр("ФлагПоискаОИ", ФлагПоискаОИ);
	Запрос.УстановитьПараметр("ФлагПоискаПО", ФлагПоискаПО);
	Запрос.УстановитьПараметр("ФлагПоискаПС", ФлагПоискаПС);
	Запрос.УстановитьПараметр("ФлагПоискаПД", ФлагПоискаПД);
	
	МассивРезультатовМС = Новый Массив();	
	МассивРезультатовМС.Добавить(Справочники.РезультатыМероприятий.НайтиПоКоду("     0220"));
	МассивРезультатовМС.Добавить(Справочники.РезультатыМероприятий.НайтиПоКоду("     0315"));
	
	МассивРезультатовОИ = Новый Массив();
	МассивРезультатовОИ.Добавить(Справочники.РезультатыМероприятий.НайтиПоКоду("     0321"));
	МассивРезультатовОИ.Добавить(Справочники.РезультатыМероприятий.НайтиПоКоду("     0322"));
	
	Запрос.УстановитьПараметр("МассивРезультатовМС", МассивРезультатовМС);
	Запрос.УстановитьПараметр("МассивРезультатовОИ", МассивРезультатовОИ);
	Запрос.УстановитьПараметр("МассивРезультатовПО", 
			ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоКоду("     2051")); //ДопРеквизитыМероприятий
			//Справочники.РезультатыМероприятий.НайтиПоКоду("     0320"));
	Запрос.УстановитьПараметр("МассивРезультатовПС", Справочники.РезультатыМероприятий.НайтиПоКоду("     0216"));
	Запрос.УстановитьПараметр("МассивТиповМероприятийПД", Справочники.ТипыМероприятий.НайтиПоКоду("     0083"));
	
	Результат = Запрос.ВыполнитьПакет();
	Таблица = Результат[7].Выгрузить();
	Возврат Новый Структура("БезМероприятий, БезОтветственного, Завершенные,
			| МировоеСоглашение, ОтказОтИска, ПредоставленаОтсрочка, ПолученоСвидетельство, ПеречисленыДС", 
			Результат[5].Выгрузить(), Результат[3].Выгрузить(), Результат[6].Выгрузить(),
			Результат[8].Выгрузить(), Результат[9].Выгрузить(), Результат[10].Выгрузить(), Результат[11].Выгрузить(),
			Результат[12].Выгрузить());
КонецФункции
		
&НаСервере
Функция ПолучитьСписокИсключающихДО(Табл)
	
	Запрос_Т = Новый Запрос;
	Запрос_Т.Текст = 
		"ВЫБРАТЬ
		|	Т1.ДолговоеОбязательство
		|ПОМЕСТИТЬ ТТ1
		|ИЗ
		|	&Т1 КАК Т1
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Т2.ДолговоеОбязательство
		|ПОМЕСТИТЬ ТТ2
		|ИЗ
		|	&Т2 КАК Т2
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Т3.ДолговоеОбязательство
		|ПОМЕСТИТЬ ТТ3
		|ИЗ
		|	&Т3 КАК Т3
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Т4.ДолговоеОбязательство
		|ПОМЕСТИТЬ ТТ4
		|ИЗ
		|	&Т4 КАК Т4
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Т5.ДолговоеОбязательство
		|ПОМЕСТИТЬ ТТ5
		|ИЗ
		|	&Т5 КАК Т5
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Т6.ДолговоеОбязательство
		|ПОМЕСТИТЬ ТТ6
		|ИЗ
		|	&Т6 КАК Т6
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Т7.ДолговоеОбязательство
		|ПОМЕСТИТЬ ТТ7
		|ИЗ
		|	&Т7 КАК Т7
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Т8.ДолговоеОбязательство
		|ПОМЕСТИТЬ ТТ8
		|ИЗ
		|	&Т8 КАК Т8
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТТ1.ДолговоеОбязательство КАК ДолговоеОбязательство
		|ИЗ
		|	ТТ1 КАК ТТ1
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТТ2.ДолговоеОбязательство
		|ИЗ
		|	ТТ2 КАК ТТ2
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТТ3.ДолговоеОбязательство
		|ИЗ
		|	ТТ3 КАК ТТ3
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТТ4.ДолговоеОбязательство
		|ИЗ
		|	ТТ4 КАК ТТ4
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТТ5.ДолговоеОбязательство
		|ИЗ
		|	ТТ5 КАК ТТ5
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТТ6.ДолговоеОбязательство
		|ИЗ
		|	ТТ6 КАК ТТ6
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТТ7.ДолговоеОбязательство
		|ИЗ
		|	ТТ7 КАК ТТ7
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТТ8.ДолговоеОбязательство
		|ИЗ
		|	ТТ8 КАК ТТ8";

		
	Запрос_Т.УстановитьПараметр("Т1", Табл.БезМероприятий);	
	Запрос_Т.УстановитьПараметр("Т2", Табл.БезОтветственного);	
	Запрос_Т.УстановитьПараметр("Т3", Табл.Завершенные);	
	Запрос_Т.УстановитьПараметр("Т4", Табл.МировоеСоглашение);	
	Запрос_Т.УстановитьПараметр("Т5", Табл.ОтказОтИска);	
	Запрос_Т.УстановитьПараметр("Т6", Табл.ПеречисленыДС);	
	Запрос_Т.УстановитьПараметр("Т7", Табл.ПолученоСвидетельство);	
	Запрос_Т.УстановитьПараметр("Т8", Табл.ПредоставленаОтсрочка);	
	
	Результат_Т = Запрос_Т.Выполнить().Выгрузить();
    Возврат Результат_Т;
	
КонецФункции

&НаСервере
Процедура КритерииОтбораДел(Макет, Критерий, НомерКритерия)
	Область = Макет.ПолучитьОбласть("Стадия");
	Область.Параметры.Стадия = Критерий;

	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	СостоянияПоКатегориямОстатки.Объект
	                      |ИЗ
	                      |	РегистрНакопления.СостоянияПоКатегориям.Остатки(, Скоринг.Код = &Скоринг) КАК СостоянияПоКатегориямОстатки
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ОбъектыВРаботе.Остатки(, Подразделение = &Подразделение) КАК ОбъектыВРаботеОстатки
	                      |		ПО СостоянияПоКатегориямОстатки.Объект = ОбъектыВРаботеОстатки.Объект");

	Запрос.УстановитьПараметр("Скоринг", НомерКритерия);			
	Запрос.УстановитьПараметр("Подразделение", Справочники.ПодразделенияОрганизаций.НайтиПоКоду("000000001"));	
	Результат = Запрос.Выполнить().Выбрать();
	
	Область.Параметры.КолРук = Результат.Количество();
	ТабДок.Вывести(Область);	
	ТабДок.НачатьГруппуСтрок(, Ложь);	
	Пока Результат.Следующий() Цикл
		Область = Макет.ПолучитьОбласть("ДО");
		Область.Параметры.ДО = Результат.Объект;
		Область.Параметры.ДОРас = Результат.Объект;
		Область.Параметры.Должник = Результат.Объект.Должник;
		Область.Параметры.ДолжникРас = Результат.Объект.Должник;
		ТабДок.Вывести(Область);			
	КонецЦикла;	
	ТабДок.ЗакончитьГруппуСтрок();	
КонецПроцедуры
