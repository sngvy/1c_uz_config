&НаКлиенте
Перем ИндексВыбранногоЭлемента;
&НаКлиенте
Перем ИндексВыбраннойСтадии;
&НаКлиенте
Перем ИндексВыбраннойЗадержки;


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Не Объект.Ссылка.Пустая() Тогда
		Карта = Объект.Ссылка.Схема.Получить();			
	КонецЕсли;
	Если Константы.КонтрольСроковМероприятий.Получить() Тогда
		Элементы.СтадииГруппаСроки.Видимость = Истина;
		ЗаполнитьСрокНаСервере();
	КонецЕсли;
КонецПроцедуры

Процедура ЗаполнитьСрокНаСервере()
	Для Каждого Стр Из Объект.Стадии Цикл
		Стр.СрокДней = Цел(Стр.СрокВыполнения/1440);
		Стр.СрокЧасов = Цел((Стр.СрокВыполнения - Стр.СрокДней*1440)/60);
		Стр.СрокМин = Стр.СрокВыполнения - Стр.СрокДней*1440 - Стр.СрокЧасов*60;
	КонецЦикла;	
КонецПроцедуры // ЗаполнитьСрокНаСервере()


&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Для Каждого Элемент Из ТекущийОбъект.Задержки Цикл
		ЭлементГС = Карта.ЭлементыГрафическойСхемы.Найти(Элемент.Идентификатор);
		Если ЭлементГС.НачалоЭлемент <> Неопределено Тогда
			Элемент.ОбъектНачало = ЭлементГС.НачалоЭлемент.Имя;
		Иначе
			Элемент.ОбъектНачало = "";
		КонецЕсли;
		
		Если ЭлементГС.НачалоВариант <> Неопределено Тогда
			Элемент.ВариантНачало = ЭлементГС.НачалоВариант.Значение;
		Иначе
			Элемент.ВариантНачало = "";
		КонецЕсли;
		
		Если ЭлементГС.КонецЭлемент <> Неопределено Тогда
			Элемент.ОбъектКонец = ЭлементГС.КонецЭлемент.Имя;
		Иначе
			Элемент.ОбъектКонец = "";
		КонецЕсли;		
	КонецЦикла;
		
	//
	ТекущийОбъект.Схема = Новый ХранилищеЗначения(Карта);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	#Если ВебКлиент Тогда
		Сообщить("Данный функционал не досупен на Веб-клиенте!");
		Отказ = Истина;
	#Иначе	
		Если Карта.ЭлементыГрафическойСхемы.Количество() = 0 Тогда	
			РаботаСГрафическойСхемой82БП.СоздатьНовуюКарту(Карта);
			Объект.НеКорректна = Объект.НеКорректна; //"Сходить на сервер"
		КонецЕсли;
		ИндексВыбранногоЭлемента = 0;
		ИндексВыбраннойСтадии = -1;
		ИндексВыбраннойЗадержки = -1;
		
		Если Не Объект.Операция.Пустая() И Объект.Операция <> ПредопределенноеЗначение("Справочник.ОперацииБП.Произвольная") Тогда
			Элементы.ДобавитьКонец.Доступность = Ложь;
		Иначе
			Элементы.ДобавитьКонец.Доступность = Истина;
		КонецЕсли;
		
		//КартаПриАктивизации(Элементы.Карта);
		РаскраситьРамкиЭлементов();
	#КонецЕсли
КонецПроцедуры


&НаКлиенте
Процедура КартаПриИзменении(Элемент)
	Модифицированность = Истина;
	Если ТипЗнч(Элементы.Карта.ТекущийЭлемент) = Тип("ЭлементГрафическойСхемыЗавершение") Тогда
		Объект.Выходы.НайтиСтроки(Новый Структура("Идентификатор", Элементы.Карта.ТекущийЭлемент.Имя))[0].Наименование = 
				Элементы.Карта.ТекущийЭлемент.Наименование;
	ИначеЕсли ТипЗнч(Элементы.Карта.ТекущийЭлемент) = Тип("ЭлементГрафическойСхемыВыборВарианта") Тогда
		Объект.Стадии.НайтиСтроки(Новый Структура("Идентификатор", Элементы.Карта.ТекущийЭлемент.Имя))[0].Наименование = 
				Элементы.Карта.ТекущийЭлемент.Наименование;					
	КонецЕсли;
	ПодключитьОбработчикОжидания("СинхронизироватьТаблицы", 0.01, Истина);
КонецПроцедуры
&НаКлиенте
Процедура КартаПриАктивизации(Элемент)
	
КонецПроцедуры
&НаКлиенте
Процедура КартаВыбор(Элемент)
	Если Не Элементы.Карта.ТекущийЭлемент = Неопределено И 
			ТипЗнч(Элементы.Карта.ТекущийЭлемент) <> Тип("ЭлементГрафическойСхемыСоединительнаяЛиния") Тогда
		ИндексВыбранногоЭлемента = РаботаСГрафическойСхемой82БП.ПолучитьНомерТекущегоЭлемента(
				Элементы.Карта.ТекущийЭлемент, Карта);	
		ПодключитьОбработчикОжидания("ВыделитьСтрокуТаблицы", 0.01, Истина);
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ВыделитьСтрокуТаблицы()
	СтруктураПоиска = Новый Структура("Идентификатор", Элементы.Карта.ТекущийЭлемент.Имя);
	СтрокиСтадии = Объект.Стадии.НайтиСтроки(СтруктураПоиска);
	СтрокиЗадержки = Объект.Задержки.НайтиСтроки(СтруктураПоиска);
	
	Если СтрокиСтадии.Количество() > 0 Тогда
		Элементы.Стадии.ТекущаяСтрока = Объект.Стадии.НайтиСтроки(Новый Структура("Идентификатор", 
				Элементы.Карта.ТекущийЭлемент.Имя))[0].ПолучитьИдентификатор();
	ИначеЕсли СтрокиЗадержки.Количество() > 0 Тогда
		Элементы.Задержки.ТекущаяСтрока = Объект.Задержки.НайтиСтроки(Новый Структура("Идентификатор", 
				Элементы.Карта.ТекущийЭлемент.Имя))[0].ПолучитьИдентификатор();	
	КонецЕсли;	
	РаскраситьРамкиЭлементов();
КонецПроцедуры
&НаКлиенте
Процедура СинхронизироватьТаблицы()
	Массив = Новый Массив();
	Для Каждого Элемент Из Объект.Выходы Цикл
		Если Карта.ЭлементыГрафическойСхемы.Найти(Элемент.Идентификатор) = Неопределено Тогда
			Массив.Добавить(Элемент);
		КонецЕсли;	
	КонецЦикла;
	Для Каждого Элемент Из Массив Цикл
		Объект.Выходы.Удалить(Элемент);
	КонецЦикла;
				
	Массив.Очистить();
	Для Каждого Элемент Из Объект.Стадии Цикл
		Если Карта.ЭлементыГрафическойСхемы.Найти(Элемент.Идентификатор) = Неопределено Тогда
			Массив.Добавить(Элемент);
		КонецЕсли;	
	КонецЦикла;
	Для Каждого Элемент Из Массив Цикл
		Объект.Стадии.Удалить(Элемент);
	КонецЦикла;
	
	Массив.Очистить();
	Для Каждого Элемент Из Объект.Задержки Цикл
		Если Карта.ЭлементыГрафическойСхемы.Найти(Элемент.Идентификатор) = Неопределено Тогда
			Массив.Добавить(Элемент);
		КонецЕсли;	
	КонецЦикла;
	Для Каждого Элемент Из Массив Цикл
		Объект.Задержки.Удалить(Элемент);
	КонецЦикла;
	
	Массив.Очистить();
	Для Каждого Элемент Из Объект.Сумматоры Цикл
		Если Карта.ЭлементыГрафическойСхемы.Найти(Элемент.Идентификатор) = Неопределено Тогда
			Массив.Добавить(Элемент);
		КонецЕсли;	
	КонецЦикла;
	Для Каждого Элемент Из Массив Цикл
		Объект.Сумматоры.Удалить(Элемент);
	КонецЦикла;
	
	//ВыходыПриАктивизацииЯчейки(Неопределено);
	СтадииПриАктивизацииЯчейки(Неопределено);
	ЗадержкиПриАктивизацииЯчейки(Неопределено);
	//СумматорыПриАктивизацииЯчейки(Неопределено);
	
	СтартЕсть = Ложь;
	Для Каждого Элемент Из Карта.ЭлементыГрафическойСхемы Цикл
		Если ТипЗнч(Элемент) = Тип("ЭлементГрафическойСхемыСтарт") Тогда
			СтартЕсть = Истина;
			Прервать;
		ИначеЕсли ТипЗнч(Элемент) = Тип("ЭлементГрафическойСхемыЗавершение") Тогда
			
		ИначеЕсли ТипЗнч(Элемент) = Тип("ЭлементГрафическойСхемыВыборВарианта") Тогда
			
		ИначеЕсли ТипЗнч(Элемент) = Тип("ЭлементГрафическойСхемыДекоративнаяЛиния") Тогда
			
		КонецЕсли;
	КонецЦикла;
	
	Если Не СтартЕсть Тогда
		РаботаСГрафическойСхемой82БП.СоздатьСтарт(Карта);
	КонецЕсли;
	РаскраситьРамкиЭлементов();
КонецПроцедуры


&НаКлиенте
Процедура СтадииПриАктивизацииЯчейки(Элемент)
	Если Элементы.Стадии.ТекущиеДанные <> Неопределено Тогда
		Элементы.Карта.ТекущийЭлемент = 
				Карта.ЭлементыГрафическойСхемы.Найти(Элементы.Стадии.ТекущиеДанные.Идентификатор);
		ИндексВыбраннойСтадии = РаботаСГрафическойСхемой82БП.ПолучитьНомерТекущегоЭлемента(
				Элементы.Карта.ТекущийЭлемент, Карта);
		Если Элемент <> Неопределено Тогда
			РаскраситьРамкиЭлементов();
		КонецЕсли;
	Иначе
		ИндексВыбраннойСтадии = -1;
	КонецЕсли;
КонецПроцедуры
&НаКлиенте
Процедура ЗадержкиПриАктивизацииЯчейки(Элемент)
	Если Элементы.Задержки.ТекущиеДанные <> Неопределено Тогда
	    Элементы.Карта.ТекущийЭлемент = 
				Карта.ЭлементыГрафическойСхемы.Найти(Элементы.Задержки.ТекущиеДанные.Идентификатор);
		ИндексВыбраннойЗадержки = РаботаСГрафическойСхемой82БП.ПолучитьНомерТекущегоЭлемента(
				Элементы.Карта.ТекущийЭлемент, Карта);
		Если Элемент <> Неопределено Тогда
			РаскраситьРамкиЭлементов();
		КонецЕсли;
	Иначе
		ИндексВыбраннойЗадержки = -1;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СтадииПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока Тогда
		ТекЭлемент = Карта.ЭлементыГрафическойСхемы[ИндексВыбранногоЭлемента];
		Результат = РаботаСГрафическойСхемой82БП.СоздатьУзелВариант(ТекЭлемент, Карта, "Новая стадия", 
				РаботаСГрафическойСхемой82БП.НаправлениеВправо(),,,);	
		ТекущаяСтрока = Элементы.Стадии.ТекущиеДанные;
		ТекущаяСтрока.ВидСтадии = ПредопределенноеЗначение("Перечисление.ВидыСтадийБП.Мероприятие");
		ТекущаяСтрока.Идентификатор = Результат.СтруктураИмени.Идентификатор;
		ТекущаяСтрока.Наименование = Результат.СтруктураИмени.Наименование;
        ТекущаяСтрока.Стадия = ПредопределенноеЗначение("Справочник.ТипыМероприятий.ПустаяСсылка");
		
		РаскраситьРамкиЭлементов();
	КонецЕсли;
	ПодключитьОбработчикОжидания("ОбработчикОжиданияСтадии", 0.01, Истина);
КонецПроцедуры
&НаКлиенте
Процедура ЗадержкиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока Тогда
		Результат = РаботаСГрафическойСхемой82БП.СоздатьЛинию(Карта);		
		Элементы.Задержки.ТекущиеДанные.Идентификатор = Результат.СтруктураИмени.Идентификатор;
		
		РаскраситьРамкиЭлементов();
	КонецЕсли;
	ПодключитьОбработчикОжидания("ОбработчикОжиданияЗадержки", 0.01, Истина);
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикОжиданияВыходы()
	//ВыходыПриАктивизацииЯчейки(Неопределено);
	РаскраситьРамкиЭлементов();
КонецПроцедуры
&НаКлиенте
Процедура ОбработчикОжиданияСтадии()
	СтадииПриАктивизацииЯчейки(Неопределено);
	РаскраситьРамкиЭлементов();
КонецПроцедуры
&НаКлиенте
Процедура ОбработчикОжиданияЗадержки()
	ЗадержкиПриАктивизацииЯчейки(Неопределено);
	РаскраситьРамкиЭлементов();
КонецПроцедуры
&НаКлиенте
Процедура ОбработчикОжиданияСумматоры()
	//СумматорыПриАктивизацииЯчейки(Неопределено);
	РаскраситьРамкиЭлементов();
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьКонец(Команда)
	Результат = РаботаСГрафическойСхемой82БП.ДобавитьЭлементКонец(Карта);
	ТекущаяСтрока = Объект.Выходы.Добавить();
	ТекущаяСтрока.Наименование = Результат.СтруктураИмени.Наименование;
	ТекущаяСтрока.Идентификатор = Результат.СтруктураИмени.Идентификатор;
	ПодключитьОбработчикОжидания("ОбработчикОжиданияВыходы", 0.01, Истина);
КонецПроцедуры
&НаКлиенте
Процедура ДобавитьСумматор(Команда)
	Результат = РаботаСГрафическойСхемой82БП.СоздатьСумматор(Карта);		
	Объект.Сумматоры.Добавить().Идентификатор = Результат.СтруктураИмени.Идентификатор;
	ПодключитьОбработчикОжидания("ОбработчикОжиданияСумматоры", 0.01, Истина);
КонецПроцедуры


&НаКлиенте
Процедура РаскраситьРамкиЭлементов()
	//Закраска фона
	Для Каждого ЭлементСхемы Из Карта.ЭлементыГрафическойСхемы Цикл	
		Если ТипЗнч(ЭлементСхемы) = Тип("ЭлементГрафическойСхемыВыборВарианта") Тогда
			СтрокаЭлемента = Объект.Стадии.НайтиСтроки(Новый Структура("Идентификатор", ЭлементСхемы.Имя));
			Если СтрокаЭлемента.Количество() = 0 Тогда
				РаботаСГрафическойСхемой82БП.УдалитьЭлементБП(ЭлементСхемы.Имя, Карта);
				//СтадииПриАктивизацииЯчейки(Неопределено);
				РаскраситьРамкиЭлементов();
				Прервать;
			КонецЕсли;
			
			СтрокаЭлемента = СтрокаЭлемента[0];
			Если СтрокаЭлемента.ВидСтадии = ПредопределенноеЗначение("Перечисление.ВидыСтадийБП.Мероприятие") Тогда
				ЭлементСхемы.ЦветФона = Новый Цвет(253,251,150);
				Для Каждого Вариант Из ЭлементСхемы.Элементы Цикл
					Вариант.ЦветФона = Новый Цвет(254,253,214);
				КонецЦикла;
			ИначеЕсли СтрокаЭлемента.ВидСтадии = ПредопределенноеЗначение("Перечисление.ВидыСтадийБП.БизнесПроцесс") Тогда
				ЭлементСхемы.ЦветФона = Новый Цвет(200,200,233); 
				Для Каждого Вариант Из ЭлементСхемы.Элементы Цикл
					Вариант.ЦветФона = Новый Цвет(224,224,243);
				КонецЦикла;
			ИначеЕсли СтрокаЭлемента.ВидСтадии = ПредопределенноеЗначение("Перечисление.ВидыСтадийБП.Функция") Тогда
				ЭлементСхемы.ЦветФона = Новый Цвет(250,200,100); 
				Для Каждого Вариант Из ЭлементСхемы.Элементы Цикл
					Вариант.ЦветФона = Новый Цвет(250,230,180);
				КонецЦикла;
			КонецЕсли;
		ИначеЕсли ТипЗнч(ЭлементСхемы) = Тип("ЭлементГрафическойСхемыДекорация") Тогда
			ЭлементСхемы.ЦветФона = Новый Цвет(150,200,250);
		КонецЕсли;   		
	КонецЦикла;
	
	//Закраска рамок
	Для Каждого ЭлементСхемы Из Карта.ЭлементыГрафическойСхемы Цикл	
		Если ТипЗнч(ЭлементСхемы) = Тип("ЭлементГрафическойСхемыДекоративнаяЛиния") Тогда
			ЭлементСхемы.ЦветЛинии = Новый Цвет(179,172,134);                  
			ЭлементСхемы.Линия = Новый Линия(ТипСоединительнойЛинии.Сплошная, 1);
			ЭлементСхемы.Шрифт = Новый Шрифт(ЭлементСхемы.Шрифт,,,Ложь);
		Иначе                                   
			ЭлементСхемы.ЦветРамки = Новый Цвет(179,172,134);
			Если ТипЗнч(ЭлементСхемы) <> Тип("ЭлементГрафическойСхемыДекорация") Тогда
				ЭлементСхемы.Рамка = Новый Линия(ТипСоединительнойЛинии.Сплошная, 1);
			КонецЕсли;
		КонецЕсли;   		
	КонецЦикла;	
	 	
	Если ИндексВыбраннойСтадии > -1 Тогда
		Карта.ЭлементыГрафическойСхемы[ИндексВыбраннойСтадии].ЦветРамки = Новый Цвет(255,0,0);  //120,114,75);
		Карта.ЭлементыГрафическойСхемы[ИндексВыбраннойСтадии].Рамка = Новый Линия(ТипСоединительнойЛинии.Сплошная, 1);	
	КонецЕсли;
	Если ИндексВыбраннойЗадержки > -1 Тогда
		Карта.ЭлементыГрафическойСхемы[ИндексВыбраннойЗадержки].ЦветЛинии = Новый Цвет(255,0,0);  //120,114,75);
		Карта.ЭлементыГрафическойСхемы[ИндексВыбраннойЗадержки].Линия = Новый Линия(ТипСоединительнойЛинии.Сплошная, 2);
		НовыйШрифт = Новый Шрифт(Карта.ЭлементыГрафическойСхемы[ИндексВыбраннойЗадержки].Шрифт,,,Истина);
		Карта.ЭлементыГрафическойСхемы[ИндексВыбраннойЗадержки].Шрифт = НовыйШрифт;
	КонецЕсли;
	
	ОбновитьОтображениеДанных();	
	//ОбновитьВидимостьКнопок();	
КонецПроцедуры

&НаКлиенте
Процедура СтадииВидСтадииПриИзменении(Элемент)
	ТекущаяСтрока = Элементы.Стадии.ТекущиеДанные;
	Если ТекущаяСтрока.ВидСтадии = ПредопределенноеЗначение("Перечисление.ВидыСтадийБП.Мероприятие") И 
			ТипЗнч(ТекущаяСтрока.Стадия) <> Тип("СправочникСсылка.ТипыМероприятий") Тогда
		ТекущаяСтрока.Стадия = ПредопределенноеЗначение("Справочник.ТипыМероприятий.ПустаяСсылка");
	ИначеЕсли ТекущаяСтрока.ВидСтадии = ПредопределенноеЗначение("Перечисление.ВидыСтадийБП.БизнесПроцесс") И
			ТипЗнч(ТекущаяСтрока.Стадия) <> Тип("СправочникСсылка.КартыМаршрутов") Тогда
		ТекущаяСтрока.Стадия = ПредопределенноеЗначение("Справочник.КартыМаршрутов.ПустаяСсылка");
	ИначеЕсли ТекущаяСтрока.ВидСтадии = ПредопределенноеЗначение("Перечисление.ВидыСтадийБП.Функция") И
			ТипЗнч(ТекущаяСтрока.Стадия) <> Тип("СправочникСсылка.ФункцииБизнесПроцессов") Тогда
		ТекущаяСтрока.Стадия = ПредопределенноеЗначение("Справочник.ФункцииБизнесПроцессов.ПустаяСсылка");		
	КонецЕсли;
	
	СтадииСтадияПриИзменении(Неопределено);	
	РаскраситьРамкиЭлементов();
КонецПроцедуры

&НаКлиенте
Процедура СтадииСтадияПриИзменении(Элемент)
	ТекущаяСтрока = Элементы.Стадии.ТекущиеДанные;
	Варианты = Новый Массив();	
	Если Не ТекущаяСтрока.Стадия.Пустая() ИЛИ Не ТекущаяСтрока.Операция.Пустая() Тогда
		Результаты = Новый Массив();
		ЗаполнитьМассив(Варианты, Результаты, ТекущаяСтрока.ВидСтадии, ТекущаяСтрока.Операция, ТекущаяСтрока.Стадия);
		
		Индекс = 0;
		Пока Индекс < Объект.Варианты.Количество() Цикл
			Если Объект.Варианты[Индекс].Родитель = ТекущаяСтрока.Идентификатор Тогда
				Объект.Варианты.Удалить(Индекс);
			Иначе
				Индекс = Индекс + 1;
			КонецЕсли;
		КонецЦикла;
		
		Индекс = 0;
		Пока Индекс < Варианты.Количество() Цикл
			НоваяСтрока = Объект.Варианты.Добавить();
			НоваяСтрока.Родитель = ТекущаяСтрока.Идентификатор;
			НоваяСтрока.Идентификатор = "Вариант" + Строка(Индекс + 1);
			НоваяСтрока.Наименование = Варианты[Индекс];
			НоваяСтрока.Результат = Результаты[Индекс];
			Индекс = Индекс + 1;
		КонецЦикла;
		
		//Определяем, есть ли необходимость перестраивать элемент
		
	КонецЕсли;
	
	Если Не ТекущаяСтрока.Операция.Пустая() Тогда
		Наименование = Строка(ТекущаяСтрока.Операция);
	ИначеЕсли Не ТекущаяСтрока.Стадия.Пустая() Тогда
		Наименование = Строка(ТекущаяСтрока.Стадия);
	Иначе
		Наименование = "Новая стадия";
	КонецЕсли;
	
	Результат = РаботаСГрафическойСхемой82БП.ИзменитьЭлемент(Карта, ТекущаяСтрока.Идентификатор, Наименование, Варианты,);
	РаскраситьРамкиЭлементов();
	Если ТекущаяСтрока.ВидСтадии = ПредопределенноеЗначение("Перечисление.ВидыСтадийБП.Мероприятие") Тогда
		ТекущаяСтрока.СрокВыполнения =?(ЗначениеЗаполнено(ТекущаяСтрока.Стадия),ОбъектыСервер.РазыменоватьСсылку(ТекущаяСтрока.Стадия,"СрокВыполнения"),0);
		ТекущаяСтрока.СрокДней = Цел(ТекущаяСтрока.СрокВыполнения/1440);
		ТекущаяСтрока.СрокЧасов = Цел((ТекущаяСтрока.СрокВыполнения - ТекущаяСтрока.СрокДней*1440)/60);
		ТекущаяСтрока.СрокМин = ТекущаяСтрока.СрокВыполнения - ТекущаяСтрока.СрокДней*1440 - ТекущаяСтрока.СрокЧасов*60;  
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СтадииНаименованиеПриИзменении(Элемент)
	ТекущиеДанные = Элементы.Стадии.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		РаботаСГрафическойСхемой82БП.ИзменитьНаименование(ТекущиеДанные.Идентификатор, ТекущиеДанные.Наименование, Карта);	
		РаскраситьРамкиЭлементов();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВыходыНаименованиеПриИзменении(Элемент)
	ТекущаяСтрока = Элементы.Выходы.ТекущиеДанные;
	Результат = РаботаСГрафическойСхемой82БП.ИзменитьЭлемент(Карта, ТекущаяСтрока.Идентификатор, ТекущаяСтрока.Наименование,,);
	РаскраситьРамкиЭлементов();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьМассив(Варианты, Результаты, ВидСтадии, Операция, Стадия)
	Запрос = Новый Запрос();              
	Если ВидСтадии = Перечисления.ВидыСтадийБП.Мероприятие Тогда
		Запрос.Текст = "ВЫБРАТЬ
		               |	РезультатыМероприятий.Наименование КАК Наименование,
		               |	РезультатыМероприятий.Ссылка КАК Результат
		               |ИЗ
		               |	Справочник.РезультатыМероприятий КАК РезультатыМероприятий
		               |ГДЕ
		               |	РезультатыМероприятий.Владелец = &Стадия
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	РезультатыМероприятий.Код";
					   				   
	ИначеЕсли ВидСтадии = Перечисления.ВидыСтадийБП.Функция Тогда	
		Запрос.Текст = "ВЫБРАТЬ
		               |	ПРЕДСТАВЛЕНИЕ(ФункцииБизнесПроцессовПринимаемыеЗначения.Значение) КАК Наименование,
		               |	ФункцииБизнесПроцессовПринимаемыеЗначения.Значение КАК Результат
		               |ИЗ
		               |	Справочник.ФункцииБизнесПроцессов.ПринимаемыеЗначения КАК ФункцииБизнесПроцессовПринимаемыеЗначения
		               |ГДЕ
		               |	ФункцииБизнесПроцессовПринимаемыеЗначения.Ссылка = &Стадия
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	ФункцииБизнесПроцессовПринимаемыеЗначения.НомерСтроки";
					   
	ИначеЕсли ВидСтадии = Перечисления.ВидыСтадийБП.БизнесПроцесс Тогда
		Если ТипЗнч(Стадия) = Тип("СправочникСсылка.КартыМаршрутов") Тогда
			Запрос.Текст = "ВЫБРАТЬ
			               |	КартыМаршрутовВыходы.Наименование КАК Наименование,
			               |	КартыМаршрутовВыходы.Идентификатор КАК Результат
			               |ИЗ
			               |	Справочник.КартыМаршрутов.Выходы КАК КартыМаршрутовВыходы
			               |ГДЕ
			               |	КартыМаршрутовВыходы.Ссылка = &Стадия
			               |
			               |УПОРЯДОЧИТЬ ПО
			               |	КартыМаршрутовВыходы.НомерСтроки";
						   
		ИначеЕсли ТипЗнч(Стадия) = Тип("СправочникСсылка.ТипыМероприятий") Тогда			   
			Запрос.Текст = "ВЫБРАТЬ
			               |	РезультатыОперацийБП.Наименование КАК Наименование,
			               |	РезультатыОперацийБП.Ссылка КАК Результат
			               |ИЗ
			               |	Справочник.РезультатыОперацийБП КАК РезультатыОперацийБП
			               |ГДЕ
			               |	РезультатыОперацийБП.Владелец = &Операция
			               |
			               |УПОРЯДОЧИТЬ ПО
			               |	РезультатыОперацийБП.Код";	
		КонецЕсли;
	КонецЕсли;
    Запрос.УстановитьПараметр("Стадия", Стадия);
	Запрос.УстановитьПараметр("Операция", Операция);
	Варианты.Очистить();
	Результаты.Очистить();
	Результат = Запрос.Выполнить().Выбрать();
	Пока Результат.Следующий() Цикл
		Варианты.Добавить(Результат.Наименование);
		Результаты.Добавить(Результат.Результат);
	КонецЦикла;
КонецПроцедуры


&НаКлиенте
Процедура СтадииПередУдалением(Элемент, Отказ)
	Если Элементы.Стадии.ТекущиеДанные <> Неопределено Тогда
		РаботаСГрафическойСхемой82БП.УдалитьЭлементБП(Элементы.Стадии.ТекущиеДанные.Идентификатор, Карта);
		СтадииПриАктивизацииЯчейки(Неопределено);
	КонецЕсли;
КонецПроцедуры
&НаКлиенте
Процедура ЗадержкиПередУдалением(Элемент, Отказ)
	Если Элементы.Задержки.ТекущиеДанные <> Неопределено Тогда
		РаботаСГрафическойСхемой82БП.УдалитьЭлементБП(Элементы.Задержки.ТекущиеДанные.Идентификатор, Карта);
		ЗадержкиПриАктивизацииЯчейки(Неопределено);
	КонецЕсли;
КонецПроцедуры
&НаКлиенте
Процедура ЗадержкиПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	ТекущиеДанные = Элементы.Задержки.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		Подсказка = "";	
		Ост = ТекущиеДанные.СуммаЗадержки % 60;
		Если Ост <> 0 Тогда
			Подсказка = " " + Формат(Ост, "ЧН=; ЧГ=") + " мин.";
		КонецЕсли;                         
		Ост = Цел(ТекущиеДанные.СуммаЗадержки / 60) % 24;
		Если Ост <> 0 Тогда
			Подсказка = " " + Формат(Ост, "ЧН=; ЧГ=") + " ч." + Подсказка;
		КонецЕсли;
		Ост = Цел(ТекущиеДанные.СуммаЗадержки / 1440);
		Если Ост <> 0 Тогда
			Подсказка = Формат(Ост, "ЧН=; ЧГ=") + " дн." + Подсказка;
		КонецЕсли;
		
		РаботаСГрафическойСхемой82БП.ИзменитьНаименование(ТекущиеДанные.Идентификатор, СокрЛ(Подсказка), Карта);
		РаскраситьРамкиЭлементов();
	КонецЕсли;
КонецПроцедуры



&НаКлиенте
Процедура ОперацияПриИзменении(Элемент)
	Если Не Объект.Операция.Пустая() И Объект.Операция <> ПредопределенноеЗначение("Справочник.ОперацииБП.Произвольная") Тогда
		Элементы.ДобавитьКонец.Доступность = Ложь;
		СписокЗначений = ПолучитьРезультатыОперацииБП();
		Номер = 0;
		Пока Номер < СписокЗначений.Количество() Цикл
			Если Номер < Объект.Выходы.Количество() Тогда
				Элемент = Объект.Выходы[Номер];
				Элемент.Наименование = СписокЗначений[Номер].Представление;
				Элемент.Результат = СписокЗначений[Номер].Значение;
				РаботаСГрафическойСхемой82БП.ИзменитьНаименование(Элемент.Идентификатор, Элемент.Наименование, Карта);					
			Иначе
				Результат = РаботаСГрафическойСхемой82БП.ДобавитьЭлементКонец(Карта, СписокЗначений[Номер].Представление);
				Элемент = Объект.Выходы.Добавить();
				Элемент.Идентификатор = Результат.СтруктураИмени.Идентификатор;
				Элемент.Наименование = СписокЗначений[Номер].Представление;
				Элемент.Результат = СписокЗначений[Номер].Значение;				
			КонецЕсли;		
			Номер = Номер + 1;
		КонецЦикла;
		Пока Номер < Объект.Выходы.Количество() Цикл
			РаботаСГрафическойСхемой82БП.УдалитьЭлементБП(Объект.Выходы[Номер].Идентификатор, Карта);
			Объект.Выходы.Удалить(Номер);	
		КонецЦикла;
		РаскраситьРамкиЭлементов();
		//ПодключитьОбработчикОжидания("ОбработчикОжиданияВыходы", 0.01, Истина);
	Иначе
		Элементы.ДобавитьКонец.Доступность = Истина;
		Для Каждого Элемент ИЗ Объект.Выходы Цикл
			Элемент.Результат = Неопределено;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьРезультатыОперацииБП()
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	РезультатыОперацийБП.Ссылка,
	                      |	РезультатыОперацийБП.Наименование
	                      |ИЗ
	                      |	Справочник.РезультатыОперацийБП КАК РезультатыОперацийБП
	                      |ГДЕ
	                      |	РезультатыОперацийБП.Владелец = &Владелец");
	Запрос.УстановитьПараметр("Владелец", Объект.Операция);
	СписокЗначений = Новый СписокЗначений();
	Результат = Запрос.Выполнить().Выбрать();
	Пока Результат.Следующий() Цикл
		СписокЗначений.Добавить(Результат.Ссылка, Результат.Наименование);
	КонецЦикла;
	Возврат СписокЗначений;
КонецФункции

&НаКлиенте
Процедура СтадииОперацияПриИзменении(Элемент)
	ТекущаяСтрока = Элементы.Стадии.ТекущиеДанные;
	Если ТекущаяСтрока.Операция = ПредопределенноеЗначение("Справочник.ОперацииБП.Произвольная") ИЛИ
			ТекущаяСтрока.Операция.Пустая() Тогда
		Если ТипЗнч(ТекущаяСтрока.Стадия) <> Тип("СправочникСсылка.КартыМаршрутов") Тогда
			ТекущаяСтрока.Стадия = ПредопределенноеЗначение("Справочник.КартыМаршрутов.ПустаяСсылка");
		КонецЕсли;
	Иначе
		Если ТипЗнч(ТекущаяСтрока.Стадия) <> Тип("СправочникСсылка.ТипыМероприятий") Тогда
			ТекущаяСтрока.Стадия = ПредопределенноеЗначение("Справочник.ТипыМероприятий.ПустаяСсылка");
		КонецЕсли;	
	КонецЕсли;	
	СтадииСтадияПриИзменении(Неопределено);	
	РаскраситьРамкиЭлементов();
КонецПроцедуры

&НаКлиенте
Процедура СохранитьКартинку(Команда)
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	Диалог.Заголовок = "Выберите файл";
	Диалог.МножественныйВыбор = Ложь;
	Диалог.Фильтр = "BMP (*.bmp)|*.bmp";
	Если Диалог.Выбрать() Тогда
		Карта.ПолучитьКартинку().Записать(Диалог.ПолноеИмяФайла);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СтадииПослеУдаления(Элемент)
	Если Объект.Стадии.Количество() = 0 Тогда
		РаскраситьРамкиЭлементов();
	КонецЕсли;
КонецПроцедуры
&НаКлиенте
Процедура ЗадержкиПослеУдаления(Элемент)
	Если Объект.Задержки.Количество() = 0 Тогда
		РаскраситьРамкиЭлементов();
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура СтадииСрокМинПриИзменении(Элемент)
	ТекДанные = Элементы.Стадии.ТекущиеДанные;	
	Если ТекДанные.СрокМин > 59 Тогда
		ТекДанные.СрокМин = 59;
	КонецЕсли;	
	РассчитатьСрокВыполненияПриИзменении();
КонецПроцедуры

&НаКлиенте
Процедура СтадииСрокЧасовПриИзменении(Элемент)
	ТекДанные = Элементы.Стадии.ТекущиеДанные;	
	Если ТекДанные.СрокЧасов > 23 Тогда
		ТекДанные.СрокЧасов = 23;
	КонецЕсли;	
	РассчитатьСрокВыполненияПриИзменении();
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСрокВыполненияПриИзменении()
	ТекДанные = Элементы.Стадии.ТекущиеДанные;	
	ТекДанные.СрокВыполнения = ТекДанные.СрокДней * 1440 + ТекДанные.СрокЧасов * 60 + ТекДанные.СрокМин;
КонецПроцедуры

&НаКлиенте
Процедура СтадииСрокДнейПриИзменении(Элемент)
	РассчитатьСрокВыполненияПриИзменении();
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ЗаполнитьСрокНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	
	УдаляемыеСимволы = Новый Массив;
	УдаляемыеСимволы.Добавить("""");
	УдаляемыеСимволы.Добавить("{");
	УдаляемыеСимволы.Добавить("}");
	
	Значение = Объект.Наименование;
	Для каждого УдаляемыйСимвол Из УдаляемыеСимволы Цикл
	
		Значение = СтрЗаменить(Значение, УдаляемыйСимвол, "");
	
	КонецЦикла;
	Объект.Наименование = Значение;
	
	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = "Удалены запрещенные символы: "", {, }";
	Сообщение.Сообщить();
	
КонецПроцедуры
