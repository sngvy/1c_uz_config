
Процедура ОбработкаУдаленияПроведения(Отказ)
	//ПроведениеСервер.ОчиститьДвиженияДокумента(ЭтотОбъект,, Отказ); 
	ЭтотОбъект.Движения.ОбъектыВРаботе.Записывать = Истина;
	ЭтотОбъект.Движения.СобытияПоОбъектам.Записывать = Истина;
	ЭтотОбъект.Движения.СостоянияПоКатегориям.Записывать = Истина;
	ЭтотОбъект.Движения.ЗадолженностьПоОбъектам.Записывать = Истина;
	ЭтотОбъект.Движения.Записать();
	Отказ = ПроведениеСервер.ПроверитьВозможностьПроведенияНов(ЭтотОбъект);
КонецПроцедуры

#Область ВыводИзРаботы

Процедура УбратьИзРаботыСотрудников(ТаблицаДвиженийОбъекты, ТаблицаДвиженийОтветственные)

	УбратьИзРаботыОбъекты(ТаблицаДвиженийОбъекты);
	ОчиститьОтветственных(ТаблицаДвиженийОтветственные);

КонецПроцедуры

Процедура УбратьИзРаботыОбъекты(ТаблицаДвиженийОбъекты)

	Если ТаблицаДвиженийОбъекты.Количество() > 0 Тогда
		ЭтотОбъект.Движения.ОбъектыВРаботе.Загрузить(ТаблицаДвиженийОбъекты);
		ЭтотОбъект.Движения.ОбъектыВРаботе.Записывать = Истина;
	КонецЕсли;

КонецПроцедуры

Процедура ОчиститьОтветственных(ТаблицаДвиженийОтветственные)

	Если ТаблицаДвиженийОтветственные.Количество() <= 0 Тогда
	
		Возврат;
	
	КонецЕсли;
	
	Для каждого Ответственный Из ТаблицаДвиженийОтветственные Цикл
	
		РегистрОтветственности = РегистрыСведений.ОтветственныеСотрудники;
		Если СтрСравнить(Ответственный.ТипРегистра, "Помощь") = 0 Тогда
		
			РегистрОтветственности = РегистрыСведений.СотрудникиВПомощь;
		
		КонецЕсли;
		
		РегистрОтветственности.СнятьВсехОтветственных(Ответственный.Объект);
	
	КонецЦикла;

КонецПроцедуры


#КонецОбласти

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ТаблицыДвижений = Новый Структура;
	ТаблицыДвижений.Вставить("Объекты", Неопределено);
	ТаблицыДвижений.Вставить("Ответственные", Неопределено);
	ТаблицыДвижений.Вставить("События", Неопределено);
	ТаблицыДвижений.Вставить("Категории", Неопределено);
	ТаблицыДвижений.Вставить("Задолженность", Неопределено);
	ТаблицыДвижений.Вставить("ЗадолженностьВнесудебна", Неопределено);
	ТаблицыДвижений.Вставить("ЗадолженностьСудебная", Неопределено);
	ТаблицыДвижений.Вставить("ЗадолженностьИск", Неопределено);
	//ТаблицаДвиженийОбъекты = Неопределено;
	//ТаблицаДвиженийСобытия = Неопределено;
	//ТаблицаДвиженийКатегории = Неопределено;
	//ТаблицаДвиженийЗадолженность = Неопределено; 
	//ТаблицаДвиженийЗадолженностьВнесудебная = Неопределено;
	//ТаблицаДвиженийЗадолженностьСудебная = Неопределено;
	//ТаблицаДвиженийЗадолженностьИск = Неопределено;
	
	//Документы.ЗавершениеРаботыОрганизации.ИнициализироватьДанныеДокумента(ЭтотОбъект, ТаблицаДвиженийОбъекты, 
	//		ТаблицаДвиженийСобытия, ТаблицаДвиженийКатегории, ТаблицаДвиженийЗадолженность,ТаблицаДвиженийЗадолженностьВнесудебная,ТаблицаДвиженийЗадолженностьСудебная,ТаблицаДвиженийЗадолженностьИск);
	
	Документы.ЗавершениеРаботыОрганизации.ИнициализироватьДанныеДокумента(
		ЭтотОбъект,
		ТаблицыДвижений
	);
	
	ТаблицаДвиженийОбъекты = ТаблицыДвижений["Объекты"];
	ПроведениеСервер.ВыполнитьКонтрольДвиженийОбъектов(
		ТаблицаДвиженийОбъекты, 
		Перечисления.ВидКонтроля.Отсутствие,
		Отказ
	);
	
	Если Отказ Тогда 
		Возврат;
	КонецЕсли;
	
	УбратьИзРаботыСотрудников(
		ТаблицаДвиженийОбъекты,
		ТаблицыДвижений["Ответственные"]
	);
	
	ТаблицаДвиженийСобытия = ТаблицыДвижений["События"];
	Если Не Отказ И ТаблицаДвиженийСобытия.Количество() > 0 Тогда
		ЭтотОбъект.Движения.СобытияПоОбъектам.Загрузить(ТаблицаДвиженийСобытия);
		ЭтотОбъект.Движения.СобытияПоОбъектам.Записывать = Истина;
	КонецЕсли;
	
	ТаблицаДвиженийКатегории = ТаблицыДвижений["Категории"];
	Если Не Отказ И ТаблицаДвиженийКатегории <> Неопределено И ТаблицаДвиженийКатегории.Количество() > 0 Тогда
		ЭтотОбъект.Движения.СостоянияПоКатегориям.Загрузить(ТаблицаДвиженийКатегории);
		ЭтотОбъект.Движения.СостоянияПоКатегориям.Записывать = Истина;
	КонецЕсли;
	
	ТаблицаДвиженийЗадолженность = ТаблицыДвижений["Задолженность"];
	Если Не Отказ И ТаблицаДвиженийЗадолженность <> Неопределено И ТаблицаДвиженийЗадолженность.Количество() > 0 Тогда
		ЭтотОбъект.Движения.ЗадолженностьПоОбъектам.Загрузить(ТаблицаДвиженийЗадолженность);
		ЭтотОбъект.Движения.ЗадолженностьПоОбъектам.Записывать = Истина;
	КонецЕсли;
	
	ТаблицаДвиженийЗадолженностьВнесудебная = ТаблицыДвижений["ЗадолженностьВнесудебна"];
	Если Не Отказ И ТаблицаДвиженийЗадолженностьВнесудебная <> Неопределено И ТаблицаДвиженийЗадолженностьВнесудебная.Количество() > 0 Тогда
		ЭтотОбъект.Движения.ЗадолженностьПоОбъектамВнесудебная.Загрузить(ТаблицаДвиженийЗадолженностьВнесудебная);
		ЭтотОбъект.Движения.ЗадолженностьПоОбъектамВнесудебная.Записывать = Истина;
	КонецЕсли;
	
	ТаблицаДвиженийЗадолженностьСудебная = ТаблицыДвижений["ЗадолженностьСудебная"];
	Если Не Отказ И ТаблицаДвиженийЗадолженностьСудебная <> Неопределено И ТаблицаДвиженийЗадолженностьСудебная.Количество() > 0 Тогда
		ЭтотОбъект.Движения.ЗадолженностьПоСудебнымРешениям.Загрузить(ТаблицаДвиженийЗадолженностьСудебная);
		ЭтотОбъект.Движения.ЗадолженностьПоСудебнымРешениям.Записывать = Истина;
	КонецЕсли;
	
	ТаблицаДвиженийЗадолженностьИск = ТаблицыДвижений["ЗадолженностьИск"];
	Если Не Отказ И ТаблицаДвиженийЗадолженностьИск <> Неопределено И ТаблицаДвиженийЗадолженностьИск.Количество() > 0 Тогда
		ЭтотОбъект.Движения.ИсковыеТребования.Загрузить(ТаблицаДвиженийЗадолженностьИск);
		ЭтотОбъект.Движения.ИсковыеТребования.Записывать = Истина;
	КонецЕсли;
	
	Если Не Отказ И ТаблицаДвиженийОбъекты <> Неопределено И ТаблицаДвиженийОбъекты.Количество() > 0 Тогда
		 ОтменитьПроведениеМикрозаймов(ТаблицаДвиженийОбъекты);
	КонецЕсли;

	
	ЭтотОбъект.Движения.Записать();	
	
	Блокировка = Новый БлокировкаДанных;
	Эл = Блокировка.Добавить("Константа.СинхронизацияДанныхЗапущена");
	Эл.Режим = РежимБлокировкиДанных.Исключительный;
	Блокировка.Заблокировать();
	Если Константы.СинхронизацияДанныхЗапущена.Получить() = Ложь Тогда
		Константы.СинхронизацияДанныхЗапущена.Установить(Истина);	
	КонецЕсли;
	//////Попытка 
	//////	ФоновыеЗадания.Выполнить("ОбъектыСервер.СинхронизироватьРегистры_ОбъектыВРаботе",,"02");
	//////Исключение
	//////	Сообщить(ОписаниеОшибки());
	//////КонецПопытки;
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	ОбъектыСервер.ОбработкаЗаполненияДокументов(ЭтотОбъект, ДанныеЗаполнения, СтандартнаяОбработка);	
	//ОбъектыСервер.ОбработкаЗаполненияДокументов(ЭтотОбъект, ДанныеЗаполнения, СтандартнаяОбработка);
	//Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПринятиеВРаботуОрганизации") Или 
	//		ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.АктПередачи") Или 
	//		ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗагрузкаЗадолженности") Тогда 
	    
		//Автор = ДанныеЗаполнения.Автор;
		//Комментарий = ДанныеЗаполнения.Комментарий;
		//Организация = ДанныеЗаполнения.Организация;
		//ДокументОснование = ДанныеЗаполнения;
		//Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗагрузкаДанныхДолжника") Тогда
		//	ТЗ = ДанныеЗаполнения.ТаблицаЗначений.Получить();
		//	Если ТЗ <> Неопределено Тогда
		//		Для Каждого Элемент Из ТЗ Цикл
		//			ЭтотОбъект.Объекты.Добавить().Объект = Элемент.СсылкаДО;
		//		КонецЦикла;
		//	КонецЕсли;
		//ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗагрузкаДанных") Тогда
		//	ТЗ = ДанныеЗаполнения.ТаблицаЗначений.Получить();
		//	Если ТЗ <> Неопределено Тогда
		//		Для Каждого Элемент Из ТЗ Цикл
		//			ЭтотОбъект.Объекты.Добавить().Объект = Элемент.Объект;
		//		КонецЦикла;
		//	КонецЕсли;
		//Иначе
		//	Объекты.Загрузить(ДанныеЗаполнения.Объекты.Выгрузить());
		//КонецЕсли;
	//КонецЕсли;
КонецПроцедуры

Процедура ОтменитьПроведениеМикрозаймов(ТаблицаДвиженийОбъекты)

	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ДоговорМикрозайма.Ссылка КАК Договор
	                      |ИЗ
	                      |	Документ.ДоговорМикрозайма КАК ДоговорМикрозайма
	                      |ГДЕ
	                      |	ДоговорМикрозайма.Займ В(&Займ)
	                      |	И ДоговорМикрозайма.Проведен = ИСТИНА
	                      |	И ДоговорМикрозайма.ПометкаУдаления = ЛОЖЬ
	                      |
	                      |ОБЪЕДИНИТЬ ВСЕ
	                      |
	                      |ВЫБРАТЬ
	                      |	РеструктуризацияМикрозайма.Ссылка
	                      |ИЗ
	                      |	Документ.РеструктуризацияМикрозайма КАК РеструктуризацияМикрозайма
	                      |ГДЕ
	                      |	РеструктуризацияМикрозайма.Проведен = ИСТИНА
	                      |	И РеструктуризацияМикрозайма.ПометкаУдаления = ЛОЖЬ
	                      |	И РеструктуризацияМикрозайма.Займ В(&Займ)");
	
	Запрос.УстановитьПараметр("Займ", Объектысервер.УдалитьПовторяющиесяЭлементыМассива(ТаблицаДвиженийОбъекты.ВыгрузитьКолонку("Объект")));
	
	Результат = Запрос.Выполнить().Выбрать();
	Пока Результат.Следующий() Цикл
		ДоговорОбъект = Результат.Договор.ПолучитьОбъект();
		ДоговорОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
	КонецЦикла;
	
КонецПроцедуры

