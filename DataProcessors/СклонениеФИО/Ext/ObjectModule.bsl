 // Функция склоняет переданую фразу
// Параметры:
//  Фраза (обязательный), тип строка
//   Параметр должен содержать фразу. Каждое слово фразы будет просклонено отдельно
//   Если "-" стоит без пробела, то слово не участвует в склонении по падежам. 
//  Падеж (обязательный), тип число
//   Падеж, в который необходимо поставить слово.
//   1 - Именительный
//   2 - Родительный
//   3 - Дательный
//   4 - Винительный
//   5 - Творительный
//   6 - Предложный 
//  Род (обязательный), тип строка
//   "Мужской"
//   "Женский"

&НаСервере
Функция СклонениеФИО(Фраза, Падеж, Род = "") Экспорт
	Попытка
		ПодключитьВнешнююКомпоненту("ОбщийМакет.КомпонентаСклоненияФИО", "Decl", ТипВнешнейКомпоненты.Native);
		Компонента = Новый("AddIn.Decl.CNameDecl");
	Исключение
		Сообщить("Не удалось загрузить внешнюю компаненту по причине: " + ОписаниеОшибки());
		Возврат "";	 
	КонецПопытки;  
	МассивСтрок = РазложитьСтрокуВМассивПодстрок(Фраза, " ");
	РезультатИтог = "";
	Пока МассивСтрок.Количество() > 0 Цикл	
		Если ФИОНаписаноВерно(МассивСтрок[0], Истина) Тогда
			Результат = МассивСтрок[0];	
			Попытка
				Если Род = "Мужской" Тогда
					Результат = Компонента.Просклонять(Результат, Падеж, 1) + " ";				
				ИначеЕсли Род = "Женский" Тогда
					Результат = Компонента.Просклонять(Результат, Падеж, 2) + " ";				
				Иначе
					Результат = Компонента.Просклонять(Результат, Падеж) + " ";
				КонецЕсли;
				РезультатИтог = РезультатИтог + Результат;
			Исключение
				Результат = МассивСтрок[0];
				РезультатИтог = РезультатИтог + Результат + " ";
			КонецПопытки;				
			МассивСтрок.Удалить(0);
		Иначе
			Результат = МассивСтрок[0];
			РезультатИтог = РезультатИтог + Результат + " ";
			МассивСтрок.Удалить(0);
		КонецЕсли;						
	КонецЦикла;	
	Если ПустаяСтрока(Результат) Тогда
		Результат = Фраза;
		Возврат Ложь;
	КонецЕсли;
	Результат = СокрЛП(РезультатИтог);
	Возврат Результат;	
КонецФункции
 
// Функция "расщепляет" строку на подстроки, используя заданный 
//		разделитель. Разделитель может иметь любую длину. 
//		Если в качестве разделителя задан пробел, рядом стоящие пробелы 
//		считаются одним разделителем, а ведущие и хвостовые пробелы параметра Стр
//		игнорируются.
//		Например, 
//		РазложитьСтрокуВМассивПодстрок(",ку,,,му", ",") возвратит массив значений из пяти элементов, 
//		три из которых - пустые строки, а 
//		РазложитьСтрокуВМассивПодстрок(" ку   му", " ") возвратит массив значений из двух элементов
//
//	Параметры: 
//		Стр - 			строка, которую необходимо разложить на подстроки. 
//						Параметр передается по значению.
//		Разделитель - 	строка-разделитель, по умолчанию - запятая.
//
//
//	Возвращаемое значение:
//		массив значений, элементы которого - подстроки
//
Функция РазложитьСтрокуВМассивПодстрок(Знач Стр, Разделитель = ",") Экспорт
	
	МассивСтрок = Новый Массив();
	Если Разделитель = " " Тогда
		Стр = СокрЛП(Стр);
		Пока 1=1 Цикл
			Поз = Найти(Стр,Разделитель);
			Если Поз=0 Тогда
				МассивСтрок.Добавить(Стр);
				Возврат МассивСтрок;
			КонецЕсли;
			МассивСтрок.Добавить(Лев(Стр,Поз-1));
			Стр = СокрЛ(Сред(Стр,Поз));
		КонецЦикла;
	Иначе
		ДлинаРазделителя = СтрДлина(Разделитель);
		Пока 1=1 Цикл
			Поз = Найти(Стр,Разделитель);
			Если Поз=0 Тогда
				МассивСтрок.Добавить(Стр);
				Возврат МассивСтрок;
			КонецЕсли;
			МассивСтрок.Добавить(Лев(Стр,Поз-1));
			Стр = Сред(Стр,Поз+ДлинаРазделителя);
		КонецЦикла;
	КонецЕсли;
	
КонецФункции // глРазложить

 // Проверяет корректность заполнения Ф.И.О. по использованным символам
//
// Параметры
//  СтрокаПараметр  - Строка - проверяемые фамилия, имя и отчество
//  ПроверятьТолькоРусскиеБуквы  - Булево - исключить из множества допустимых символов
//                                          буквы латинского алфавита
//
// Возвращаемое значение:
//   Число   - 0, когда использован недопустимый символ
//             1, когда все символы корректны
//
Функция ФИОНаписаноВерно(Знач СтрокаПараметр, ПроверятьТолькоРусскиеБуквы = Ложь) Экспорт
	
	СтрокаПараметр = СокрЛП(СтрокаПараметр);
	
	СписокДопустимыхЗначений = Новый Соответствие;
	СписокДопустимыхЗначений.Вставить(КодСимвола(" "), " ");
	СписокДопустимыхЗначений.Вставить(КодСимвола("."), ".");
	СписокДопустимыхЗначений.Вставить(КодСимвола("-"), "-");
	СписокДопустимыхЗначений.Вставить(КодСимвола("ё"), "ё");
	СписокДопустимыхЗначений.Вставить(КодСимвола("Ё"), "Ё");
	
	КодA = КодСимвола("A");
	КодZ = КодСимвола("z");
	КодА = КодСимвола("А");
	КодЯ = КодСимвола("я");
	
	Если ПроверятьТолькоРусскиеБуквы Тогда
		Для Сч = 1 По СтрДлина(СтрокаПараметр) Цикл
			Код = КодСимвола(СтрокаПараметр, Сч);
			Если ((Код >= КодА) И (Код <= КодЯ)) ИЛИ (СписокДопустимыхЗначений.Получить(Код) <> Неопределено) Тогда
				Продолжить;
			Иначе
				Возврат 0;
			КонецЕсли;
		КонецЦикла;
		
	Иначе
		Для Сч = 1 По СтрДлина(СтрокаПараметр) Цикл
			Код = КодСимвола(СтрокаПараметр, Сч);
			Если (((Код >= КодA) И (Код <= КодZ)) ИЛИ ((Код >= КодА) И (Код <= КодЯ))) ИЛИ (СписокДопустимыхЗначений.Получить(Код) <> Неопределено) Тогда
				Продолжить;
			Иначе
				Возврат 0;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат 1;
	
КонецФункции // ФИОНаписаноВерно()

