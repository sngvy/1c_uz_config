&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
	Если Объект.СубъектФизическоеЛицо.Количество() = 0 Тогда  
		ЗаполнитьПоляФЛ("СубъектФизическоеЛицо"); 
	КонецЕсли;
	
	Если Объект.СубъектПоручитель.Количество() = 0 Тогда  
		ЗаполнитьПоляФЛ("СубъектПоручитель");
	КонецЕсли;
	
	Если Объект.СубъектНаследник.Количество() = 0 Тогда  
		ЗаполнитьПоляФЛ("СубъектНаследник"); 	
	КонецЕсли;
	
	Если Объект.СубъектЮридическоеЛицо.Количество() = 0 Тогда
		ЗаполнитьПоляЮЛ(); 
	КонецЕсли;	
	
	Если Объект.Сделка.Количество() = 0 Тогда
		ЗаполнитьПоляСделки();
	КонецЕсли;
	
	Если Объект.ПриобретательПраваТребования.Количество() = 0 Тогда
		ЗаполнитьПоляПродажа();
	КонецЕсли;  
	
	
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда 
		
		Объект.СтроковыеАдреса = Ложь;
		Объект.ДействующиеДоговоры = Ложь;
		Значение = НЕ Объект.СтроковыеАдреса;
		СкрытьСтроки("C8.", "ФЛ", Значение);
		СкрытьСтроки("C9.", "ФЛ", Значение);
		СкрытьСтроки("B2.", "ЮЛ", Значение);
		Значение = НЕ Объект.ДействующиеДоговоры;
		СкрытьСтроки("C55.","Сделка",Значение);	 
		
		//Рекв = РеквизитФормыВЗначение("Объект");
		//Рекв.Записать_НаименованиеПолейРегистраКИ(ИмяТаблицы);
		//ЗначениеВРеквизитФормы(Рекв, "Объект");
		
		
	КонецЕсли;
	
	Рекв = РеквизитФормыВЗначение("Объект");
	Рекв.Записать_НаименованиеПолейРегистраКИ("СубъектФизическоеЛицо");
	Рекв.Записать_НаименованиеПолейРегистраКИ("СубъектЮридическоеЛицо");
	Рекв.Записать_НаименованиеПолейРегистраКИ("Сделка");
	Рекв.Записать_НаименованиеПолейРегистраКИ("СубъектНаследник");
	Рекв.Записать_НаименованиеПолейРегистраКИ("СубъектПоручитель");
	ЗначениеВРеквизитФормы(Рекв, "Объект");
		
	УстановитьОформление();
	ОбработкаПароля();
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ПарольИзменен Тогда
	
		ПарольИзменен = Ложь;
		ОбработкаБезопасноеХранилище.ЗаписатьПароль(ТекущийОбъект.Ссылка, Пароль);
	
	КонецЕсли;
	
	Пароль = ?(ЗначениеЗаполнено(Пароль), ЭтотОбъект.УникальныйИдентификатор, "");

КонецПроцедуры


&НаСервере
Процедура ОбработкаПароля()
	
	Ключи = ОбработкаБезопасноеХранилище.КлючиНБКИ();

	Пароль = ОбработкаБезопасноеХранилище.ПолучитьПароль(Объект.Ссылка);
	
	Пароль = ?(ЗначениеЗаполнено(Пароль), ЭтотОбъект.УникальныйИдентификатор, "");

КонецПроцедуры


&НаСервере
Процедура ЗаполнитьПоляФЛ(ИмяТаблицыФЛ) 
	
	МассивПредыдущиеДанные = Новый Массив;
	МассивПредыдущиеДанные.Добавить("Дата выдачи документа с измененным именем"); 
	
	Для каждого ЭлементФЛ из МассивПредыдущиеДанные Цикл 
		Нстр = Объект[ИмяТаблицыФЛ].Добавить(); 
		Нстр.Поле = ЭлементФЛ; 
		НСтр.НомерПоказателяНБКИФЛ = "C2.5";
	КонецЦикла;	

	
	МассивПоказателейДатаИМесто = Новый Массив;
	МассивПоказателейДатаИМесто.Добавить("Дата рождения");
	МассивПоказателейДатаИМесто.Добавить("Код страны ОКСМ");
	МассивПоказателейДатаИМесто.Добавить("Место рождения");   
	
	Сч = 1;
	Для каждого ЭлементФЛ из МассивПоказателейДатаИМесто Цикл  
		ШаблонНомера = "C3.";
		Нстр = Объект[ИмяТаблицыФЛ].Добавить(); 
		Нстр.Поле = ЭлементФЛ; 
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомера + строка(Сч);
		Сч = Сч + 1;
	КонецЦикла;	
	
	МассивПоказателейТекущийДУЛ = Новый Массив;
	
	МассивПоказателейТекущийДУЛ.Добавить("Страна гражданства документа, удостоверяющего личность");
	МассивПоказателейТекущийДУЛ.Добавить("Тип документа, удостоверяющего личность");
	МассивПоказателейТекущийДУЛ.Добавить("Серия документа, удостоверяющего личность");
	МассивПоказателейТекущийДУЛ.Добавить("Номер документа, удостоверяющего личность");
	МассивПоказателейТекущийДУЛ.Добавить("Дата выдачи документа, удостоверяющего личность");
	МассивПоказателейТекущийДУЛ.Добавить("Кем выдан документ, удостоверяющий личность");
	МассивПоказателейТекущийДУЛ.Добавить("Код подразделения выдачи документа, удостоверяющего личность");
	МассивПоказателейТекущийДУЛ.Добавить("Дата окончания срока действия документа,удостоверяющего личность");
	
	Сч = 1;
	Для каждого ЭлементФЛ из МассивПоказателейТекущийДУЛ Цикл  
		ШаблонНомера = "C4.";
		Нстр = Объект[ИмяТаблицыФЛ].Добавить(); 
		Нстр.Поле = ЭлементФЛ; 
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомера + строка(Сч); 
		Если СтрНайти(ЭлементФЛ, "Страна") > 0 или СтрНайти(ЭлементФЛ, "Тип") > 0 Тогда
			Сч = Сч+1;
			НСтр.НомерПоказателяНБКИФЛ  = НСтр.НомерПоказателяНБКИФЛ+ "." + строка(Сч); 
		КонецЕсли;
		Сч = Сч + 1;
	КонецЦикла;	
	
	МассивПоказателейПредыдущийДУЛ = Новый Массив; 
	
	МассивПоказателейПредыдущийДУЛ.Добавить("Признак смены документа, удостоверяющего личность");
	МассивПоказателейПредыдущийДУЛ.Добавить("Страна гражданства старого документа, удостоверяющего личность");
	МассивПоказателейПредыдущийДУЛ.Добавить("Тип старого документа, удостоверяющего личность");
	МассивПоказателейПредыдущийДУЛ.Добавить("Серия старого документа, удостоверяющего личность");
	МассивПоказателейПредыдущийДУЛ.Добавить("Номер старого документа, удостоверяющего личность");
	МассивПоказателейПредыдущийДУЛ.Добавить("Дата выдачи старого документа, удостоверяющего личность");
	МассивПоказателейПредыдущийДУЛ.Добавить("Кем выдан старый документ, удостоверяющий личность");
	МассивПоказателейПредыдущийДУЛ.Добавить("Код подразделения выдачи старого документа, удостоверяющего личность");
	МассивПоказателейПредыдущийДУЛ.Добавить("Дата окончания срока действия старого документа, удостоверяющего личность");
	
	Сч = 1;
	Для каждого ЭлементФЛ из МассивПоказателейПредыдущийДУЛ Цикл  
		ШаблонНомера = "C5.";
		Нстр = Объект[ИмяТаблицыФЛ].Добавить(); 
		Нстр.Поле = ЭлементФЛ; 
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомера + строка(Сч);
		Если СтрНайти(ЭлементФЛ, "Страна") > 0 или СтрНайти(ЭлементФЛ, "Тип") > 0 Тогда
			Сч = Сч+1;
			НСтр.НомерПоказателяНБКИФЛ = НСтр.НомерПоказателяНБКИФЛ+ "." + строка(Сч); 
		КонецЕсли; 
		Сч = Сч + 1;
	КонецЦикла;	
	
	
	МассивНалогоплательщик = Новый Массив;
	
	МассивНалогоплательщик.Добавить("Тип номера налогоплательщика");
	МассивНалогоплательщик.Добавить("Номер налогоплательщика"); 
	МассивНалогоплательщик.Добавить("Регистрационный номер");
	//5.0
	МассивНалогоплательщик.Добавить("Признак специального налогового режима"); 
	
	Сч = 1;
	Для каждого ЭлементФЛ из МассивНалогоплательщик Цикл  
		ШаблонНомера = "C6.";
		Нстр = Объект[ИмяТаблицыФЛ].Добавить(); 
		Нстр.Поле = ЭлементФЛ; 
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомера + строка(Сч);  

		Сч = Сч + 1;
	КонецЦикла;	
	
	
	МассивСНИЛС = Новый Массив;
		
	МассивСНИЛС.Добавить("СНИЛС");     
	
	Для каждого ЭлементФЛ из МассивСНИЛС Цикл 
		Нстр = Объект[ИмяТаблицыФЛ].Добавить(); 
		Нстр.Поле = ЭлементФЛ; 
		НСтр.НомерПоказателяНБКИФЛ = "C7.1";
		НСтр.ЗаполнятьпоУмолчанию = "Нет";

	КонецЦикла;	
	
	МассивАдресаРегистрации = Новый Массив; 
	МассивАдресаРегистрации.Добавить("Адрес Регистрации");
	МассивАдресаРегистрации.Добавить("Место жительства или прибывание или не указана регистрация");
	МассивАдресаРегистрации.Добавить("Индекс регистрации");
	МассивАдресаРегистрации.Добавить("Страна регистрации");
	МассивАдресаРегистрации.Добавить("Номер адреса ФИАС");
	МассивАдресаРегистрации.Добавить("Населенный пункт регистрации");
	МассивАдресаРегистрации.Добавить("Улица регистрации");
	МассивАдресаРегистрации.Добавить("Дом регистрации");
	МассивАдресаРегистрации.Добавить("Владение регистрации");
	МассивАдресаРегистрации.Добавить("Корпус регистрации");
	МассивАдресаРегистрации.Добавить("Строение регистрации");
	МассивАдресаРегистрации.Добавить("Квартира регистрации");
	МассивАдресаРегистрации.Добавить("Дата регистрации");
	МассивАдресаРегистрации.Добавить("Наименование регистрирующего органа");
	МассивАдресаРегистрации.Добавить("Код подразделения, осуществившего регистрацию");
	
	Сч = 0;
	Для каждого ЭлементФЛ из МассивАдресаРегистрации Цикл  
		ШаблонНомера = "C8.";
		Нстр = Объект[ИмяТаблицыФЛ].Добавить(); 
		Нстр.Поле = ЭлементФЛ; 
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомера + строка(Сч);  
		Если СтрНайти(ЭлементФЛ, "Адрес") > 0 Тогда
			НСтр.НомерПоказателяНБКИФЛ = ШаблонНомера; 
		КонецЕсли; 
		Если СтрНайти(ЭлементФЛ, "Страна") > 0 Тогда
			Сч = Сч+1;
			НСтр.НомерПоказателяНБКИФЛ = НСтр.НомерПоказателяНБКИФЛ + "." + строка(Сч); 
		КонецЕсли;
		Если СтрНайти(ЭлементФЛ, "Населенный") > 0 Тогда
			Сч = Сч+1;
			НСтр.НомерПоказателяНБКИФЛ = НСтр.НомерПоказателяНБКИФЛ + "." + строка(Сч); 
		КонецЕсли;
		Сч = Сч + 1;
	КонецЦикла;	

	МассивАдресаФактического = Новый Массив;
	
	МассивАдресаФактического.Добавить("Адрес Фактический");
	МассивАдресаФактического.Добавить("Признак отличия фактического места жительства");
	МассивАдресаФактического.Добавить("Индекс фактический");
	МассивАдресаФактического.Добавить("Страна фактическая");
	МассивАдресаФактического.Добавить("Номер адреса ФИАС");
	МассивАдресаФактического.Добавить("Населенный пункт фактический");
	МассивАдресаФактического.Добавить("Улица фактическая");
	МассивАдресаФактического.Добавить("Дом фактический");
	МассивАдресаФактического.Добавить("Владение фактическое");
	МассивАдресаФактического.Добавить("Корпус фактический");
	МассивАдресаФактического.Добавить("Строение фактическое");
	МассивАдресаФактического.Добавить("Квартира фактическая");   
	
	Сч = 0;
	Для каждого ЭлементФЛ из МассивАдресаФактического Цикл  
		ШаблонНомера = "C9.";
		Нстр = Объект[ИмяТаблицыФЛ].Добавить(); 
		Нстр.Поле = ЭлементФЛ; 
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомера + строка(Сч); 
		Если СтрНайти(ЭлементФЛ,"Адрес",,,) > 0 Тогда
			НСтр.НомерПоказателяНБКИФЛ = ШаблонНомера; 
		КонецЕсли; 
		Если СтрНайти(ЭлементФЛ,"Страна",,,) > 0 Тогда
			Сч = Сч+1;
			НСтр.НомерПоказателяНБКИФЛ = НСтр.НомерПоказателяНБКИФЛ+ "." + строка(Сч); 
		КонецЕсли;
		Если СтрНайти(ЭлементФЛ,"Населенный",,,) > 0 Тогда
			Сч = Сч+1;
			НСтр.НомерПоказателяНБКИФЛ = НСтр.НомерПоказателяНБКИФЛ+ "." + строка(Сч); 
		КонецЕсли; 
		Сч = Сч + 1;
	КонецЦикла;	
	
	МассивКонтактнаяИнформация = Новый Массив;	
	МассивКонтактнаяИнформация.Добавить("Номер телефона"); 
	МассивКонтактнаяИнформация.Добавить("Комментарий"); 
	МассивКонтактнаяИнформация.Добавить("Адрес электронной почты");
	
	Сч = 1;
	Для каждого ЭлементФЛ из МассивКонтактнаяИнформация Цикл 
		ШаблонНомера = "C10.";
		Нстр = Объект[ИмяТаблицыФЛ].Добавить(); 
		Нстр.Поле = ЭлементФЛ; 
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомера + строка(Сч);
		Сч = Сч + 1;
	КонецЦикла;	

    МассивИП = Новый Массив;	
	
	МассивИП.Добавить("Признак ИП");
	МассивИП.Добавить("Регистрационный номер"); 
	МассивИП.Добавить("Дата регистрации индивидуального предпринимателя");
	Сч = 1;      
	
	Для каждого ЭлементФЛ из МассивИП Цикл 
		ШаблонНомера = "C11.";
		Нстр = Объект[ИмяТаблицыФЛ].Добавить(); 
		Нстр.Поле = ЭлементФЛ; 
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомера + строка(Сч);
		Сч = Сч + 1;
	КонецЦикла;	
	
	МассивДееспособность = Новый Массив;
	
	МассивДееспособность.Добавить("Код дееспособности");
	МассивДееспособность.Добавить("Дата вступления в силу решения суда о признании недееспособным или об ограничении дееспособности"); 
	МассивДееспособность.Добавить("Номер решения суда");
	МассивДееспособность.Добавить("Наименование суда");
	МассивДееспособность.Добавить("Дата вступления в силу решения суда о признании дееспособным или об отмене ограничения дееспособности"); 
	МассивДееспособность.Добавить("Номер решения суда"); 
	МассивДееспособность.Добавить("Наименование суда"); 
	
	Сч = 1;
	Для каждого ЭлементФЛ из МассивДееспособность Цикл  
		ШаблонНомера = "C12.";
		Нстр = Объект[ИмяТаблицыФЛ].Добавить(); 
		Нстр.Поле = ЭлементФЛ; 
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомера + строка(Сч); 
		Сч = Сч + 1;
	КонецЦикла;	  
	
	МассивПоказателейФЛ = Новый Массив;	
	
	МассивПоказателейФЛ.Добавить("Признак смерти физического лица");
	Для каждого ЭлементФЛ из МассивПоказателейФЛ Цикл 
		Нстр = Объект[ИмяТаблицыФЛ].Добавить();
		НСтр.НомерПоказателяНБКИФЛ = "C.";
		Нстр.Поле = ЭлементФЛ; 
	КонецЦикла;	
КонецПроцедуры      

&НаСервере
Процедура ЗаполнитьПоляЮЛ()   
	
	МассивНаименованиеЮЛ = Новый Массив;
		
	МассивНаименованиеЮЛ.Добавить("Полное наименование");
	МассивНаименованиеЮЛ.Добавить("Сокращенное наименование");
	МассивНаименованиеЮЛ.Добавить("Иное наименование");
	
	Сч = 1;
	Для каждого ЭлементЮЛ из МассивНаименованиеЮЛ Цикл  
		ШаблонНомера = "B1.";
		Нстр = Объект.СубъектЮридическоеЛицо.Добавить(); 
		Нстр.Поле = ЭлементЮЛ; 
		НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомера + строка(Сч);
		Сч = Сч + 1;
	КонецЦикла;	 
	
	МассивЮрАдрес = Новый Массив;
	
	МассивЮрАдрес.Добавить("Юридический Адрес");
//	МассивЮрАдрес.Добавить("Индекс юрадрес");
	МассивЮрАдрес.Добавить("Страна юрадрес");  
	МассивЮрАдрес.Добавить("Номер ФИАС юрадрес");
	МассивЮрАдрес.Добавить("Населенный пункт юрадрес");
	МассивЮрАдрес.Добавить("Улица юрадрес");
	МассивЮрАдрес.Добавить("Дом юрадрес");
	МассивЮрАдрес.Добавить("Владение юрадрес");
	МассивЮрАдрес.Добавить("Корпус юрадрес");
	МассивЮрАдрес.Добавить("Строение юрадрес");
	МассивЮрАдрес.Добавить("Помещение или офис юрадрес");
	МассивЮрАдрес.Добавить("Номер телефона"); 
	МассивЮрАдрес.Добавить("Комментарий"); 
	МассивЮрАдрес.Добавить("Электронная почта");

	
	Сч = 0;
	Для каждого ЭлементЮЛ из МассивЮрАдрес Цикл  
		ШаблонНомера = "B2.";
		Нстр = Объект.СубъектЮридическоеЛицо.Добавить(); 
		Нстр.Поле = ЭлементЮЛ; 
		НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомера + строка(Сч);
		Если СтрНайти(ЭлементЮЛ,"Адрес",,,) > 0 Тогда
			НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомера; 
		КонецЕсли;
		Если СтрНайти(ЭлементЮЛ,"Страна",,,) > 0 Тогда
			Сч = Сч+1;
			НСтр.НомерПоказателяНБКИЮЛ = НСтр.НомерПоказателяНБКИЮЛ+ "." + строка(Сч); 
		КонецЕсли;
		Если СтрНайти(ЭлементЮЛ,"Населенный",,,) > 0 Тогда
			Сч = Сч+1;
			НСтр.НомерПоказателяНБКИЮЛ = НСтр.НомерПоказателяНБКИЮЛ+ "." + строка(Сч); 
		КонецЕсли; 

		Сч = Сч + 1;
	КонецЦикла;	 
	
    МассивРегистрационныеНомера = Новый Массив;  
	МассивРегистрационныеНомера.Добавить("Регистрационный номер");
	МассивРегистрационныеНомера.Добавить("Идентификатор LEI");
	Сч = 1;
	Для каждого ЭлементЮЛ из МассивРегистрационныеНомера Цикл  
		ШаблонНомера = "B3.";
		Нстр = Объект.СубъектЮридическоеЛицо.Добавить(); 
		Нстр.Поле = ЭлементЮЛ; 
		НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомера + строка(Сч);
		Сч = Сч + 1;
	КонецЦикла;	 
  
    МассивНалогоплательщик = Новый Массив;  
	МассивНалогоплательщик.Добавить("Код номера налогоплательщика");
	МассивНалогоплательщик.Добавить("Номер налогоплательщика");

	Сч = 1;
	Для каждого ЭлементЮЛ из МассивНалогоплательщик Цикл  
		ШаблонНомера = "B4.";
		Нстр = Объект.СубъектЮридическоеЛицо.Добавить(); 
		Нстр.Поле = ЭлементЮЛ; 
		НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомера + строка(Сч); 
		Сч = Сч + 1;
	КонецЦикла;	
	
	МассивРеорганизацияИлиСмена = Новый Массив;
		
	МассивРеорганизацияИлиСмена.Добавить("Признак смены наименования");
	МассивРеорганизацияИлиСмена.Добавить("Признак реорганизации");
	МассивРеорганизацияИлиСмена.Добавить("Полное наименование до его смены или наименование лица, от которого перешли права и обязанности");
	МассивРеорганизацияИлиСмена.Добавить("Сокращенное наименование до его смены или наименование лица, от которого перешли права и обязанности");
	МассивРеорганизацияИлиСмена.Добавить("Иное наименование");
	МассивРеорганизацияИлиСмена.Добавить("Регистрационный номер лица, от которого перешли права и обязанности");  	
	МассивРеорганизацияИлиСмена.Добавить("Дата правопреемства или окончания реорганизации");		
			
	Сч = 1;
	Для каждого ЭлементЮЛ из МассивРеорганизацияИлиСмена Цикл  
		ШаблонНомера = "B5.";
		Нстр = Объект.СубъектЮридическоеЛицо.Добавить(); 
		Нстр.Поле = ЭлементЮЛ; 
		НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомера + строка(Сч);
		Сч = Сч + 1;
	КонецЦикла;
	                     
	МассивПереходПравИОбязанностей = Новый Массив;
		
	МассивПереходПравИОбязанностей.Добавить("Признак наличия лица, от которого перешли права и обязанности");
	МассивПереходПравИОбязанностей.Добавить("Признак регистрации в Российской Федерации");
	МассивПереходПравИОбязанностей.Добавить("Полное наименование лица, от которого перешли права и обязанности");
	МассивПереходПравИОбязанностей.Добавить("Регистрационный номер лица, от которого перешли права и обязанности");  	
	
			
	Сч = 1;
	Для каждого ЭлементЮЛ из МассивПереходПравИОбязанностей Цикл  
		ШаблонНомера = "B8.";
		Нстр = Объект.СубъектЮридическоеЛицо.Добавить(); 
		Нстр.Поле = ЭлементЮЛ; 
		НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомера + строка(Сч);
		Сч = Сч + 1;
	КонецЦикла;	  
	
	МассивЛиквидацияЮЛ = Новый Массив;
		
	МассивЛиквидацияЮЛ.Добавить("Признак Ликвидации ЮЛ");
	//МассивЛиквидацияЮЛ.Добавить("Признак реорганизации");
	//МассивЛиквидацияЮЛ.Добавить("Полное наименование до его смены или наименование лица, от которого перешли права и обязанности");
	//МассивЛиквидацияЮЛ.Добавить("Сокращенное наименование до его смены или наименование лица, от которого перешли права и обязанности");
	//МассивЛиквидацияЮЛ.Добавить("Иное наименование");
	//МассивЛиквидацияЮЛ.Добавить("Регистрационный номер лица, от которого перешли права и обязанности");  	
	//МассивЛиквидацияЮЛ.Добавить("Дата правопреемства или окончания реорганизации");		
			
	Для каждого ЭлементЮЛ из МассивЛиквидацияЮЛ Цикл  
		ШаблонНомера = "B.";
		Нстр = Объект.СубъектЮридическоеЛицо.Добавить(); 
		Нстр.Поле = ЭлементЮЛ; 
	КонецЦикла;

КонецПроцедуры   

&НаСервере
Процедура ЗаполнитьПоляСделки()   
	
	МассивУИД = Новый Массив;  
	МассивУИД.Добавить("УИд сделки");
	//5.0
	МассивУИД.Добавить("НомерСделки");
	
	Сч = 1;
	Для каждого ЭлементСделка из МассивУИД Цикл 
		ШаблонНомераФ = "C17.";
		ШаблонНомераЮ = "B10.";
		
		Нстр = Объект.Сделка.Добавить(); 
		Нстр.Поле = ЭлементСделка;    
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Сч);
		НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомераЮ + строка(Сч); 
		Сч = Сч + 1;
	КонецЦикла;	
	
	МассивОбщиеСведения = Новый Массив; 
	//Параметры
	
	МассивОбщиеСведения.Добавить("Код вида участия в сделке");
	МассивОбщиеСведения.Добавить("Дата совершения сделки");
	МассивОбщиеСведения.Добавить("Код типа сделки");
	МассивОбщиеСведения.Добавить("Код вида займа или кредита");
	МассивОбщиеСведения.Добавить("Код цели займа или кредита");
	МассивОбщиеСведения.Добавить("Признак потребительского займа или кредита");
	МассивОбщиеСведения.Добавить("Признак использования платежной карты");
	МассивОбщиеСведения.Добавить("Признак возникновения обязательства в результате новации");
	МассивОбщиеСведения.Добавить("Признак денежного обязательства источника");
	МассивОбщиеСведения.Добавить("Признак денежного обязательства субъекта");
	МассивОбщиеСведения.Добавить("Дата прекращения обязательства субъекта по условиям сделки");
	//5.0
	МассивОбщиеСведения.Добавить("Код вида кредитора – заимодавца");
	МассивОбщиеСведения.Добавить("Признак возникновения обязательства в результате получения части прав кредитора от другого лица");
	МассивОбщиеСведения.Добавить("Признак кредитной линии");
	МассивОбщиеСведения.Добавить("Код типа кредитной линии");
	МассивОбщиеСведения.Добавить("Признак плавающей (переменной) процентной ставки");
	МассивОбщиеСведения.Добавить("Признак частичной передачи прав кредитора другому лицу");
	МассивОбщиеСведения.Добавить("УИд сделки, по которой права кредитора частично переданы другому лицу");
	МассивОбщиеСведения.Добавить("Дата возникновения обязательства субъекта");
	
	Сч = 1;
	Для каждого ЭлементСделка из МассивОбщиеСведения Цикл 
		ШаблонНомераФ = "C18.";
		ШаблонНомераЮ = "B11.";
				
   		Нстр = Объект.Сделка.Добавить(); 
		Нстр.Поле = ЭлементСделка;    
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Сч);
		НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомераЮ + строка(Сч); 
		
		Сч = Сч + 1;
	КонецЦикла;	
	
	МассивОбязательство = Новый Массив;
	МассивОбязательство.Добавить("Сумма обязательства"); 
	МассивОбязательство.Добавить("Валюта обязательства");
	МассивОбязательство.Добавить("Сумма обеспечиваемого обязательства");
	// 5.0
	МассивОбязательство.Добавить("Валюта обеспечиваемого обязательства");
	МассивОбязательство.Добавить("Дата расчета");
	МассивОбязательство.Добавить("УИд сделки, в результате которой возникло обеспечиваемое обязательство");

	
	Сч = 1;
	Для каждого ЭлементСделка из МассивОбязательство Цикл 
		ШаблонНомераФ = "C19.";
		ШаблонНомераЮ = "B12.";
		
		Нстр = Объект.Сделка.Добавить(); 
		Нстр.Поле = ЭлементСделка;    
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Сч);
		НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомераЮ + строка(Сч);  		
		Сч = Сч + 1;
	КонецЦикла;	
	
	
	//Условия
	
	МассивПоказателейСолидарнойСделки = Новый Массив; 
	МассивПоказателейСолидарнойСделки.Добавить("Признак наличия солидарных должников");
	МассивПоказателейСолидарнойСделки.Добавить("Число солидарных должников");
	
	Сч = 1;
	Для каждого ЭлементСделка из МассивПоказателейСолидарнойСделки Цикл 
		ШаблонНомераФ = "C20.";
		ШаблонНомераЮ = "B13.";
		
		Нстр = Объект.Сделка.Добавить(); 
		Нстр.Поле = ЭлементСделка;    
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Сч);
		НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомераЮ + строка(Сч);
		Сч = Сч + 1;    
	КонецЦикла;	
	
	
	МассивПоказателейГрафика = Новый Массив; 
	МассивПоказателейГрафика.Добавить("Сумма ближайшего следующего платежа по основному долгу");
	МассивПоказателейГрафика.Добавить("Дата ближайшего следующего платежа по основному долгу");
	МассивПоказателейГрафика.Добавить("Сумма ближайшего следующего платежа по процентам");
	МассивПоказателейГрафика.Добавить("Дата ближайшего следующего платежа по процентам");
	МассивПоказателейГрафика.Добавить("Код частоты платежей");
	МассивПоказателейГрафика.Добавить("Сумма минимального платежа по кредитной карте");
	МассивПоказателейГрафика.Добавить("Дата начала беспроцентного периода");
	МассивПоказателейГрафика.Добавить("Дата окончания беспроцентного периода");
	МассивПоказателейГрафика.Добавить("Дата окончания срока уплаты процентов");
	
	Сч = 1;
	Для каждого ЭлементСделка из МассивПоказателейГрафика Цикл 
		ШаблонНомераФ = "C21.";
		ШаблонНомераЮ = "B14.";
		
		Нстр = Объект.Сделка.Добавить(); 
		Нстр.Поле = ЭлементСделка;    
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Сч);
		НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомераЮ + строка(Сч);
		Сч = Сч + 1;    
	КонецЦикла;	
	
	МассивПСК = Новый Массив;
	МассивПСК.Добавить("Полная стоимость кредита или займа в процентах годовых");  
	МассивПСК.Добавить("Полная стоимость кредита или займа в денежном выражении");
	МассивПСК.Добавить("Дата расчета полной стоимости кредита или займа"); 
	Сч = 1;
	Для каждого ЭлементСделка из МассивПСК Цикл 
		ШаблонНомераФ = "C22.";
		//ШаблонНомераЮ = "B15.";
		
		Нстр = Объект.Сделка.Добавить(); 
		Нстр.Поле = ЭлементСделка;    
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Сч);
		//НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомераЮ + строка(Сч); 
		Сч = Сч + 1;    
	КонецЦикла;	
	
	МассивИзмененияУсловий = Новый Массив; 
	
	МассивИзмененияУсловий.Добавить("Признак изменения договора");
	МассивИзмененияУсловий.Добавить("Код вида изменения договора");
	МассивИзмененияУсловий.Добавить("Код специального изменения договора");
	МассивИзмененияУсловий.Добавить("Описание иного изменения договора");
	МассивИзмененияУсловий.Добавить("Дата вступления изменения договора в силу");
	МассивИзмененияУсловий.Добавить("Дата планового прекращения действия изменения договора");
	МассивИзмененияУсловий.Добавить("Дата фактического прекращения действия изменения договора");
	МассивИзмененияУсловий.Добавить("Код причины прекращения действия изменения договора");
	МассивИзмененияУсловий.Добавить("Курс конверсии валюты долга");
	
	Сч = 1;
	Для каждого ЭлементСделка из МассивИзмененияУсловий Цикл 
		ШаблонНомераФ = "C23.";
		ШаблонНомераЮ = "B15.";
		
		Нстр = Объект.Сделка.Добавить(); 
		Нстр.Поле = ЭлементСделка;    
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Сч);
		НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомераЮ + строка(Сч);  
		Сч = Сч + 1;    
	КонецЦикла;	
	
	
	МассивПередачаФинансирования = Новый Массив;
	МассивПередачаФинансирования.Добавить("Дата передачи финансирования субъекту или возникновения обеспечения исполнения обязательства");
	//5.0
	МассивПередачаФинансирования.Добавить("Порядковый номер транша");
	
	Сч = 1;
	Для каждого ЭлементСделка из МассивПередачаФинансирования Цикл 
		ШаблонНомераФ = "C24.";
		ШаблонНомераЮ = "B16.";
		
		Нстр = Объект.Сделка.Добавить(); 
		Нстр.Поле = ЭлементСделка;    
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Сч);
		НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомераЮ + строка(Сч); 
		Сч = Сч + 1;    
	КонецЦикла;	
	
	МассивЛьготныйПериод = Новый Массив;
	МассивЛьготныйПериод.Добавить("Признак неподтвержденного льготного периода");
	Сч = 9;
	Для каждого ЭлементСделка из МассивЛьготныйПериод Цикл 
		ШаблонНомераФ = "C25.";
		//ШаблонНомераЮ = "B16.";
		
		Нстр = Объект.Сделка.Добавить(); 
		Нстр.Поле = ЭлементСделка;    
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Сч);
		//НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомераЮ + строка(Сч); 
		Сч = Сч + 1;    
	КонецЦикла;
	
	Ф = 25;
	Ю = 17;
	Для Сч = 1 по 3 Цикл	
		Счетчик = ?(Ф = 25, 8, 7);
		ШаблонНомераФ = "C" + Строка(Ф) + ".";
		ШаблонНомераЮ = "B" + Строка(Ю)+ ".";
		ШаблонПоля = "Дата расчета " + строка(сч);
		
		Нстр = Объект.Сделка.Добавить(); 
		Нстр.Поле = ШаблонПоля;    
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Счетчик);
		НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомераЮ + строка(Счетчик); 
		Ф = Ф + 1;
		Ю = Ю + 1;
	КонецЦикла;       
	
	МассивПросроченнаяЗадолженность = Новый Массив;
	МассивПросроченнаяЗадолженность.Добавить("Дата возникновения просроченной задолженности"); 
	
	Сч = 1;
	Для каждого ЭлементСделка из МассивПросроченнаяЗадолженность Цикл 
		ШаблонНомераФ = "C27.";
		ШаблонНомераЮ = "B19.";
		
		Нстр = Объект.Сделка.Добавить(); 
		Нстр.Поле = ЭлементСделка;    
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Сч); 
		НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомераЮ + строка(Сч); 
		Сч = Сч + 1;    
	КонецЦикла;	

	
	МассивСреднемесячныйПлатеж = Новый Массив;
	МассивСреднемесячныйПлатеж.Добавить("Величина среднемесячного платежа");
	МассивСреднемесячныйПлатеж.Добавить("Дата расчета величины среднемесячного платежа");
	Сч = 1;
	Для каждого ЭлементСделка из МассивСреднемесячныйПлатеж Цикл 
		ШаблонНомераФ = "C29.";
				
		Нстр = Объект.Сделка.Добавить(); 
		Нстр.Поле = ЭлементСделка;    
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Сч);
		Сч = Сч + 1;    
	КонецЦикла;	

		
	//Неденежное обязательство
	
	МассивНеденежноеОбязательствоИсточник = Новый Массив;
	МассивНеденежноеОбязательствоИсточник.Добавить("Предмет обязательства");
	МассивНеденежноеОбязательствоИсточник.Добавить("Код предоставляемого имущества");
	МассивНеденежноеОбязательствоИсточник.Добавить("Объект предоставления");
	МассивНеденежноеОбязательствоИсточник.Добавить("Дата передачи имущества субъекту");
	//5.0
	МассивНеденежноеОбязательствоИсточник.Добавить("Идентификационный код предоставляемого имущества");

	Сч = 1;
	Для каждого ЭлементСделка из МассивНеденежноеОбязательствоИсточник Цикл 
		ШаблонНомераФ = "C30.";
		ШаблонНомераЮ = "B21.";
		
		Нстр = Объект.Сделка.Добавить(); 
		Нстр.Поле = ЭлементСделка;    
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Сч);
		НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомераЮ + строка(Сч); 
		Сч = Сч + 1;    
	КонецЦикла;	
	
	МассивНеденежноеОбязательствоСубъект = Новый Массив;
	МассивНеденежноеОбязательствоСубъект.Добавить("Предмет обязательства");
	МассивНеденежноеОбязательствоСубъект.Добавить("Объект предоставления");     
	МассивНеденежноеОбязательствоСубъект.Добавить("Порядок исполнения обязательства");
	МассивНеденежноеОбязательствоСубъект.Добавить("Признак ненадлежащего исполнения обязательства"); 
	//5.0
	МассивНеденежноеОбязательствоСубъект.Добавить("Код полученного имущества");
	Сч = 1;
	Для каждого ЭлементСделка из МассивНеденежноеОбязательствоСубъект Цикл 
		ШаблонНомераФ = "C31.";
		ШаблонНомераЮ = "B22.";
		
		Нстр = Объект.Сделка.Добавить(); 
		Нстр.Поле = ЭлементСделка;    
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Сч);
		НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомераЮ + строка(Сч);
		Сч = Сч + 1;    
	КонецЦикла;	
	
	МассивЗалог  = Новый Массив;
	
	//Залог
	МассивЗалог.Добавить("Признак наличия залога");
	МассивЗалог.Добавить("Код предмета залога"); 
	МассивЗалог.Добавить("Идентификационный код предмета залога");
	МассивЗалог.Добавить("Дата заключения договора залога");
	МассивЗалог.Добавить("Стоимость предмета залога");
	МассивЗалог.Добавить("Валюта стоимости предмета залога");
	МассивЗалог.Добавить("Дата проведения оценки предмета залога");
	МассивЗалог.Добавить("Признак иного обременения предмета залога");
	МассивЗалог.Добавить("Дата прекращения залога согласно договору");
	МассивЗалог.Добавить("Дата фактического прекращения залога");
	МассивЗалог.Добавить("Код причины прекращения залога");
	//5.0
	МассивЗалог.Добавить("Вид стоимости предмета залога");
	МассивЗалог.Добавить("Сумма обязательств по всем договорам, исполнение которых обеспечено предметом залога");
	МассивЗалог.Добавить("Количество договоров, исполнение обязательств по которым обеспечено предметом залога");
	
	Сч = 1;
	Для каждого ЭлементСделка из МассивЗалог Цикл 
		ШаблонНомераФ = "C32.";
		ШаблонНомераЮ = "B23.";
		
		Нстр = Объект.Сделка.Добавить(); 
		Нстр.Поле = ЭлементСделка;    
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Сч);
		НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомераЮ + строка(Сч); 
		Сч = Сч + 1;    
	КонецЦикла;	
	
	МассивПоручительство = Новый Массив;
	//Поручительство
	МассивПоручительство.Добавить("Признак наличия поручительства");
	МассивПоручительство.Добавить("УИд договора поручительства"); 
	МассивПоручительство.Добавить("Размер поручительства");
	МассивПоручительство.Добавить("Валюта поручительства");
	МассивПоручительство.Добавить("Дата заключения договора поручительства");
	МассивПоручительство.Добавить("Дата прекращения поручительства согласно договору");
	МассивПоручительство.Добавить("Дата фактического прекращения поручительства");
	МассивПоручительство.Добавить("Код причины прекращения поручительства");
	
	Сч = 1;
	Для каждого ЭлементСделка из МассивПоручительство Цикл 
		ШаблонНомераФ = "C33.";
		ШаблонНомераЮ = "B24.";
		
		Нстр = Объект.Сделка.Добавить(); 
		Нстр.Поле = ЭлементСделка;    
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Сч);
		НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомераЮ + строка(Сч);
		Сч = Сч + 1;    
	КонецЦикла;	
	
	МассивНезависимаяГарантия  = Новый Массив;
	//Гарантия
	МассивНезависимаяГарантия.Добавить("Признак наличия независимой гарантии");
	МассивНезависимаяГарантия.Добавить("УИд независимой гарантии"); 
	МассивНезависимаяГарантия.Добавить("Сумма независимой гарантии");
	МассивНезависимаяГарантия.Добавить("Валюта независимой гарантии");
	МассивНезависимаяГарантия.Добавить("Дата выдачи независимой гарантии");
	МассивНезависимаяГарантия.Добавить("Дата окончания независимой гарантии по услловиям");
	МассивНезависимаяГарантия.Добавить("Дата фактического прекращения независимой гарантии");
	МассивНезависимаяГарантия.Добавить("Код причины прекращения независимой гарантии");
	
	Сч = 1;
	Для каждого ЭлементСделка из МассивНезависимаяГарантия Цикл 
		ШаблонНомераФ = "C34.";
		ШаблонНомераЮ = "B25.";
		
		Нстр = Объект.Сделка.Добавить(); 
		Нстр.Поле = ЭлементСделка;    
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Сч);
		НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомераЮ + строка(Сч); 
		Сч = Сч + 1;    
	КонецЦикла;	 
	
	МассивСтрахованиеЗалога  = Новый Массив;
	//Страхование
	МассивСтрахованиеЗалога.Добавить("Признак наличия страхования");
	МассивСтрахованиеЗалога.Добавить("Лимит страховых выплат"); 
	МассивСтрахованиеЗалога.Добавить("Валюта страховых выплат");
	МассивСтрахованиеЗалога.Добавить("Признак наличия франшизы");
	МассивСтрахованиеЗалога.Добавить("Дата начала действия страхования");   
	МассивСтрахованиеЗалога.Добавить("Дата окончания действия страхования по договору");
	МассивСтрахованиеЗалога.Добавить("Дата фактического прекращения страхования");
	МассивСтрахованиеЗалога.Добавить("Код причины прекращения независимой гарантии"); 
	//5.0
	МассивСтрахованиеЗалога.Добавить("Идентификационный код предмета залога");
	
	
	Сч = 1;
	Для каждого ЭлементСделка из МассивСтрахованиеЗалога Цикл 
		ШаблонНомераФ = "C35.";
		ШаблонНомераЮ = "B26.";
		
		Нстр = Объект.Сделка.Добавить(); 
		Нстр.Поле = ЭлементСделка;    
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Сч);
		НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомераЮ + строка(Сч); 
		Сч = Сч + 1;    
	КонецЦикла;	
	
	МассивЗакрытиеОбеспечением = Новый Массив;
	//Закрытие обеспечением
	МассивЗакрытиеОбеспечением.Добавить("Признак погашения требований за счет обеспечения");
	МассивЗакрытиеОбеспечением.Добавить("Код использованного обеспечения"); 
	МассивЗакрытиеОбеспечением.Добавить("Дата погашения требований за счет обеспечения");
	МассивЗакрытиеОбеспечением.Добавить("Сумма требований, погашенных за счет обеспечения");
	
	Сч = 1;
	Для каждого ЭлементСделка из МассивЗакрытиеОбеспечением Цикл 
		ШаблонНомераФ = "C36.";
		ШаблонНомераЮ = "B27.";
		
		Нстр = Объект.Сделка.Добавить(); 
		Нстр.Поле = ЭлементСделка;    
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Сч);
		НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомераЮ + строка(Сч); 
		Сч = Сч + 1;    
	КонецЦикла;	

	
	МассивВозмещенияПринципалом = Новый Массив;
	МассивВозмещенияПринципалом.Добавить("Признак обязанности возместить выплаченную сумму");
	МассивВозмещенияПринципалом.Добавить("Сумма, подлежащая возмещению");
	МассивВозмещенияПринципалом.Добавить("Сумма, выплаченная принципалом");
	МассивВозмещенияПринципалом.Добавить("Признак соблюдения порядка возмещения"); 
	МассивВозмещенияПринципалом.Добавить("Дата Расчета");
	
	Сч = 1;
	Для каждого ЭлементСделка из МассивВозмещенияПринципалом Цикл 
		ШаблонНомераФ = "C37.";
		ШаблонНомераЮ = "B28.";
		
		Нстр = Объект.Сделка.Добавить(); 
		Нстр.Поле = ЭлементСделка;    
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Сч);
		НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомераЮ + строка(Сч);
		Сч = Сч + 1;    
	КонецЦикла;	
	
	//Закрытие 
	МассивЗакрытие = Новый Массив;
	МассивЗакрытие.Добавить("Код основания прекращения обязательства");
	МассивЗакрытие.Добавить("Дата фактического прекращения обязательства");
	
	Сч = 1;
	Для каждого ЭлементСделка из МассивЗакрытие Цикл 
		ШаблонНомераФ = "C38.";
		ШаблонНомераЮ = "B29.";
		
		Нстр = Объект.Сделка.Добавить(); 
		Нстр.Поле = ЭлементСделка;    
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Сч);
		НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомераЮ + строка(Сч);
		Сч = Сч + 1;    
	КонецЦикла;	

	
	МассивСудебноеДело = Новый Массив;
	//Судебка
	МассивСудебноеДело.Добавить("Признак судебного спора или требования");
	МассивСудебноеДело.Добавить("Признак наличия судебного акта"); 
	МассивСудебноеДело.Добавить("Дата принятия судебного акта");
	МассивСудебноеДело.Добавить("Номер судебного акта");
	МассивСудебноеДело.Добавить("Резолютивная часть судебного акта");
	МассивСудебноеДело.Добавить("Признак вступления акта в законную силу");
	
	Сч = 1;
	Для каждого ЭлементСделка из МассивСудебноеДело Цикл 
		ШаблонНомераФ = "C39.";
		ШаблонНомераЮ = "B30.";
		
		Нстр = Объект.Сделка.Добавить(); 
		Нстр.Поле = ЭлементСделка;    
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Сч);
		НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомераЮ + строка(Сч); 
		Сч = Сч + 1;    
	КонецЦикла;	  
	
	МассивПрекращениеПередачи = Новый Массив;
	//Агент
	МассивПрекращениеПередачи.Добавить("Код причины прекращения передачи информации");
	МассивПрекращениеПередачи.Добавить("Дата прекращения передачи информации");
		
	Сч = 1;
	Для каждого ЭлементСделка из МассивПрекращениеПередачи Цикл 
		ШаблонНомераФ = "C45.";
		ШаблонНомераЮ = "B35.";
		
		Нстр = Объект.Сделка.Добавить(); 
		Нстр.Поле = ЭлементСделка;    
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Сч);
		НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомераЮ + строка(Сч); 
		Сч = Сч + 1;    
	КонецЦикла;	


	
	
	МассивУчетНаБалансе = Новый Массив;  
	МассивУчетНаБалансе.Добавить("Признак учета обязательства на балансе"); 
	//5.0
	МассивУчетНаБалансе.Добавить("Процентная ставка");  
	МассивУчетНаБалансе.Добавить("Сумма обязательства, учтенная на внебалансовых счетах");
	МассивУчетНаБалансе.Добавить("Признак льготного финансирования с государственной поддержкой");
	МассивУчетНаБалансе.Добавить("Информация о программе государственной поддержки");
	
	Сч = 1;
	Для каждого ЭлементСделка из МассивУчетНаБалансе Цикл 
		ШаблонНомераФ = "C54.";
		ШаблонНомераЮ = "B44.";
		
		Нстр = Объект.Сделка.Добавить(); 
		Нстр.Поле = ЭлементСделка;    
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Сч);
		НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомераЮ + строка(Сч);
		Сч = Сч + 1;    
	КонецЦикла;	  
	
	МассивПредложениеСделки = Новый Массив;
	//ВыдачаКредита
	МассивПредложениеСделки.Добавить("Код вида участия в сделке");
	МассивПредложениеСделки.Добавить("Сумма запрошенного займа (кредита), лизинга или обеспечения"); 
	МассивПредложениеСделки.Добавить("Запрошенная валюта обязательства");
	МассивПредложениеСделки.Добавить("УИд обращения");
	МассивПредложениеСделки.Добавить("Дата обращения");
	МассивПредложениеСделки.Добавить("Код источника");
	МассивПредложениеСделки.Добавить("Код способа обращения");
	МассивПредложениеСделки.Добавить("Дата окончания действия одобрения обращения (оферты кредитора)");
	//5.0
	МассивПредложениеСделки.Добавить("Дата окончания срока рассмотрения обращения");
	МассивПредложениеСделки.Добавить("Код цели запрошенного займа (кредита)"); 
	МассивПредложениеСделки.Добавить("Код стадии рассмотрения обращения");
	МассивПредложениеСделки.Добавить("Дата перехода обращения в текущую стадию рассмотрения");
	МассивПредложениеСделки.Добавить("Код вида обращения");
	МассивПредложениеСделки.Добавить("Номер обращения");

	
	Сч = 1;
	Для каждого ЭлементСделка из МассивПредложениеСделки Цикл 
		ШаблонНомераФ = "C55.";
		ШаблонНомераЮ = "B45.";
		
		Нстр = Объект.Сделка.Добавить(); 
		Нстр.Поле = ЭлементСделка;    
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Сч);
		НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомераЮ + строка(Сч);
		Сч = Сч + 1;    
	КонецЦикла;
	
	МассивСведенияОбязательства = Новый Массив;
	//ВыдачаКредита
	МассивСведенияОбязательства.Добавить("Код вида участия в сделке");
	МассивСведенияОбязательства.Добавить("Код вида займа или кредита"); 
	МассивСведенияОбязательства.Добавить("УИд сделки");
	МассивСведенияОбязательства.Добавить("Дата передачи финансирования субъекту или возникновения обеспечения исполнения обязательства");
	МассивСведенияОбязательства.Добавить("Признак просрочки должника более 90 дней");
	МассивСведенияОбязательства.Добавить("Признак прекращения обязательства");
	
	Сч = 1;
	Для каждого ЭлементСделка из МассивСведенияОбязательства Цикл 
		ШаблонНомераФ = "C56.";
		ШаблонНомераЮ = "B46."; 				
		Нстр = Объект.Сделка.Добавить(); 
		Нстр.Поле = ЭлементСделка;    
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Сч);
		НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомераЮ + строка(Сч);
		Сч = Сч + 1;    
	КонецЦикла;	  
	
	МассивОтказИсточникаОтСделки = Новый Массив;
	//ВыдачаКредита
	МассивОтказИсточникаОтСделки.Добавить("Дата отказа");
	МассивОтказИсточникаОтСделки.Добавить("Причина");
	
	Сч = 1;
	Для каждого ЭлементСделка из МассивОтказИсточникаОтСделки Цикл 
		ШаблонНомераФ = "C57.";
		ШаблонНомераЮ = "B47.";
		
		Нстр = Объект.Сделка.Добавить(); 
		Нстр.Поле = ЭлементСделка;    
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Сч);
		НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомераЮ + строка(Сч);
		Сч = Сч + 1;    
	КонецЦикла;	  	
	МассивПоказателейСделка = Новый Массив;	
	
	МассивПоказателейСделка.Добавить("Признак Банкротства");
	Для каждого ЭлементФЛ из МассивПоказателейСделка Цикл 
		Нстр = Объект.Сделка.Добавить();
		НСтр.НомерПоказателяНБКИФЛ = "C.";
		НСтр.НомерПоказателяНБКИЮЛ = "B.";
		Нстр.Поле = ЭлементФЛ;   
	КонецЦикла;	

КонецПроцедуры    

&НаСервере
Процедура ЗаполнитьПоляПродажа()   
	
	//ЮЛ 
	МассивПоказателейПродажаЮЛ = Новый Массив;
	МассивПоказателейПродажаЮЛ.Добавить("Код преобретателя прав");
	МассивПоказателейПродажаЮЛ.Добавить("Признак регистрации в Российской Федерации");
	МассивПоказателейПродажаЮЛ.Добавить("Полное наименование");
	МассивПоказателейПродажаЮЛ.Добавить("Сокращенное наименование");
	МассивПоказателейПродажаЮЛ.Добавить("Иное наименование");
	МассивПоказателейПродажаЮЛ.Добавить("Код номера налогоплательщика");
	МассивПоказателейПродажаЮЛ.Добавить("Номер налогоплательщика");
	МассивПоказателейПродажаЮЛ.Добавить("Идентификатор LEI");
	МассивПоказателейПродажаЮЛ.Добавить("Регистрационный номер"); 
	МассивПоказателейПродажаЮЛ.Добавить("Дата приобретения прав");
	
	Сч = 1;
	Для каждого ЭлементПреобретатель из МассивПоказателейПродажаЮЛ Цикл 
		ШаблонНомераФ = "C51.";
		ШаблонНомераЮ = "B41.";
		Нстр = Объект.ПриобретательПраваТребования.Добавить(); 
		Нстр.Поле = ЭлементПреобретатель;    
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Сч);
		НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомераЮ + строка(Сч);
		Сч = Сч + 1;    
	КонецЦикла;	


	
	//ФЛ
	МассивПоказателейПродажаФЛ = Новый Массив;    
	МассивПоказателейПродажаФЛ.Добавить("Дата рождения");
	МассивПоказателейПродажаФЛ.Добавить("Место рождения");  
	МассивПоказателейПродажаФЛ.Добавить("Тип номера налогоплательщика");
	МассивПоказателейПродажаФЛ.Добавить("Номер налогоплательщика");
	МассивПоказателейПродажаФЛ.Добавить("СНИЛС");
	МассивПоказателейПродажаФЛ.Добавить("Тип документа, удостоверяющего личность"); 
	МассивПоказателейПродажаФЛ.Добавить("Наименование иного документа, удостоверяющего личность");
	МассивПоказателейПродажаФЛ.Добавить("Серия документа, удостоверяющего личность");
	МассивПоказателейПродажаФЛ.Добавить("Номер документа, удостоверяющего личность");
	МассивПоказателейПродажаФЛ.Добавить("Дата выдачи документа, удостоверяющего личность");
	МассивПоказателейПродажаФЛ.Добавить("Кем выдан документ, удостоверяющий личность");
	МассивПоказателейПродажаФЛ.Добавить("Код подразделения выдачи документа, удостоверяющего личность");
	МассивПоказателейПродажаФЛ.Добавить("Дата приобретения прав");   	
	Сч = 4;
	Для каждого ЭлементПреобретатель из МассивПоказателейПродажаФЛ Цикл 
		ШаблонНомераФ = "C52.";
		ШаблонНомераЮ = "B42.";
		
		Нстр = Объект.ПриобретательПраваТребования.Добавить(); 
		Нстр.Поле = ЭлементПреобретатель;    
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Сч);
		НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомераЮ + строка(Сч); 
		НСтр.ЗаполнятьпоУмолчанию = "Нет";
		Сч = Сч + 1;    
	КонецЦикла;	


	МассивПоказателейАгент = Новый Массив;
	//Агент
	МассивПоказателейАгент.Добавить("Признак регистрации в Российской Федерации");
	МассивПоказателейАгент.Добавить("Полное наименование Агента");
	МассивПоказателейАгент.Добавить("Сокращенное наименование Агента");
	МассивПоказателейАгент.Добавить("Иное наименование агента"); 
	МассивПоказателейАгент.Добавить("Регистрационный номер Агента"); 
	МассивПоказателейАгент.Добавить("Код номера налогоплательщика Агента");
	МассивПоказателейАгент.Добавить("Номер налогоплательщика Агента");
	МассивПоказателейАгент.Добавить("Дата начала действия договора обслуживания");
	МассивПоказателейАгент.Добавить("Дата окончания действия договора обслуживания");
	МассивПоказателейАгент.Добавить("Наименование эмитента");
    МассивПоказателейАгент.Добавить("Регистрационный номер эмитента");
	
	Сч = 1;
	Для каждого ЭлементПреобретатель из МассивПоказателейАгент Цикл 
		ШаблонНомераФ = "C53.";
		ШаблонНомераЮ = "B43.";
		
		Нстр = Объект.ПриобретательПраваТребования.Добавить(); 
		Нстр.Поле = ЭлементПреобретатель;    
		НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Сч);
		НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомераЮ + строка(Сч); 
		Сч = Сч + 1;    
	КонецЦикла;
	
	
КонецПроцедуры   


&НаСервере
Процедура ПриОткрытииНаСервере()
	//Вставить содержимое обработчика
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПриОткрытииНаСервере();
КонецПроцедуры


&НаКлиенте
Процедура ОткрытьФормуВыбораРеквизитов(Элемент, ДанныеВыбора, СтандартнаяОбработка,ПараметрВыбранноеЗначение)
	СтандартнаяОбработка = Ложь;
	ВызывающийДокумент = Объект.НаПримереДокумента;
	ОтфильтрТипов = Неопределено;

	Если ВызывающийДокумент = Неопределено или Не ЗначениеЗаполнено(ВызывающийДокумент) Тогда
		Сообщить("Поле ""На примере документа"" должно быть заполнено!", СтатусСообщения.Внимание); 
		Возврат;	
	КонецЕсли; 
			
	Форма = ПолучитьФорму("Справочник.НастройкиВыгрузкиНБКИ_RUTDF.Форма.ФормаВыбораРеквизитов",ПараметрВыбранноеЗначение);
	Форма.ВладелецФормы = ЭтаФорма;
	Если ЗначениеЗаполнено(ОтФильтрТипов) Тогда	
		ЗаголовогПлюс = " по типу """ + Строка(ОтФильтрТипов) + """";	
	КонецЕсли; 
	форма.Заголовок = "Выбор реквизитов" + ЗаголовогПлюс;
	Форма.ЗакрыватьПриЗакрытииВладельца = Истина;
	Форма.Документ = ВызывающийДокумент;
	Форма.ОтФильтрТипов = ОтФильтрТипов;
	Форма.Элементы.ТабМетаданныеДерево.ПодчиненныеЭлементы.тзМетаданныеЗначение.Видимость = Истина;
	
	ОткрытьФорму(Форма);
КонецПроцедуры  

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "НастройкиНБКИВыборРеквизитаRUTDF" Тогда
		ЭлТаблица = ЭтаФорма.ТекущийЭлемент;
		РеквизитыИСвойстваЗначениеЗаполнение(Параметр,ЭлТаблица);	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура РеквизитыИСвойстваЗначениеЗаполнение(СтруктураПараметров,Таблица) 
	
	ТекущиеДанные = Таблица.ТекущиеДанные;
	ИмяТаблицы = Таблица.Имя;
	Если Не СтруктураПараметров = Неопределено Тогда	
		ТекущиеДанные.Значение 	= СтруктураПараметров.Синоним;
		МассивДанных = СтруктураПараметров.МассивДанных; 	
		
		ТекущиеДанные.КодДопСвойства = СтруктураПараметров.КодДопСвойства;
		ТекущиеДанные.ОбъектДопСвойства = СтруктураПараметров.ОбъектДопСвойства;
		
		Список = Новый СписокЗначений;
		Для Каждого Стр Из МассивДанных Цикл
			Список.Добавить(Стр);
		КонецЦикла;
		ТекущиеДанные.Хранилище1 = Список;
		ЗаписатьДанныеВСтрокуХранилище(ТекущиеДанные.НомерСтроки, МассивДанных, ИмяТаблицы);	
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаписатьДанныеВСтрокуХранилище(НомерСтроки, МассивДанных, ИмяТаблицы)
	
	Рекв = РеквизитФормыВЗначение("Объект");
	Рекв.Записать_СтрокаХранилище(НомерСтроки, МассивДанных,ИмяТаблицы);
	ЗначениеВРеквизитФормы(Рекв, "Объект");
	
КонецПроцедуры

&НаКлиенте
Процедура СделкаЗначениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ПараметрВыбранноеЗначение = Новый Структура("ВыбранноеЗначение", Этаформа.Элементы.Сделка.ТекущиеДанные.Значение);
	ОткрытьФормуВыбораРеквизитов(Элемент, ДанныеВыбора, СтандартнаяОбработка,ПараметрВыбранноеЗначение);
КонецПроцедуры

&НаКлиенте
Процедура СубъектФизическоеЛицоЗначениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ПараметрВыбранноеЗначение = Новый Структура("ВыбранноеЗначение", Этаформа.Элементы.СубъектФизическоеЛицо.ТекущиеДанные.Значение);
	ОткрытьФормуВыбораРеквизитов(Элемент, ДанныеВыбора, СтандартнаяОбработка,ПараметрВыбранноеЗначение);
КонецПроцедуры

&НаКлиенте
Процедура СубъектЮридическоеЛицоЗначениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ПараметрВыбранноеЗначение = Новый Структура("ВыбранноеЗначение", Этаформа.Элементы.СубъектЮридическоеЛицо.ТекущиеДанные.Значение);
	ОткрытьФормуВыбораРеквизитов(Элемент, ДанныеВыбора, СтандартнаяОбработка,ПараметрВыбранноеЗначение);
КонецПроцедуры

&НаКлиенте
Процедура ПриобретательПраваТребованияЗначениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ПараметрВыбранноеЗначение = Новый Структура("ВыбранноеЗначение", Этаформа.Элементы.ПриобретательПраваТребования.ТекущиеДанные.Значение);
	ОткрытьФормуВыбораРеквизитов(Элемент, ДанныеВыбора, СтандартнаяОбработка,ПараметрВыбранноеЗначение);
КонецПроцедуры 

&НаКлиенте
Процедура ДействующиеДоговорыПриИзменении(Элемент)
	Значение = НЕ Объект.ДействующиеДоговоры;  
	СкрытьСтроки("C55.", "Сделка", Значение);	
	УстановитьОформление();
КонецПроцедуры

&НаКлиенте
Процедура ПоУмолчаниюДОПриИзменении(Элемент) 
	Значение = Объект.ПоУмолчаниюДО;  
	СкрытьСтроки("C17.2", "Сделка", Значение);
	СкрытьСтроки("B11.1", "Сделка", Значение);
	СкрытьСтроки("C18.3", "Сделка", Значение);
	СкрытьСтроки("C18.4", "Сделка", Значение);
	СкрытьСтроки("C19.2", "Сделка", Значение);
	СкрытьСтроки("C20.", "Сделка", Значение);
	СкрытьСтроки("C38.", "Сделка", Значение);
	СкрытьСтроки("C45.", "Сделка", Значение);
	СкрытьСтроки("C54.1", "Сделка", Значение); 
	СкрытьСтроки("C56.1", "Сделка", Значение); 
	СкрытьСтроки("C56.2", "Сделка", Значение);
	СкрытьСтроки("C56.6", "Сделка", Значение);
	СкрытьСтроки("C10.1", "ФЛ", Значение); 
	СкрытьСтроки("C10.2" ,"ФЛ", Значение);

   	УстановитьОформление();
КонецПроцедуры

&НаКлиенте
Процедура ПоУмолчаниюРасчетныйБлокПриИзменении(Элемент)
	Значение = Объект.ПоУмолчаниюРасчетныйБлок;
	СкрытьСтроки("C18.2","Сделка",Значение);
	СкрытьСтроки("C18.3","Сделка",Значение);
	СкрытьСтроки("C18.4","Сделка",Значение);
	СкрытьСтроки("C18.8","Сделка",Значение);
	СкрытьСтроки("C18.11","Сделка",Значение); 
	СкрытьСтроки("C18.12","Сделка",Значение); 
	СкрытьСтроки("C18.13","Сделка",Значение);
	СкрытьСтроки("C18.14","Сделка",Значение);
	СкрытьСтроки("C18.15","Сделка",Значение); 
	СкрытьСтроки("C18.16","Сделка",Значение);
	СкрытьСтроки("C18.18","Сделка",Значение); 
	СкрытьСтроки("C18.19","Сделка",Значение);
	СкрытьСтроки("C19.2","Сделка",Значение);
	СкрытьСтроки("C21.","Сделка",Значение);
    СкрытьСтроки("C22.","Сделка",Значение);
	СкрытьСтроки("C23.","Сделка",Значение);
    СкрытьСтроки("C24.","Сделка",Значение); 
	СкрытьСтроки("C55.","Сделка",Значение);
	СкрытьСтроки("C56.2","Сделка",Значение);
	СкрытьСтроки("C56.4","Сделка",Значение); 
	СкрытьСтроки("C56.5","Сделка",Значение);
	УстановитьОформление();
КонецПроцедуры

&НаКлиенте
Процедура ПоУмолчаниюСудебныйБлокПриИзменении(Элемент) 
	Значение = Объект.ПоУмолчаниюСудебныйБлок;
	СкрытьСтроки("C39.","Сделка",Значение); 
	СкрытьСтроки("C20.","Сделка",Значение);
	УстановитьОформление();
КонецПроцедуры

&НаКлиенте
Процедура ПоУмолчаниюСоглашенияПриИзменении(Элемент) 
	Значение = Объект.ПоУмолчаниюСоглашения;
	СкрытьСтроки("C23.","Сделка",Значение);
	УстановитьОформление();
КонецПроцедуры

&НаКлиенте
Процедура ПоУмолчаниюОбеспечениеПриИзменении(Элемент)  
	Значение = Объект.ПоУмолчаниюОбеспечение;
	СкрытьСтроки("C32.","Сделка",Значение); 
	СкрытьСтроки("C33.","Сделка",Значение);
	СкрытьСтроки("C34.","Сделка",Значение);
    СкрытьСтроки("C35.","Сделка",Значение);
	СкрытьСтроки("C36.","Сделка",Значение);
    СкрытьСтроки("C37.","Сделка",Значение);
	СкрытьСтроки("C19.3","Сделка",Значение);
	СкрытьСтроки("C19.4","Сделка",Значение);
	СкрытьСтроки("C19.5","Сделка",Значение); 
	СкрытьСтроки("C19.6","Сделка",Значение);
	СкрытьСтроки("C24.","Сделка",Значение);
	УстановитьОформление();
КонецПроцедуры

&НаКлиенте
Процедура ПоУмолчаниюДееспособностьПриИзменении(Элемент)
	Значение = Объект.ПоУмолчаниюДееспособность;
	СкрытьСтроки("C12.","ФЛ", Значение);  
	УстановитьОформление();
КонецПроцедуры

&НаКлиенте
Процедура СтроковыеАдресаПриИзменении(Элемент) 
	Значение = НЕ Объект.СтроковыеАдреса;
	СкрытьСтроки("C8.", "ФЛ", Значение);
	СкрытьСтроки("C9.", "ФЛ", Значение);
	СкрытьСтроки("B2.", "ЮЛ", Значение);
	УстановитьОформление();
КонецПроцедуры 


&НаКлиенте
Процедура ПоУмолчаниюБанкротствоПриИзменении(Элемент)
	Значение = Объект.ПоУмолчаниюБанкротство;
	СкрытьСтроки("C.","Сделка",Значение);
	УстановитьОформление();
КонецПроцедуры 

&НаКлиенте
Процедура ПоУмолчаниюПродажаПриИзменении(Элемент)
	Значение = Объект.ПоУмолчаниюПродажа;
	СкрытьСтроки("C45.","Сделка",Значение);
	СкрытьСтроки("C51.10","ПриобретательПраваТребования",Значение);
	СкрытьСтроки("C52.16","ПриобретательПраваТребования",Значение);  
	СкрытьСтроки("C18.17", "Сделка", Значение);
	СкрытьСтроки("C53.8","ПриобретательПраваТребования",Значение);
	СкрытьСтроки("C53.9","ПриобретательПраваТребования",Значение);
	СкрытьСтроки("C53.10","ПриобретательПраваТребования",Значение);
    СкрытьСтроки("C53.11","ПриобретательПраваТребования",Значение);
	УстановитьОформление();
КонецПроцедуры 

&НаКлиенте
Процедура ПоУмолчаниюНеденежноеОбязательствоПриИзменении(Элемент)
	Значение = Объект.ПоУмолчаниюНеденежноеОбязательство;
	СкрытьСтроки("C30.","Сделка",Значение);
	СкрытьСтроки("C31","Сделка",Значение);
	УстановитьОформление();
КонецПроцедуры



&НаСервере
Процедура СкрытьСтроки(Блок, Субъект, Значение)  
	Если Субъект = "Сделка" Тогда
		Для каждого стр из Объект.Сделка Цикл
			Если СтрНайти(стр.НомерПоказателяНБКИФЛ, Блок) > 0 Тогда
				Стр.ЗаполнятьПоУмолчанию = Значение;
			КонецЕсли;
			Если СтрНайти(стр.НомерПоказателяНБКИЮЛ, Блок) > 0 Тогда
				Стр.ЗаполнятьПоУмолчанию = Значение;
			КонецЕсли;
		КонецЦикла;	  
	КонецЕсли;
	Если Субъект = "ФЛ" Тогда
		Для каждого стр из Объект.СубъектФизическоеЛицо Цикл
			Если СтрНайти(стр.НомерПоказателяНБКИФЛ, Блок) > 0 Тогда
				Стр.ЗаполнятьПоУмолчанию = Значение;
				
				Если стр.НомерПоказателяНБКИФЛ = "C8." ИЛИ стр.НомерПоказателяНБКИФЛ = "C9." Тогда
					Стр.ЗаполнятьПоУмолчанию = НЕ Значение;
				КонецЕсли; 
				
				Если стр.НомерПоказателяНБКИФЛ = "C8.1" ИЛИ стр.НомерПоказателяНБКИФЛ = "C9.1" Тогда
					Стр.ЗаполнятьПоУмолчанию = Ложь;
				КонецЕсли; 
				Если стр.НомерПоказателяНБКИФЛ = "C8.14" Тогда
					Стр.ЗаполнятьПоУмолчанию = Ложь;
				КонецЕсли;  
                Если стр.НомерПоказателяНБКИФЛ = "C8.15" Тогда
					Стр.ЗаполнятьПоУмолчанию = Ложь;
				КонецЕсли; 
				Если стр.НомерПоказателяНБКИФЛ = "C8.16" Тогда
					Стр.ЗаполнятьПоУмолчанию = Ложь;
				КонецЕсли; 

			КонецЕсли;
			
		КонецЦикла;	
	КонецЕсли; 
	Если Субъект = "ЮЛ" Тогда
		Для каждого стр из Объект.СубъектЮридическоеЛицо Цикл
			Если СтрНайти(стр.НомерПоказателяНБКИЮЛ, Блок) > 0 Тогда
				Стр.ЗаполнятьПоУмолчанию = Значение;
				
				Если стр.НомерПоказателяНБКИЮЛ = "B2." Тогда
					Стр.ЗаполнятьПоУмолчанию = НЕ Значение;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;	
	КонецЕсли; 
	
	Если Субъект = "ПриобретательПраваТребования" Тогда
		Для каждого стр из Объект.ПриобретательПраваТребования Цикл
			Если СтрНайти(стр.НомерПоказателяНБКИФЛ, Блок) > 0 Тогда
				Стр.ЗаполнятьПоУмолчанию = Значение;
			КонецЕсли;	
		КонецЦикла;	
	КонецЕсли;


КонецПроцедуры	


&НаСервере
Процедура УстановитьОформление()
	УсловноеОформление.Элементы.Очистить();
	
	МассивИменТаблиц = новый Массив;
	МассивИменТаблиц.Добавить("Сделка");
	МассивИменТаблиц.Добавить("СубъектЮридическоеЛицо");
	МассивИменТаблиц.Добавить("СубъектФизическоеЛицо");
	МассивИменТаблиц.Добавить("ПриобретательПраваТребования");
	МассивИменТаблиц.Добавить("СубъектПоручитель");
	МассивИменТаблиц.Добавить("СубъектНаследник");
	
	Для Каждого Т из МассивИменТаблиц Цикл
		ЭлементОформления = УсловноеОформление.Элементы.Добавить();
		
		// Создаем условие отбора
		ЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект."+Т+".ЗаполнятьПоУмолчанию"); // имя поля
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно; // либо задаем свой
		//**** Значение для отбора
		ЭлементОтбора.ПравоеЗначение = Ложь;
		ЭлементОтбора.Использование = Истина;
		
		//2.
		ЭлементОформления.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.СветлоКоралловый);
		
		ЭлементОформления.Использование = Истина;
		
		ПолеОформления = ЭлементОформления.Поля.Элементы.Добавить();
		ПолеОформления.Поле = Новый ПолеКомпоновкиДанных(Т);
		ПолеОформления.Использование = Истина;
		
		ЭлементОформления = УсловноеОформление.Элементы.Добавить();
		
		// Создаем условие отбора
		ЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект."+Т+".ЗаполнятьПоУмолчанию"); // имя поля
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно; // либо задаем свой
		//**** Значение для отбора
		ЭлементОтбора.ПравоеЗначение = Истина;
		ЭлементОтбора.Использование = Истина;
		
		//2.
		ЭлементОформления.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.ЦветМорскойВолныТемный);
		
		ЭлементОформления.Использование = Истина;
		
		ПолеОформления = ЭлементОформления.Поля.Элементы.Добавить();
		ПолеОформления.Поле = Новый ПолеКомпоновкиДанных(Т);
		ПолеОформления.Использование = Истина;
		
		ЭлементОформления = УсловноеОформление.Элементы.Добавить();
	КонецЦикла;	    
	
	
	Элементы.ГруппаПравопреемство.Видимость = (Объект.ВерсияRUTDF = Перечисления.ВерсияRUTDF.v5);
	Элементы.ПризнакЦессии.Доступность = Объект.ПисатьСобытиеПравопреемства;
КонецПроцедуры


&НаКлиенте
Процедура ПервичноеЗаполнение(Команда)	
	ТекстУведомления = "";
	
	ДатаСтарта = ПолучитьДатуСтартаПередачи(ТекстУведомления);
	Если НЕ ЗначениеЗаполнено(ДатаСтарта) Тогда 
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = ТекстУведомления;
		Сообщение.Поле = "ДатаПервичногоЗаполенения";
		Сообщение.УстановитьДанные(ЭтотОбъект);
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;	
	//ИДЗадания = "";
	ПараметрыЗапуска = Новый Структура;
	ПараметрыЗапуска.Вставить("ИсточникСобытия", Объект.Ссылка);
	ПараметрыЗапуска.Вставить("ДатаСобытия", ДатаСтарта);
	//ПервичноеЗаполнениеСерв(ПараметрыЗапуска); 
	
	СтруктураФоновогоЗадания  = ВыполнитьФоновоеЗаданиеПервичноеЗаполнениеНаСервере(ПараметрыЗапуска, УникальныйИдентификатор);
	ИДЗадания = СтруктураФоновогоЗадания.ИдентификаторЗадания;
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);     
	
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Истина;
	ПараметрыОжидания.Интервал 	= 2;	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(СтруктураФоновогоЗадания, Новый ОписаниеОповещения("ОбработатьДанные", ЭтотОбъект), ПараметрыОжидания); 
	
	
КонецПроцедуры    

&НаКлиенте
Процедура ОбработатьДанные(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	ИначеЕсли Результат.Статус = "Ошибка" Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Результат.ПодробноеПредставлениеОшибки);
	ИначеЕсли Результат.Статус = "Выполнено" Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Выполнено!";
		Сообщение.Сообщить();
	Иначе
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Статус задачи неопределен!";
		Сообщение.Сообщить();
	КонецЕсли;
	
КонецПроцедуры     

&НаСервере
Функция ВыполнитьФоновоеЗаданиеПервичноеЗаполнениеНаСервере(ПараметрыЗапуска, УникальныйИдентификатор)
	
	НаименованиеЗадания = "Первичное Заполнение РС НБКИ RUTDF";

	ВыполняемыйМетод = "КредитныеИстории.ЗаполнитьПервичныеПараметрыДоговоровИСубъектов";
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НаименованиеЗадания;
	ПараметрыВыполнения.ЗапуститьВФоне 	= Истина;
	ПараметрыВыполнения.Вставить("ИдентификаторФормы", УникальныйИдентификатор); 
	
	СтруктураФоновогоЗадания = ДлительныеОперации.ВыполнитьВФоне(ВыполняемыйМетод, ПараметрыЗапуска, ПараметрыВыполнения);
	
	Возврат СтруктураФоновогоЗадания;
	
КонецФункции


&НаКлиенте
Процедура КаталогДляВыгрузкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ТекФайл = Новый Файл (Элемент.ВыделенныйТекст);
	ТекКаталог = ТекФайл.Путь;      
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	Диалог.Заголовок = "Выберите каталог хранения файлов выгрузки НБКИ.";
	Диалог.ПредварительныйПросмотр = Ложь;
	Диалог.Каталог = ТекКаталог;
	Диалог.МножественныйВыбор = Ложь;
	
	Диалог.Показать(Новый ОписаниеОповещения("КаталогДляВыгрузкиНачалоВыбораЗавершение", ЭтаФорма, Новый Структура("Диалог", Диалог)));
	

КонецПроцедуры     

&НаКлиенте
Процедура КаталогДляВыгрузкиНачалоВыбораЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Диалог = ДополнительныеПараметры.Диалог;	
	Если (ВыбранныеФайлы <> Неопределено) Тогда
		Объект.КаталогДляВыгрузки = Диалог.Каталог; 	
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КаталогДляВыгрузкиОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;        
	ЗапуститьПриложение(Объект.КаталогДляВыгрузки);
КонецПроцедуры

&НаСервере
Функция ЗаписатьСобытие2_10НаСервере(ПараметрыЗапуска, УникальныйИдентификатор)
	НаименованиеЗадания = "2_10 НБКИ RUTDF";
	
	ВыполняемыйМетод = "КредитныеИстории.ЗаписатьСобитиеИсточникПрекратилПередачу";
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НаименованиеЗадания;
	ПараметрыВыполнения.ЗапуститьВФоне 	= Истина;
	ПараметрыВыполнения.Вставить("ИдентификаторФормы", УникальныйИдентификатор); 
	
	СтруктураФоновогоЗадания = ДлительныеОперации.ВыполнитьВФоне(ВыполняемыйМетод, ПараметрыЗапуска, ПараметрыВыполнения);
	
	Возврат СтруктураФоновогоЗадания;
	
	
КонецФункции

&НаКлиенте
Процедура ЗаписатьСобытие2_10(Команда) 
	ИДЗадания = "";
		
	ПараметрыЗапуска = Новый Структура;
	ПараметрыЗапуска.Вставить("ИсточникСобытия", Объект.Ссылка);
	ПараметрыЗапуска.Вставить("ДатаСобытия", ОбщегоНазначенияКлиент.ДатаСеанса());	
	
	СтруктураФоновогоЗадания  = ЗаписатьСобытие2_10НаСервере(ПараметрыЗапуска, УникальныйИдентификатор);
	ИДЗадания = СтруктураФоновогоЗадания.ИдентификаторЗадания;
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);     
	
    ПараметрыОжидания.ВыводитьПрогрессВыполнения = Истина;
	ПараметрыОжидания.Интервал 	= 2;	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(СтруктураФоновогоЗадания, Новый ОписаниеОповещения("ОбработатьДанные", ЭтотОбъект), ПараметрыОжидания);


	
КонецПроцедуры 

&НаСервере
Функция ПолучитьДатуСтартаПередачи(стрСообщение)
	Если Не ЗначениеЗаполнено(Объект.ДатаПервичногоЗаполнения) и Не ЗначениеЗаполнено(Объект.РеквизитДатаПервичногоЗаполнения) Тогда
		стрСообщение = "Задайте дату старта передачи в НБКИ общую для всех объектов учета или укажите реквизит даты старта!";
		ДатаСтарта = Неопределено;
	Иначе
		Если ЗначениеЗаполнено(Объект.ДатаПервичногоЗаполнения)  Тогда
			ДатаСтарта = Объект.ДатаПервичногоЗаполнения; 
		КонецЕсли;	
		Если ЗначениеЗаполнено(Объект.РеквизитДатаПервичногоЗаполнения)  Тогда
			ДатаСтарта = Дата("19950126"); 
		КонецЕсли;
	КонецЕсли;	
	Возврат ДатаСтарта;
КонецФункции 


&НаСервере
Процедура ПервичноеЗаполнениеСерв(ПараметрыЗапуска)  
   	// ДЛЯ Отладки, явный вызов
	КредитныеИстории.ЗаполнитьПервичныеПараметрыДоговоровИСубъектов(ПараметрыЗапуска, Неопределено);
	   	
КонецПроцедуры 

&НаКлиенте
Процедура ПоУмолчаниюПоручительПриИзменении(Элемент)
	ПоУмолчаниюПоручительПриИзмененииСервер();
КонецПроцедуры 

&НаСервере
Процедура ПоУмолчаниюПоручительПриИзмененииСервер()	
	Объект.СубъектПоручитель.Очистить();
	Если Объект.ПоУмолчаниюПоручитель Тогда
		Объект.СубъектПоручитель.Загрузить(Объект.СубъектФизическоеЛицо.Выгрузить());
	Иначе
		ЗаполнитьПоляФЛ("СубъектПоручитель");
	КонецЕсли; 
	
	УстановитьОформление();
КонецПроцедуры

&НаСервере
Процедура ПоУмолчаниюНаследникПриИзмененииНаСервере()
	Объект.СубъектНаследник.Очистить();
	Если Объект.ПоУмолчаниюНаследник Тогда
		Объект.СубъектНаследник.Загрузить(Объект.СубъектФизическоеЛицо.Выгрузить());
	Иначе
		ЗаполнитьПоляФЛ("СубъектНаследник");
	КонецЕсли; 
	
	УстановитьОформление();

КонецПроцедуры

&НаКлиенте
Процедура ПоУмолчаниюНаследникПриИзменении(Элемент)
	ПоУмолчаниюНаследникПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПарольПользователяНБКИПриИзменении(Элемент)
	ПарольИзменен = Истина;
КонецПроцедуры

&НаСервере
Процедура ДобавитьИзмененияВерсии(Версия)
	Если Версия = Перечисления.ВерсияRUTDF.v5 Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Внимание! При переходе на 5  версию, " + 
		"обратите внимание, что в связи с Указанием Банка России 6300-У прекращен приём кодов 1-6 в поле код ВИДА займа (С 18.4 - В 11.4) начиная с версии 5.0 RUTDF, " +
		"а также кодов 3 и 4 в поле код ТИПА займа (С 18.3 - В 11.3). Проверьте свои настройки и внесите нужные изменения, иначе неиспользуемые значения в отчете версии 5.0 заменятся по умолчанию.";
		Сообщение.Сообщить();
		
		Для Каждого ТЧНастройка из Метаданные.Справочники.НастройкиВыгрузкиНБКИ_RUTDF.ТабличныеЧасти Цикл
			ДобавитьИзменения5(ТЧНастройка.Имя); 
		КонецЦикла; 
		КредитныеИстории.ЗаполнитьПервичныеСправочникиНБКИ();
	КонецЕсли;   
КонецПроцедуры 

&НаСервере
Процедура ДобавитьИзменения5(ИмяТаблицы)
	Если ИмяТаблицы = "СубъектФизическоеЛицо" ИЛИ ИмяТаблицы = "СубъектПоручитель" ИЛИ ИмяТаблицы = "СубъектНаследник" Тогда
		МассивНалогоплательщик = Новый Массив;
		МассивНалогоплательщик.Добавить("Признак специального налогового режима"); 
		
		Сч = 4;
		Для каждого ЭлементФЛ из МассивНалогоплательщик Цикл  
			ШаблонНомера = "C6.";
			Нстр = Объект[ИмяТаблицы].Добавить(); 
			Нстр.Поле = ЭлементФЛ; 
			НСтр.НомерПоказателяНБКИФЛ = ШаблонНомера + строка(Сч);  
			
			Сч = Сч + 1;
		КонецЦикла;
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Новые поля версии 5.0 добавлены в конец таблицы " + ИмяТаблицы + "!";
		Сообщение.Сообщить();
		
	КонецЕсли;
	
	Если ИмяТаблицы = "СубъектЮридическоеЛицо" ИЛИ  ИмяТаблицы = "ПриобретательПраваТребования" Тогда 
		Возврат;
	КонецЕсли; 
	
	Если ИмяТаблицы = "Сделка" Тогда
		
		
		МассивУИД = Новый Массив;  
		//5.0
		МассивУИД.Добавить("НомерСделки");
		
		Сч = 2;
		Для каждого ЭлементСделка из МассивУИД Цикл 
			ШаблонНомераФ = "C17.";
			ШаблонНомераЮ = "B10.";
			
			Нстр = Объект.Сделка.Добавить(); 
			Нстр.Поле = ЭлементСделка;    
			НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Сч);
			НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомераЮ + строка(Сч); 
			Сч = Сч + 1;
		КонецЦикла;	
		
		МассивОбщиеСведения = Новый Массив; 
		//Параметры
		//5.0
		МассивОбщиеСведения.Добавить("Код вида кредитора – заимодавца");
		МассивОбщиеСведения.Добавить("Признак возникновения обязательства в результате получения части прав кредитора от другого лица");
		МассивОбщиеСведения.Добавить("Признак кредитной линии");
		МассивОбщиеСведения.Добавить("Код типа кредитной линии");
		МассивОбщиеСведения.Добавить("Признак плавающей (переменной) процентной ставки");
		МассивОбщиеСведения.Добавить("Признак частичной передачи прав кредитора другому лицу");
		МассивОбщиеСведения.Добавить("УИд сделки, по которой права кредитора частично переданы другому лицу");
		МассивОбщиеСведения.Добавить("Дата возникновения обязательства субъекта");
		
		Сч = 12;
		Для каждого ЭлементСделка из МассивОбщиеСведения Цикл 
			ШаблонНомераФ = "C18.";
			ШаблонНомераЮ = "B11.";
			
			Нстр = Объект.Сделка.Добавить(); 
			Нстр.Поле = ЭлементСделка;    
			НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Сч);
			НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомераЮ + строка(Сч); 
			
			Сч = Сч + 1;
		КонецЦикла;	
		
		МассивОбязательство = Новый Массив;
		// 5.0
		МассивОбязательство.Добавить("Валюта обеспечиваемого обязательства");
		МассивОбязательство.Добавить("Дата расчета");
		МассивОбязательство.Добавить("УИд сделки, в результате которой возникло обеспечиваемое обязательство");
		
		
		Сч = 5;
		Для каждого ЭлементСделка из МассивОбязательство Цикл 
			ШаблонНомераФ = "C19.";
			ШаблонНомераЮ = "B12.";
			
			Нстр = Объект.Сделка.Добавить(); 
			Нстр.Поле = ЭлементСделка;    
			НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Сч);
			НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомераЮ + строка(Сч);  		
			Сч = Сч + 1;
		КонецЦикла;	
		
		
				
		МассивПередачаФинансирования = Новый Массив;
		//5.0
		МассивПередачаФинансирования.Добавить("Порядковый номер транша");
		
		Сч = 2;
		Для каждого ЭлементСделка из МассивПередачаФинансирования Цикл 
			ШаблонНомераФ = "C24.";
			ШаблонНомераЮ = "B16.";
			
			Нстр = Объект.Сделка.Добавить(); 
			Нстр.Поле = ЭлементСделка;    
			НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Сч);
			НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомераЮ + строка(Сч); 
			Сч = Сч + 1;    
		КонецЦикла;	
		
			
		//Неденежное обязательство
		//5.0 
		МассивНеденежноеОбязательствоИсточник = Новый Массив;
		МассивНеденежноеОбязательствоИсточник.Добавить("Идентификационный код предоставляемого имущества");
		
		Сч = 5;
		Для каждого ЭлементСделка из МассивНеденежноеОбязательствоИсточник Цикл 
			ШаблонНомераФ = "C30.";
			ШаблонНомераЮ = "B21.";
			
			Нстр = Объект.Сделка.Добавить(); 
			Нстр.Поле = ЭлементСделка;    
			НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Сч);
			НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомераЮ + строка(Сч); 
			Сч = Сч + 1;    
		КонецЦикла;	
		
		МассивНеденежноеОбязательствоСубъект = Новый Массив;
		//5.0
		МассивНеденежноеОбязательствоСубъект.Добавить("Код полученного имущества");
		Сч = 5;
		Для каждого ЭлементСделка из МассивНеденежноеОбязательствоСубъект Цикл 
			ШаблонНомераФ = "C31.";
			ШаблонНомераЮ = "B22.";
			
			Нстр = Объект.Сделка.Добавить(); 
			Нстр.Поле = ЭлементСделка;    
			НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Сч);
			НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомераЮ + строка(Сч);
			Сч = Сч + 1;    
		КонецЦикла;	
		
		МассивЗалог  = Новый Массив;
		
		//5.0
		МассивЗалог.Добавить("Вид стоимости предмета залога");
		МассивЗалог.Добавить("Сумма обязательств по всем договорам, исполнение которых обеспечено предметом залога");
		МассивЗалог.Добавить("Количество договоров, исполнение обязательств по которым обеспечено предметом залога");
		
		Сч = 12;
		Для каждого ЭлементСделка из МассивЗалог Цикл 
			ШаблонНомераФ = "C32.";
			ШаблонНомераЮ = "B23.";
			
			Нстр = Объект.Сделка.Добавить(); 
			Нстр.Поле = ЭлементСделка;    
			НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Сч);
			НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомераЮ + строка(Сч); 
			Сч = Сч + 1;    
		КонецЦикла;	
		
				
		МассивСтрахованиеЗалога  = Новый Массив;
		//Страхование
		//5.0
		МассивСтрахованиеЗалога.Добавить("Идентификационный код предмета залога");
		
		
		Сч = 9;
		Для каждого ЭлементСделка из МассивСтрахованиеЗалога Цикл 
			ШаблонНомераФ = "C35.";
			ШаблонНомераЮ = "B26.";
			
			Нстр = Объект.Сделка.Добавить(); 
			Нстр.Поле = ЭлементСделка;    
			НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Сч);
			НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомераЮ + строка(Сч); 
			Сч = Сч + 1;    
		КонецЦикла;	
		
				
		МассивУчетНаБалансе = Новый Массив;  
		//5.0
		МассивУчетНаБалансе.Добавить("Процентная ставка");  
		МассивУчетНаБалансе.Добавить("Сумма обязательства, учтенная на внебалансовых счетах");
		МассивУчетНаБалансе.Добавить("Признак льготного финансирования с государственной поддержкой");
		МассивУчетНаБалансе.Добавить("Информация о программе государственной поддержки");
		
		Сч = 2;
		Для каждого ЭлементСделка из МассивУчетНаБалансе Цикл 
			ШаблонНомераФ = "C54.";
			ШаблонНомераЮ = "B44.";
			
			Нстр = Объект.Сделка.Добавить(); 
			Нстр.Поле = ЭлементСделка;    
			НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Сч);
			НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомераЮ + строка(Сч);
			Сч = Сч + 1;    
		КонецЦикла;	  
		
		МассивПредложениеСделки = Новый Массив;
		//5.0
		МассивПредложениеСделки.Добавить("Дата окончания срока рассмотрения обращения");
		МассивПредложениеСделки.Добавить("Код цели запрошенного займа (кредита)"); 
		МассивПредложениеСделки.Добавить("Код стадии рассмотрения обращения");
		МассивПредложениеСделки.Добавить("Дата перехода обращения в текущую стадию рассмотрения");
		МассивПредложениеСделки.Добавить("Код вида обращения");
		МассивПредложениеСделки.Добавить("Номер обращения");
		
		
		Сч = 9;
		Для каждого ЭлементСделка из МассивПредложениеСделки Цикл 
			ШаблонНомераФ = "C55.";
			ШаблонНомераЮ = "B45.";
			
			Нстр = Объект.Сделка.Добавить(); 
			Нстр.Поле = ЭлементСделка;    
			НСтр.НомерПоказателяНБКИФЛ = ШаблонНомераФ + строка(Сч);
			НСтр.НомерПоказателяНБКИЮЛ = ШаблонНомераЮ + строка(Сч);
			Сч = Сч + 1;    
		КонецЦикла;
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Новые поля версии 5.0 добавлены в конец таблицы Сделка!";
		Сообщение.Сообщить();

		
	КонецЕсли;     
	
			
КонецПроцедуры 

&НаСервере
Процедура ВерсияRUTDFПриИзмененииНаСервере()
	 ДобавитьИзмененияВерсии(Объект.ВерсияRUTDF);
КонецПроцедуры

&НаКлиенте
Процедура ВерсияRUTDFПриИзменении(Элемент)
	ВерсияRUTDFПриИзмененииНаСервере();
	УстановитьОформление();  
КонецПроцедуры

&НаКлиенте
Процедура ПисатьСобытиеПравопреемстваПриИзменении(Элемент)
	УстановитьОформление();
КонецПроцедуры

&НаСервере
Процедура ПоЛьготноеФинансированиеСГосПоддержкойПриИзмененииНаСервере()
	Значение = Объект.ЛьготноеФинансированиеСГосПоддержкой;
	СкрытьСтроки("C54.4","Сделка" , Значение);
	СкрытьСтроки("C54.5", "Сделка" , Значение);
	УстановитьОформление();

КонецПроцедуры

&НаКлиенте
Процедура ПоЛьготноеФинансированиеСГосПоддержкойПриИзменении(Элемент)
	ПоЛьготноеФинансированиеСГосПоддержкойПриИзмененииНаСервере();
КонецПроцедуры


&НаКлиенте
Процедура ДобавитьИзмененияВерсииВКИ(Команда)
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = "Сначала произведите настройки новой версии и сохраните Настройку!";
		Сообщение.Сообщить();      
		Возврат;
	КонецЕсли;	
	
	
	ПараметрыЗапуска = Новый Структура;
	ПараметрыЗапуска.Вставить("Настройка", Объект.Ссылка);
	//КредитныеИсторииИзменения.ОбновитьТекущиеЗаписиКредитнойИстории(Настройка)
		
	СтруктураФоновогоЗадания  = ВыполнитьФоновоеЗаданиеОбновлениеКИНаСервере(ПараметрыЗапуска, УникальныйИдентификатор);
	ИДЗадания = СтруктураФоновогоЗадания.ИдентификаторЗадания;
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);     
	
	ПараметрыОжидания.ВыводитьПрогрессВыполнения = Истина;
	ПараметрыОжидания.Интервал 	= 2;	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(СтруктураФоновогоЗадания, Новый ОписаниеОповещения("ОбработатьДанные", ЭтотОбъект), ПараметрыОжидания); 
КонецПроцедуры 

&НаСервере
Функция ВыполнитьФоновоеЗаданиеОбновлениеКИНаСервере(ПараметрыЗапуска, УникальныйИдентификатор)
	
	НаименованиеЗадания = "Обновление РС КИ НБКИ RUTDF";

	ВыполняемыйМетод = "КредитныеИсторииИзменения.ОбновитьТекущиеЗаписиКредитнойИстории";
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НаименованиеЗадания;
	ПараметрыВыполнения.ЗапуститьВФоне 	= Истина;
	ПараметрыВыполнения.Вставить("ИдентификаторФормы", УникальныйИдентификатор); 
	
	СтруктураФоновогоЗадания = ДлительныеОперации.ВыполнитьВФоне(ВыполняемыйМетод, ПараметрыЗапуска, ПараметрыВыполнения);
	
	Возврат СтруктураФоновогоЗадания;
	
КонецФункции



