&НаСервере
Перем СписокСимволов;
&НаСервере
Перем СписокЧисел; 

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ЗаполнитьТаблицуДанных();	
	ЗаполнитьТаблицуИмпорта();				
	ЗаполнитьСписокРеквизитов();
	РаботаСДокументами.ЗаполнитьСписокРеквизитовПоляИмпорта(ПолеИсходнойТаблицы, СписокИменКолонок);				 			
	Элементы.ВыборСоответствийПараметрыСвязи.СписокВыбора.ЗагрузитьЗначения(СписокИменКолонок.ВыгрузитьЗначения());
			
	//Заполнение базовых реквизитов в таблицу ВЫБОР СООТВЕТСТВИЙ		
	Если Объект.Ссылка.Пустая() И Объект.ВыборСоответствий.Количество() = 0 Тогда
		//Это новый документ добавленный не копированием
		Для Каждого Элемент Из СписокРеквизитов Цикл
			НоваяСтрока = Объект.ВыборСоответствий.Добавить();
			НоваяСтрока.ИмяДанных = Элемент.Представление;
			НоваяСтрока.ТипДанных = ВозвратТипЗначенияКолонки(Элемент.Значение);
			НоваяСтрока.ИмяКолонки = Элемент.Значение;
			НоваяСтрока.НомерКартинки = 7;
			Если Элемент.Значение = "Наименование" ИЛИ Элемент.Значение = "Идентификатор" ИЛИ 
					Элемент.Значение = "ТипКА" Тогда
				НоваяСтрока.СправочникВладелец = "Контрагенты";	
			Иначе
				НоваяСтрока.СправочникВладелец = "Долговые обязательства";	
			КонецЕсли;
		КонецЦикла;
	Иначе //Обновить картинки	
		Для Каждого Элемент Из Объект.ВыборСоответствий Цикл
			Если ТипЗнч(Элемент.ИмяДанных) <> Тип("Строка") Тогда
				Свойство = РазыменоватьДопСвойство(Элемент.ИмяДанных);
				Если Свойство.ЭтоДополнительноеСведение Тогда
					Элемент.НомерКартинки = 2;
				Иначе
					Элемент.НомерКартинки = 1;
				КонецЕсли;
				Если Свойство.ПометкаУдаления Тогда
					Элемент.НомерКартинки = Элемент.НомерКартинки + 3;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;	
	КонецЕсли;		
		
	Элементы.Страницы.ТекущаяСтраница = Элементы.ГруппаДанные;		 
	//Элементы.ЗаписатьДолжников.Доступность = Не Объект.ЗапретНаРедактирование;
	//Элементы.ЗаписатьДолжниковФоновымПроцессом.Доступность = Не Объект.ЗапретНаРедактирование;
	//Элементы.ЗапретНаРедактирование.Доступность = Объект.ЗапретНаРедактирование;
	ЗапретНаЗаписьОбъекта = Ложь;////Объект.ЗапретНаРедактирование;
	//Если Объект.ЗапретНаРедактирование Тогда
	//	Сообщить("Документ закрыт для редактирования! Все изменения сохраняться не будут!");
	//КонецЕсли;
	#Если Вебклиент Тогда
		Элементы.ПолеИсходнойТаблицы.ОтображатьЗаголовки = Ложь;
		Элементы.ПолеИсходнойТаблицы.ОтображатьСетку = Ложь;
	#КонецЕсли
КонецПроцедуры

&НаСервере
Функция РазыменоватьДопСвойство(Свойство)
	Возврат Новый Структура("ЭтоДополнительноеСведение, ПометкаУдаления", Свойство.ЭтоДополнительноеСведение,
			Свойство.ПометкаУдаления);
КонецФункции

&НаСервере
Процедура ЗаполнитьСписокРеквизитов()
	СписокРеквизитов.Очистить();
	//Элементы.ВыборСоответствийИмяДанных.СписокВыбора.Очистить();	
	
	ТзДанныеЭлементы = Элементы.тзДанные.ПодчиненныеЭлементы;
	Для Каждого Элемент Из ТзДанныеЭлементы Цикл	
		Имя = СтрЗаменить(Элемент.Имя,"тзДанные","");
		Если Имя <> "СсылкаДО" И Имя <> "НомерСтроки" Тогда
			Если Элемент.Заголовок = "" Тогда
				Синоним = Имя;
			Иначе 
				Синоним = Элемент.Заголовок;
			КонецЕсли;
			//Элементы.ВыборСоответствийИмяДанных.СписокВыбора.Добавить(Синоним);			
			СписокРеквизитов.Добавить(Имя, Синоним);			
		КонецЕсли; 	
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура СтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	Если ТекущаяСтраница.Имя = "ГруппаВыборСоответствий" Тогда
		РаботаСДокументами.ЗаполнитьСписокРеквизитовПоляИмпорта(ПолеИсходнойТаблицы, СписокИменКолонок);
		Элементы.ВыборСоответствийПараметрыСвязи.СписокВыбора.ЗагрузитьЗначения(СписокИменКолонок.ВыгрузитьЗначения());
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуДанных()
	Документ = РеквизитФормыВЗначение("Объект");
	тзДанныеХранилища = Документ.ВернутьСодержимоеХранилищаТЗДанных();
	//ЗначениеВРеквизитФормы(Документ,"Объект");
		
	Если тзДанныеХранилища = Неопределено Тогда
		тзДанныеЗагрузки = УправлениеЗагрузкамиДанных.ИзвлечьТабличнуюЧастьВЭлементИзРеквизитаЗДД(тзДанные, тзДанныеХранилища);		
	Иначе
		ПерезаполнитьЗаголовки(тзДанныеХранилища);
		тзДанныеЗагрузки = тзДанныеХранилища;
	КонецЕсли;		
	УправлениеЗагрузкамиДанных.ДобавитьКолонкиКТабличномуПолю(ЭтаФорма, Элементы, тзДанныеЗагрузки.Колонки, Элементы.тзДанные);    		
	
	Если тзДанныеХранилища = Неопределено Тогда
        //Добавить колонки из таблицы ДопРеквизитыИСведения (на тот случай если документ создается копированием)
		Для Каждого Элемент Из Объект.ВыборСоответствий Цикл
			Если ТипЗнч(Элемент.ИмяДанных) = Тип("Строка") Тогда
				Продолжить;
			КонецЕсли;
			
			Имя = "_" + Элемент.ИмяДанных.Код;
			Синоним = Элемент.ИмяДанных.Наименование;
			
			//2 Добавляем колонку в таблицу тзДанные
			Реквизит = Новый РеквизитФормы(Имя, Элемент.ИмяДанных.ТипЗначения, "тзДанные", Синоним);
			КолонкиТаблицыЦенДоб = Новый Массив;
			КолонкиТаблицыЦенДоб.Добавить(Реквизит);
				
			ПолеФормы = Элементы.Добавить("тзДанные" + Имя, Тип("ПолеФормы"), Элементы.тзДанные);
			ПолеФормы.Заголовок = Синоним;
			ЭтаФорма.ИзменитьРеквизиты(КолонкиТаблицыЦенДоб);
				  
			Попытка		
				ПолеФормы.ПутьКДанным = "тзДанные." + Имя;			
			Исключение
				Сообщить(ОписаниеОшибки());		
			КонецПопытки;
			ПолеФормы.Вид = ВидПоляФормы.ПолеВвода; 
		КонецЦикла;
	КонецЕсли;
	
	тзДанные.Загрузить(тзДанныеЗагрузки);
КонецПроцедуры

&НаСервере
Процедура ПерезаполнитьЗаголовки(тзДанныеХранилища)
	Для НомерКолонки = 1 По тзДанныеХранилища.Колонки.Количество() Цикл
		Имя = тзДанныеХранилища.Колонки[НомерКолонки - 1].Имя; 
			
		Если      Имя = "Наименование" Тогда 
			Заголовок = "Наименование/ФИО"; //!
		ИначеЕсли Имя = "НаименованиеКА" Тогда
			Заголовок = "ФИО контрагента";
		ИначеЕсли Имя = "НаименованиеКР" Тогда
			Заголовок = "ФИО кредитора";
		ИначеЕсли Имя = "Идентификатор" Тогда  
			Заголовок = "Код контрагента"; //!
		ИначеЕсли Имя = "ВалютаДоговора" Тогда
			Заголовок = "Валюта договора";
		ИначеЕсли Имя = "НомерДО" Тогда
			Заголовок = "Номер долгового обязательства"; //!
		ИначеЕсли Имя = "СсылкаДО" Тогда
			Заголовок = "Ссылка на договор"; //!
		ИначеЕсли Имя = "НомерСтроки" Тогда
			Заголовок = "N"; //!
		ИначеЕсли Имя = "ТипКА" Тогда
			Заголовок = "Тип контрагента";
		ИначеЕсли Имя = "ТипДОЛ" Тогда
			Заголовок = "Тип должника";
		ИначеЕсли Имя = "ТипКР" Тогда
			Заголовок = "Тип кредитора";
		ИначеЕсли Имя = "ТипДО" Тогда
			Заголовок = "Тип договора";
		Иначе
			Элемент = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоКоду( Сред(Имя, 2) );
			Если Элемент <> Неопределено Тогда
				Заголовок = Элемент.Наименование;
			КонецЕсли;
		КонецЕсли;

	    тзДанныеХранилища.Колонки[НомерКолонки - 1].Заголовок = Заголовок;
	КонецЦикла;	
КонецПроцедуры

// Добавляет колонки к табличному полю.
//
// Параметры:
//  Данные - таблица значений;
//  тзДанные    - таблица значений Данные.
//
Процедура ДобавитьКолонкиКТабличномуПолю(Данные, тзДанные)
	Данные.Колонки.Очистить();
	Для каждого Колонка из тзДанные.Колонки Цикл
		КолонкаТП = Данные.Колонки.Добавить(Колонка.Имя, Колонка.Заголовок);
		КолонкаТП.Данные = Колонка.Имя;
	КонецЦикла;	
КонецПроцедуры //ДобавитьКолонкиКТабличномуПолю()

&НаСервере
Процедура ЗаполнитьТаблицуИмпорта()
	ПолеИсходнойТаблицы.Очистить();
	УправлениеЗагрузкамиДанных.ИзвлечьТабличнуюЧастьВЭлементИзХранилища(ПолеИсходнойТаблицы, Объект.Ссылка);
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	УправлениеЗагрузкамиДанных.ПоместитьТабличнуюЧастьВХранилище(ПолеИсходнойТаблицы, Объект.Ссылка);	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Если ЗапретНаЗаписьОбъекта Тогда
		Отказ = Истина;
		Сообщить("Запись не может быть выполнена! Форма закрыта для редактирвоания!");
	Иначе
		ПоместитьВХранилищеДанные();
	КонецЕсли;	 	
КонецПроцедуры

&НаСервере
Процедура ПоместитьВХранилищеДанные()
	Документ = РеквизитФормыВЗначение("Объект");                  
	Документ.ЗаписатьСодержимоеХранилищаТЗДанных(РеквизитФормыВЗначение("тзДанные"));
	Документ.Записать();
	ЗначениеВРеквизитФормы(Документ, "Объект");
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьДанные(Команда)
	Модифицированность = Истина;
	тзДанные.Очистить();	     
	ЗаполнитьДанные(Объект.Ссылка, "тзДанные");	
КонецПроцедуры

&НаСервере
// Заполняет данные.
//
// Параметры:
//  ДокументОбъект - документ; -
//  ПолеИмпорта  - поле импорта;
//  ИмяТаблицы   - имя таблицы. -
// 
Процедура ЗаполнитьДанные(ДокументОбъект, ИмяТаблицы)
	Для НомерСтрокиТаблицыИмпорта = 2 По ПолеИсходнойТаблицы.ВысотаТаблицы Цикл
		ПустаяСтрокаТаблицы = Истина;
		Для Номер = 1 По ПолеИсходнойТаблицы.ШиринаТаблицы Цикл
			Если ЗначениеЗаполнено(ПолеИсходнойТаблицы.Область("R" + Формат(НомерСтрокиТаблицыИмпорта, "ЧГ=") + "C" + 
					Формат(Номер, "ЧГ=")).Текст) Тогда
				ПустаяСтрокаТаблицы = Ложь;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если ПустаяСтрокаТаблицы Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = тзДанные.Добавить();
		НоваяСтрока.НомерСтроки = тзДанные.Количество();
		Для Каждого ТекСтрока Из Объект.ВыборСоответствий Цикл
			Если НЕ ЗначениеЗаполнено(ТекСтрока.ПараметрыСвязи) Тогда
				Продолжить;
			КонецЕсли;
			
			Если ТекСтрока.ТипДанных = "Строка" Тогда
				Для Каждого Элемент Из СписокРеквизитов Цикл
					Если (ТипЗнч(ТекСтрока.ИмяДанных) = Тип("Строка") И Элемент.Представление = Строка(ТекСтрока.ИмяДанных)) ИЛИ 
							(ТипЗнч(ТекСтрока.ИмяДанных) <> Тип("Строка") И 
								Элемент.Значение = "_" + СтрЗаменить(ТекСтрока.ИмяДанных.Код, " ", "_")) Тогда
						НоваяСтрока[Элемент.Значение] = РаботаСДокументами.СформироватьСтрокуИзДанных82(
								ТекСтрока.ПараметрыСвязи, НомерСтрокиТаблицыИмпорта, ПолеИсходнойТаблицы);
						Прервать;
					КонецЕсли
				КонецЦикла;	
				
			ИначеЕсли ТекСтрока.ТипДанных = "Строка: Адрес" Тогда
				Для Каждого Элемент Из СписокРеквизитов Цикл
					Если Элемент.Представление = Строка(ТекСтрока.ИмяДанных) Тогда	
						Строки = СтрЗаменить(ТекСтрока.ПараметрыСвязи, ";", Символы.ПС);
						Если СтрЧислоСтрок(Строки) = 1 Тогда
							НоваяСтрока[Элемент.Значение] = РаботаСДокументами.СформироватьСтрокуИзДанных82(
									ТекСтрока.ПараметрыСвязи, НомерСтрокиТаблицыИмпорта, ПолеИсходнойТаблицы);
						Иначе
							СписокПараметров = Новый СписокЗначений();
							Для Номер = 1 По СтрЧислоСтрок(Строки) Цикл
								Подстроки = СтрЗаменить(СтрПолучитьСтроку(Строки, Номер), "=", Символы.ПС);
								ЗначениеДляСписка = РаботаСДокументами.СформироватьСтрокуИзДанных82(
										СтрПолучитьСтроку(Подстроки, 2), НомерСтрокиТаблицыИмпорта, ПолеИсходнойТаблицы);
								ПредставлениеДляСписка = СтрПолучитьСтроку(Подстроки, 1);
								ЗначениеДляСписка = СтрЗаменить(ЗначениеДляСписка, ";", ",");
								Если ЗначениеЗаполнено(ЗначениеДляСписка) Тогда
									СписокПараметров.Добавить(ЗначениеДляСписка, ПредставлениеДляСписка); 
								КонецЕсли;
							КонецЦикла;
							
							ТипДома = "";
							ТипКорпуса = "";
							ТипКвартиры = "";
							Для Каждого Параметр Из СписокПараметров Цикл
								Если Параметр.Представление = "Населенный пункт" Тогда
									Параметр.Представление = "НаселенныйПункт";
									
								ИначеЕсли Параметр.Представление = "Дом" И ЗначениеЗаполнено(Параметр.Значение) Тогда
									ТипДома = "дом";
								ИначеЕсли Параметр.Представление = "Владение" И ТипДома = "" Тогда
									ТипДома = "владение";
									
								ИначеЕсли Параметр.Представление = "Корпус" И ЗначениеЗаполнено(Параметр.Значение) Тогда
									ТипКорпуса = "корпус";
								ИначеЕсли Параметр.Представление = "Строение" И ТипКорпуса = "" Тогда
									ТипКорпуса = "строение";
									
								ИначеЕсли Параметр.Представление = "Квартира" И ЗначениеЗаполнено(Параметр.Значение) Тогда
									ТипКвартиры = "кв.";
								ИначеЕсли Параметр.Представление = "Офис" И ТипКвартиры = "" Тогда
									ТипКвартиры = "оф.";	
								КонецЕсли;
							КонецЦикла;
							
							Если ТипДома = "дом" Тогда
								СписокПараметров.Добавить(ТипДома, "ТипДома");
								//Удалить Владение
								Для Каждого Параметр Из СписокПараметров Цикл
									Если Параметр.Представление = "Владение" Тогда
										СписокПараметров.Удалить(Параметр);
										Прервать;
									КонецЕсли;
								КонецЦикла;
							ИначеЕсли ТипДома = "владение" Тогда	
							    СписокПараметров.Добавить(ТипДома, "ТипДома");
								//Удалить Дом
								Для Каждого Параметр Из СписокПараметров Цикл
									Если Параметр.Представление = "Дом" Тогда
										СписокПараметров.Удалить(Параметр);
										Прервать;
									КонецЕсли;
								КонецЦикла;
								//Переименовать Владение в Дом
								Для Каждого Параметр Из СписокПараметров Цикл
									Если Параметр.Представление = "Владение" Тогда
										Параметр.Представление = "Дом";
										Прервать;
									КонецЕсли;
								КонецЦикла;
							КонецЕсли;
							
							Если ТипКорпуса = "корпус" Тогда
								СписокПараметров.Добавить(ТипКорпуса, "ТипКорпуса");
								//Удалить Строение
								Для Каждого Параметр Из СписокПараметров Цикл
									Если Параметр.Представление = "Строение" Тогда
										СписокПараметров.Удалить(Параметр);
										Прервать;
									КонецЕсли;
								КонецЦикла;
							ИначеЕсли ТипКорпуса = "строение" Тогда
								СписокПараметров.Добавить(ТипКорпуса, "ТипКорпуса");
								//Удалить Корпус
								Для Каждого Параметр Из СписокПараметров Цикл
									Если Параметр.Представление = "Корпус" Тогда
										СписокПараметров.Удалить(Параметр);
										Прервать;
									КонецЕсли;
								КонецЦикла;
								//Переименовать Строение в Корпус
								Для Каждого Параметр Из СписокПараметров Цикл
									Если Параметр.Представление = "Строение" Тогда
										Параметр.Представление = "Корпус";
										Прервать;
									КонецЕсли;
								КонецЦикла;
							КонецЕсли;
							
							Если ТипКвартиры = "кв." Тогда
								СписокПараметров.Добавить(ТипКвартиры, "ТипКвартиры");
								//Удалить Офис
								Для Каждого Параметр Из СписокПараметров Цикл
									Если Параметр.Представление = "Офис" Тогда
										СписокПараметров.Удалить(Параметр);
										Прервать;
									КонецЕсли;
								КонецЦикла;
							ИначеЕсли ТипКвартиры = "оф." Тогда
								СписокПараметров.Добавить(ТипКвартиры, "ТипКвартиры");
								//Удалить Квартира
								Для Каждого Параметр Из СписокПараметров Цикл
									Если Параметр.Представление = "Квартира" Тогда
										СписокПараметров.Удалить(Параметр);
										Прервать;
									КонецЕсли;
								КонецЦикла;
								//Переименовать Офис в Квартира
								Для Каждого Параметр Из СписокПараметров Цикл
									Если Параметр.Представление = "Офис" Тогда
										Параметр.Представление = "Квартира";
										Прервать;
									КонецЕсли;
								КонецЦикла;
							КонецЕсли;
								
							//Теперь список значений надо запихнуть в форму и сделать для него представление
							Представление = "";
							Страна = "";
							Индекс = "";
							Регион = "";
							Район = "";
							Город = "";
							НаселенныйПункт = "";
							Улица = "";
							Дом = "";
							Корпус = "";
							Квартира = "";
							ПредставлениеСтрокой = "";
							ТипДома = ""; 
							ТипКорпуса = ""; 
							ТипКвартиры = "";
							СтрокаВыполнить = "";
							Для Каждого Параметр Из СписокПараметров Цикл
								СтрокаВыполнить = СтрокаВыполнить + Параметр.Представление + "=""" + Параметр.Значение + """;";
								Представление = Представление + Параметр.Представление + "=" + Параметр.Значение + ";";
							КонецЦикла;
							Выполнить(СтрокаВыполнить);
							ПредставлениеСтрокой = СформироватьПредставлениеАдреса(Страна, Индекс, Регион, Район, 
									Город, НаселенныйПункт, Улица, Дом, Корпус, Квартира, ТипДома, ТипКорпуса, 
									ТипКвартиры);			
							НоваяСтрока[Элемент.Значение] = ПредставлениеСтрокой + ";" + Представление;
						КонецЕсли;
						Прервать;
					КонецЕсли
				КонецЦикла;
				
			ИначеЕсли ТекСтрока.ТипДанных = "Строка: Телефон" Тогда
				Для Каждого Элемент Из СписокРеквизитов Цикл
					Если Элемент.Представление = Строка(ТекСтрока.ИмяДанных) Тогда	
						Строки = СтрЗаменить(ТекСтрока.ПараметрыСвязи, ";", Символы.ПС);
						Если СтрЧислоСтрок(Строки) = 1 Тогда
							ЗначениеДляСписка = РаботаСДокументами.СформироватьСтрокуИзДанных82(
									ТекСтрока.ПараметрыСвязи, НомерСтрокиТаблицыИмпорта, ПолеИсходнойТаблицы);
							ЗначениеДляСписка = СтрЗаменить(ЗначениеДляСписка, ";", ",");
							СписокПараметров = ПропарситьТелефон(ЗначениеДляСписка);
						Иначе
							СписокПараметров = Новый СписокЗначений();
							Для Номер = 1 По СтрЧислоСтрок(Строки) Цикл
								Подстроки = СтрЗаменить(СтрПолучитьСтроку(Строки, Номер), "=", Символы.ПС);
								ЗначениеДляСписка = РаботаСДокументами.СформироватьСтрокуИзДанных82(
										СтрПолучитьСтроку(Подстроки, 2), НомерСтрокиТаблицыИмпорта, ПолеИсходнойТаблицы);
								ПредставлениеДляСписка = СтрПолучитьСтроку(Подстроки, 1);
								ЗначениеДляСписка = СтрЗаменить(ЗначениеДляСписка, ";", ",");
								Если ЗначениеЗаполнено(ЗначениеДляСписка) Тогда
									СписокПараметров.Добавить(ЗначениеДляСписка, ПредставлениеДляСписка); 
								КонецЕсли;
							КонецЦикла;
							
							Для Каждого Параметр Из СписокПараметров Цикл
								Если Параметр.Представление = "Код страны" Тогда
									Параметр.Представление = "КодСтраны";
								ИначеЕсли Параметр.Представление = "Код города" Тогда
									Параметр.Представление = "КодГорода";
								ИначеЕсли Параметр.Представление = "Номер телефона" Тогда
									Параметр.Представление = "НомерТелефона";
								ИначеЕсли Параметр.Представление = "Добавочный номер" Тогда
									Параметр.Представление = "Добавочный";	
								КонецЕсли;	
							КонецЦикла;
						КонецЕсли;	
						
						//Теперь список значений надо запихнуть в форму и сделать для него представление
						Представление = "";
						КодСтраны = "";
						КодГорода = "";
						НомерТелефона = "";
						Добавочный = "";
						Комментарий = "";
						СтрокаВыполнить = "";
						Для Каждого Параметр Из СписокПараметров Цикл
							СтрокаВыполнить = СтрокаВыполнить + Параметр.Представление + "=""" + Параметр.Значение + """;";
							Представление = Представление + Параметр.Представление + "=" + Параметр.Значение + ";";
						КонецЦикла;
						Выполнить(СтрокаВыполнить);
						ПредставлениеСтрокой = СформироватьПредставлениеТелефона(КодСтраны, КодГорода, НомерТелефона, 
								Добавочный, Комментарий);			
						НоваяСтрока[Элемент.Значение] = ПредставлениеСтрокой + ";" + Представление;
						Прервать;
					КонецЕсли
				КонецЦикла;
				
			ИначеЕсли ТекСтрока.ТипДанных = "Число" Тогда
				Попытка
					Результат = Число(СтрЗаменить(РаботаСДокументами.НайтиЗначениеВТаблицеИмпорта(
							НомерСтрокиТаблицыИмпорта, ТекСтрока.ПараметрыСвязи, 
							ПолеИсходнойТаблицы)," ",""));
				Исключение
					Результат = 0;
				КонецПопытки;
				
				Для Каждого Элемент Из СписокРеквизитов Цикл
					Если Элемент.Представление = Строка(ТекСтрока.ИмяДанных) Тогда
						НоваяСтрока[Элемент.Значение] = Результат;
						Прервать;
					КонецЕсли
				КонецЦикла;
				
			ИначеЕсли ТекСтрока.ТипДанных = "Дата" Тогда
				Попытка
					Результат = Дата(РаботаСДокументами.НайтиЗначениеВТаблицеИмпорта(НомерСтрокиТаблицыИмпорта, 
							ТекСтрока.ПараметрыСвязи, ПолеИсходнойТаблицы));
				Исключение
					Результат = Технический.ПреобразоватьДату(РаботаСДокументами.НайтиЗначениеВТаблицеИмпорта(
							НомерСтрокиТаблицыИмпорта, ТекСтрока.ПараметрыСвязи, 
							ПолеИсходнойТаблицы));
				КонецПопытки;
						
				Для Каждого Элемент Из СписокРеквизитов Цикл
					Если Элемент.Представление = Строка(ТекСтрока.ИмяДанных) Тогда
						НоваяСтрока[Элемент.Значение] = Результат;
						Прервать;
					КонецЕсли
				КонецЦикла;
					
			ИначеЕсли Найти(ТекСтрока.ТипДанных, "Перечисление ссылка:") = 1 
					Или НРег(ТекСтрока.ТипДанных) = Нрег(Тип("СправочникСсылка.тсЗначенияСвойствОбъектов")) 
					Или ТекСтрока.ТипДанных = "Булево" Тогда
				РаботаСДокументами.НайтиИЗаписатьПеречисление(ТекСтрока, НоваяСтрока, НомерСтрокиТаблицыИмпорта, ПолеИсходнойТаблицы);
					   
			Иначе	
				Для Каждого Элемент Из СписокРеквизитов Цикл
					Если Элемент.Представление = Строка(ТекСтрока.ИмяДанных) Тогда
						РаботаСДокументами.НайтиИЗаписатьДокументИлиСправочник81(Элемент.Значение, 
								ТекСтрока.ТипДанных, ТекСтрока.ПараметрыСвязи,
								НоваяСтрока, НомерСтрокиТаблицыИмпорта, ПолеИсходнойТаблицы);		
						Прервать;
					КонецЕсли;		
				КонецЦикла;				
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;	
КонецПроцедуры

&НаСервере
Функция СформироватьПредставлениеТелефона(КодСтраны, КодГорода, НомерТелефона, Добавочный, Комментарий)
	Представление = СокрЛП(КодСтраны);	
	Если Не ПустаяСтрока(КодГорода) Тогда
		Представление = Представление + ?(ПустаяСтрока(Представление), "", " ") + "(" + СокрЛП(КодГорода) + ")";
	КонецЕсли;	
	Если Не ПустаяСтрока(НомерТелефона) Тогда
		Представление = Представление + ?(ПустаяСтрока(Представление), "", " ") + СокрЛП(НомерТелефона);
	КонецЕсли;	
	Если НЕ ПустаяСтрока(Добавочный) Тогда
		Представление = Представление + ?(ПустаяСтрока(Представление), "", ", ") + "доб. " + СокрЛП(Добавочный);
	КонецЕсли;	
	Если НЕ ПустаяСтрока(Комментарий) Тогда
		Представление = Представление + ?(ПустаяСтрока(Представление), "", ", ") + СокрЛП(Комментарий);
	КонецЕсли;	
	Возврат Представление;	
КонецФункции

&НаСервере
Функция СформироватьПредставлениеАдреса(Страна, Индекс, Регион, Район, Город, НаселенныйПункт, Улица, Дом, Корпус, 
		Квартира, ТипДома, ТипКорпуса, ТипКвартиры)
	Представление = "";
	
	Если ЗначениеЗаполнено(Страна) И ВРег(Страна) <> ВРег(Справочники.СтраныМира.Россия.Наименование) Тогда
		ДополнитьПредставлениеАдреса(Страна, ", ", Представление);
	КонецЕсли;
	ДополнитьПредставлениеАдреса(СокрЛП(Индекс),             ", ", Представление);
	ДополнитьПредставлениеАдреса(СокрЛП(Регион),             ", ", Представление);
	ДополнитьПредставлениеАдреса(СокрЛП(Район),              ", ", Представление);
	ДополнитьПредставлениеАдреса(СокрЛП(Город),              ", ", Представление);
	ДополнитьПредставлениеАдреса(СокрЛП(НаселенныйПункт),    ", ", Представление);
	ДополнитьПредставлениеАдреса(СокрЛП(Улица),              ", ", Представление);
	ДополнитьПредставлениеАдреса(СокрЛП(Дом),                ", " + ТипДома    + " № ", Представление);
	ДополнитьПредставлениеАдреса(СокрЛП(Корпус),             ", " + ТипКорпуса + " "  , Представление);
	ДополнитьПредставлениеАдреса(СокрЛП(Квартира),           ", " + ТипКвартиры       , Представление);
	
	Если СтрДлина(Представление) > 2 Тогда
		Представление = Сред(Представление, 3);
	КонецЕсли;
	
	Возврат Представление;	
КонецФункции

&НаСервере
Процедура ДополнитьПредставлениеАдреса(Дополнение, СтрокаКонкатенации, Представление)
	Если Дополнение <> "" Тогда
		Представление = Представление + СтрокаКонкатенации + Дополнение;
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Функция ВозвратТипЗначенияКолонки(ВыбранноеЗначение)
	Переменная = тзДанные.Выгрузить().Колонки.Найти(ВыбранноеЗначение).ТипЗначения.Типы()[0];
	
	Если 	  Переменная = Тип("СправочникСсылка.Контрагенты") Тогда
		Возврат "Справочник ссылка: Контрагенты";
	ИначеЕсли Переменная = Тип("СправочникСсылка.ДолговыеОбязательства") Тогда
		Возврат "Справочник ссылка: Долговые обязательства";
	ИначеЕсли Переменная = Тип("СправочникСсылка.Валюты") Тогда
		Возврат "Справочник ссылка: Валюты";
	ИначеЕсли Переменная = Тип("СправочникСсылка.УслугиПоДоговору") Тогда
		Возврат "Справочник ссылка: Услуги по договору";
	ИначеЕсли Переменная = Тип("СправочникСсылка.тсЗначенияСвойствОбъектов") Тогда
		Возврат "Справочник ссылка: Значения свойств объектов";
	ИначеЕсли Переменная = Тип("СправочникСсылка.ЮрФизЛицо") Тогда
		Возврат "Справочник ссылка: ЮрФизЛицо";
	ИначеЕсли Переменная = Тип("СправочникСсылка.ТипыДолговыхОбязательств") Тогда
		Возврат "Справочник ссылка: Типы долговых обязательств";
	Иначе
		Возврат Строка(тзДанные.Выгрузить().Колонки.Найти(ВыбранноеЗначение).ТипЗначения);
	КонецЕсли;	
КонецФункции

&НаСервере
Функция ВозвратКоллекцииРеквизитовСправочника(ТипДанных)
	ТипРеквизитаСтр = СтрЗаменить(ТипДанных," ","");
		
	СписокВсехПараметров = Новый СписокЗначений;
	Если Лев(ТипРеквизитаСтр,10) = "Справочник" Тогда
		СправочникРеквизита = Сред(ТипРеквизитаСтр,18);
		РеквизитОбъект = Метаданные.Справочники.Найти(СправочникРеквизита).Реквизиты;
		СписокВсехПараметров.Добавить("Код");
		СписокВсехПараметров.Добавить("Наименование");
		Если Метаданные.Справочники.Найти(СправочникРеквизита).Владельцы.Количество() > 0 Тогда
			СписокВсехПараметров.Добавить("Владелец");
		КонецЕсли;
	ИначеЕсли Лев(ТипРеквизитаСтр,8) = "Документ" Тогда
		СписокВсехПараметров.Добавить("Номер");
		СписокВсехПараметров.Добавить("Дата");
	КонецЕсли;

	Если Не РеквизитОбъект = Неопределено Тогда	
		Для Каждого СвойствоРеквизит ИЗ РеквизитОбъект Цикл
			НовСтрока = СписокВсехПараметров.Добавить();
			НовСтрока.Значение = СвойствоРеквизит.Имя;
		КонецЦикла;
	КонецЕсли;

	Возврат СписокВсехПараметров;	
КонецФункции
	
&НаКлиенте
Процедура ВыборСоответствийПараметрыСвязиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь; 
	ВыборСоответсвийСвязи(Элемент, ЭтаФорма, Объект.Ссылка, "тзДанные", СписокРеквизитов); 		                                            	
КонецПроцедуры

&НаКлиенте
// Выбирает соответствия связи для текущего элемента.
//
// Параметры:
//	Элемент - текущий элемент; 
//  Форма - имя формы; 
//  ДокументОбъект - документ; -
//  ИмяТаблицы - имя таблицы; -
//  СписокРеквизитов - список реквизитов. -
// 
Процедура ВыборСоответсвийСвязи(Элемент, Форма, ДокументОбъект, ИмяТаблицы, СписокРеквизитов)
	ТекСтр = Форма.Элементы.ВыборСоответствий.ТекущиеДанные; //ТекущаяСтрока;
	       
	Если Нрег(ТекСтр.ТипДанных) = "строка" Тогда
		ФормаПараметров = ПолучитьФорму("Обработка.УстановкаПараметровСвязи.Форма.ФормаВыбораКолонок",,ЭтаФорма);
		ФормаПараметров.СписокПараметров = СписокИменКолонок;
		
	ИначеЕсли Нрег(ТекСтр.ТипДанных) = "число" ИЛИ Нрег(ТекСтр.ТипДанных) = "дата" Тогда
		Элементы.ВыборСоответствий.ТекущиеДанные.ПараметрыСвязи = Форма.ВыбратьИзСписка(СписокИменКолонок);
		Возврат;
		
	//ИначеЕсли Нрег(Лев(ТекСтр.ТипДанных, 12)) = "перечисление" Тогда
	//	ФормаПараметров = ПолучитьФорму("ФормаПеречисления",Элемент);
	//	ТипПеречисления = Форма.Элементы.ВыборСоответствий.ТекущиеДанные.ТипДанных;
	//	ТипПеречисления = СтрЗаменить(Сред(ТипПеречисления, 21), " ", "");
	//	//ФормаПараметров.Перечисление = Перечисления[ТипПеречисления].ПустаяСсылка();
		
	ИначеЕсли Нрег(ТекСтр.ТипДанных) = Нрег(Тип("СправочникСсылка.тсЗначенияСвойствОбъектов")) Тогда
		ФормаПараметров = ПолучитьФорму("Обработка.УстановкаПараметровСвязи.Форма.ФормаПеречисления",,ЭтаФорма);
		ФормаПараметров.СписокКолонок = СписокИменКолонок;		
		ФормаПараметров.КодСвойства = ПолучитьКодДополнительногоРеквизитаИлиСведения(
				Элементы.ВыборСоответствий.ТекущиеДанные.ИмяДанных);
				
	ИначеЕсли Нрег(ТекСтр.ТипДанных) = "булево" Тогда
		ФормаПараметров = ПолучитьФорму("Обработка.УстановкаПараметровСвязи.Форма.ФормаПеречисления",,ЭтаФорма);
		ФормаПараметров.СписокКолонок = СписокИменКолонок;		
		ФормаПараметров.КодСвойства = ПолучитьКодДополнительногоРеквизитаИлиСведения(
				Элементы.ВыборСоответствий.ТекущиеДанные.ИмяДанных);
		//ФормаПараметров.Перечисление = Истина;
		
	//ИначеЕсли Нрег(Сред(ТекСтр.ТипДанных, СтрДлина("СправочникСсылка.")+3)) = 
	//		Нрег(Тип("СправочникСсылка.ЮрФизЛицо")) Тогда
	//	
	//	
	//ИначеЕсли Нрег(Сред(ТекСтр.ТипДанных, СтрДлина("СправочникСсылка.")+3)) = 
	//		Нрег(Тип("СправочникСсылка.ТипыДолговыхОбязательств")) Тогда
			
	Иначе
		ФормаПараметров = ПолучитьФорму("Обработка.УстановкаПараметровСвязи.Форма.ФормаВыбораПараметров",,ЭтаФорма);
		ФормаПараметров.СписокКолонок = ВозвратКоллекцииРеквизитовСправочника(ТекСтр.ТипДанных);
		ФормаПараметров.СписокПараметров = РасширитьСписокВыбора(СписокИменКолонок);
		ФормаПараметров.СписокВыбора = СписокИменКолонок;
		ФормаПараметров.ТипСтроки = ТекСтр.ТипДанных;
	КонецЕсли;
	
	ФормаПараметров.ИзменяемыйЭлемент = ТекСтр.ПараметрыСвязи;	
	//Чуров
	ОткрытьФорму(ФормаПараметров);
	//ФормаПараметров.ОткрытьМодально();
	ТекСтр.ПараметрыСвязи = ФормаПараметров.Результат;
	Модифицированность = Истина;
КонецПроцедуры 

&НаСервере
Функция ПолучитьКодДополнительногоРеквизитаИлиСведения(Имя)
	Возврат Имя.Код;	
КонецФункции

&НаСервере
Функция РасширитьСписокВыбора(СписокВыбора)
	РасширенныйСписок = Новый СписокЗначений;	
	РасширенныйСписок.ЗагрузитьЗначения(СписокВыбора.ВыгрузитьЗначения());
	
	//Для Каждого Элемент ИЗ СписокРеквизитов Цикл
	//	НовСтрока = РасширенныйСписок.Добавить();
	//	НовСтрока.Значение = Элемент.Значение + "_";
	//	НовСтрока.Картинка = БиблиотекаКартинок.Справочник; 
	//КонецЦикла;
	
	Возврат РасширенныйСписок;
КонецФункции

&НаКлиенте
Процедура ЗаписатьДолжниковФоновымПроцессом(Команда)	
	// Чуров
	 
	Если ПроверкаПередЗаписьюСправочников() Тогда
		ПоказатьВопрос(Новый ОписаниеОповещения("ЗаписатьДолжниковФоновымПроцессомЗавершение", ЭтаФорма), "Внимание! Данные должников будут безвозвратно изменены. Продолжить?", 
			РежимДиалогаВопрос.ОКОтмена,,,"Изменение данных дожников");
	Иначе
		ЗаписатьСправочникиВФоне();
		ЗапретНаЗаписьОбъекта = Ложь;
		Записать();		
	КонецЕсли;
	
	//Если ПроверкаПередЗаписьюСправочников() Тогда
	// 	ЗаписатьСправочникиВФоне();
	//	ЗапретНаЗаписьОбъекта = Ложь;
	//	Записать();
	//КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьДолжниковФоновымПроцессомЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
     Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ЗаписатьСправочникиВФоне();
		ЗапретНаЗаписьОбъекта = Ложь;
		Записать();		  
	КонецЕсли;

КонецПроцедуры

 

&НаКлиенте
Процедура ЗаписатьДолжников(Команда)
	Если Объект.ПоставитьВОчередь Тогда
		ЗаписатьДолжниковФоновымПроцессом(Неопределено);
	Иначе
		ПоказатьВопрос(Новый ОписаниеОповещения("ЗаписатьДолжниковЗавершение", ЭтаФорма), "Внимание! Данные должников будут безвозвратно изменены. Продолжить?",РежимДиалогаВопрос.ОКОтмена,,,"Изменение данных дожников");	
	КонецЕсли;
	
	//ИначеЕсли ПроверкаПередЗаписьюСправочников() Тогда		
	//	//КоличествоЗаписанныхДО = 0;
	//	//КоличествоОбновленныхДО = 0;	
	//	Если ЗаписатьДолжниковНаСервере() Тогда
	//		////Объект.ЗапретНаРедактирование = Истина;
	//		Объект.СправочникиЗаписаны = Истина;
	//		ЗапретНаЗаписьОбъекта = Ложь;
	//		Записать();
	//		Предупреждение("Справочники записаны!");
	//	КонецЕсли;		  
	//	//Сообщить("Количество записанных долговых обязательств: "+ КоличествоЗаписанныхДО);
	//	//Если КоличествоОбновленныхДО <> 0 Тогда
	//	//	Сообщить("Количество перезаписанных(обновленных) долговых обязательств: "+КоличествоОбновленныхДО);
	//	//КонецЕсли;
	//КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьДолжниковЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Если ЗаписатьДолжниковНаСервере() Тогда
			Объект.СправочникиЗаписаны = Истина;
			ЗапретНаЗаписьОбъекта = Ложь;
			Записать();
			ПоказатьПредупреждение(,"Справочники записаны!");
		КонецЕсли;				  
	КонецЕсли;

КонецПроцедуры


&НаКлиенте
Функция ПроверкаПередЗаписьюСправочников()
	Если Объект.ЗапретНаРедактирование Тогда
		Сообщить("Операция не может быть выполнена! Документ закрыт для редактирования!");
		Возврат Ложь;
	КонецЕсли;
	
	Если Модифицированность Тогда
		Сообщить("Перед выполнением данной операции необходимо записать документ!");
		Возврат Ложь;
	КонецЕсли;
	//Чуров 
	//Если Вопрос("Внимание! Данные должников будут безвозвратно изменены. Продолжить?", 
	//		РежимДиалогаВопрос.ОКОтмена,,,"Изменение данных дожников")
	//		= КодВозвратаДиалога.Отмена Тогда
	//	Возврат Ложь;	  
	//КонецЕсли;	
	
	Возврат Истина;
КонецФункции

&НаСервере
Функция ЗаписатьДолжниковНаСервере()
	Если тзДанные.Количество() = 0 Тогда
		Возврат Ложь;	
	КонецЕсли;
	
	//Проверка на заполнение обязательных полей
	ОбязательныеРеквизитыТЧ = Новый Массив();
	ОбязательныеРеквизитыТЧ.Добавить("Наименование");
	ОбязательныеРеквизитыТЧ.Добавить("Идентификатор");
	ОбязательныеРеквизитыТЧ.Добавить("НомерДО");
	Если Объект.ЮрФизЛица.Пустая() Тогда
		ОбязательныеРеквизитыТЧ.Добавить("ТипКА");
	КонецЕсли;
	Если Объект.ТипДолговыхОбязательств.Пустая() Тогда
		ОбязательныеРеквизитыТЧ.Добавить("ТипДО");
	КонецЕсли;
	Если НЕ РаботаСДокументами.ПроверитьЗаполнениеТабличнойЧасти(тзДанные, ОбязательныеРеквизитыТЧ) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	//Массив основных реквизитов
	Массив = Новый Массив;
	Массив.Добавить("НомерСтроки");
	Массив.Добавить("Наименование");
	Массив.Добавить("Идентификатор");
	Массив.Добавить("ВалютаДоговора");
	Массив.Добавить("НомерДО");
	Массив.Добавить("СсылкаДО");
	Массив.Добавить("ТипКА");
	Массив.Добавить("ТипДО");
	
	МассивСообщений = Новый Массив;
	
	Для Каждого ТекСтрока Из тзДанные Цикл
		Должник = ФоновыеЗаданияМодуль.ЗаписатьДолжника(Массив, ТекСтрока, тзДанные.Выгрузить(), Объект.ЮрФизЛица, 
				Объект.ДополнительныеСведенияИРеквизиты.Выгрузить(), Объект.ОбновлятьРанееЗаписанные,
				МассивСообщений);
		ТекСтрока.СсылкаДО = ФоновыеЗаданияМодуль.ЗаписатьДолговоеОбязательство(Массив, Должник, ТекСтрока, 
				тзДанные.Выгрузить(), Объект.ТипДолговыхОбязательств, 
				Объект.ДополнительныеСведенияИРеквизиты.Выгрузить(), Объект.ОбновлятьРанееЗаписанные, 
				МассивСообщений);			
	КонецЦикла;
	
	Если МассивСообщений.Количество() = 0 Тогда
		МассивСообщений.Добавить("Все справочники записаны!");
	КонецЕсли;
	Запись = РегистрыСведений.СообщенияПоЗагрузкеДанных.СоздатьМенеджерЗаписи();
	Запись.Документ = Объект.Ссылка;	
	Запись.МассивСообщений = Новый ХранилищеЗначения(МассивСообщений, Новый СжатиеДанных(5));
	Запись.Записать();
	
	Возврат Истина;		
КонецФункции

&НаСервере
Функция ЗаписатьСправочникиВФоне()
	Если тзДанные.Количество() = 0 Тогда
		Возврат Ложь;	
	КонецЕсли;
	
	//Проверка на заполнение обязательных полей
	ОбязательныеРеквизитыТЧ = Новый Массив();
	ОбязательныеРеквизитыТЧ.Добавить("Наименование");
	ОбязательныеРеквизитыТЧ.Добавить("Идентификатор");
	ОбязательныеРеквизитыТЧ.Добавить("НомерДО");
	Если НЕ РаботаСДокументами.ПроверитьЗаполнениеТабличнойЧасти(тзДанные, ОбязательныеРеквизитыТЧ) Тогда
		Возврат Ложь;
	КонецЕсли;	
	////Объект.ЗапретНаРедактирование = Истина;
		
	Запись = РегистрыСведений.ОчередьФоновыхЗаданий.СоздатьМенеджерЗаписи(); 
	Запись.СсылкаНаДокумент = Объект.Ссылка;
	Запись.ДатаДобавленияВРегистр = ТекущаяДата();
	Запись.СтатусЗадания = Перечисления.СтатусыФоновыхЗаданий.ВОчереди;	
	Запись.Записать();
	Возврат Истина;
КонецФункции

&НаСервере     
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Объект.Ссылка.Пустая() Тогда
		Пользователи.ЗаполнитьРеквизитыПоДаннымПользователя(Объект);
	КонецЕсли;
	
	//Если Не ЗначениеЗаполнено(Объект.Автор) Тогда 
	//	Объект.Автор = ПараметрыСеанса.ТекущийПользователь;
	//КонецЕсли;
	
	////Если Объект.Ссылка.Пустая() Тогда
		Объект.ЗапретНаРедактирование = Ложь;
	////КонецЕсли;
	
	Если Объект.ЗапретНаРедактирование Тогда
		Элементы.ГруппаНомера.ТолькоПросмотр = Истина;
		Элементы.ГруппаОрганизации.ТолькоПросмотр = Истина;
		Элементы.ГруппаТипов.ТолькоПросмотр = Истина;
		Элементы.Страницы.ТолькоПросмотр = Истина;
		Элементы.ГруппаПодвал.ТолькоПросмотр = Истина;
	КонецЕсли;
КонецПроцедуры
	  
&НаКлиенте
Процедура ДобавитьСвойствоВыполнить()
	ДобавитьСвойство();
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСвойство()
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ТипКА", Объект.ЮрФизЛица);
	ПараметрыФормы.Вставить("ТипДО", Объект.ТипДолговыхОбязательств);
	
	Форма = ПолучитьФорму("ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения.Форма.ФормаПодбораСвойствИзНесколькоихНаборов", 
			ПараметрыФормы, Элементы.ДеревоСвойств);
	Форма.ЗакрыватьПриВыборе = Ложь;
	//Чуров
	ОткрытьФорму(Форма);	
	//Форма.Открыть();	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПроизвестиДобавлениеВыделенныхСвойств(масСсылок, масР, масС)
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДополнительныеРеквизитыИСведения.Ссылка КАК Свойство
	|ПОМЕСТИТЬ Временная
	|ИЗ
	|	ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК ДополнительныеРеквизитыИСведения
	|ГДЕ
	|	(ДополнительныеРеквизитыИСведения.Ссылка В (&масР)
	|			ИЛИ ДополнительныеРеквизитыИСведения.Ссылка В (&масС))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДополнительныеРеквизитыИСведения.Ссылка,
	|	ДополнительныеРеквизитыИСведения.ЭтоДополнительноеСведение
	|ИЗ
	|	ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК ДополнительныеРеквизитыИСведения
	|		ЛЕВОЕ СОЕДИНЕНИЕ Временная КАК Временная
	|		ПО ДополнительныеРеквизитыИСведения.Ссылка = Временная.Свойство
	|ГДЕ
	|	ДополнительныеРеквизитыИСведения.Ссылка В ИЕРАРХИИ(&масСсылок)
	|	И (НЕ ДополнительныеРеквизитыИСведения.ЭтоГруппа)
	|	И Временная.Свойство ЕСТЬ NULL 
	|	И (НЕ ДополнительныеРеквизитыИСведения.ПометкаУдаления)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДополнительныеРеквизитыИСведения.Наименование";
	
	Запрос.УстановитьПараметр("масСсылок", масСсылок);
	Запрос.УстановитьПараметр("масР", масР);
	Запрос.УстановитьПараметр("масС", масС);	
	Выборка = Запрос.Выполнить().Выбрать();
	
	масР.Очистить();
	масС.Очистить();	
	Если Выборка.Количество() = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Пока Выборка.Следующий() Цикл	
		Если Выборка.ЭтоДополнительноеСведение Тогда
			масС.Добавить(Выборка.Ссылка);
		Иначе
			масР.Добавить(Выборка.Ссылка);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Истина;
КонецФункции

&НаКлиенте
Процедура УстановитьТекущимВТаблице(Таблица, Элемент, Свойство)
	Если Свойство = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Отбор = Новый Структура("Свойство", Свойство);
	Строки = Таблица.НайтиСтроки(Отбор);
	Если Строки.Количество() <> 0 Тогда
		Элемент.ТекущаяСтрока = Таблица.Индекс(Строки[0]);
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Функция ПолучитьОрганизациюПользователя(Пользователь)
	Запрос = Новый Запрос;	
	Запрос.Текст=
	"ВЫБРАТЬ
	|	Настройки.Ссылка,
	|	ЗначениеНастроек.Значение
	|ИЗ
	|	ПланВидовХарактеристик.НастройкиПользователей КАК Настройки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиПользователей КАК ЗначениеНастроек
	|		ПО (ЗначениеНастроек.Настройка = Настройки.Ссылка)
	|			И (ЗначениеНастроек.Пользователь = &Пользователь)
	|ГДЕ
	|	Настройки.ЭтоГруппа = ЛОЖЬ
	|	И Настройки.Ссылка = &СсылкаНаНастройку";
	
	Запрос.УстановитьПараметр("Пользователь", Пользователь);
	Запрос.УстановитьПараметр("СсылкаНаНастройку", 
				ПланыВидовХарактеристик.НастройкиПользователей.НайтиПоНаименованию("Основная организация"));
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Значение;		
	Иначе
		Возврат Неопределено;
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура тзДанныеПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПолеИсходнойТаблицыПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ЗапретНаРедактированиеПриИзменении(Элемент)
	Если Не Объект.ЗапретНаРедактирование Тогда
		Объект.СправочникиЗаписаны = Ложь;
		Элементы.ЗапретНаРедактирование.Доступность = Ложь;
		ЗапретНаЗаписьОбъекта = Ложь;
		//Элементы.ЗаписатьДолжников.Доступность = Истина;
		//Элементы.ЗаписатьДолжниковФоновымПроцессом.Доступность = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	////ЗапретНаЗаписьОбъекта = Объект.ЗапретНаРедактирование;
	Элементы.ЗапретНаРедактирование.Доступность = Объект.ЗапретНаРедактирование;
	
	////Если Объект.ЗапретНаРедактирование Тогда
	////	Элементы.ГруппаНомера.ТолькоПросмотр = Истина;
	////	Элементы.ГруппаОрганизации.ТолькоПросмотр = Истина;
	////	Элементы.ГруппаТипов.ТолькоПросмотр = Истина;
	////	Элементы.Страницы.ТолькоПросмотр = Истина;
	////	Элементы.ГруппаПодвал.ТолькоПросмотр = Истина;
	////КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	//Чуров 
	//Дублируется стандартная обработка
	Если ЗапретНаЗаписьОбъекта Тогда
		Модифицированность = Ложь;
	//ИначеЕсли Модифицированность Тогда
	//	Ответ = Вопрос("Данные были изменены! Сохранить изменения?", 
	//			РежимДиалогаВопрос.ДаНетОтмена,,, "Изменение данных дожников");
	//	Если Ответ = КодВозвратаДиалога.Да Тогда
	//		Записать();
	//	ИначеЕсли Ответ = КодВозвратаДиалога.Отмена Тогда
	//		Отказ = Истина;
	//	Иначе
	//		Модифицированность = Ложь;
	//	КонецЕсли;	  
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВыборСоответствийПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Отказ = Истина;
	Форма = ПолучитьФорму("ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения.Форма.ФормаВыбора",, ЭтаФорма);
	//Чуров
	Результат = ОткрытьФорму(Форма);
	//Результат = Форма.ОткрытьМодально();
	Если Результат <> Неопределено Тогда
		ВыборСоответствийПередНачаломДобавленияСервер(Результат);
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура ВыборСоответствийПередНачаломДобавленияСервер(Результат)
	Если Объект.ВыборСоответствий.НайтиСтроки(Новый Структура("ИмяДанных", Результат)).Количество() = 0 Тогда	
		Нов = Объект.ВыборСоответствий.Добавить();
		Нов.ИмяДанных = Результат;
		Нов.ТипДанных = Результат.ТипЗначения;
		Если Результат.ЭтоДополнительноеСведение Тогда
			Нов.НомерКартинки = 2;
		Иначе
			Нов.НомерКартинки = 1;
		КонецЕсли;
		Если Результат.ПометкаУдаления Тогда
			Нов.НомерКартинки = Нов.НомерКартинки + 3;
		КонецЕсли;
		
		Если Нов.ТипДанных = "Строка" Тогда
			Если Результат.ВидСтроки = ПредопределенноеЗначение("Перечисление.ВидыТипаСтрока.Адрес") Тогда
				Нов.ТипДанных = Нов.ТипДанных + ": Адрес";
			ИначеЕсли Результат.ВидСтроки = ПредопределенноеЗначение("Перечисление.ВидыТипаСтрока.Телефон") Тогда
				Нов.ТипДанных = Нов.ТипДанных + ": Телефон";
			КонецЕсли;	
		КонецЕсли;
		Если Результат.Родитель.Родитель = ПредопределенноеЗначение("ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения.Справочник_Контрагенты") ИЛИ
				Результат.Родитель.Родитель.Родитель = ПредопределенноеЗначение("ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения.Справочник_Контрагенты") Тогда
			Нов.СправочникВладелец = "Контрагенты";
		Иначе
			Нов.СправочникВладелец = "Долговые обязательства";	
		КонецЕсли;
		
		ДобавитьКолонкуКТаблицеДанные(Результат);	
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура ДобавитьКолонкуКТаблицеДанные(Результат)
	Имя = "_" + СтрЗаменить(Результат.Код, " ", "_");
	Синоним = Результат.Наименование;
		
	//2 Добавляем колонку в таблицу тзДанные
	Реквизит = Новый РеквизитФормы(Имя, Результат.ТипЗначения, "тзДанные", Синоним);
	КолонкиТаблицыЦенДоб = Новый Массив;
	КолонкиТаблицыЦенДоб.Добавить(Реквизит);
			
	ПолеФормы = Элементы.Добавить("тзДанные" + Имя, Тип("ПолеФормы"), Элементы.тзДанные);
	ПолеФормы.Заголовок = Синоним;
	ЭтаФорма.ИзменитьРеквизиты(КолонкиТаблицыЦенДоб);
			  
	Попытка		
		ПолеФормы.ПутьКДанным = "тзДанные." + Имя;			
	Исключение
		Сообщить(ОписаниеОшибки());		
	КонецПопытки;
	ПолеФормы.Вид = ВидПоляФормы.ПолеВвода; 
		
	//3 Заполняем список СписокРеквизитов
	//4 Добавляем элемент в выпадающую менюшку
	ЗаполнитьСписокРеквизитов();
КонецПроцедуры

&НаКлиенте
Процедура ВыборСоответствийПараметрыСвязиОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если Лев(Элемент.Родитель.ТекущиеДанные.ТипДанных, СтрДлина("Справочник ссылка:")) = "Справочник ссылка:" Тогда
		ВыбранноеЗначение = "Наименование=" + ВыбранноеЗначение + ";";		
	ИначеЕсли Элемент.Родитель.ТекущиеДанные.ТипДанных = "Число" ИЛИ 
			Элемент.Родитель.ТекущиеДанные.ТипДанных = "Дата" Тогда
		ВыбранноеЗначение = ВыбранноеЗначение;
	Иначе
		ВыбранноеЗначение = ВыбранноеЗначение + "|0||";
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВыборСоответствийПередУдалением(Элемент, Отказ)
	Отказ = Истина;
	Если ТипЗнч(Элемент.ТекущиеДанные.ИмяДанных) <> Тип("Строка") Тогда	
		УдалитьКолонкуИзТаблицыДанные(Элемент.ТекущиеДанные.ИмяДанных);		
		Объект.ВыборСоответствий.Удалить(Элемент.ТекущиеДанные);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УдалитьКолонкуИзТаблицыДанные(Знач Элемент)
	//0 Удалить из Элементы.тзДанные
	Элементы.Удалить(Элементы.Найти("тзДанные" + "_" + Элемент.Код));
		
	//1 Удалить из Объект.тзДанные
	КолонкиТаблицы = Новый Массив;
	КолонкиТаблицы.Добавить("тзДанные." + "_" + Элемент.Код);	
	ЭтаФорма.ИзменитьРеквизиты(,КолонкиТаблицы);
	
	//2 Обновить СписокРеквизитов
	ЗаполнитьСписокРеквизитов();
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьДанные(Команда)
	Модифицированность = Истина;
	тзДанные.Очистить();	
КонецПроцедуры

&НаКлиенте
Процедура ВыборСоответствийПередНачаломИзменения(Элемент, Отказ)
	Если Элементы.ВыборСоответствий.ТекущиеДанные.ТипДанных = "Число" ИЛИ
			Элементы.ВыборСоответствий.ТекущиеДанные.ТипДанных = "Дата" Тогда
		Элементы.ВыборСоответствийПараметрыСвязи.КнопкаВыбора = Ложь;
	Иначе
		Элементы.ВыборСоответствийПараметрыСвязи.КнопкаВыбора = Истина;
	КонецЕсли;
	
	Если Элементы.ВыборСоответствий.ТекущиеДанные.ТипДанных = "Значения свойств объектов" ИЛИ 
			Элементы.ВыборСоответствий.ТекущиеДанные.ТипДанных = "Булево" Тогда
		Элементы.ВыборСоответствийПараметрыСвязи.КнопкаСпискаВыбора = Ложь;
	Иначе
		Элементы.ВыборСоответствийПараметрыСвязи.КнопкаСпискаВыбора = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СохранитьНастройкиСоответствий(Команда)
	Форма = ПолучитьФорму("Справочник.ФорматыЗагрузки.Форма.ФормаЭлемента",, ЭтаФорма);
	//Чуров
	ОткрытьФорму(Форма);
	//Форма.Открыть();
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьНастройкиСоответствий(Команда)
	Форма = ПолучитьФорму("Справочник.ФорматыЗагрузки.Форма.ФормаВыбора",, ЭтаФорма);
	//Чуров
	Результат = ОткрытьФорму(Форма);
	//Результат = Форма.ОткрытьМодально();
	Если Результат <> Неопределено Тогда
		ЗагрузитьВыборСоответствий(Результат);
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьВыборСоответствий(Результат)
	Для Каждого Элемент Из Объект.ВыборСоответствий Цикл
		Если ТипЗнч(Элемент.ИмяДанных) <> Тип("Строка") Тогда	
			УдалитьКолонкуИзТаблицыДанные(Элемент.ИмяДанных);		
		КонецЕсли;
	КонецЦикла;	
	Объект.ВыборСоответствий.Загрузить(Результат.ВыборСоответствий.Выгрузить());	
	Для Каждого Элемент Из Объект.ВыборСоответствий Цикл
		Если ТипЗнч(Элемент.ИмяДанных) <> Тип("Строка") Тогда	
			ДобавитьКолонкуКТаблицеДанные(Элемент.ИмяДанных);		
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

//! Тел
&НаСервере
Функция ПропарситьТелефон(Знач Телефон)
	Если СписокСимволов = Неопределено ИЛИ СписокЧисел = Неопределено Тогда
		СписокСимволов = Новый СписокЗначений();
		СписокСимволов.Добавить("0", "0");
		СписокСимволов.Добавить("1", "1");
		СписокСимволов.Добавить("2", "2");
		СписокСимволов.Добавить("3", "3");
		СписокСимволов.Добавить("4", "4");
		СписокСимволов.Добавить("5", "5");
		СписокСимволов.Добавить("6", "6");
		СписокСимволов.Добавить("7", "7");
		СписокСимволов.Добавить("8", "8");
		СписокСимволов.Добавить("9", "9");
		СписокСимволов.Добавить("(", "(");
		СписокСимволов.Добавить(")", ")");
		СписокСимволов.Добавить(" ", " ");
		СписокСимволов.Добавить("-", " ");
		
		СписокЧисел = Новый СписокЗначений();
		СписокЧисел.Добавить("0", "0");
		СписокЧисел.Добавить("1", "1");
		СписокЧисел.Добавить("2", "2");
		СписокЧисел.Добавить("3", "3");
		СписокЧисел.Добавить("4", "4");
		СписокЧисел.Добавить("5", "5");
		СписокЧисел.Добавить("6", "6");
		СписокЧисел.Добавить("7", "7");
		СписокЧисел.Добавить("8", "8");
		СписокЧисел.Добавить("9", "9");
	КонецЕсли;
	
	СписокРезультат = Новый СписокЗначений();
	Телефон = СокрЛП(Телефон);
	
	Для Индекс = 1 По СтрДлина(Телефон) Цикл
		СимволТелефона = Сред(Телефон, Индекс, 1);
		Если СписокСимволов.НайтиПоЗначению(СимволТелефона) = Неопределено Тогда
			СписокРезультат.Добавить(Сред(Телефон, Индекс), "Комментарий"); 
			Телефон = Лев(Телефон, Индекс - 1);
			Прервать;
		КонецЕсли;  
	КонецЦикла;
	
	КолОткрСкобок = 0;
	КолЗакрСкобок = 0;
	НомерПервой = 0;
	НомерПоследней = 0;
	Для Индекс = 1 По СтрДлина(Телефон) Цикл
		СимволТелефона = Сред(Телефон, Индекс, 1);
		Если СимволТелефона = "(" Тогда
			Если Индекс > 1 И НомерПервой = 0 Тогда
				НомерПервой = Индекс; 
			КонецЕсли;	
			КолОткрСкобок = КолОткрСкобок + 1;
		ИначеЕсли СимволТелефона = ")" Тогда
			НомерПоследней = Индекс;
			КолЗакрСкобок = КолЗакрСкобок + 1;
		КонецЕсли;
	КонецЦикла;	
	
	Если КолОткрСкобок <> КолЗакрСкобок Тогда
		СписокРезультат.Добавить(Телефон, "НомерТелефона");
		Возврат СписокРезультат;
	Иначе
		Если КолОткрСкобок = 0 Тогда
			Телефон = ОставитьТолькоИзСписка(Телефон, СписокЧисел);
			Если СтрДлина(Телефон) > 10 Тогда
				СписокРезультат.Добавить(Лев(Телефон, СтрДлина(Телефон)-10), "КодСтраны");
                Телефон = Прав(Телефон, 10);
			КонецЕсли;
			СписокРезультат.Добавить(ВставитьТире(Телефон), "НомерТелефона");
			Возврат СписокРезультат;
		ИначеЕсли КолОткрСкобок = 1 И Лев(Телефон, 1) = "(" Тогда
			КодГорода = Сред(Телефон, 2, НомерПоследней - 2);
			КодГорода = ОставитьТолькоИзСписка(КодГорода, СписокЧисел);	
			СписокРезультат.Добавить(КодГорода, "КодГорода");
			Телефон = Сред(Телефон, НомерПоследней + 1);
			Телефон = ОставитьТолькоИзСписка(Телефон, СписокЧисел);
			СписокРезультат.Добавить(ВставитьТире(Телефон), "НомерТелефона");
			Возврат СписокРезультат;
		Иначе
			КодСтраны = Лев(Телефон, НомерПервой - 1);
			КодСтраны = ОставитьТолькоИзСписка(КодСтраны, СписокЧисел);
			СписокРезультат.Добавить(КодСтраны, "КодСтраны");
			КодГорода = Сред(Телефон, НомерПервой + 1, НомерПоследней - НомерПервой - 1);
			КодГорода = ОставитьТолькоИзСписка(КодГорода, СписокЧисел);	
			СписокРезультат.Добавить(КодГорода, "КодГорода");
			Телефон = Сред(Телефон, НомерПоследней + 1);
			Телефон = ОставитьТолькоИзСписка(Телефон, СписокЧисел);
			СписокРезультат.Добавить(ВставитьТире(Телефон), "НомерТелефона");
			Возврат СписокРезультат;
		КонецЕсли;
	КонецЕсли;	
КонецФункции

//! Тел
&НаСервере
Функция ОставитьТолькоИзСписка(Телефон, СписокЧисел)
	ТелНовый = "";
	Для Индекс = 1 По СтрДлина(Телефон) Цикл
		СимволТелефона = Сред(Телефон, Индекс, 1);
		Если СписокЧисел.НайтиПоЗначению(СимволТелефона) <> Неопределено Тогда
			ТелНовый = ТелНовый + СимволТелефона;
		КонецЕсли;
	КонецЦикла;
	Возврат ТелНовый;
КонецФункции

//! Тел
&НаСервере
Функция ВставитьТире(Знач Телефон)
	Длн = СтрДлина(Телефон);
	//Если Длн > 10 Тогда
	//	Возврат Лев(Телефон, Длн-10) + "-" + ПоделитьТире(Сред(Телефон, Длн-9, 6), 3) + "-" + ПоделитьТире(Прав(Телефон, 4), 2); 
	//Иначе
	Если Длн > 8 Тогда
		Возврат ПоделитьТире(Лев(Телефон, Длн-4), 3) + "-" + Сред(Телефон, Длн-3, 2) + "-" + Прав(Телефон, 2); 
	ИначеЕсли Длн = 8 ИЛИ Длн = 6 ИЛИ Длн = 4 Тогда
	    Возврат ПоделитьТире(Телефон, 2);
	ИначеЕсли Длн = 7 ИЛИ Длн = 5 Тогда
		Возврат Лев(Телефон, 3) + "-" + ПоделитьТире(Сред(Телефон, 4), 2);
	Иначе
		Возврат Телефон;
	КонецЕсли;
КонецФункции

//! Тел
&НаСервере
Функция ПоделитьТире(Знач Телефон, ЧислоЦифр)
	НовыйТел = "";
	Пока СтрДлина(Телефон) > 0 Цикл
		НовыйТел = Прав(Телефон, ЧислоЦифр) + "-" + НовыйТел;
		Телефон = Лев(Телефон, СтрДлина(Телефон) - ЧислоЦифр);
	КонецЦикла;
	Возврат Лев(НовыйТел, СтрДлина(НовыйТел)-1);
КонецФункции

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ТЗ = ДокументОбъект.ВернутьСодержимоеХранилищаТЗДанных();
	тзДанные.Загрузить(ТЗ);
КонецПроцедуры
