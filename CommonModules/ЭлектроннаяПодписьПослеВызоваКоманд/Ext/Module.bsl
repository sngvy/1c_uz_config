&НаКлиенте
Процедура ПослеШифрования(Результат, ПараметрыШифрования) Экспорт

	Если Не Результат.Успех Тогда
		Возврат;
	КонецЕсли;
	
	ИмяРабочегоКаталога = РаботаСФайламиСлужебныйКлиент.РабочийКаталогПользователя();
	
	МассивФайловВРабочемКаталогеДляУдаления = Новый Массив;
	
	ЭлектроннаяПодписьПослеВызоваКомандСервер.ЗашифроватьСервер(
		Результат.МассивДанныхДляЗанесенияВБазу,
		Результат.МассивОтпечатков,
		МассивФайловВРабочемКаталогеДляУдаления,
		ИмяРабочегоКаталога,
		ПараметрыШифрования.ОбъектСсылка);
	
	РаботаСФайламиСлужебныйКлиент.ИнформироватьОШифровании(
		МассивФайловВРабочемКаталогеДляУдаления,
		ПараметрыШифрования.ДанныеФайла.Владелец,
		ПараметрыШифрования.ОбъектСсылка);

	Если ПараметрыШифрования["Архив"] Тогда
	
		РаботаСФайламиСлужебныйКлиент.СохранитьФайлВместеСПодписью(
			ПараметрыШифрования.АрхивНБКИ,
			ПараметрыШифрования.УникальныйИдентификатор);
	
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПослеРасшифровки(Результат, ПараметрыВыполнения) Экспорт
	
	Если Результат = Ложь Или Не Результат.Успех Тогда
		Возврат;
	КонецЕсли;
	
	ИмяРабочегоКаталога = РаботаСФайламиСлужебныйКлиент.РабочийКаталогПользователя();
	
	ЭлектроннаяПодписьПослеВызоваКомандСервер.РасшифроватьСервер(
		Результат.МассивДанныхДляЗанесенияВБазу,
		ИмяРабочегоКаталога,
		ПараметрыВыполнения.ОбъектСсылка);
	
	РаботаСФайламиСлужебныйКлиент.ИнформироватьОРасшифровке(
		ПараметрыВыполнения.ДанныеФайла.Владелец,
		ПараметрыВыполнения.ОбъектСсылка);

КонецПроцедуры
