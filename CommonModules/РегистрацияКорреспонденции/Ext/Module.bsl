
Функция СледующийНомер(ТипПисьма, ОбъектВх) Экспорт

	Организация = ПараметрыСеанса.ТекущийПользователь.Организация;
	
	Возврат ПолучитьНомер(ТипПисьма, Организация, ОбъектВх);

КонецФункции // ()

Функция ПолучитьНомер(ТипПисьма, Организация, ДО) Экспорт
	МенеджерЗаписи = ЗаписьНумерацииНаТекущуюДату(ТипПисьма.Нумератор, Организация);
	Если МенеджерЗаписи.Нумератор = Справочники.Нумераторы.ПустаяСсылка() ИЛИ МенеджерЗаписи.Нумератор = Неопределено Тогда
		МенеджерЗаписи.Нумератор = ТипПисьма.Нумератор;
	КонецЕсли;
	МенеджерЗаписи.ТекущийНомер = МенеджерЗаписи.ТекущийНомер + 1;
	МенеджерЗаписи.Организация = Организация;
	МенеджерЗаписи.ПериодНумерации = НачалоПериодаНумерации(МенеджерЗаписи.Нумератор.Периодичность, ТекущаяДатаСеанса());
	МенеджерЗаписи.Записать(Истина);
	Возврат Справочники.ШаблоныТекстаДляАвтоинформирования.ВычислитьФункцию(ТипПисьма.Нумератор.ФункцияНумерации.Функция, ДО, МенеджерЗаписи.ТекущийНомер);
КонецФункции

Функция ПолучитьТекущийНомер(ТипПисьма, Организация, ДО) Экспорт
	МенеджерЗаписи = ЗаписьНумерацииНаТекущуюДату(ТипПисьма.Нумератор, Организация);
	Возврат Справочники.ШаблоныТекстаДляАвтоинформирования.ВычислитьФункцию(ТипПисьма.Нумератор.ФункцияНумерации.Функция, ДО, МенеджерЗаписи.ТекущийНомер);
КонецФункции

Функция ЗаписьНумерацииНаТекущуюДату(Нумератор, Организация)

	МенеджерЗаписи = РегистрыСведений.Нумерация.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Нумератор = Нумератор;
	МенеджерЗаписи.Организация = Организация;
	МенеджерЗаписи.ПериодНумерации = НачалоПериодаНумерации(Нумератор.Периодичность, ТекущаяДатаСеанса());
	МенеджерЗаписи.Прочитать();
	
	Возврат МенеджерЗаписи;

КонецФункции // ()


Процедура СоздатьРегистраторИсходящейКорреспонденции(ДО, Шаблон, ДокументПрикрепление, РегНомер) Экспорт
	СправочникОбъект = Справочники.ИсходящаяКорреспонденция.СоздатьЭлемент();
	СправочникОбъект.Автор = ПараметрыСеанса.ТекущийПользователь;
	СправочникОбъект.Организация = ПараметрыСеанса.ТекущийПользователь.Организация;
	СправочникОбъект.Объект = ДО;
	СправочникОбъект.ТипПисьма = Шаблон.ТипПисьма;
	СправочникОбъект.Наименование = Шаблон.ТемаПисьма;
	СправочникОбъект.РегистрационныйНомер = РегНомер;//ПолучитьТекущийНомер(Шаблон.ТипПисьма, ПараметрыСеанса.ТекущийПользователь.Организация, ДО);
	СправочникОбъект.ДатаРегистрации = ТекущаяДатаСеанса();
	СправочникОбъект.НомерЗакреплен = Истина;
	СправочникОбъект.Подписант = ПараметрыСеанса.ТекущийПользователь;
	Прикрепление = СправочникОбъект.ПрикрепленныеФайлы.Добавить();
	Прикрепление.ПрикрепленныйФайл = ДокументПрикрепление;
	ЗаполнитьТЧФайлы(СправочникОбъект, ДО, Шаблон);   
	
	НастойкаПараметровПисем = бит_ИнтеграцияПочтаРФ.ВернутьПараметрыПисем(СправочникОбъект.ТипПисьма);
	бит_ИнтеграцияПочтаРФ.ЗаполнитьПараметрыИсходящейКорреспонденции(СправочникОбъект, НастойкаПараметровПисем);
	
	СправочникОбъект.Записать();
	ДокументОбъект = ДокументПрикрепление.ПолучитьОбъект();
	ДокументОбъект.РегистраторКорреспонденции = СправочникОбъект.Ссылка;
	ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
КонецПроцедуры

Процедура ЗаполнитьТЧФайлы(ИсхКорр, Об, ШаблонПечФормы) Экспорт
	ТипыФайловШаблона = Новый Массив;
	Если ТипЗнч(ШаблонПечФормы) = Тип("СправочникСсылка.КомплектыФайловДляПечати") Тогда
		Для каждого ТипФ из ШаблонПечФормы.ТипыФайлов Цикл
			ТипыФайловШаблона.Добавить(ТипФ.ТипФайла);
		КонецЦикла;
	Иначе
		ТипыФайловШаблона.Добавить(ШаблонПечФормы.ТипПрикрепляемогоФайла);
	КонецЕсли;
	
	
	Текст = ОбъектыСервер.ПолучитьТекстЗапросаПоискаФайловПоШаблону();
	Запрос = Новый Запрос(Текст);
	Запрос.УстановитьПараметр("Объект",Об);
	Запрос.УстановитьПараметр("МассивТиповФайлов", ТипыФайловШаблона);
	
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	ЕстьТипы = Новый массив;
	
	Для каждого стр из  Результат Цикл
		НовСтрока = ИсхКорр.ПодобранныеФайлы.Добавить();
		НовСтрока.Файл = стр.ИмяФайла;
		НовСтрока.ТипФайла = стр.ТипФайла;
		НовСтрока.Регистратор = стр.Регистратор;
	КонецЦикла;
	
	Результат.Свернуть("Регистратор");
	Для Каждого Элемент Из Результат Цикл
		Нов = ИсхКорр.ПрикрепленныеФайлы.Добавить();
		Нов.ПрикрепленныйФайл = Элемент.Регистратор;
	КонецЦикла;
КонецПроцедуры

// Вычисляет начало периода нумерации
Функция НачалоПериодаНумерации(Периодичность, Дата) Экспорт
	
	Возврат РегистрыСведений.Нумерация.НачалоПериодаНумерации(
		Периодичность,
		Дата
	);
	
КонецФункции

// Вычисляет начало периода нумерации
Функция КонецПериодаНумерации(Периодичность, Дата) Экспорт
	
	Если Периодичность = Перечисления.ПериодичностьНумераторов.День Тогда
		ПериодНумерации = КонецДня(Дата);
		
	ИначеЕсли Периодичность = Перечисления.ПериодичностьНумераторов.Месяц Тогда
		ПериодНумерации = КонецМесяца(Дата);
		
	ИначеЕсли Периодичность = Перечисления.ПериодичностьНумераторов.Квартал Тогда
		ПериодНумерации = КонецКвартала(Дата);
		
	ИначеЕсли Периодичность = Перечисления.ПериодичностьНумераторов.Год Тогда
		ПериодНумерации = КонецГода(Дата);
		
	ИначеЕсли Периодичность = Перечисления.ПериодичностьНумераторов.Непериодический Тогда 
		ПериодНумерации = '39990101';
		
	КонецЕсли;
	
	Возврат ПериодНумерации;
	
КонецФункции