
Функция РезультативныеЗвонки(Должник) Экспорт
	
	КоличествоЗвонковДень = Константы.ЗвонкиДень.Получить();
	КоличествоЗвонковМесяц = Константы.ЗвонкиМесяц.Получить();
	КоличествоЗвонковНеделя = Константы.ЗвонкиНеделя.Получить();
	//Проверяем количество за день
	Если Константы.КоличествоРезультативныхЗвонков.Получить() Тогда
		Запрос = Новый Запрос("ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Мероприятие.Ссылка) КАК ЧислоРезультативных
		|ИЗ
		|	Задача.Мероприятие КАК Мероприятие
		|ГДЕ
		|	Мероприятие.ДатаВыполнения > &НачалоДня
		|	И (Мероприятие.Объект = &Должник
		|			ИЛИ Мероприятие.Объект.Должник = &Должник)
		|	И Мероприятие.Выполнена = ИСТИНА
		|	И Мероприятие.ПометкаУдаления = ЛОЖЬ
		|	И Мероприятие.Результат.РезультативныйКонтакт = ИСТИНА
		|	И Мероприятие.ТипМероприятия.Наименование = ""Телефонный звонок исходящий""");	
		Запрос.УстановитьПараметр("НачалоДня", НачалоДня(ТекущаяДатаСеанса()));
		Запрос.УстановитьПараметр("Должник", Должник);
		Результат = Запрос.Выполнить().Выбрать();
		Если Результат.Следующий() Тогда
			Если Результат.ЧислоРезультативных = КоличествоЗвонковДень
				ИЛИ Результат.ЧислоРезультативных > КоличествоЗвонковДень Тогда
				Сообщить("Количество звонков сегодня: "+КоличествоЗвонковДень);
				Возврат Истина;
			Иначе
			КонецЕсли;
		Иначе
		КонецЕсли;
		
		//Затем количество за неделю
		Запрос = Новый Запрос("ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Мероприятие.Ссылка) КАК ЧислоРезультативных
		|ИЗ
		|	Задача.Мероприятие КАК Мероприятие
		|ГДЕ
		|	Мероприятие.ДатаВыполнения > &НачалоНедели
		|	И (Мероприятие.Объект = &Должник
		|			ИЛИ Мероприятие.Объект.Должник = &Должник)
		|	И Мероприятие.Выполнена = ИСТИНА
		|	И Мероприятие.ПометкаУдаления = ЛОЖЬ
		|	И Мероприятие.Результат.РезультативныйКонтакт = ИСТИНА
		|	И Мероприятие.ТипМероприятия.Наименование = ""Телефонный звонок исходящий""");	
		Запрос.УстановитьПараметр("НачалоНедели", НачалоНедели(ТекущаяДатаСеанса()));
		Запрос.УстановитьПараметр("Должник", Должник);
		Результат = Запрос.Выполнить().Выбрать();
		Если Результат.Следующий() Тогда
			Если Результат.ЧислоРезультативных = КоличествоЗвонковНеделя
				ИЛИ Результат.ЧислоРезультативных > КоличествоЗвонковНеделя Тогда
                Сообщить("Количество звонков на этой неделе: "+КоличествоЗвонковНеделя);
				Возврат Истина;
			Иначе
			КонецЕсли;
		Иначе
		КонецЕсли;
		//Затем количество за месяц
		Запрос = Новый Запрос("ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Мероприятие.Ссылка) КАК ЧислоРезультативных
		|ИЗ
		|	Задача.Мероприятие КАК Мероприятие
		|ГДЕ
		|	Мероприятие.ДатаВыполнения > &НачалоМесяца
		|	И (Мероприятие.Объект = &Должник
		|			ИЛИ Мероприятие.Объект.Должник = &Должник)
		|	И Мероприятие.Выполнена = ИСТИНА
		|	И Мероприятие.ПометкаУдаления = ЛОЖЬ
		|	И Мероприятие.Результат.РезультативныйКонтакт = ИСТИНА
		|	И Мероприятие.ТипМероприятия.Наименование = ""Телефонный звонок исходящий""");	
		Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(ТекущаяДатаСеанса()));
		Запрос.УстановитьПараметр("Должник", Должник);
		Результат = Запрос.Выполнить().Выбрать();
		Если Результат.Следующий() Тогда
			Если Результат.ЧислоРезультативных = КоличествоЗвонковМесяц
				ИЛИ Результат.ЧислоРезультативных > КоличествоЗвонковМесяц Тогда
				Сообщить("Количество звонков в этом месяце: "+КоличествоЗвонковМесяц);
				Возврат Истина;
			Иначе
				Возврат Ложь;
			КонецЕсли;
		Иначе
			Возврат Ложь;
		КонецЕсли;		
	Иначе 
		Возврат Ложь;
	КонецЕсли;
КонецФункции

Функция РезультативныеЗвонкиМесяц(Должник) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Мероприятие.Ссылка) КАК ЧислоРезультативных
	|ИЗ
	|	Задача.Мероприятие КАК Мероприятие
	|ГДЕ
	|	Мероприятие.ДатаВыполнения > &НачалоМесяца
	|	И Мероприятие.Объект = &Должник
	|	И Мероприятие.Выполнена = ИСТИНА
	|	И Мероприятие.ПометкаУдаления = ЛОЖЬ
	|	И Мероприятие.Результат.РезультативныйКонтакт = ИСТИНА
	|	И Мероприятие.ТипМероприятия.Наименование = ""Телефонный звонок исходящий""");	
	Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(ТекущаяДатаСеанса()));
	Запрос.УстановитьПараметр("Должник", Должник);
	Результат = Запрос.Выполнить().Выбрать();
	Если Результат.Следующий() Тогда
		Если Результат.ЧислоРезультативных = 8
			ИЛИ Результат.ЧислоРезультативных > 8 Тогда
			Сообщить("Количество звонков в этом месяце: "+Результат.ЧислоРезультативных);
			Возврат Истина;
		Иначе
			Возврат Ложь;
		КонецЕсли;
	Иначе
		Возврат Ложь;
	КонецЕсли;
КонецФункции

Функция ЗапретЗвонка(ЗапретЗвонка, НачалоЗапретаЗвонка, КонецЗапретаЗвонка) Экспорт
	
	Возврат ЗапретЗвонка
		И НачалоЗапретаЗвонка < ТекущаяДатаСеанса()
		И КонецЗапретаЗвонка > ТекущаяДатаСеанса()
		И ЗначениеЗаполнено(НачалоЗапретаЗвонка)
		И ЗначениеЗаполнено(КонецЗапретаЗвонка);
	//Если ЗапретЗвонка И НачалоЗапретаЗвонка < ТекущаяДатаСеанса() И КонецЗапретаЗвонка > ТекущаяДатаСеанса() И ЗначениеЗаполнено(НачалоЗапретаЗвонка) И ЗначениеЗаполнено(КонецЗапретаЗвонка) Тогда
	//	Возврат Истина;
	//Иначе
	//	Возврат Ложь;
	//КонецЕсли;
КонецФункции

Функция КонтрольЧасовогоПояса(Должник) Экспорт
	Если Константы.ЧасовойПоясЗвонка.Получить() Тогда
		Если Не ЗначениеЗаполнено(Должник.ЧасовойПояс) Тогда
			Сообщить("Не заполнен часовой пояс должника!");
			Возврат Истина;
		КонецЕсли;
		
		УниверсальноеВремя = УниверсальноеВремя(ТекущаяДата(), Константы.ЧасовойПояс.Получить());
		
		ОшибочныйОтрицательныйПояс = ПоискОшибочногоПояса(Должник.ЧасовойПояс);
		Если ОшибочныйОтрицательныйПояс и НЕ Должник.ЧасовойПояс = "EET" Тогда
			МестноеВремя = МестноеВремя(УниверсальноеВремя, Должник.ЧасовойПояс);// минус еще один час
			Пересчет = МестноеВремя - 3600;
			МестноеВремя = Пересчет; 
		ИначеЕсли НЕ ОшибочныйОтрицательныйПояс и Должник.ЧасовойПояс = "EET" Тогда
			// Заменить CET на EET, чтобы звонить в Калининград с 9:00
			ЧП = "EET";
			МестноеВремя = МестноеВремя(УниверсальноеВремя, ЧП);
		ИначеЕсли НЕ ОшибочныйОтрицательныйПояс и НЕ Должник.ЧасовойПояс = "EET" Тогда
			МестноеВремя = МестноеВремя(УниверсальноеВремя, Должник.ЧасовойПояс);
		КонецЕсли;	
		
		Интервал = Новый Структура;
		Интервал.Вставить("ВремяОт");
		Интервал.Вставить("ВремяДо");
		ЗаполнитьИнтервал(МестноеВремя,Интервал);
		//Если Формат(МестноеВремя, "ДЛФ=В")< Формат(Интервал.ВремяОт,"ДЛФ=В") или Формат(МестноеВремя, "ДЛФ=В")> Формат(Интервал.ВремяДо,"ДЛФ=В") тогда
		Если МестноеВремя < Интервал.ВремяОт или МестноеВремя > Интервал.ВремяДо Тогда
			Сообщить("Запрещенное время взаимодействия!");
			Возврат Истина;
		Иначе 
			Возврат Ложь;
		КонецЕсли;	
	Иначе 
		Возврат Ложь;
	КонецЕсли;
КонецФункции

Функция ДоступностьДанных(ДО) Экспорт
	Если РольДоступна("Оператор") И Не РольДоступна("тсАдминистрирование") И Не РольДоступна("ПолныеПрава") Тогда
		Запрос = Новый Запрос("ВЫБРАТЬ
		                      |	ОбъектыВРаботеОстатки.Объект КАК Объект
		                      |ИЗ
		                      |	РегистрНакопления.ОбъектыВРаботе.Остатки(
		                      |			,
		                      |			Сотрудник = &Сотрудник
		                      |				И Объект = &Объект) КАК ОбъектыВРаботеОстатки");
		Запрос.УстановитьПараметр("Объект", ДО);
		Запрос.УстановитьПараметр("Сотрудник", ПараметрыСеанса.ТекущийПользователь);
		Результат = Запрос.Выполнить().Выбрать();
		Если Результат.Следующий() Тогда
			Возврат Истина;
		Иначе
			Возврат Ложь;
		КонецЕсли;
	Иначе
		Возврат Истина;
	КонецЕсли;	
КонецФункции

Процедура ЗаполнитьИнтервал(МестноеВремя, Интервал) Экспорт
	Если ДеньНедели(МестноеВремя) = 6 или ДеньНедели(МестноеВремя) = 7 Тогда
		ВремяОт = Константы.ВыходныеВремяОт.Получить();
		ВремяДо = Константы.ВыходныеВремяДо.Получить();
		//Выходной
	Иначе
		//Будний
		ВремяОт = Константы.БудниВремяОт.Получить();
		ВремяДо = Константы.БудниВремяДо.Получить();
	КонецЕсли;
	
	МестноеВремяДень = НачалоДня(МестноеВремя);
	Интервал.ВремяОт = МестноеВремяДень + (ВремяОт - НачалоДня(ВремяОт));
	Интервал.ВремяДо = МестноеВремяДень + (ВремяДо - НачалоДня(ВремяДо));
	
КонецПроцедуры

Функция ПоискОшибочногоПояса(ЧП) Экспорт
	Массив = Новый Массив;
	Массив.Добавить("GMT-01:00");
	Массив.Добавить("GMT-06:00");
	Массив.Добавить("GMT-07:00");
	Массив.Добавить("GMT-08:00");
	Массив.Добавить("GMT-10:00");	
	Для Каждого Представление из Массив Цикл 
		Если СтрНайти(Представление,ПредставлениеЧасовогоПояса(ЧП),,,) > 0 Тогда
			Возврат Истина;
		Иначе
			Продолжить;
		КонецЕсли;
	КонецЦикла;
	Возврат Ложь;
КонецФункции

Функция КонтрольСМС(Должник) Экспорт
	//Изм. Лебедева 14.10.2019
	
	КоличествоСМСДень = Константы.СообщенияДень.Получить();
	КоличествоСМСНеделя = Константы.СообщенияНеделя.Получить();
	КоличествоСМСМесяц = Константы.СообщенияМесяц.Получить();
	//И (Мероприятие.Объект = &Должник
	//	|			ИЛИ Мероприятие.Объект.Должник = &Должник
	
	Если Константы.КоличествоСМС.Получить() Тогда
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СообщенияСМС.GUID) КАК КоличествоСообщений
		|ИЗ
		|	РегистрСведений.СообщенияСМС КАК СообщенияСМС
		|ГДЕ
		|	СообщенияСМС.Входящее = ЛОЖЬ
		|	И (СообщенияСМС.Объект = &Объект
		|			ИЛИ СообщенияСМС.Объект.Должник = &Объект)
		|	И СообщенияСМС.Дата > &НачалоДня
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ РСЕмаилСообщения.GUID)
		|ИЗ
		|	РегистрСведений.РСЕмаилСообщения КАК РСЕмаилСообщения
		|ГДЕ
		|	РСЕмаилСообщения.Отправлено = ИСТИНА
		|	И РСЕмаилСообщения.Объект.Должник = &Объект
		|	И РСЕмаилСообщения.ДатаОтправки > &НачалоДня
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СообщениеSMSАдресаты.Ссылка)
		|ИЗ
		|	Документ.СообщениеSMS.Адресаты КАК СообщениеSMSАдресаты
		|ГДЕ
		|	СообщениеSMSАдресаты.Контакт.Должник = &Объект
		|	И СообщениеSMSАдресаты.Ссылка.Дата > &НачалоДня");
		Запрос.УстановитьПараметр("НачалоДня",НачалоДня(ТекущаяДатаСеанса()));
		Запрос.УстановитьПараметр("Объект",Должник);
		Результат = Запрос.Выполнить().Выбрать();
		//Если Результат.Следующий() Тогда
		//	Если Результат.КоличествоСообщений > КоличествоСМСДень-1 Тогда
		//		Сообщить("Число сообщений сегодня: "+КоличествоСМСДень);
		//		Возврат Истина;
		//	Иначе
		//	КонецЕсли;
		//Иначе
		//	
		//КонецЕсли;
		Пока Результат.Следующий() Цикл
			Если Результат.КоличествоСообщений = КоличествоСМСДень Тогда
				Сообщить("Количество СМС сегодня: "+КоличествоСМСДень);
				Возврат Истина;
			Иначе
			КонецЕсли;
		КонецЦикла;	
		
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СообщенияСМС.GUID) КАК КоличествоСообщений
		|ИЗ
		|	РегистрСведений.СообщенияСМС КАК СообщенияСМС
		|ГДЕ
		|	СообщенияСМС.Входящее = ЛОЖЬ
		|	И (СообщенияСМС.Объект = &Объект
		|			ИЛИ СообщенияСМС.Объект.Должник = &Объект)
		|	И СообщенияСМС.Дата > &НачалоНедели
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ РСЕмаилСообщения.GUID)
		|ИЗ
		|	РегистрСведений.РСЕмаилСообщения КАК РСЕмаилСообщения
		|ГДЕ
		|	РСЕмаилСообщения.Отправлено = ИСТИНА
		|	И РСЕмаилСообщения.ДатаОтправки > &НачалоНедели
		|	И РСЕмаилСообщения.Объект.Должник = &Объект
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СообщениеSMSАдресаты.Ссылка)
		|ИЗ
		|	Документ.СообщениеSMS.Адресаты КАК СообщениеSMSАдресаты
		|ГДЕ
		|	СообщениеSMSАдресаты.Контакт.Должник = &Объект
		|	И СообщениеSMSАдресаты.Ссылка.Дата > &НачалоНедели");
		Запрос.УстановитьПараметр("НачалоНедели",НачалоНедели(ТекущаяДатаСеанса()));
		Запрос.УстановитьПараметр("Объект",Должник);
		Результат = Запрос.Выполнить().Выбрать();
		//Если Результат.Следующий() Тогда
		//	Если Результат.КоличествоСообщений > КоличествоСМСНеделя-1 Тогда
		//		Сообщить("Число сообщений на этой неделе: "+КоличествоСМСНеделя);
		//		Возврат Истина;
		//	Иначе
		//	КонецЕсли;
		//Иначе
		//КонецЕсли;
		Пока Результат.Следующий() Цикл
			Если Результат.КоличествоСообщений = КоличествоСМСНеделя Тогда
				Сообщить("Количество СМС на этой неделе: "+КоличествоСМСНеделя);
				Возврат Истина;
			Иначе
			КонецЕсли;
		КонецЦикла;
		
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СообщенияСМС.GUID) КАК КоличествоСообщений,
		|	NULL КАК Ссылка
		|ИЗ
		|	РегистрСведений.СообщенияСМС КАК СообщенияСМС
		|ГДЕ
		|	СообщенияСМС.Входящее = ЛОЖЬ
		|	И (СообщенияСМС.Объект = &Объект
		|			ИЛИ СообщенияСМС.Объект.Должник = &Объект)
		|	И СообщенияСМС.Дата > &НачалоМесяца
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ РСЕмаилСообщения.GUID),
		|	NULL
		|ИЗ
		|	РегистрСведений.РСЕмаилСообщения КАК РСЕмаилСообщения
		|ГДЕ
		|	РСЕмаилСообщения.Объект.Должник = &Объект
		|	И РСЕмаилСообщения.ДатаОтправки > &НачалоМесяца
		|	И РСЕмаилСообщения.Отправлено = ИСТИНА
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	NULL,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СообщениеSMSАдресаты.Ссылка)
		|ИЗ
		|	Документ.СообщениеSMS.Адресаты КАК СообщениеSMSАдресаты
		|ГДЕ
		|	СообщениеSMSАдресаты.Контакт.Должник = &Объект
		|	И СообщениеSMSАдресаты.Ссылка.Дата > &НачалоМесяца");
		Запрос.УстановитьПараметр("НачалоМесяца",НачалоМесяца(ТекущаяДатаСеанса()));
		Запрос.УстановитьПараметр("Объект",Должник);
		Результат = Запрос.Выполнить().Выбрать();
		//Если Результат.Следующий() Тогда
		//	Если Результат.КоличествоСообщений > КоличествоСМСМесяц-1 Тогда
		//		Сообщить("Число сообщений в этом месяце: "+КоличествоСМСМесяц);
		//		Возврат Истина;
		//	Иначе
		//		Возврат Ложь;
		//	КонецЕсли;
		//Иначе
		//	Возврат Ложь;
		//КонецЕсли;
		Пока Результат.Следующий() Цикл
			Если Результат.КоличествоСообщений = КоличествоСМСМесяц Тогда
				Сообщить("Количество СМС в этом месяце: "+КоличествоСМСМесяц);
				Возврат Истина;
				Прервать;
			Иначе
				Возврат Ложь;
			КонецЕсли;
		КонецЦикла;	
	Иначе
		Возврат Ложь;
	КонецЕсли;	
КонецФункции	

Функция КонтрольСМС230ФЗ(Должник,ДатаСМС) Экспорт
	
	ДатаСМС = ?(ЗначениеЗаполнено(ДатаСМС), ДатаСМС, ТекущаяДатаСеанса());
	УниверсальнаяДата = УниверсальноеВремя(ДатаСМС, Константы.ЧасовойПояс.Получить()); 
	СмещениеОтСтандартногоВремени = СмещениеСтандартногоВремени(Должник.ЧасовойПояс, УниверсальнаяДата);
	ДатаСМСДолжника = УниверсальнаяДата + СмещениеОтСтандартногоВремени; 
	
	Структура = КонтрольСМСПоКоличеству(Должник,ДатаСМСДолжника,Новый Структура);
	Если Структура.Свойство("Ошибка") Тогда
		Возврат Структура;
	ИначеЕсли Структура.Свойство("НеФЗ230") Тогда
		Структура.Вставить("ДатаКогдаОтправить",ДатаСМС);
		Структура.Вставить("ДатаАктуальностиОтправки",Дата(1,1,1));
		Возврат Структура;
	Иначе
		УстановитьПривилегированныйРежим(Истина);
		ПараметрыПолучения = КалендарныеГрафики.ПараметрыПолученияБлижайшихРабочихДат();
		ПараметрыПолучения.ПолучатьПредшествующие = Ложь;
		ПараметрыПолучения.ВызыватьИсключение = Ложь;
		мДатаСМС = Новый Массив;
		мДатаСМС.Добавить(ДатаСМСДолжника);
		ДниКалендаря = КалендарныеГрафики.БлижайшиеРабочиеДаты(Справочники.ПроизводственныеКалендари.ФЗ230, мДатаСМС, ПараметрыПолучения);
		УстановитьПривилегированныйРежим(Ложь);
		НачалоДняДатаСМС = НачалоДня(ДатаСМСДолжника);
		БудниВремяОт = Константы.БудниВремяОт.Получить();
		БудниВремяДо = Константы.БудниВремяДо.Получить() - 1;
		ВыходныеВремяОт = Константы.ВыходныеВремяОт.Получить();
		ВыходныеВремяДо = Константы.ВыходныеВремяДо.Получить() - 1;
		ПустаяДата = Дата(1, 1, 1);
		//Если день будний и не праздничный
		Если НачалоДняДатаСМС = ДниКалендаря.Получить(НачалоДняДатаСМС) Тогда
			//Если дата СМС совпадает с интервалом
			Если ДатаСМСДолжника > НачалоДняДатаСМС + (БудниВремяОт - ПустаяДата) И ДатаСМСДолжника < НачалоДняДатаСМС + (БудниВремяДо - ПустаяДата) Тогда
				Структура.Вставить("ДатаКогдаОтправить", ?(ДатаСМСДолжника < ТекущаяДатаСеанса(), ТекущаяДатаСеанса(), ДатаСМСДолжника)); //если попали сегодня в интервал, но время раньше текущего 
				Структура.Вставить("ДатаАктуальностиОтправки", НачалоДняДатаСМС + (БудниВремяДо - ПустаяДата));
				Возврат Структура;
			//Если время выподает на утро до начала обзвона
			ИначеЕсли  ДатаСМСДолжника < НачалоДняДатаСМС + (БудниВремяОт - ПустаяДата) И ДатаСМСДолжника < НачалоДняДатаСМС + (БудниВремяДо - ПустаяДата) Тогда
				Структура.Вставить("ДатаКогдаОтправить", НачалоДняДатаСМС + (БудниВремяОт - ПустаяДата));
				Структура.Вставить("ДатаАктуальностиОтправки", НачалоДняДатаСМС + (БудниВремяДо - ПустаяДата));
				Возврат Структура;
			//Переносим смс на завтра
			Иначе
				Структура = КонтрольСМС230ФЗПереносНаЗавтра(НачалоДняДатаСМС + 86400, Структура);
				Возврат Структура;
			КонецЕсли;
		//Иначе день праздничный или выходной	
		Иначе
			//Если дата СМС совпадает с интервалом
			Если ДатаСМСДолжника > НачалоДняДатаСМС + (ВыходныеВремяОт - ПустаяДата) И ДатаСМСДолжника < НачалоДняДатаСМС + (ВыходныеВремяДо - ПустаяДата) Тогда
				Структура.Вставить("ДатаКогдаОтправить", ДатаСМСДолжника);
				Структура.Вставить("ДатаАктуальностиОтправки", НачалоДняДатаСМС + (ВыходныеВремяДо - ПустаяДата));
				Возврат Структура;
			//Если время выподает на утро до начала обзвона
			ИначеЕсли  ДатаСМСДолжника < НачалоДняДатаСМС + (ВыходныеВремяОт - ПустаяДата) И ДатаСМСДолжника < НачалоДняДатаСМС + (ВыходныеВремяДо - ПустаяДата) Тогда
				Структура.Вставить("ДатаКогдаОтправить", НачалоДняДатаСМС + (ВыходныеВремяОт - ПустаяДата));
				Структура.Вставить("ДатаАктуальностиОтправки", НачалоДняДатаСМС + (ВыходныеВремяДо - ПустаяДата));
				Возврат Структура;
			//Переносим смс на завтра
			Иначе
				Структура = КонтрольСМС230ФЗПереносНаЗавтра(НачалоДняДатаСМС + 86400, Структура);	
				ВОзврат Структура;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Возврат Структура;
	
КонецФункции // КонтрольСМС230ФЗ()

Функция КонтрольСМС230ФЗПереносНаЗавтра(ДатаСМСДолжника,Структура)
	УстановитьПривилегированныйРежим(Истина);
	ПараметрыПолучения = КалендарныеГрафики.ПараметрыПолученияБлижайшихРабочихДат();
	ПараметрыПолучения.ПолучатьПредшествующие = Ложь;
	ПараметрыПолучения.ВызыватьИсключение = Ложь;
	мДатаСМС = Новый Массив;
	мДатаСМС.Добавить(ДатаСМСДолжника);
	ДниКалендаря = КалендарныеГрафики.БлижайшиеРабочиеДаты(Справочники.ПроизводственныеКалендари.ФЗ230, мДатаСМС, ПараметрыПолучения);
	УстановитьПривилегированныйРежим(Ложь);	
	НачалоДняДатаСМСДолжника = НачалоДня(ДатаСМСДолжника); 
	БудниВремяОт = Константы.БудниВремяОт.Получить();
	БудниВремяДо = Константы.БудниВремяДо.Получить()-1;
	ВыходныеВремяОт = Константы.ВыходныеВремяОт.Получить();
	ВыходныеВремяДо = Константы.ВыходныеВремяДо.Получить()-1;
	ПустаяДата = Дата(1,1,1);
	//Если день будний и не праздничный
	Если НачалоДняДатаСМСДолжника = ДниКалендаря.Получить(НачалоДняДатаСМСДолжника) Тогда
		Структура.Вставить("ДатаКогдаОтправить",НачалоДняДатаСМСДолжника + (БудниВремяОт - ПустаяДата));
		Структура.Вставить("ДатаАктуальностиОтправки",НачалоДняДатаСМСДолжника + (БудниВремяДо - ПустаяДата));
		Возврат Структура;
	//Иначе день праздничный или выходной
	Иначе
		Структура.Вставить("ДатаКогдаОтправить",НачалоДняДатаСМСДолжника + (ВыходныеВремяОт - ПустаяДата));
		Структура.Вставить("ДатаАктуальностиОтправки",НачалоДняДатаСМСДолжника + (ВыходныеВремяДо - ПустаяДата));
		Возврат Структура;		
	КонецЕсли;
КонецФункции

Функция КонтрольСМСПоКоличеству(Должник,ДатаСМС,Структура) Экспорт
	КоличествоСМСДень = Константы.СообщенияДень.Получить();
	КоличествоСМСНеделя = Константы.СообщенияНеделя.Получить();
	КоличествоСМСМесяц = Константы.СообщенияМесяц.Получить();
	мСостояниеСообщения = Новый Массив;
	мСостояниеСообщения.Добавить(Перечисления.СостоянияСообщенияSMS.Исходящее);
	мСостояниеСообщения.Добавить(Перечисления.СостоянияСообщенияSMS.Доставлено);
	мСостояниеСообщения.Добавить(Перечисления.СостоянияСообщенияSMS.ОтправленоПровайдером);
	мСостояниеСообщения.Добавить(Перечисления.СостоянияСообщенияSMS.ОтправляетсяПровайдером);

	Если Константы.КоличествоСМС.Получить() Тогда
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СообщенияСМС.GUID) КАК КоличествоСообщений
		|ПОМЕСТИТЬ ВТ_Количество
		|ИЗ
		|	РегистрСведений.СообщенияСМС КАК СообщенияСМС
		|ГДЕ
		|	СообщенияСМС.Входящее = ЛОЖЬ
		|	И (СообщенияСМС.Объект = &Объект
		|			ИЛИ СообщенияСМС.Объект.Должник = &Объект)
		|	И СообщенияСМС.Дата > &НачалоДня
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ РСЕмаилСообщения.GUID)
		|ИЗ
		|	РегистрСведений.РСЕмаилСообщения КАК РСЕмаилСообщения
		|ГДЕ
		|	РСЕмаилСообщения.Отправлено = ИСТИНА
		|	И РСЕмаилСообщения.Объект.Должник = &Объект
		|	И РСЕмаилСообщения.ДатаОтправки > &НачалоДня
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СообщениеSMSАдресаты.Ссылка)
		|ИЗ
		|	Документ.СообщениеSMS.Адресаты КАК СообщениеSMSАдресаты
		|ГДЕ
		|	СообщениеSMSАдресаты.Контакт = &Объект
		|	И СообщениеSMSАдресаты.Ссылка.Дата > &НачалоДня
		|	И СообщениеSMSАдресаты.СостояниеСообщения В(&СостояниеСообщения)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(ВТ_Количество.КоличествоСообщений) КАК КоличествоСообщений
		|ИЗ
		|	ВТ_Количество КАК ВТ_Количество");
		Запрос.УстановитьПараметр("НачалоДня", НачалоДня(ДатаСМС));
		Запрос.УстановитьПараметр("Объект", Должник);
		Запрос.УстановитьПараметр("СостояниеСообщения", мСостояниеСообщения);
		Результат = Запрос.Выполнить().Выбрать();
		Пока Результат.Следующий() Цикл
			Если Результат.КоличествоСообщений > КоличествоСМСДень - 1 Тогда
				Структура.Вставить("Ошибка","Количество СМС сегодня: "+КоличествоСМСДень);
				Структура.Вставить("КоличествоДней",Ложь);
				Возврат Структура;
			КонецЕсли;
		КонецЦикла;
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СообщенияСМС.GUID) КАК КоличествоСообщений
		|ПОМЕСТИТЬ ВТ_Количество
		|ИЗ
		|	РегистрСведений.СообщенияСМС КАК СообщенияСМС
		|ГДЕ
		|	СообщенияСМС.Входящее = ЛОЖЬ
		|	И (СообщенияСМС.Объект = &Объект
		|			ИЛИ СообщенияСМС.Объект.Должник = &Объект)
		|	И СообщенияСМС.Дата > &НачалоНедели
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ РСЕмаилСообщения.GUID)
		|ИЗ
		|	РегистрСведений.РСЕмаилСообщения КАК РСЕмаилСообщения
		|ГДЕ
		|	РСЕмаилСообщения.Отправлено = ИСТИНА
		|	И РСЕмаилСообщения.ДатаОтправки > &НачалоНедели
		|	И РСЕмаилСообщения.Объект.Должник = &Объект
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СообщениеSMSАдресаты.Ссылка)
		|ИЗ
		|	Документ.СообщениеSMS.Адресаты КАК СообщениеSMSАдресаты
		|ГДЕ
		|	СообщениеSMSАдресаты.Контакт = &Объект
		|	И СообщениеSMSАдресаты.Ссылка.Дата > &НачалоНедели
		|	И СообщениеSMSАдресаты.СостояниеСообщения В(&СостояниеСообщения)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(ВТ_Количество.КоличествоСообщений) КАК КоличествоСообщений
		|ИЗ
		|	ВТ_Количество КАК ВТ_Количество");
		Запрос.УстановитьПараметр("НачалоНедели", НачалоНедели(ДатаСМС));
		Запрос.УстановитьПараметр("Объект", Должник);
		Запрос.УстановитьПараметр("СостояниеСообщения", мСостояниеСообщения);
		Результат = Запрос.Выполнить().Выбрать();
		Пока Результат.Следующий() Цикл
			Если Результат.КоличествоСообщений > КоличествоСМСНеделя - 1 Тогда
				Структура.Вставить("Ошибка","Количество СМС на этой неделе: "+КоличествоСМСНеделя);
				Структура.Вставить("КоличествоНеделя",Ложь);
				Возврат Структура;
			КонецЕсли;
		КонецЦикла;
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СообщенияСМС.GUID) КАК КоличествоСообщений
		|ПОМЕСТИТЬ ВТ_Количество
		|ИЗ
		|	РегистрСведений.СообщенияСМС КАК СообщенияСМС
		|ГДЕ
		|	СообщенияСМС.Входящее = ЛОЖЬ
		|	И (СообщенияСМС.Объект = &Объект
		|			ИЛИ СообщенияСМС.Объект.Должник = &Объект)
		|	И СообщенияСМС.Дата > &НачалоМесяца
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ РСЕмаилСообщения.GUID)
		|ИЗ
		|	РегистрСведений.РСЕмаилСообщения КАК РСЕмаилСообщения
		|ГДЕ
		|	РСЕмаилСообщения.Объект.Должник = &Объект
		|	И РСЕмаилСообщения.ДатаОтправки > &НачалоМесяца
		|	И РСЕмаилСообщения.Отправлено = ИСТИНА
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СообщениеSMSАдресаты.Ссылка)
		|ИЗ
		|	Документ.СообщениеSMS.Адресаты КАК СообщениеSMSАдресаты
		|ГДЕ
		|	СообщениеSMSАдресаты.Контакт = &Объект
		|	И СообщениеSMSАдресаты.Ссылка.Дата > &НачалоМесяца
		|	И СообщениеSMSАдресаты.СостояниеСообщения В(&СостояниеСообщения)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(ВТ_Количество.КоличествоСообщений) КАК КоличествоСообщений
		|ИЗ
		|	ВТ_Количество КАК ВТ_Количество");
		Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(ДатаСМС));
		Запрос.УстановитьПараметр("Объект",Должник);
		Запрос.УстановитьПараметр("СостояниеСообщения", мСостояниеСообщения);
		Результат = Запрос.Выполнить().Выбрать();
		Пока Результат.Следующий() Цикл
			Если Результат.КоличествоСообщений > КоличествоСМСМесяц - 1 Тогда
				Структура.Вставить("Ошибка","Количество СМС в этом месяце: "+КоличествоСМСМесяц);
				Структура.Вставить("КоличествоМесяц",Ложь);
				Возврат Структура;
			Иначе
				Возврат Структура;
			КонецЕсли;
		КонецЦикла;
	Иначе
		Структура.Вставить("НеФЗ230", Истина);
		Возврат Структура;
	КонецЕсли;	
КонецФункции

// Добавить поддержку контроля событий по мессенджерам	

Функция КонтрольВЦ(Должник) Экспорт
	КоличествоВЦДень = Константы.ВЦДень.Получить();
	КоличествоВЦМесяц = Константы.ВЦМесяц.Получить();
	КоличествоВЦНеделя = Константы.ВЦНеделя.Получить();
	//Проверяем количество за день
	Если Константы.КоличествоВЦ.Получить() Тогда
		Запрос = Новый Запрос("ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Мероприятие.Ссылка) КАК ЧислоРезультативных
		|ИЗ
		|	Задача.Мероприятие КАК Мероприятие
		|ГДЕ
		|	Мероприятие.ДатаВыполнения > &НачалоДня
		|	И (Мероприятие.Объект = &Должник
		|			ИЛИ Мероприятие.Объект.Должник = &Должник)
		|	И Мероприятие.Выполнена = ИСТИНА
		|	И Мероприятие.ПометкаУдаления = ЛОЖЬ
		|	И Мероприятие.Результат.РезультативныйКонтакт = ИСТИНА
		|	И Мероприятие.ТипМероприятия.Наименование = ""WhatsApp""");	
		Запрос.УстановитьПараметр("НачалоДня", НачалоДня(ТекущаяДата()));
		Запрос.УстановитьПараметр("Должник", Должник);
		Результат = Запрос.Выполнить().Выбрать();
		Если Результат.Следующий() Тогда
			Если Результат.ЧислоРезультативных = КоличествоВЦДень
				ИЛИ Результат.ЧислоРезультативных > КоличествоВЦДень Тогда
				Сообщить("Количество сообщений сегодня: "+КоличествоВЦДень);
				Возврат Истина;
			Иначе
			КонецЕсли;
		Иначе
		КонецЕсли;
		
		//Затем количество за неделю
		Запрос = Новый Запрос("ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Мероприятие.Ссылка) КАК ЧислоРезультативных
		|ИЗ
		|	Задача.Мероприятие КАК Мероприятие
		|ГДЕ
		|	Мероприятие.ДатаВыполнения > &НачалоНедели
		|	И (Мероприятие.Объект = &Должник
		|			ИЛИ Мероприятие.Объект.Должник = &Должник)
		|	И Мероприятие.Выполнена = ИСТИНА
		|	И Мероприятие.ПометкаУдаления = ЛОЖЬ
		|	И Мероприятие.Результат.РезультативныйКонтакт = ИСТИНА
		|	И Мероприятие.ТипМероприятия.Наименование = ""WhatsApp""");	
		Запрос.УстановитьПараметр("НачалоНедели", НачалоНедели(ТекущаяДата()));
		Запрос.УстановитьПараметр("Должник", Должник);
		Результат = Запрос.Выполнить().Выбрать();
		Если Результат.Следующий() Тогда
			Если Результат.ЧислоРезультативных = КоличествоВЦНеделя
				ИЛИ Результат.ЧислоРезультативных > КоличествоВЦНеделя Тогда
                Сообщить("Количество сообщений на этой неделе: "+КоличествоВЦНеделя);
				Возврат Истина;
			Иначе
			КонецЕсли;
		Иначе
		КонецЕсли;
		//Затем количество за месяц
		Запрос = Новый Запрос("ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Мероприятие.Ссылка) КАК ЧислоРезультативных
		|ИЗ
		|	Задача.Мероприятие КАК Мероприятие
		|ГДЕ
		|	Мероприятие.ДатаВыполнения > &НачалоМесяца
		|	И (Мероприятие.Объект = &Должник
		|			ИЛИ Мероприятие.Объект.Должник = &Должник)
		|	И Мероприятие.Выполнена = ИСТИНА
		|	И Мероприятие.ПометкаУдаления = ЛОЖЬ
		|	И Мероприятие.Результат.РезультативныйКонтакт = ИСТИНА
		|	И Мероприятие.ТипМероприятия.Наименование = ""WhatsApp""");	
		Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(ТекущаяДата()));
		Запрос.УстановитьПараметр("Должник", Должник);
		Результат = Запрос.Выполнить().Выбрать();
		Если Результат.Следующий() Тогда
			Если Результат.ЧислоРезультативных = КоличествоВЦМесяц
				ИЛИ Результат.ЧислоРезультативных > КоличествоВЦМесяц Тогда
				Сообщить("Количество сообщений в этом месяце: "+КоличествоВЦМесяц);
				Возврат Истина;
			Иначе
				Возврат Ложь;
			КонецЕсли;
		Иначе
			Возврат Ложь;
		КонецЕсли;		
	Иначе 
		Возврат Ложь;
	КонецЕсли;
КонецФункции

Функция КонтрольВайбер(Должник) Экспорт
	КоличествоВайберДень = Константы.ВайберДень.Получить();
	КоличествоВайберМесяц = Константы.ВайберМесяц.Получить();
	КоличествоВайберНеделя = Константы.ВайберНеделя.Получить();
	//Проверяем количество за день
	Если Константы.КоличествоВайбер.Получить() Тогда
		Запрос = Новый Запрос("ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Мероприятие.Ссылка) КАК ЧислоРезультативных
		|ИЗ
		|	Задача.Мероприятие КАК Мероприятие
		|ГДЕ
		|	Мероприятие.ДатаВыполнения > &НачалоДня
		|	И (Мероприятие.Объект = &Должник
		|			ИЛИ Мероприятие.Объект.Должник = &Должник)
		|	И Мероприятие.Выполнена = ИСТИНА
		|	И Мероприятие.ПометкаУдаления = ЛОЖЬ
		|	И Мероприятие.Результат.РезультативныйКонтакт = ИСТИНА
		|	И Мероприятие.ТипМероприятия.Наименование = ""Viber""");	
		Запрос.УстановитьПараметр("НачалоДня", НачалоДня(ТекущаяДата()));
		Запрос.УстановитьПараметр("Должник", Должник);
		Результат = Запрос.Выполнить().Выбрать();
		Если Результат.Следующий() Тогда
			Если Результат.ЧислоРезультативных = КоличествоВайберДень
				ИЛИ Результат.ЧислоРезультативных > КоличествоВайберДень Тогда
				Сообщить("Количество сообщений сегодня: "+КоличествоВайберДень);
				Возврат Истина;
			Иначе
			КонецЕсли;
		Иначе
		КонецЕсли;
		
		//Затем количество за неделю
		Запрос = Новый Запрос("ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Мероприятие.Ссылка) КАК ЧислоРезультативных
		|ИЗ
		|	Задача.Мероприятие КАК Мероприятие
		|ГДЕ
		|	Мероприятие.ДатаВыполнения > &НачалоНедели
		|	И (Мероприятие.Объект = &Должник
		|			ИЛИ Мероприятие.Объект.Должник = &Должник)
		|	И Мероприятие.Выполнена = ИСТИНА
		|	И Мероприятие.ПометкаУдаления = ЛОЖЬ
		|	И Мероприятие.Результат.РезультативныйКонтакт = ИСТИНА
		|	И Мероприятие.ТипМероприятия.Наименование = ""Viber""");	
		Запрос.УстановитьПараметр("НачалоНедели", НачалоНедели(ТекущаяДата()));
		Запрос.УстановитьПараметр("Должник", Должник);
		Результат = Запрос.Выполнить().Выбрать();
		Если Результат.Следующий() Тогда
			Если Результат.ЧислоРезультативных = КоличествоВайберНеделя
				ИЛИ Результат.ЧислоРезультативных > КоличествоВайберНеделя Тогда
                Сообщить("Количество сообщений на этой неделе: "+КоличествоВайберНеделя);
				Возврат Истина;
			Иначе
			КонецЕсли;
		Иначе
		КонецЕсли;
		//Затем количество за месяц
		Запрос = Новый Запрос("ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Мероприятие.Ссылка) КАК ЧислоРезультативных
		|ИЗ
		|	Задача.Мероприятие КАК Мероприятие
		|ГДЕ
		|	Мероприятие.ДатаВыполнения > &НачалоМесяца
		|	И (Мероприятие.Объект = &Должник
		|			ИЛИ Мероприятие.Объект.Должник = &Должник)
		|	И Мероприятие.Выполнена = ИСТИНА
		|	И Мероприятие.ПометкаУдаления = ЛОЖЬ
		|	И Мероприятие.Результат.РезультативныйКонтакт = ИСТИНА
		|	И Мероприятие.ТипМероприятия.Наименование = ""Viber""");	
		Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(ТекущаяДата()));
		Запрос.УстановитьПараметр("Должник", Должник);
		Результат = Запрос.Выполнить().Выбрать();
		Если Результат.Следующий() Тогда
			Если Результат.ЧислоРезультативных = КоличествоВайберМесяц
				ИЛИ Результат.ЧислоРезультативных > КоличествоВайберМесяц Тогда
				Сообщить("Количество сообщений в этом месяце: "+КоличествоВайберМесяц);
				Возврат Истина;
			Иначе
				Возврат Ложь;
			КонецЕсли;
		Иначе
			Возврат Ложь;
		КонецЕсли;		
	Иначе 
		Возврат Ложь;
	КонецЕсли;
КонецФункции

//
	
