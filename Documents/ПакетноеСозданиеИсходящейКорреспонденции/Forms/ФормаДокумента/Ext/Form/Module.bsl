
&НаКлиенте
Процедура Подбор(Команда)
	ОбъектыКлиент.Подбор(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ПодборИзФайла(Команда)
	ОбъектыКлиент.ПодборИзДОК(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ПоШаблону(Команда)
	Письмо = Объект.ТипПисьма;
	Если не ЗначениеЗаполнено(Письмо) Тогда
		Сообщить("Необходимо выбрать тип письма!");
		Возврат;
	КонецЕсли;
	
	#Если ТолстыйКлиентУправляемоеПриложение Тогда	
		ПечатныеФормыПисьма = Письмо.ПечатныеФормы;
	#Иначе	
		ПечатныеФормыПисьма = ПолучитьПечФормыСервер(Письмо);
	#КонецЕсли 

	ВыбраннаяПечФорма = Объект.Шаблон;
	Если ЗначениеЗаполнено(ВыбраннаяПечФорма) Тогда
		ОБъектыКлиент.ПодборФайлаПоШаблону(ЭтаФорма,ВыбраннаяПечФорма);
	иначе
		Возврат;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	//Если Объект.Объекты.Количество() = 0 Тогда
	Элементы.ОбъектыПоШаблону.Доступность = Ложь;
	Если Объект.Ссылка.Пустая() Тогда
		Элементы.ОбъектыСоздатьКорреспонденцию.Доступность = Ложь;
	Иначе
		Элементы.ОбъектыСоздатьКорреспонденцию.Доступность = Истина;
	КонецЕсли;
	
	Если Объект.Проведен Тогда
		Элементы.ОбъектыКоманднаяПанель.Доступность = Ложь;
		Элементы.Дата.Доступность = Ложь;
		Элементы.Организация.Доступность = Ложь;
		Элементы.ТипПисьма.Доступность = Ложь;
		Элементы.ГруппаЧисловыеОпции.Доступность = Ложь;
		Элементы.ТипКонверта.Доступность = Ложь;
		Элементы.КатегорияРПО.Доступность = Ложь;
	КонецЕсли;
	
	Если Объект.СписокИсходящейКорреспонденции.Количество() <> 0 Тогда
		Элементы.ОбъектыСоздатьКорреспонденцию.Доступность = Ложь;
	КонецЕсли;
		
	//КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ОбъектыПриАктивизацииСтроки(Элемент)
	Если Объект.Объекты.Количество() > 0 Тогда
		Если Элемент.ТекущиеДанные.КомплектСформирован = Ложь Тогда	
			Элементы.ОбъектыПоШаблону.Доступность = Истина;
		Иначе
			Элементы.ОбъектыПоШаблону.Доступность = Ложь;
		конецЕсли;	
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция СформироватьСписокЗначений(ТипПисьма)
	Если ЗначениеЗаполнено(ТипПисьма) Тогда
		Запрос = Новый Запрос("ВЫБРАТЬ
		|	ТипыИсходящихПисемПечатныеФормы.ПечатнаяФорма КАК ПечатнаяФорма
		|ИЗ
		|	Справочник.ТипыИсходящихПисем.ПечатныеФормы КАК ТипыИсходящихПисемПечатныеФормы
		|ГДЕ
		|	ТипыИсходящихПисемПечатныеФормы.Ссылка = &Ссылка
		|	И ТипыИсходящихПисемПечатныеФормы.ПечатнаяФорма.ПометкаУдаления = ЛОЖЬ");
		
		Запрос.УстановитьПараметр("Ссылка",ТипПисьма);
	Иначе
		Запрос = Новый Запрос("ВЫБРАТЬ
		|	тсВидыПечатныхДокументов.Ссылка КАК ПечатнаяФорма
		|ИЗ
		|	Справочник.тсВидыПечатныхДокументов КАК тсВидыПечатныхДокументов
		|ГДЕ
		|	тсВидыПечатныхДокументов.ПометкаУдаления = ЛОЖЬ");
	КонецЕсли;
	
	СписокПечФорм = Новый СписокЗначений; 
	СписокПечФорм = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ПечатнаяФорма"); 
	Возврат СписокПечФорм; 

КонецФункции

&НаКлиенте 
Процедура ОбработкаВыбора(Результат, ДП) Экспорт
	Если Результат = Неопределено Тогда
		Сообщить("Не выбрана ни одна печатная форма");
		Возврат;
	КонецЕсли;	
	ВыбраннаяПечФорма = ДП.ВыбраннаяПечФорма;
	ВыбраннаяПечФорма = Результат;
	Объект.Шаблон = ВыбраннаяПечФорма;
КонецПроцедуры

&НаКлиенте
Процедура ШаблонНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьКомплекты(Команда)
	Если Объект.Объекты.Количество() = 0 Тогда
		Сообщить("Нет объектов для проверки комплектов документов.");
		Возврат;
	КонецЕсли;
	Если НЕ значениеЗаполнено(Объект.Шаблон) Тогда
		Сообщить("Не задан шаблон для поиска файлов!");
		Возврат;
	КонецЕсли;
	Для Каждого Стр Из Объект.Объекты Цикл
		Стр.КомплектСформирован = НайтиФайлыСервер(Стр.Объект);
		Если Стр.КомплектСформирован = Ложь Тогда 
			Сообщить("В строке № " + стр.Номерстроки+ " не хватает файлов из комплекта!");
		КонецЕсли;	
	КонецЦикла;	
	Элементы.ОбъектыСоздатьКорреспонденцию.Доступность = Истина;
	//Элементы.ОбъектыПоШаблону.Доступность = Ложь;
	Элементы.Объекты.ТекущаяСтрока = Объект.Объекты.Получить(0).ПолучитьИдентификатор();
	Если Элементы.Объекты.ТекущиеДанные.КомплектСформирован = Истина тогда
		Элементы.ОбъектыПоШаблону.Доступность = Ложь;
	Иначе
		Элементы.ОбъектыПоШаблону.Доступность = Истина;
	КонецЕсли;
	
	Сообщить("Проверка комплектов завершена!");
	//Элементы.Объекты.ТекущаяСтрока = Объект.Объекты[0];
КонецПроцедуры

&НаСервере
Функция НайтиФайлыСервер(Об)
	ТипыФайловШаблона = ОбъектыСервер.ПоискТиповФайлов(Объект.Шаблон);
	Текст = ОбъектыСервер.ПолучитьТекстЗапросаПоискаФайловПоШаблону();
	Запрос = Новый Запрос(Текст);
	Запрос.УстановитьПараметр("Объект",Об);
	Запрос.УстановитьПараметр("МассивТиповФайлов", ТипыФайловШаблона);
	//Запрос.УстановитьПараметр("Массив", МассивФайлов);
	//
	Результат = Запрос.Выполнить().Выгрузить();
	ЕстьТипы = Новый массив;
	
	Для каждого стр из  Результат Цикл
		ЕстьТипы.Добавить(стр.ТипФайла);
	КонецЦикла;
	
	НедостающиеТипы = РазностьМассивов(ТипыФайловШаблона,ЕстьТипы);
	
	Если НедостающиеТипы.Количество() = 0 Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;		
КонецФункции

&НаСервере
Функция РазностьМассивов(Массив1, Массив2)
	Результат = Новый Массив;
	Повтор = Новый Соответствие;
	Для каждого Элемент Из Массив1 Цикл
		Повтор[Элемент] = ?(Повтор[Элемент] = Неопределено, Ложь, Истина)
	КонецЦикла;
	Для каждого Элемент Из Массив2 Цикл
		Повтор[Элемент] = ?(Повтор[Элемент] = Неопределено, Ложь, Истина)
	КонецЦикла;
	Для каждого Элемент Из Повтор Цикл
		Если НЕ Элемент.Значение Тогда
			Результат.Добавить(Элемент.Ключ)
		КонецЕсли
	КонецЦикла;
	Возврат Результат
КонецФункции

&НаКлиенте
Процедура ТипПисьмаПриИзменении(Элемент)
	Письмо = Объект.ТипПисьма;
	Если не ЗначениеЗаполнено(Письмо) Тогда
		Сообщить("Необходимо выбрать тип письма!");
		Возврат;
	КонецЕсли;
	
	#Если ТолстыйКлиентУправляемоеПриложение Тогда	
		ПечатныеФормыПисьма = Письмо.ПечатныеФормы;
	#Иначе	
		ПечатныеФормыПисьма = ПолучитьПечФормыСервер(Письмо);
	#КонецЕсли 

	Если ПечатныеФормыПисьма.Количество() = 1 Тогда
		#Если ТолстыйКлиентУправляемоеПриложение Тогда	
			ВыбраннаяПечФорма = ПечатныеФормыПисьма[0].ПечатнаяФорма;
		#Иначе	
			ВыбраннаяПечФорма = ПечатныеФормыПисьма[0];
		#КонецЕсли 
		Объект.Шаблон = ВыбраннаяПечФорма; 
	ИначеЕсли ПечатныеФормыПисьма.Количество() > 1 Тогда
		ВыбраннаяПечФорма = "";
		ДП = Новый Структура("ВыбраннаяПечФорма",ВыбраннаяПечФорма);
		//Открывать ФормуВыбора для печатных форм.		
		Форма = ОткрытьФорму("Справочник.тсВидыПечатныхДокументов.ФормаВыбора",,,,,,Новый ОписаниеОповещения("ОбработкаВыбора",ЭтотОбъект,ДП)); //Открываем форму 
		ОтборВладелец =Форма.Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных")); //Добавлям отбор 
		ОтборВладелец.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке; //Как будем сравнивать 
		ОтборВладелец.Использование = Истина; // Устанавливаем галку использованияНовый ПолеКомпоновкиДанных("Номенклатура") 
		ОтборВладелец.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка"); //По какому реквизиту будем делать отбор 
		Список = СформироватьСписокЗначений(Письмо); 
		ОтборВладелец.ПравоеЗначение = Список; // И само значение отбора  
	ИначеЕсли ПечатныеФормыПисьма.Количество() = 0 Тогда
		Сообщить("Для данного типа письма не задана ни одна печатная форма");
		Объект.Шаблон = "";
		Возврат;
		//ВыбраннаяПечФорма = "";
		//ДП = Новый Структура("ВыбраннаяПечФорма",ВыбраннаяПечФорма);
		//Открывать ФормуВыбора для печатных форм.		
		//Форма = ОткрытьФорму("Справочник.тсВидыПечатныхДокументов.ФормаВыбора",,,,,,Новый ОписаниеОповещения("ОбработкаВыбора",ЭтотОбъект,ДП)); //Открываем форму 
		//Сообщить("Для данного типа письма не задана ни одна печатная форма");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере                    
Функция ПолучитьПечФормыСервер(Письмо)
	ПечатныеФормыМасс = Новый Массив;
	Для Каждого Стр из Письмо.ПечатныеФормы Цикл
		ПечатныеФормыМасс.Добавить(Стр.Печатнаяформа);
	КонецЦикла;	
	Возврат ПечатныеФормыМасс;	
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Объект.Ссылка.Пустая() Тогда
		Пользователи.ЗаполнитьРеквизитыПоДаннымПользователя(Объект);
	КонецЕсли;	
	Элементы.ОбъектыПодборПоНастройкам.Видимость = Константы.ИспользоватьНастройкиПодбораОбъектовУчета.Получить();
КонецПроцедуры

&НаКлиенте
Процедура СоздатьКорреспонденцию(Команда)
	НуженВопрос = Ложь;
	Для Каждого стр из Объект.Объекты Цикл
		Если НЕ Стр.КомплектСформирован Тогда
			НуженВопрос = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если НуженВопрос Тогда
		Режим = РежимДиалогаВопрос.ДаНет;
		ДП = Новый Структура();
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопроса", ЭтаФорма, ДП);
		ПоказатьВопрос(Оповещение, НСтр("ru = 'По объектам есть несформированные комплекты! Продолжить выполнение операции?';"), Режим);
	Иначе
		МассивОбъектов = новый Массив;
		Для Каждого стр из Объект.Объекты Цикл
			Если Стр.КомплектСформирован Тогда
				МассивОбъектов.Добавить(Стр.Объект);
			КонецЕсли;
		КонецЦикла;
		СоздатьКорреспонденциюСервер(МассивОбъектов);
		ПолучитьСозданнуюКорреспонденцию(Объект.Ссылка);	
	КонецЕсли;
	Элементы.Страницы.ТекущаяСтраница = Элементы.ГруппаСписокИсходящейКорреспонденции;
	Если Объект.СписокИсходящейКорреспонденции.Количество() <> 0 Тогда
		Элементы.ОбъектыСоздатьКорреспонденцию.Доступность = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопроса(Результат, Параметры) Экспорт
	Если Результат = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	МассивОбъектов = новый Массив;
	Для Каждого стр из Объект.Объекты Цикл
		Если Стр.КомплектСформирован Тогда
			МассивОбъектов.Добавить(Стр.Объект);
		КонецЕсли;
	КонецЦикла;
	СоздатьКорреспонденциюСервер(МассивОбъектов);
	ПолучитьСозданнуюКорреспонденцию(Объект.Ссылка);
	Элементы.Страницы.ТекущаяСтраница = Элементы.ГруппаСписокИсходящейКорреспонденции;	
КонецПроцедуры
	

&НаСервере
Процедура СоздатьКорреспонденциюСервер(МассивОбъектов)
	ЭтотОбъект.Записать();
	Для Каждого Об из МассивОбъектов Цикл
		Попытка
			НоваяИсхКорр = Справочники.ИсходящаяКорреспонденция.СоздатьЭлемент();
			НоваяИсхКорр.ТипПисьма = Объект.ТипПисьма;
			НоваяИсхКорр.Автор = Объект.Ссылка;
			НоваяИсхКорр.Организация = Объект.Организация;
			НоваяИсхКорр.Комментарий = "Пакетное создание корреспонденции";
			НоваяИсхКорр.Объект = Об;
			НоваяИсхКорр.Подписант = Объект.Автор;
			НоваяИсхКорр.ВидРПО = Объект.ВидРПО;
			НоваяИсхКорр.ТипКонверта = объект.ТипКонверта;
			НоваяИсхКорр.КатегорияРПО = Объект.КатегорияРПО;
			НоваяИсхКорр.ВесРПО = объект.ВесРПО;
			НоваяИсхКорр.ОЦ = Объект.ОЦ;
			ЗаполнитьТЧФайлы(НоваяИсхКорр,Об);
			НоваяИсхКорр.Записать();
			ИсхКоррСсылка = НоваяИсхКорр.Ссылка;
			НоваяИсхКорр.РегистрационныйНомер = РегистрацияКорреспонденции.ПолучитьНомер(Объект.ТипПисьма,Объект.Организация,ИсхКоррСсылка);
			НоваяИсхКорр.ДатаРегистрации = Объект.Дата;
			НоваяИсхКорр.НомерЗакреплен = Истина;
			НоваяИсхКорр.Наименование = НоваяИсхКорр.ТипПисьма.Наименование + " № " + НоваяИсхКорр.РегистрационныйНомер + " от " + Формат(НоваяИсхКорр.ДатаРегистрации, "ДЛФ='DD'");
			НоваяИсхКорр.Записать();
			Для Каждого Эл Из НоваяИсхКорр.ПрикрепленныеФайлы Цикл
				ДокументОбъект = Эл.ПрикрепленныйФайл.ПолучитьОбъект();
				ДокументОбъект.РегистраторКорреспонденции = ИсхКоррСсылка;
				ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
			КонецЦикла;
		Исключение
			Сообщить("Произошла ошибка при формировании корреспонденции по объекту " + Об);
		КонецПопытки;
	КонецЦикла;	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТЧФайлы(ИсхКорр,Об)	
	ТипыФайловШаблона = ОбъектыСервер.ПоискТиповФайлов(Объект.Шаблон);
	Текст = ОбъектыСервер.ПолучитьТекстЗапросаПоискаФайловПоШаблону();
	Запрос = Новый Запрос(Текст);
	Запрос.УстановитьПараметр("Объект",Об);
	Запрос.УстановитьПараметр("МассивТиповФайлов", ТипыФайловШаблона);
	//Запрос.УстановитьПараметр("Массив", МассивФайлов);
	//
	Результат = Запрос.Выполнить().Выгрузить();
	
	ЕстьТипы = Новый массив;
	
	Для каждого стр из  Результат Цикл
		НовСтрока = ИсхКорр.ПодобранныеФайлы.Добавить();
		НовСтрока.Файл = стр.ИмяФайла;
		НовСтрока.ТипФайла = стр.ТипФайла;
		НовСтрока.Регистратор = стр.Регистратор;
	КонецЦикла;
	
	Результат.Свернуть("Регистратор");
	Для Каждого Элемент Из Результат Цикл
		Нов = ИсхКорр.ПрикрепленныеФайлы.Добавить();
		Нов.ПрикрепленныйФайл = Элемент.Регистратор;	
	КонецЦикла;	
КонецПроцедуры

&НаСервере
Процедура ПолучитьСозданнуюКорреспонденцию(ДокументСсылка)
	Объект.СписокИсходящейКорреспонденции.Очистить();
	Запрос  = Новый Запрос("ВЫБРАТЬ
	                       |	ИсходящаяКорреспонденция.Ссылка КАК Ссылка
	                       |ИЗ
	                       |	Справочник.ИсходящаяКорреспонденция КАК ИсходящаяКорреспонденция
	                       |ГДЕ
	                       |	ИсходящаяКорреспонденция.Автор = &Автор");
	Запрос.УстановитьПараметр("Автор",ДокументСсылка);
	Результат = Запрос.Выполнить().Выбрать();
	Пока Результат.Следующий() Цикл
		Нстрока = Объект.СписокИсходящейКорреспонденции.Добавить();
		НСтрока.ИсходящаяКорреспонденция = Результат.Ссылка;
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ЗакрытиеИзПакета" Тогда
		Элементы.Объекты.ТекущиеДанные.КомплектСформирован = НайтиФайлыСервер(Элементы.Объекты.ТекущиеДанные.Объект);
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ВесРПОПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Объект.ВидРПО) Тогда
		Если объект.ВесРПО >= 100 И (Объект.ВидРПО = "LETTER" Или Объект.ВидРПО = "LETTER_CLASS_1") Тогда
			Сообщить("Отправления весом более 100 граммов являются бандеролями!");
			Объект.ВидРПО = "BANDEROL";
		КонецЕсли;
		Если объект.ВесРПО < 100 И (Объект.ВидРПО = "BANDEROL" Или Объект.ВидРПО = "BANDEROL_CLASS_1") Тогда
			Сообщить("Отправления весом менее 100 граммов являются письмами!");
			Объект.ВидРПО = "LETTER";
		КонецЕсли;
	КонецЕсли;		
КонецПроцедуры

&НаКлиенте
Процедура ВидРПОПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Объект.ВесРПО) Тогда
		Если объект.ВесРПО >= 100 И (Объект.ВидРПО = "LETTER" Или Объект.ВидРПО = "LETTER_CLASS_1") Тогда
			Сообщить("Отправления весом более 100 граммов являются бандеролями!");
			Объект.ВидРПО = "BANDEROL";
		КонецЕсли;
		Если объект.ВесРПО < 100 И (Объект.ВидРПО = "BANDEROL" Или Объект.ВидРПО = "BANDEROL_CLASS_1") Тогда
			Сообщить("Отправления весом менее 100 граммов являются письмами!");
			Объект.ВидРПО = "LETTER";
		КонецЕсли;
	КонецЕсли;
	ПроверкаВидКатегоряКонверт();
КонецПроцедуры

&НаКлиенте
Процедура КатегорияРПОПриИзменении(Элемент)
	Если Объект.КатегорияРПО = "SIMPLE" тогда
		Сообщить("Внимание! Для простых отправлений нельзя получить ШПИ!");
	КонецЕсли;
	ПроверкаВидКатегоряКонверт();
КонецПроцедуры

&НаКлиенте
Процедура ТипКонвертаПриИзменении(Элемент)
	ПроверкаВидКатегоряКонверт();
КонецПроцедуры


&НаКлиенте
Процедура ПроверкаВидКатегоряКонверт()
	Вид = Объект.ВидРПО;
	Категория = объект.КатегорияРПО;
	Конверт = Объект.ТипКонверта;
	ТекстСообщения = "Несоответствующий тип конверта для данных категории и вида РПО!";
	//Письмо 1-класса заказное
	Если Вид = "LETTER_CLASS_1" и Категория = "ORDERED" И  (Конверт = "A6" Или Конверт = "A7") Тогда
		Сообщить(ТекстСообщения);
		Объект.ТипКонверта = "";
	КонецЕсли;
	//Бандероль заказная
	Если Вид = "BANDEROL" и Категория = "ORDERED" И  (Конверт = "A6" Или Конверт = "DL") Тогда
		Сообщить(ТекстСообщения);
		Объект.ТипКонверта = "";
	КонецЕсли;
	//Бандероль 1-класса заказная
	Если Вид = "BANDEROL_CLASS_1" и Категория = "ORDERED" И  (Конверт = "A6" Или Конверт = "DL" или Конверт = "A7") Тогда
		Сообщить(ТекстСообщения);
		Объект.ТипКонверта = "";
	КонецЕсли;	
КонецПроцедуры	


&НаСервере
Функция МастерСозданияПартионнойПочтыНаСервере()
	Возврат ПоместитьВоВременноеХранилище(Объект.СписокИсходящейКорреспонденции.Выгрузить());
КонецФункции


&НаКлиенте
Процедура МастерСозданияПартионнойПочты(Команда)
	СтрАдрес = Новый Структура;
	Адрес = МастерСозданияПартионнойПочтыНаСервере();
	СтрАдрес.Вставить("Адрес",Адрес);
	Открытьформу("Обработка.МастерСозданияПартионнойПочты.Форма.ФормаМастер",СтрАдрес,ЭтотОбъект,,,,,);
КонецПроцедуры


&НаКлиенте
Процедура ПодборПоНастройкам(Команда)
	ОбъектыКлиент.ПодборПоНастройкам(ЭтаФорма);
КонецПроцедуры

