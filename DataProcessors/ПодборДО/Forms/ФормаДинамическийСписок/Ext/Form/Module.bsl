
&НаКлиенте
Процедура Отобрать(Команда)
	ОтобратьПоДинамическомуСписку();
	УстановитьФлажки(Неопределено);
КонецПроцедуры

&НаСервере
Процедура ОтобратьПоДинамическомуСписку()
	Схема     = Элементы.СписокДО.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	Настройки = Элементы.СписокДО.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных();
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки, , ,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	
	ТаблицаРезультат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	Объект.Объекты.Загрузить(ТаблицаРезультат);
КонецПроцедуры

&НаСервере
Процедура ОтобратьПоДинамическомуСпискуСУчетомВыделения()
	Схема     = Элементы.СписокДО.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	Настройки = Элементы.СписокДО.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	
	Если Элементы.СписокДО.ВыделенныеСтроки.Количество() > 0 Тогда
		 Отбор = Настройки.Отбор.Элементы;
		 ЭлементОтбора = Отбор.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		 ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
		 ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект");
		 ЭлементОтбора.ПравоеЗначение = Список;
		 ЭлементОтбора.Использование = Истина;
	КонецЕсли;
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных();
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки, , ,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	
	ТаблицаРезультат = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	Объект.Объекты.Загрузить(ТаблицаРезультат);
КонецПроцедуры


&НаКлиенте
Процедура Добавить(Команда)
	ПомеченныеСтроки = Объект.Объекты.НайтиСтроки(Новый Структура("Пометка", Истина));
		
	Если ПомеченныеСтроки.Количество() = 0 Тогда
		Сообщить("Ничего не отмечено!");
	Иначе			
		Для Каждого Элемент Из ПомеченныеСтроки Цикл
			Нов = ВладелецФормы.Объект.Объекты.Добавить();
			Нов.Объект = Элемент.Объект;	
			Попытка
				Нов.Контрагент = Элемент.Объект;
				Нов.ДоговорКонтрагента = Элемент.Объект;	
				Нов.УслугаПоДоговору = Элемент.Объект;
				Нов.ДолговоеОбязательство = Элемент.Объект;
				Нов.ИсполнительныйДокумент = Элемент.Объект;
			Исключение
			КонецПопытки;
		КонецЦикла;
		ЭтаФорма.Закрыть();
	КонецЕсли;  	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьНастройки(Команда)
	Если Объект.НастройкаПодбор <> ПредопределенноеЗначение("Справочник.НастройкиПодборДО.ПустаяСсылка") Тогда
		ЗаписатьНастройку();		
	Иначе
		Форма = ПолучитьФорму("Справочник.НастройкиПодборДО.Форма.ФормаЭлемента", Новый Структура("Настройка", НастройкиПодбора()), 
		ЭтаФорма);
		
		Форма.Объект.НомерСтроки = Объект.НомерСтроки;
		Форма.Объект.Назначение = ПредопределенноеЗначение("Перечисление.НазначениеНастроекОтбора.ПодборДО");
		Форма.Объект.ВидПодбораОбъектов = Объект.ВидПодбораОбъектов;
		Форма.Объект.ВидСправочника = Объект.ВидСправочника;
		
		Форма.ОткрытьМодально();	
		Если Не Форма.Объект.Ссылка.Пустая() Тогда
			Объект.НастройкаПодбор = Форма.Объект.Ссылка;
		КонецЕсли;
		
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаписатьНастройку()
	СпрОбъект = Объект.НастройкаПодбор.ПолучитьОбъект();
	СпрОбъект.ВидСправочника = Объект.ВидСправочника;
	СпрОбъект.ВидПодбораОбъектов = Объект.ВидПодбораОбъектов;
	СпрОбъект.Настройка = Новый ХранилищеЗначения(НастройкиПодбора());
	СпрОбъект.Записать();
КонецПроцедуры

&НаКлиенте
Процедура НастройкаПодборПриИзменении(Элемент)    
	Если ЗначениеЗаполнено(Объект.НастройкаПодбор) Тогда
		Если Объект.ВидПодбораОбъектов <> ОбъектыСервер.РазыменоватьСсылку(Объект.НастройкаПодбор, "ВидПодбораОбъектов") ИЛИ Объект.ВидСправочника <> ОбъектыСервер.РазыменоватьСсылку(Объект.НастройкаПодбор, "ВидСправочника") Тогда
			Объект.ВидПодбораОбъектов = ОбъектыСервер.РазыменоватьСсылку(Объект.НастройкаПодбор, "ВидПодбораОбъектов");
			Объект.ВидСправочника = ОбъектыСервер.РазыменоватьСсылку(Объект.НастройкаПодбор, "ВидСправочника");
			ПерезаполнитьЗапрос();
		КонецЕсли;
		Массив = ОбъектыСервер.РазыменоватьСсылку(Объект.НастройкаПодбор, "Настройка.Получить()");
		СписокДО.КомпоновщикНастроек.ЗагрузитьНастройки(Массив[0]);
		УстановитьЗначенияПараметров();
	КонецЕсли;	
КонецПроцедуры	

&НаКлиенте
Процедура СнятьФлажки(Команда)
	Для Каждого Элемент Из Объект.Объекты Цикл
		Элемент.Пометка = Ложь;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	Для Каждого Элемент Из Объект.Объекты Цикл
		Элемент.Пометка = Истина;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СохранитьНастрйкиКак(Команда)
	Форма = ПолучитьФорму("Справочник.НастройкиПодборДО.Форма.ФормаЭлемента", Новый Структура("Настройка", НастройкиПодбора()), 
	ЭтаФорма);
	
	Форма.Объект.НомерСтроки = Объект.НомерСтроки;
	Форма.Объект.Назначение = ПредопределенноеЗначение("Перечисление.НазначениеНастроекОтбора.ПодборДО");
	Форма.Объект.ВидПодбораОбъектов = Объект.ВидПодбораОбъектов;
	Форма.Объект.ВидСправочника = Объект.ВидСправочника;
	
	Форма.ОткрытьМодально();	
	Если Не Форма.Объект.Ссылка.Пустая() Тогда
		Объект.НастройкаПодбор = Форма.Объект.Ссылка;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция НастройкиПодбора()
	Массив = Новый Массив();
	Настройки = Элементы.СписокДО.ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
	Массив.Добавить(Настройки);
	Схема = Элементы.СписокДО.ПолучитьИсполняемуюСхемуКомпоновкиДанных();
	Массив.Добавить(Схема);
	Возврат Массив;	
КонецФункции

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если ВладелецФормы = Неопределено Тогда
		Элементы.Добавить.Видимость = Ложь;
		Объект.ВидСправочника = ПредопределенноеЗначение("Перечисление.ВидыСправочникаДляПодбора.ДолговыеОбязательства");
		Объект.ВидПодбораОбъектов = ПредопределенноеЗначение("Перечисление.ВидыПодбораОбъектов.ТолькоОбъектыВРаботе");
	КонецЕсли;
	ПерезаполнитьЗапрос();
КонецПроцедуры

&НаСервере
Процедура УстановитьЗначенияПараметров()
	//СписокДО.Параметры.УстановитьЗначениеПараметра("Организация", ПараметрыСеанса.ТекущийПользователь.Организация); 		
	//СписокДО.Параметры.УстановитьЗначениеПараметра("Подразделение", ПредопределенноеЗначение("Справочник.ПодразделенияОрганизаций.ПустаяСсылка")); 		
	//СписокДО.Параметры.УстановитьЗначениеПараметра("Сотрудник", ПредопределенноеЗначение("Справочник.Пользователи.ПустаяСсылка")); 
	Если Параметры.Свойство("ЗаполнениеСудебныхУчастковДолжников") Тогда 
		Объект.ВидПодбораОбъектов = ПредопределенноеЗначение("Перечисление.ВидыПодбораОбъектов.ТолькоОбъектыВРаботе");
		Объект.ВидСправочника = ПредопределенноеЗначение("Перечисление.ВидыСправочникаДляПодбора.ДолговыеОбязательства");	
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	УстановитьЗначенияПараметров();
	//Элементы.ВидПодбораОбъектов.Видимость = ПараметрыСеанса.ТекущийПользователь.ЭтоРуководитель;
КонецПроцедуры

&НаСервере
Процедура ПерезаполнитьЗапрос()
	СписокДО.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[0].Элементы.Очистить();
	СписокДО.ТекстЗапроса = УправлениеСвойствами.ПолучитьТекстЗапроса1(Объект.ВидПодбораОбъектов, Объект.ВидСправочника);
КонецПроцедуры

&НаКлиенте
Процедура ВидПодбораОбъектовПриИзменении(Элемент)
	ПерезаполнитьЗапрос();
КонецПроцедуры

&НаКлиенте
Процедура ВидСправочникаПриИзменении(Элемент)
	ПерезаполнитьЗапрос();
КонецПроцедуры

&НаКлиенте
Процедура ОтобратьВыделение(Команда)
	Список.Очистить();
	Для Каждого Стр Из Элементы.СписокДО.ВыделенныеСтроки Цикл
		Список.Добавить(Элементы.СписокДО.ДанныеСтроки(стр).Объект);
	КонецЦикла;
	
	ОтобратьПоДинамическомуСпискуСУчетомВыделения();
	УстановитьФлажки(Неопределено);
КонецПроцедуры