
&НаКлиенте
Процедура ШапкаРеестраВыбор(Элемент, Область, СтандартнаяОбработка)
	
	ЗначенияЯчейки = Новый Структура;
	ЗначенияЯчейки.Вставить("Авто", Истина);
	ЗначенияЯчейки.Вставить("Номер", Область.Лево);
	ЗначенияЯчейки.Вставить("Имя", Область.Текст);
	
	ОбработкаПослеЗакрытия = Новый ОписаниеОповещения(
		"ОбработкаСоответствия",
		ЭтотОбъект
	);
	
	ОткрытьФорму(
		"Справочник.НастройкиПроверкиРеестров.Форма.ФормаВыбораСоответствий",
		ЗначенияЯчейки,
		ЭтотОбъект,
		УникальныйИдентификатор,
		,
		,
		ОбработкаПослеЗакрытия,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца
	);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаСоответствия(ЗначенияЯчейки, ДополнительныеПараметры) Экспорт

	Если ЗначенияЯчейки = Неопределено Тогда
	
		Возврат;
	
	КонецЕсли;
	
	Если Не ЗначенияЯчейки["Результат"] Тогда
	
		Возврат;
	
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойствСоответствий(ЗначенияЯчейки);

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьЗначенияСвойствСоответствий(ЗначенияЯчейки)

	ЗначенияЯчейки = ПриготовитьСоответствие(ЗначенияЯчейки);
	Запись = Объект.СоответствияСРеестром.Добавить();
	ЗаполнитьЗначенияСвойств(
		Запись,
		ЗначенияЯчейки
	);

КонецПроцедуры

&НаКлиенте
Функция ПриготовитьСоответствие(Знач ЗначенияЯчейки)

	ОписаниеТипаКолонки = ЗначенияЯчейки["Тип"];
	ПредставлениеТипа = ВытащитьТип(ОписаниеТипаКолонки);
	
	Настройка = Новый Структура;
	Настройка.Вставить("ТипКолонки", ПредставлениеТипа);
	Настройка.Вставить("НомерКолонки", ЗначенияЯчейки["Номер"]);
	Настройка.Вставить("ИмяКолонки", ЗначенияЯчейки["Имя"]);
	
	Возврат Настройка;

КонецФункции

// TODO - Перенести в Управление
&НаСервереБезКонтекста
Функция ВытащитьТип(Знач ОписаниеТипа)

	ТипыОписания = ОписаниеТипа.Типы();
	Если ТипыОписания.Количество() = 0 Тогда
	
		Возврат Неопределено;
	
	КонецЕсли;
	ТипКолонки = ТипыОписания[0];
	Если УправлениеДанными.ЭтоПримитивныйТип(ТипКолонки) Тогда
	
		Возврат Строка(ТипКолонки);
	
	КонецЕсли;
	
	Попытка
	
		МенеджерТипаКолонки = УправлениеМетаданными.МенеджерОбъектаПоТипу(
			ТипКолонки
		);
	
	Исключение
		ВызватьИсключение УправленияСообщениями.ПредупреждениеОбПользовательскойОшибке(
			"Такого объекта метаданных не существует: " + Символы.ПС
			+ ОписаниеОшибки()
		);
	КонецПопытки;
	
	Представление = СтрЗаменить(
		Строка(МенеджерТипаКолонки),
		"Менеджер",
		"Ссылка"
	);
	
	Возврат Представление;

КонецФункции // ()

&НаКлиенте
Процедура Протестировать(Команда)
	
	Результат = ПротестироватьНаСервере();
	
	Номер = 0;
	СоообщенияОбОшибках = Новый Массив;
	МаксДлина = Мин(5, Результат.Количество());
	Пока Номер < МаксДлина Цикл
	
		ДанныеОшибки = Результат[Номер];
		СоообщенияОбОшибках.Добавить("НомерКолонки: ");
		СоообщенияОбОшибках.Добавить(ДанныеОшибки["НомерКолонки"]);
		СоообщенияОбОшибках.Добавить(Символы.ПС);
		СоообщенияОбОшибках.Добавить("Строки: ");
		Для каждого Ошибка Из ДанныеОшибки["Ошибки"] Цикл
		
			СоообщенияОбОшибках.Добавить(Ошибка["НомерСтроки"]);
			СоообщенияОбОшибках.Добавить(", ");
		
		КонецЦикла;
		СоообщенияОбОшибках.Добавить(Символы.ПС);
		СоообщенияОбОшибках.Добавить(Символы.ПС);
		
		Номер = Номер + 1;
	
	КонецЦикла;
	
	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = СтрСоединить(СоообщенияОбОшибках, "");
	Сообщение.Сообщить();
	
КонецПроцедуры

&НаСервере
Функция ПротестироватьНаСервере()

	Возврат Справочники.НастройкиПроверкиРеестров.Проверить(
		ШапкаРеестра,
		Объект.Ссылка
	);

КонецФункции // ()
