
&НаКлиенте
Процедура ЛогинПриИзменении(Элемент)
	
	ЛогинИзменен = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПарольПриИзменении(Элемент)
	
	ПарольИзменен = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не Параметры.Ключ.Пустая() Тогда
	
		Ключи = ОбработкаБезопасноеХранилище.КлючиПочтаРФ();

		ПочтаРФ = ОбработкаБезопасноеХранилище.Получить(Объект.Ссылка, Ключи);
		
		Для каждого Ключ Из Ключи Цикл
		
			ЭтаФорма[Ключ] = ПочтаРФ[Ключ];
		
		КонецЦикла;
	
	КонецЕсли;
	
	Пароль = ?(ЗначениеЗаполнено(Пароль), ЭтотОбъект.УникальныйИдентификатор, "");

КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Ключи = ОбработкаБезопасноеХранилище.КлючиПочтаРФ();
	
	Для каждого Ключ Из Ключи Цикл
	
		Если ЭтаФорма[Ключ + "Изменен"] Тогда
		
			ЭтаФорма[Ключ + "Изменен"] = Ложь;
			ОбработкаБезопасноеХранилище.Записать(ТекущийОбъект.Ссылка, Ключ, ЭтаФорма[Ключ]);
		
		КонецЕсли;
	
	КонецЦикла;
	Пароль = ?(ЗначениеЗаполнено(Пароль), ЭтотОбъект.УникальныйИдентификатор, "");
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущиеНастройкиПользователя(Команда)
	
	Ответ = ТекущиеНастройкиПользователяНаСервере();
	Сообщение(Ответ);
	
КонецПроцедуры

&НаСервере
Функция ТекущиеНастройкиПользователяНаСервере() Экспорт
	
	РолейДостаточно = ПроверитьНаличиеНеобходимыхРолей();
	
	Если НЕ РолейДостаточно Тогда
		Возврат "У Вас нет доступа на просмотр данных настроек. Обратитесь к Администратору системы!"; 	
	КонецЕсли;
	
	Попытка
		ОтветHTTP = Справочники.УчетныеЗаписиПочтыРФ.НастройкиПользователяПочтыРФ();
	Исключение
		Возврат СтрШаблон(
			"Не удалось получить настройки пользователя Почты РФ! 
			| по причине: %1",
			ОбработкаОшибок.КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
		КонецПопытки;	
		
	Сообщение("Расшифровать значения настроек можно в личном кабинете почты РФ.");	
	Возврат ОтветHTTP;
	
КонецФункции

&НаСервере
Функция ПроверитьНаличиеНеобходимыхРолей()

	НаличеРолей = Ложь;
	ИдентификаторТекущегоПользователя = ПараметрыСеанса.ТекущийПользователь.ИдентификаторПользователяИБ;
	ПользовательИБ = ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(ИдентификаторТекущегоПользователя);
	
	Для Каждого Роль Из Метаданные.ОсновныеРоли  Цикл
		Если ПользовательИБ.Роли.Содержит(Роль) Тогда
			
			НаличеРолей = Истина; 
			Прервать;
			
		КонецЕсли;
	КонецЦикла; 
	
	Возврат НаличеРолей;

КонецФункции 


&НаКлиенте
Процедура ТекущееКоличествоЗапросовПоAPI(Команда)
	
	Ответ = ТекущееКоличествоЗапросовПоAPIНаСервере();
	Сообщение(Ответ);
	
КонецПроцедуры

&НаСервере
Функция ТекущееКоличествоЗапросовПоAPIНаСервере()
	
	Попытка
		ОтветHTTP = Справочники.УчетныеЗаписиПочтыРФ.НастройкиКоличествоЗапросовПочтыРФ();
	Исключение
		Возврат СтрШаблон(
			"Не удалось получить настройки количества запросов Почты РФ! 
			| по причине: %1",
			ОбработкаОшибок.КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
		КонецПопытки;	
		
	Возврат ОбработкаОтветаHTTPПоКоличествуЗапросовКAPI(ОтветHTTP);
	
КонецФункции

&НаСервере
Функция ОбработкаОтветаHTTPПоКоличествуЗапросовКAPI(Ответ)
	
	ОбъектJSON = ПолучитьОбъектИзJSON(Ответ); 
	ЛимитВСутки = ОбъектJSON.Получить("allowed-count");
	ТекущееКоличество = ОбъектJSON.Получить("current-count");
	Остаток = ЛимитВСутки - ТекущееКоличество;
		
	ОтветСтрокой = СтрШаблон(
			"Ваш лимит запросов в сутки: %1,
			|текущее количество выполненных запросов за сутки: %2,
			|остаток запросов за сутки: %3", ЛимитВСутки, ТекущееКоличество, Остаток);
	Возврат ОтветСтрокой; 
	
КонецФункции

&НаСервере
Функция ПолучитьОбъектИзJSON(JSON)

	Возврат КоннекторHTTP.JsonВОбъект(JSON);  

КонецФункции

Функция Сообщение(Текст) 
	
	Сообщение = Новый СообщениеПользователю();
	Сообщение.Текст = Текст;
	Сообщение.Сообщить();	
	
КонецФункции

&НаКлиенте
Процедура ВерсияAPIСоздание1(Элемент, СтандартнаяОбработка)
	ВерсияAPIСозданиеНаСервере();
КонецПроцедуры

&НаСервере
Процедура ВерсияAPIСозданиеНаСервере()
	Объект.ВерсияAPI = Перечисления.ПочтаРФ_ВерсияAPI.Версия_1_0;
КонецПроцедуры




