&НаКлиенте
Перем НовоеИмяФайла Экспорт;
&НаКлиенте
Процедура ПрикрепитьФайлы(Команда)
	Форма = ПолучитьФорму("Документ.ПрикрепитьФайлы.Форма.ФормаДокумента",,ЭтаФорма);
	      
	Если Список.Отбор.Элементы.Количество() > 0 Тогда
		Форма.Объект.Объект = Список.Отбор.Элементы[0].ПравоеЗначение;
	КонецЕсли;	
	//Чуров
	ОткрытьФорму(Форма);
	//Форма.Открыть();
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ОткрытьФайлы(Неопределено);
КонецПроцедуры

&НаСервере
Функция СписокВыборНаСервере(ВыбраннаяСтрока, ПолучитьУИД = Ложь)
	
	ДанныеФайла = РегистрыСведений.ПрикрепляемыеФайлы.ДанныеФайла(ВыбраннаяСтрока);
	Если ПолучитьУИД Тогда
		
		Возврат ДанныеФайла["УИД"];
		
	КонецЕсли;
	
	Возврат ДанныеФайла["БинарныеДанные"];
	
	//Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
	//|	ПрикрепитьФайлыФайлы.Хранилище,
	//|	ПрикрепитьФайлыФайлы.УИД
	//|ИЗ
	//|	Документ.ПрикрепитьФайлы.Файлы КАК ПрикрепитьФайлыФайлы
	//|ГДЕ
	//|	ПрикрепитьФайлыФайлы.Ссылка = &Ссылка
	//|	И ПрикрепитьФайлыФайлы.НомерСтроки = &НомерСтроки");
	//Запрос.УстановитьПараметр("Ссылка", ВыбраннаяСтрока.Регистратор);
	//Запрос.УстановитьПараметр("НомерСтроки", ВыбраннаяСтрока.НомерСтроки_);
	//Результат = Запрос.Выполнить().Выгрузить();
	//
	//Если ПолучитьУИД Тогда
	//	Возврат Результат[0].УИД;
	//Иначе
	//	Возврат Результат[0].Хранилище.Получить();
	//	//Сообщить(строка(Результат[0].Хранилище.Получить()));
	//КонецЕсли;
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	////Параметр = Список.Параметры.Элементы.Найти("Должник");		
	////Если Параметры.Отбор.Свойство("ДолговоеОбязательство") Тогда
	////	Параметр.Значение = Параметры.Отбор.ДолговоеОбязательство.Владелец;
	////ИначеЕсли Параметры.Отбор.Свойство("Должник") Тогда
	////	Параметр.Значение = Параметры.Отбор.Должник;
	////	
	////КонецЕсли;
	////Параметр.Использование = Истина;
КонецПроцедуры

&НаКлиенте
Процедура Изменить(Команда)
	//Чуров
	ПоказатьЗначение(,Элементы.Список.ТекущиеДанные.Регистратор);
	//ОткрытьЗначение(Элементы.Список.ТекущиеДанные.Регистратор);
КонецПроцедуры

&НаКлиенте
Процедура СохранитьФайл(Команда)
	//Если Элементы.ТЗ.ВыделенныеСтроки.Количество() = 0 Тогда 		
	//	Сообщение = Новый СообщениеПользователю();
	//	Сообщение.Текст = "Не выбрано ни одной строки, или список пуст!";
	//	Сообщение.Сообщить();	
	//	Возврат;
	//КонецЕсли;
	//
	//КаталогПользователя = РазыменоватьСсылку("ПараметрыСеанса.Пользователь.КаталогФайлов");
	//
	//Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	//Диалог.Заголовок = "Выберите каталог";
	//Диалог.МножественныйВыбор = Ложь;
	//Если Не Диалог.Выбрать() Тогда
	//	Возврат;
	//КонецЕсли;
	//Диалог.Каталог = Диалог.Каталог + "\";
	//
	////
	//Для Каждого Стр Из Элементы.ТЗ.ВыделенныеСтроки Цикл		
	//	ВыделСтрока = ТЗ.НайтиПоИдентификатору(Стр);
	//		
	//	//
	//	Флаг_ХранениеНаСервере = РазыменоватьСсылку("Константы.ХранитьПрикрепляемыеФайлыНаСервере.Получить()");
	//		
	//	Данные = Неопределено;
	//	Если ОбъектыСервер.РазыменоватьСсылку(ВыделСтрока.ТипФайла, "КешироватьНаКомпьютереПользователя") Тогда
	//		Если Флаг_ХранениеНаСервере Тогда
	//			//Ищем по серверному пути на случай RDP
	//			Файл = Новый Файл(ВыделСтрока.Путь_Куда);
	//			Если Файл.Существует() Тогда
	//				Данные = Файл.ПолноеИмя; 
	//			КонецЕсли;
	//		КонецЕсли;
	//		Если Данные = Неопределено Тогда
	//			//Ищем на локальной машине в темпах
	//			Файл = Новый Файл(ВыделСтрока.ИмяФайла);
	//			Файл = Новый Файл(КаталогПользователя + Строка(ВыделСтрока.УИД) + Файл.Расширение);
	//			Если Файл.Существует() Тогда
	//				Данные = Файл.ПолноеИмя; 
	//			КонецЕсли;					
	//		КонецЕсли;	
	//	КонецЕсли;
	//	
	//	Если Данные = Неопределено Тогда
	//		Структура = Новый Структура("Путь_Куда, Регистратор, УИД", ВыделСтрока.Путь_Куда, ВыделСтрока.Регистратор, 
	//				ВыделСтрока.УИД);
	//		Данные = СписокВыборНаСервере(Флаг_ХранениеНаСервере, Структура);
	//		Если Данные = Неопределено Тогда
	//			Данные = СписокВыборНаСервере(Не Флаг_ХранениеНаСервере, Структура); 
	//			Если Данные = Неопределено Тогда
	//				Сообщить("Файл " + ВыделСтрока.ИмяФайла + " не найден.");
	//				Продолжить;
	//			КонецЕсли;
	//		КонецЕсли;
	//	КонецЕсли;
	//	
	//	//		
	//	Файл = Новый Файл(Диалог.Каталог + ВыделСтрока.ИмяФайла);
	//	Если Файл.Существует() Тогда 
	//		КнопкиДиалога = Новый СписокЗначений();
	//		КнопкиДиалога.Добавить(1, "Перезаписать");
	//		КнопкиДиалога.Добавить(2, "Переименовать");
	//		КнопкиДиалога.Добавить(3, "Пропустить");
	//		Ответ = Вопрос("Файл """ + Файл.Имя + """ уже существует", КнопкиДиалога,,, "Файл существует");
	//		Если Ответ = 1 Тогда
	//			Попытка 
	//				Если ТипЗнч(Данные) = Тип("Строка") Тогда
	//					КопироватьФайл(Данные, Файл.ПолноеИмя);			
	//				Иначе
	//					Данные.Записать(Файл.ПолноеИмя);
	//					Если ОбъектыСервер.РазыменоватьСсылку(ВыделСтрока.ТипФайла, "КешироватьНаКомпьютереПользователя") Тогда
	//						КопироватьФайл(Файл.ПолноеИмя, КаталогПользователя + Строка(ВыделСтрока.УИД) + Файл.Расширение); //копируем в кеш
	//					КонецЕсли;
	//				КонецЕсли;
	//				Сообщить("Перезаписан файл """ + Файл.ПолноеИмя + """.");
	//			Исключение
	//				Сообщить("Не записан файл """ + Файл.ПолноеИмя + """.");
	//				Сообщить(ОписаниеОшибки());
	//				Продолжить;
	//			КонецПопытки;
	//		ИначеЕсли Ответ = 2 Тогда
	//			ВыбЗнач = "";
	//			ОписаниеТипов = Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100),);
	//			Если ВвестиЗначение(ВыбЗнач, "Введите новое имя (без расширения!)", ОписаниеТипов) Тогда		
	//				Попытка 
	//					Если ТипЗнч(Данные) = Тип("Строка") Тогда
	//						КопироватьФайл(Данные, Диалог.Каталог + ВыбЗнач + Файл.Расширение);			
	//					Иначе
	//						Данные.Записать(Диалог.Каталог + ВыбЗнач + Файл.Расширение);
	//						Если ОбъектыСервер.РазыменоватьСсылку(ВыделСтрока.ТипФайла, "КешироватьНаКомпьютереПользователя") Тогда
	//							КопироватьФайл(Диалог.Каталог + ВыбЗнач + Файл.Расширение, 
	//									КаталогПользователя + Строка(ВыделСтрока.УИД) + Файл.Расширение); //копируем в кеш
	//						КонецЕсли;
	//					КонецЕсли;
	//					Сообщить("Переименован и записан файл """ + Диалог.Каталог + ВыбЗнач + Файл.Расширение + """.");
	//				Исключение
	//					Сообщить("Не записан файл """ + Диалог.Каталог + ВыбЗнач + Файл.Расширение + """.");
	//					Сообщить(ОписаниеОшибки());
	//					Продолжить;
	//				КонецПопытки;		
	//			КонецЕсли;
	//		Иначе
	//			Продолжить;
	//		КонецЕсли;	
	//		
	//	// файл с таким же именем не существует
	//	Иначе
	//		Попытка 
	//			Если ТипЗнч(Данные) = Тип("Строка") Тогда
	//				КопироватьФайл(Данные, Файл.ПолноеИмя);			
	//			Иначе
	//				Данные.Записать(Файл.ПолноеИмя);
	//				Если ОбъектыСервер.РазыменоватьСсылку(ВыделСтрока.ТипФайла, "КешироватьНаКомпьютереПользователя") Тогда
	//					КопироватьФайл(Файл.ПолноеИмя, КаталогПользователя + Строка(ВыделСтрока.УИД) + Файл.Расширение); //копируем в кеш
	//				КонецЕсли;
	//			КонецЕсли;
	//			Сообщить("Записан файл """ + Файл.ПолноеИмя + """.");				
	//		Исключение
	//			Сообщить("Не записан файл """ + Файл.ПолноеИмя + """.");
	//			Сообщить(ОписаниеОшибки());
	//			Продолжить;
	//		КонецПопытки;
	//	КонецЕсли;		
	//КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФайлы(Команда)
  Если Элементы.Список.ВыделенныеСтроки.Количество() = 0 Тогда 		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не выбрано ни одной строки, или список пуст!";
		Сообщение.Сообщить();	
		Возврат;
	КонецЕсли;
	#Если Вебклиент Тогда
		Если Не РазыменоватьСсылку("Константы.ХранитьПрикрепляемыеФайлыНаСервере.Получить()") Тогда	
			Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
			Диалог.Заголовок = "Выберите каталог";
			Диалог.МножественныйВыбор = Ложь;
			Диалог.Показать(Новый ОписаниеОповещения("ОткрытьФайлыЗавершение", ЭтаФорма, Новый Структура("Диалог", Диалог)));
			
		Иначе
			Для Каждого ВыделСтрока Из Элементы.Список.ВыделенныеСтроки Цикл
				Данные = СписокВыборНаСервере(ВыделСтрока, Истина);		
				Файл = Новый Файл(Элементы.Список.ДанныеСтроки(ВыделСтрока).ИмяФайла);
				Каталог = РазыменоватьСсылку("Константы.КаталогХраненияПрикрепляемыхФайловНаСервере.Получить()");
				Если Прав(Каталог, 1) <> "\" Тогда
					Каталог = Каталог + "\";
				КонецЕсли;
				ПутьКФайлу = строка(Каталог + Данные + Файл.Расширение);
				Оповещение = Новый ОписаниеОповещения("ЗапускПриложения", этаформа);
				НачатьЗапускПриложения(Оповещение,ПутьКФайлу,,Истина);
				//ЗапуститьПриложение(Каталог + Данные + Файл.Расширение);
			КонецЦикла;
		КонецЕсли;
		
	#Иначе
		Если Не РазыменоватьСсылку("Константы.ХранитьПрикрепляемыеФайлыНаСервере.Получить()") Тогда	
			Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
			Диалог.Заголовок = "Выберите каталог";
			Диалог.МножественныйВыбор = Ложь;
			Если Диалог.Выбрать() Тогда
				Для Каждого ВыделСтрока Из Элементы.Список.ВыделенныеСтроки Цикл
					ОткрытьФайлыИзБД(Диалог,ВыделСтрока);	
				КонецЦикла;
			КонецЕсли;	
		Иначе
			Для Каждого ВыделСтрока Из Элементы.Список.ВыделенныеСтроки Цикл
				Данные = СписокВыборНаСервере(ВыделСтрока, Истина);		
				Файл = Новый Файл(Элементы.Список.ДанныеСтроки(ВыделСтрока).ИмяФайла);
				Каталог = РазыменоватьСсылку("Константы.КаталогХраненияПрикрепляемыхФайловНаСервере.Получить()");
				Если Прав(Каталог, 1) <> "\" Тогда
					Каталог = Каталог + "\";
				КонецЕсли;
				ФайлНаСервере = Новый Файл(Каталог + Данные + Файл.Расширение);
				Если ФайлНаСервере.Существует() Тогда
					ЗапуститьПриложение(Каталог + Данные + Файл.Расширение);
				Иначе
					Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
					Диалог.Заголовок = "Выберите каталог";
					Диалог.МножественныйВыбор = Ложь;
					Если Диалог.Выбрать() Тогда
						Для Каждого ВыделСтрока Из Элементы.Список.ВыделенныеСтроки Цикл
							ОткрытьФайлыИзБД(Диалог,ВыделСтрока);	
						КонецЦикла;
					КонецЕсли;	
					Прервать;//выходим из предыдущего цикла выделенных строк
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;	
	#КонецЕсли
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФайлыИзБД(Диалог,ВыделСтрока)
	Данные = СписокВыборНаСервере(ВыделСтрока);
	Если Данные <> Неопределено Тогда 
		ИмяФайла = Элементы.Список.ДанныеСтроки(ВыделСтрока).ИмяФайла;
		Файл = Новый Файл(Диалог.Каталог + "\" + ИмяФайла);
		Если Файл.Существует() Тогда 
			КнопкиДиалога = Новый СписокЗначений;
			КнопкиДиалога.Добавить(1, "Перезаписать");
			КнопкиДиалога.Добавить(2, "Переименовать");
			//Чуров
			ДопПараметры = новый Структура("Диалог, Файл, Данные");
			ДопПараметры.Диалог = Диалог;
			ДопПараметры.Файл = Файл;
			ДопПараметры.Данные = Данные;
			Оповещение = новый ОписаниеОповещения("ПослеОтветаФайлСуществует", ЭтаФорма, ДопПараметры);
			ПоказатьВопрос(Оповещение, "Файл " + Файл.Имя + " уже существует", КнопкиДиалога,,,"Файл существует"); 
			//Ответ = Вопрос("Файл " + Файл.Имя + " уже существует", КнопкиДиалога,,, "Файл существует");
			//Если Ответ = 1 Тогда
			//  	Данные.Записать(Диалог.Каталог + "\" + Файл.Имя);
			//	ЗапуститьПриложение(Диалог.Каталог + "\" + Файл.Имя);
			//Иначе
			//	НовоеИмяФайла = ОткрытьФормуМодально("РегистрСведений.ПрикрепляемыеФайлы.Форма.ФормаПереименования");
			//	Данные.Записать(Диалог.Каталог + "\" + НовоеИмяФайла + Файл.Расширение);
			//	ЗапуститьПриложение(Диалог.Каталог + "\" + НовоеИмяФайла + Файл.Расширение);
			//КонецЕсли;
		Иначе
			Данные.Записать(Диалог.Каталог + "\" + Файл.Имя);
			ЗапуститьПриложение(Диалог.Каталог + "\" + Файл.Имя);
		КонецЕсли;
	Иначе
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Данные файла не найдены";
		Сообщение.Сообщить();
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФайлыЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Диалог = ДополнительныеПараметры.Диалог;
	
	Если (ВыбранныеФайлы <> Неопределено) Тогда
		Для Каждого ВыделСтрока Из Элементы.Список.ВыделенныеСтроки Цикл
			Данные = СписокВыборНаСервере(ВыделСтрока);
			ИмяФайла = Элементы.Список.ДанныеСтроки(ВыделСтрока).ИмяФайла;
			Файл = Новый Файл(Диалог.Каталог + "\" + ИмяФайла);
			ДополнительныеПараметры = Новый Структура;
			ДополнительныеПараметры.Вставить("Данные",Данные);
			ДополнительныеПараметры.Вставить("Диалог",Диалог);
			ДополнительныеПараметры.Вставить("Файл",Файл);
			
			//ДополнительныеПараметры.Вставить("Данные, Диалог, Файл",Данные,Диалог, Файл);
			Файл.НачатьПроверкуСуществования(Новый ОписаниеОповещения("КонецПроверкиСуществования",ЭтаФорма,ДополнительныеПараметры));
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&наКлиенте
Процедура ПослеОтветаФайлСуществует(Результат, Параметры) Экспорт  
	Если Результат = 1 Тогда
		ДопПарам = Новый Структура;
		ДопПарам.Вставить("Диалог", Параметры.Диалог);
		ДопПарам.Вставить("Файл",Параметры.Файл);
		КудаЗаписать = Параметры.Диалог.Каталог + "\"  + Параметры.Файл.Имя;
		Параметры.Данные.НачатьЗапись(Новый ОписаниеОповещения("ЗавершениеЗаписи",ЭтаФорма,ДопПарам),КудаЗаписать);
		//Параметры.Данные.Записать(Параметры.Диалог.Каталог + "\" + Параметры.Файл.Имя);
		//ПутьКФайлу = строка(Параметры.Диалог.Каталог + "\" + Параметры.Файл.Имя);
		//Оповещение = Новый ОписаниеОповещения("ЗапускПриложения", этаформа);
		//НачатьЗапускПриложения(Оповещение,ПутьКФайлу,,Истина);
		
		//ЗапуститьПриложение(Параметры.Диалог.Каталог + "\" + Параметры.Файл.Имя);
	Иначе
		Форма = ОткрытьФорму("РегистрСведений.ПрикрепляемыеФайлы.Форма.ФормаПереименования",,ЭтаФорма,,,,Новый ОписаниеОповещения("ПолучитьНовоеИмяФайла",ЭтаФорма,Параметры));
		//Параметры.Данные.Записать(Параметры.Диалог.Каталог + "\" + НовоеИмяФайла + Параметры.Файл.Расширение);
		//ДопПарам = Новый Структура;
		//ДопПарам.Вставить("Диалог", Параметры.Диалог);
		//ДопПарам.Вставить("Файл",Параметры.Файл);
		//КудаЗаписать = Параметры.Диалог.Каталог + "\" + НовоеИмяФайла + Параметры.Файл.Расширение;
		//Параметры.Данные.НачатьЗапись(Новый ОписаниеОповещения("ЗавершениеЗаписи",ЭтаФорма,ДопПарам),КудаЗаписать);
		//ПутьКФайлу = строка(Параметры.Диалог.Каталог + "\" + НовоеИмяФайла + Параметры.Файл.Расширение);
		//Оповещение = Новый ОписаниеОповещения("ЗапускПриложения", этаформа);
		//НачатьЗапускПриложения(Оповещение,ПутьКФайлу,,Истина);
		
		//ЗапуститьПриложение(Параметры.Диалог.Каталог + "\" + НовоеИмяФайла + Параметры.Файл.Расширение);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КонецПроверкиСуществования(Существует, ДополнительныеПараметры) Экспорт
	Данные = ДополнительныеПараметры.Данные;
	//Сообщить(Строка(Данные));
	Диалог = ДополнительныеПараметры.Диалог;
	Файл = ДополнительныеПараметры.Файл;
	Если Существует Тогда
		КнопкиДиалога = Новый СписокЗначений;
		КнопкиДиалога.Добавить(1, "Перезаписать");
		КнопкиДиалога.Добавить(2, "Переименовать");
		//Чуров
		ДопПараметры = новый Структура("Диалог, Файл, Данные");
		ДопПараметры.Диалог = Диалог;
		ДопПараметры.Файл = Файл;
		ДопПараметры.Данные = Данные;
		Оповещение = новый ОписаниеОповещения("ПослеОтветаФайлСуществует", ЭтаФорма, ДопПараметры);
		ПоказатьВопрос(Оповещение, "Файл " + Файл.Имя + " уже существует", КнопкиДиалога,,,"Файл существует"); 
	Иначе
		ДопПарам = Новый Структура;
		ДопПарам.Вставить("Диалог", Диалог);
		ДопПарам.Вставить("Файл",Файл);
		КудаЗаписать = Диалог.Каталог + "\" + Файл.Имя;
		Данные.НачатьЗапись(Новый ОписаниеОповещения("ЗавершениеЗаписи",ЭтаФорма,ДопПарам),КудаЗаписать);
	//	Сообщить(КудаЗаписать);
		
		
		//Данные.Записать(Диалог.Каталог + "\" + Файл.Имя);
		//ПутьКФайлу = строка(Диалог.Каталог + "\" + Файл.Имя);
		//Оповещение = Новый ОписаниеОповещения("ЗапускПриложения", этаформа);
		//НачатьЗапускПриложения(Оповещение,ПутьКФайлу,,Истина);
		//ЗапуститьПриложение(Диалог.Каталог + "\" + Файл.Имя);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция РазыменоватьСсылку(Стр)
	Возврат Вычислить(Стр);
КонецФункции

&НаКлиенте
Процедура ЗавершениеЗаписи(ДопПарам) Экспорт
	Диалог = ДопПарам.Диалог;
	Файл = ДопПарам.Файл;
	ПутьКФайлу = строка(Диалог.Каталог + "\" + Файл.Имя);
	Оповещение = Новый ОписаниеОповещения("ЗапускПриложения", этаформа);
	НачатьЗапускПриложения(Оповещение,ПутьКФайлу,,Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапускПриложения(Параметр1, Параметр2) Экспорт
//	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьНовоеИмяФайла(РезультатЗакрытия,Параметры) Экспорт
	ДопПарам = Новый Структура;
	ДопПарам.Вставить("Диалог", Параметры.Диалог);
	ДопПарам.Вставить("Расширение",Параметры.Файл.Расширение);
	ДопПарам.Вставить("НовоеИмяФайла",РезультатЗакрытия);
	КудаЗаписать = Параметры.Диалог.Каталог + "\" + РезультатЗакрытия + Параметры.Файл.Расширение;
	Параметры.Данные.НачатьЗапись(Новый ОписаниеОповещения("ЗавершениеЗаписиПереименование",ЭтаФорма,ДопПарам),КудаЗаписать);

КонецПроцедуры

&НаКлиенте
Процедура ЗавершениеЗаписиПереименование(ДопПарам) Экспорт
	Диалог = ДопПарам.Диалог;
	Расширение = ДопПарам.Расширение;
	ИмяФайла = ДопПарам.НовоеИмяФайла;
	ПутьКФайлу = строка(Диалог.Каталог + "\" + ИмяФайла+Расширение);
	Оповещение = Новый ОписаниеОповещения("ЗапускПриложения", этаформа);
	НачатьЗапускПриложения(Оповещение,ПутьКФайлу,,Истина);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	//Если ИмяСобытия = "ОК_ПереименованиеФайла" и Источник.ИмяФормы = "РегистрСведений.ПрикрепляемыеФайлы.Форма.ФормаПереименования" Тогда
	//	НовоеИмяФайла = Параметр;
	//КонецЕсли;	
КонецПроцедуры

#Область ЭлектроннаяПодпись

&НаКлиенте
Процедура Подписать(Команда)

	ЭлементыСправочникаФайлы = ЗавестиФайлы();
	Для каждого ПодписьФайла Из ЭлементыСправочникаФайлы Цикл
	
		ПараметрыЗавершения = Новый Структура;
		ПараметрыЗавершения.Вставить("ПодписьФайла", ПодписьФайла);
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ПодписатьЗавершение", ЭтотОбъект, ПараметрыЗавершения);
		ДополнительныеПараметры = Новый Структура("ОбработкаРезультата", ОписаниеОповещения);
		
		РаботаСФайламиКлиент.ПодписатьФайл(ПодписьФайла["Файл"], УникальныйИдентификатор, ДополнительныеПараметры);
		ВыделеннаяСтрока = ПодписьФайла["УИД"];
		
		//ВыделеннаяСтрока.ЭлементФайлы = ПодписьФайла["Файл"];
	
	КонецЦикла;
	
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаСервере
Функция ЗавестиФайлы()

	Попытка
	
		ЭлементыСправочникаФайлы = Обработки.Интерфейс_Файлы.ПолучитьФайлы(Элементы.Список.ВыделенныеСтроки);
	
	Исключение
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ОписаниеОшибки();
		Сообщение.Сообщить();
		
		// Логирование
		
		Возврат Новый Массив;
	КонецПопытки;
	
	Возврат ЭлементыСправочникаФайлы;

КонецФункции

&НаСервере
Процедура ОтметитьПодписанным(ПодписьФайла)

	Регистратор = ПодписьФайла["Регистратор"];
	
	ДокументПрикрепления = Регистратор.ПолучитьОбъект();
	Для каждого ДанныеФайлаДокумента Из ДокументПрикрепления.Файлы Цикл
	
		Если ДанныеФайлаДокумента.УИД <> ПодписьФайла["УИД"] Тогда
		
			Продолжить;
		
		КонецЕсли;
		
		ДанныеФайлаДокумента.ЭлементФайлы = ПодписьФайла["Файл"];
	
	КонецЦикла;
	
	ДокументПрикрепления.Записать(РежимЗаписиДокумента.Проведение);

КонецПроцедуры

&НаКлиенте
Процедура ПодписатьЗавершение(Результат, ПараметрыВыполнения) Экспорт
	
	Если Результат = Истина Тогда
	
		ПодписьФайла = ПараметрыВыполнения["ПодписьФайла"];
		
		ОтметитьПодписанным(ПодписьФайла);
	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьФайлСсылку(ВыделеннаяСтрока)

	Возврат РегистрыСведений.ПрикрепляемыеФайлы.СсылкаФайлПоРегистратору(
		ВыделеннаяСтрока.Регистратор,
		ВыделеннаяСтрока.НомерСтроки_);

КонецФункции // ()


&НаКлиенте
Процедура Зашифровать(Команда)

	ВыделенныеСтроки = Элементы.Список.ВыделенныеСтроки;
	
	Для каждого ВыделеннаяСтрока Из ВыделенныеСтроки Цикл

		СсылкаНаФайл = ПолучитьФайлСсылку(ВыделеннаяСтрока);
		Если НЕ СсылкаНаФайл.Пустая() Тогда
		
			ЗашифроватьФайл(СсылкаНаФайл);
		
		КонецЕсли;
	
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ЗашифроватьФайл(СсылкаНаФайл)

	ДанныеФайла = РаботаСФайламиСлужебныйВызовСервера.ПолучитьДанныеФайлаИКоличествоВерсий(СсылкаНаФайл);
	
	ПараметрыОбработчика = Новый Структура;
	ПараметрыОбработчика.Вставить("ДанныеФайла", ДанныеФайла);
	ПараметрыОбработчика.Вставить("ОбъектСсылка", СсылкаНаФайл);
	ПараметрыОбработчика.Вставить("Архив", Ложь);
	
	Обработчик = Новый ОписаниеОповещения("ПослеШифрования", ЭлектроннаяПодписьПослеВызоваКоманд, ПараметрыОбработчика);
	
	РаботаСФайламиСлужебныйКлиент.Зашифровать(Обработчик, ДанныеФайла, УникальныйИдентификатор);
	
КонецПроцедуры


&НаКлиенте
Процедура Расшифровать(Команда)

	ВыделенныеСтроки = Элементы.Список.ВыделенныеСтроки;
	
	Для каждого ВыделеннаяСтрока Из ВыделенныеСтроки Цикл

		СсылкаНаФайл = ПолучитьФайлСсылку(ВыделеннаяСтрока);
		Если НЕ СсылкаНаФайл.Пустая() Тогда
		
			РасшифроватьФайл(СсылкаНаФайл);
		
		КонецЕсли;
	
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура РасшифроватьФайл(СсылкаНаФайл)

	ДанныеФайла = РаботаСФайламиСлужебныйВызовСервера.ПолучитьДанныеФайлаИКоличествоВерсий(СсылкаНаФайл);
	
	ПараметрыОбработчика = Новый Структура;
	ПараметрыОбработчика.Вставить("ДанныеФайла", ДанныеФайла);
	ПараметрыОбработчика.Вставить("ОбъектСсылка", СсылкаНаФайл);
	Обработчик = Новый ОписаниеОповещения("ПослеРасшифровки", ЭлектроннаяПодписьПослеВызоваКоманд, ПараметрыОбработчика);
	
	РаботаСФайламиСлужебныйКлиент.Расшифровать(
		Обработчик,
		ДанныеФайла.Ссылка,
		УникальныйИдентификатор,
		ДанныеФайла);

КонецПроцедуры


&НаКлиенте
Процедура СохранитьВместеСПодписью(Команда)
	
	ВыделенныеСтроки = Элементы.Список.ВыделенныеСтроки;
	
	Для каждого ВыделеннаяСтрока Из ВыделенныеСтроки Цикл

		СсылкаНаФайл = ПолучитьФайлСсылку(ВыделеннаяСтрока);
		Если НЕ СсылкаНаФайл.Пустая() Тогда
		
			РаботаСФайламиСлужебныйКлиент.СохранитьФайлВместеСПодписью(
				СсылкаНаФайл,
				УникальныйИдентификатор);
		
		КонецЕсли;
	
	КонецЦикла;
	
КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ДоступностьЭЦП();
	
КонецПроцедуры

&НаКлиенте
Процедура ДоступностьЭЦП()

	Элементы.ФормаГруппаКомандЭлектроннаяПодпись.Видимость = Ложь;
	Если УправлениеДоступами.ЕстьДоступЭЦП() Тогда
	
		Элементы.ФормаГруппаКомандЭлектроннаяПодпись.Видимость = Истина;
	
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКарточкуФайлов(Команда)

	ВыделенныеСтроки = Элементы.Список.ВыделенныеСтроки;
	
	Для каждого ВыделеннаяСтрока Из ВыделенныеСтроки Цикл

		СсылкаНаФайл = ПолучитьФайлСсылку(ВыделеннаяСтрока);
		Если НЕ СсылкаНаФайл.Пустая() Тогда
		
			ОткрытьЗначение(СсылкаНаФайл);
		
		КонецЕсли;
	
	КонецЦикла;
	
КонецПроцедуры



#КонецОбласти


