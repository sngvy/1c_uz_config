
#Область ЛОКАЛЬНЫЕ_ПЕРЕМЕННЫЕ

&НаКлиенте
Перем
	НастройкиСтруктура, 
	ЕстьПравоИзмененияОбщихНастроек,
	ОперационнаяСистемаНаКлиенте,
	МетаданныеСервераЛицензий,
	СостояниеЛицензирования;

#КонецОбласти

#Область СЛУЖЕБНЫЕ_МЕТОДЫ

#Область СЕРВЕРНЫЕ_МЕТОДЫ

&НаСервереБезКонтекста
Процедура СохранитьНастройки(НастройкиСтруктура)

	сл2_Сервер.УстановитьПерсональныеНастройки(НастройкиСтруктура);
	
	Если НастройкиСтруктура.ДляВсехПользователей Тогда		
		сл2_Сервер.УстановитьОбщиеНастройки(НастройкиСтруктура);
	Иначе
		сл2_Сервер.УстановитьОбщиеНастройки(Неопределено);
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#Область КЛИЕНТСКИЕ_МЕТОДЫ

&НаКлиенте
Функция ЗначениеОпределено(Значение)
	
	Возврат Значение <> Неопределено;
		
КонецФункции 

&НаКлиенте
Процедура ЗагрузитьНастройки()

	НастройкиСтруктура         = сл2_Сервер.ПолучитьНастройки();
	
	АдресСервераЛицензий       = НастройкиСтруктура.АдресСервераЛицензий;
	ИспользоватьПроксиСервер   = НастройкиСтруктура.ИспользоватьПроксиСервер;
	ПолучатьЛицензиюПриЗапуске = НастройкиСтруктура.ПолучатьЛицензиюПриЗапуске;
	ОпределенныйПулЛицензий    = НастройкиСтруктура.ОпределенныйПулЛицензий;
	ДляВсехПользователей       = НастройкиСтруктура.ДляВсехПользователей;
	ПулыЛицензий               = НастройкиСтруктура.ПулыЛицензий;	
	НастройкиПереопределены    = НастройкиСтруктура.НастройкамиУправляетОблачныйХостер; 
	
	ОбновитьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДоступность()

	НастройкамиУправляетАдмин = НастройкиСтруктура.ДляВсехПользователей;
	
	Элементы.ГруппаНастройкамиУправляетАдмин.Видимость = НастройкамиУправляетАдмин И НЕ НастройкиПереопределены;
	Элементы.ГруппаНастройкамиУправляетАдминХостинга.Видимость = НастройкиПереопределены;	
	Элементы.ГруппаСтраницаНастройки.Доступность = Не НастройкиПереопределены И (Не НастройкамиУправляетАдмин ИЛИ ЕстьПравоИзмененияОбщихНастроек);
	Элементы.ПрименитьНастройки.Доступность = Не НастройкиПереопределены И (Не НастройкамиУправляетАдмин ИЛИ ЕстьПравоИзмененияОбщихНастроек);
	Элементы.ДляВсехПользователей.Доступность = Не НастройкиПереопределены И ЕстьПравоИзмененияОбщихНастроек;
	
	Элементы.ПулыЛицензий.Видимость = ОпределенныйПулЛицензий;
	
КонецПроцедуры 

&НаКлиенте
Процедура ОбновитьСостояниеКлиентаЛицензирования()

	Элементы.ГруппаПодпискаОтсутствует.Видимость          = Ложь;
	Элементы.ГруппаПодпискаСрокДействияИстек.Видимость    = Ложь;
	Элементы.ГруппаПодпискаСрокДействияИстекает.Видимость = Ложь;	
	
	// Получение состояния
	СостояниеЛицензирования   = сл2_Сервер.ПолучитьСостояниеЛицензирования();
	МетаданныеСервераЛицензий = СостояниеЛицензирования.МетаданныеСервераЛицензий;
	
	// Обновление видимости уведомлений
	НастройкиСкрытияУведомлений = сл2_Сервер.ПолучитьПерсональныеНастройки().СкрытыеУведомления;
	// Подписка просрочена
	ДоступноСкрытиеУведомления = Не ЗначениеОпределено(НастройкиСкрытияУведомлений.СрокДействияПодпискиИстек) ИЛИ 
		ТекущаяДата() > НастройкиСкрытияУведомлений.СрокДействияПодпискиИстек; 
	Элементы.НеОповещатьОбИстекшейПодписке.Видимость = ДоступноСкрытиеУведомления; 
	// Подписка скоро закончится
	ДоступноСкрытиеУведомления = Не ЗначениеОпределено(НастройкиСкрытияУведомлений.СрокДействияПодпискиИстекает) ИЛИ 
		ТекущаяДата() > НастройкиСкрытияУведомлений.СрокДействияПодпискиИстекает; 
	Элементы.НеОповещатьОбИстекающейПодписке.Видимость = ДоступноСкрытиеУведомления;
	
	// Сервер лицензий давно не синхронизировался
	Элементы.ГруппаСерверЛицензийДавноНеСинхронизировался.Видимость = ЗначениеОпределено(МетаданныеСервераЛицензий) И МетаданныеСервераЛицензий.СерверЛицензийДавноНеСинхронизировался;
	
	// Обновление декораций состояния лицензирования
	ШрифтЗаголовка            = Новый Шрифт("Segoe UI", 14);
	ШрифтНаименованияПродукта = Новый Шрифт("Segoe UI Semibold", 13);
	ЦветЗеленый               = Новый Цвет(0, 128, 0);
	ЦветКрасный               = Новый Цвет(128, 0, 0);
	
	ФорматированнаяСтрокаЛицензииПолучены   = Новый ФорматированнаяСтрока("Получена лицензия:", ШрифтЗаголовка, ЦветЗеленый);
	ФорматированнаяСтрокаЛицензииНеПолучены = Новый ФорматированнаяСтрока("Не получена лицензия:", ШрифтЗаголовка, ЦветКрасный);
	
	МассивФорматированныхНаименованийПолученныхЛицензий = Новый Массив;
	МассивФорматированныхНаименованийНеПолученныхЛицензий = Новый Массив;
	МассивФорматированныхНаименованийПолученныхЛицензий.Добавить(ФорматированнаяСтрокаЛицензииПолучены);
	МассивФорматированныхНаименованийНеПолученныхЛицензий.Добавить(ФорматированнаяСтрокаЛицензииНеПолучены);	
	
	Для Каждого СостояниеПродукта Из СостояниеЛицензирования.ЛицензируемыеПродукты Цикл
		
		Если СостояниеПродукта.ЛицензияПолучена Тогда
			ФС = Новый ФорматированнаяСтрока(Символы.ПС + СостояниеПродукта.НаименованиеПродукта, ШрифтНаименованияПродукта, ЦветЗеленый);
			МассивФорматированныхНаименованийПолученныхЛицензий.Добавить(ФС);
		Иначе
			ФС = Новый ФорматированнаяСтрока(Символы.ПС + СостояниеПродукта.НаименованиеПродукта, ШрифтНаименованияПродукта, ЦветКрасный);
			МассивФорматированныхНаименованийНеПолученныхЛицензий.Добавить(ФС);
		КонецЕсли;
		
		// Уведомления о подписке
		Если СостояниеПродукта.ПродуктИмеетПодписку И ЗначениеОпределено(СостояниеПродукта.СвойстваПодписки) Тогда			
			Если СостояниеПродукта.СвойстваПодписки.Отсутствует Тогда
				Элементы.ГруппаПодпискаОтсутствует.Видимость = Истина;				
			КонецЕсли; 			
			Если СостояниеПродукта.СвойстваПодписки.СрокДействияИстек Тогда
				Элементы.ГруппаПодпискаСрокДействияИстек.Видимость = Истина;				
			КонецЕсли; 			
			Если СостояниеПродукта.СвойстваПодписки.СкороИстекает Тогда			
				Элементы.ГруппаПодпискаСрокДействияИстекает.Видимость = Истина;	
			КонецЕсли;  			
		КонецЕсли;	
		
	КонецЦикла;
	
	Элементы.ДекорацияПолученыЛицензии.Заголовок       = Новый ФорматированнаяСтрока(МассивФорматированныхНаименованийПолученныхЛицензий);
	Элементы.ГруппаПолученныеЛицензии.Видимость        = МассивФорматированныхНаименованийПолученныхЛицензий.Количество() > 1;
	Элементы.ДекорацияНеПолученыЛицензии.Заголовок     = Новый ФорматированнаяСтрока(МассивФорматированныхНаименованийНеПолученныхЛицензий);
	Элементы.ГруппаНеПолученныеЛицензии.Видимость      = МассивФорматированныхНаименованийНеПолученныхЛицензий.Количество() > 1; 	
	Элементы.ПереключитьВерсиюПродукта.Видимость       = СостояниеЛицензирования.ДоступенВыборВерсииПродукта;
	Элементы.ГруппаНетЛицензируемыхПродуктов.Видимость = СостояниеЛицензирования.ЛицензируемыеПродукты.Количество() = 0;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСистемнуюИнформацию()
	
	Если ЗначениеОпределено(СостояниеЛицензирования) Тогда
		
		СистемнаяИнформация = СостояниеЛицензирования.СистемнаяИнформация;
		
		СводнаяИнформация = 
			СистемнаяИнформация.РежимЗапуска + Символы.ПС +
			"Тип платформы (клиент): " + ОперационнаяСистемаНаКлиенте + Символы.ПС +
			?(ЗначениеОпределено(СистемнаяИнформация.ТипПлатформыСервер), СистемнаяИнформация.ТипПлатформыСервер + Символы.ПС, "") +
			СистемнаяИнформация.КлиентЛицензирования;
			
		Если ЗначениеОпределено(СистемнаяИнформация.СерверЛицензий) Тогда
			СводнаяИнформация = СводнаяИнформация + Символы.ПС + СистемнаяИнформация.СерверЛицензий; 		
		КонецЕсли; 
		
		Элементы.ДекорацияСистемнаяИнформация.Заголовок = СводнаяИнформация;
		
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура ОбновитьСостояние() Экспорт

	ОбновитьСостояниеКлиентаЛицензирования();
	ОбновитьСистемнуюИнформацию();
	
КонецПроцедуры 

#КонецОбласти

#Область ОБРАБОТЧИКИ_ОЖИДАНИЯ
#КонецОбласти

#Область ОБРАБОТЧИКИ_ОПОВЕЩЕНИЙ

&НаКлиенте
Процедура ПереключенаВерсияПродукта(Параметр, Источник)

	ОбновитьСостояние();
	
КонецПроцедуры 

#КонецОбласти

#КонецОбласти

#Область ОБРАБОТЧИКИ_СОБЫТИЙ_ФОРМЫ

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	СисИнфо = Новый СистемнаяИнформация;
	ОперационнаяСистемаНаКлиенте    = сл2_Общий.ПолучитьПредставлениеПлатформы(СисИнфо.ТипПлатформы);
	ЕстьПравоИзмененияОбщихНастроек = сл2_Сервер.ЕстьПравоИзмененияОбщихНастроек();
	ЭтоСервернаяБаза                = сл2_СерверКэшируемый.ЭтоСервернаяБаза();	
	
	// Сброс в начальное состояние
	Элементы.ГруппаСерверЛицензийДавноНеСинхронизировался.Видимость = Ложь;
	Элементы.ГруппаПодпискаСрокДействияИстекает.Видимость           = Ложь;
	Элементы.ГруппаПодпискаСрокДействияИстек.Видимость              = Ложь;
	Элементы.ГруппаНекоторыеЛицензииТребуютВнимания.Видимость       = Ложь;
	Элементы.ГруппаНастройкамиУправляетАдмин.Видимость              = Ложь;
	Элементы.ГруппаРеглЗаданиеОтключено.Видимость                   = ЭтоСервернаяБаза И сл2_Сервер.РегламентноеЗаданиеОтключено();
	
	ЗагрузитьНастройки();
	ОбновитьСостояниеКлиентаЛицензирования();
	ОбновитьСистемнуюИнформацию();
	
	ПодключитьОбработчикОжидания("ОбновитьСостояние", 30, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	ОтключитьОбработчикОжидания("ОбновитьСостояние");
	
КонецПроцедуры

#КонецОбласти

#Область ОБРАБОТЧИКИ_СОБЫТИЙ_ЭЛЕМЕНТОВ_ФОРМЫ

&НаКлиенте
Процедура ОпределенныйПулЛицензийПриИзменении(Элемент)
	
	ОбновитьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура АдресСервераЛицензийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	АдресаСерверовЛицензий.Очистить();
	
	// Заполнение списка адресов
	СтрокиПодключения = СтрРазделить(АдресСервераЛицензий, ";", Ложь);
	Для Каждого СтрокаПодключенияСервера Из СтрокиПодключения Цикл		
		НСТР = АдресаСерверовЛицензий.Добавить();
		НСТР.СтрокаСоединения = СокрЛП(СтрокаПодключенияСервера);		
	КонецЦикла;
	
	Элементы.ГруппаНастройкиСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраницаАдресаСерверовЛицензий;
	КомандаАдресаСерверовСписокПроверить(Команды.Найти("КомандаАдресаСерверовСписокПроверить"));
	
КонецПроцедуры 

&НаКлиенте
Процедура КомандаАдресаСерверовНазад(Команда)
	
	Элементы.ГруппаНастройкиСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраницаНастройки;
	
КонецПроцедуры

#КонецОбласти

#Область ОБРАБОТЧИКИ_СОБЫТИЙ_ЭЛЕМЕНТОВ_ТАБЛИЦЫ_ФОРМЫ

&НаКлиенте
Процедура АдресаСерверовЛицензийПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	ТекДанные = Элементы.АдресаСерверовЛицензий.ТекущиеДанные;
	Если ЗначениеОпределено(ТекДанные) Тогда
		РезультатПроверки        = сл2_Сервер.ПроверитьДоступностьСервераЛицензий(ТекДанные.СтрокаСоединения);
		ТекДанные.СерверДоступен = ЗначениеОпределено(РезультатПроверки);
		ТекДанные.Версия         = РезультатПроверки;			
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура АдресаСерверовЛицензийПриИзменении(Элемент)
	
	// Обновление строки подключения из таблицы
	МассивАдресов = Новый Массив;
	Для Каждого ЭлементЗн Из АдресаСерверовЛицензий Цикл
		НовыйАдрес = СокрЛП(ЭлементЗн.СтрокаСоединения);
		Если ЗначениеЗаполнено(НовыйАдрес) Тогда
			МассивАдресов.Добавить(НовыйАдрес);				
		КонецЕсли;			
	КонецЦикла;
	АдресСервераЛицензий = СтрСоединить(МассивАдресов, ";");	
	
КонецПроцедуры

#КонецОбласти

#Область ОБРАБОТЧИКИ_КОМАНД_ФОРМЫ

&НаКлиенте
Процедура ПрименитьНастройки(Команда)
	
	НастройкиСтруктура.АдресСервераЛицензий       = АдресСервераЛицензий;
	НастройкиСтруктура.ИспользоватьПроксиСервер   = ИспользоватьПроксиСервер;	
	НастройкиСтруктура.ПолучатьЛицензиюПриЗапуске = ПолучатьЛицензиюПриЗапуске;	
	НастройкиСтруктура.ОпределенныйПулЛицензий    = ОпределенныйПулЛицензий;
	НастройкиСтруктура.ПулыЛицензий               = ПулыЛицензий;
	НастройкиСтруктура.ДляВсехПользователей       = ДляВсехПользователей;
	
	СохранитьНастройки(НастройкиСтруктура);
	ОбновитьДоступность();
	
	Элементы.ГруппаНастройкиСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраницаНастройки;
	Элементы.ГруппаНастройкиПодключения.Скрыть();
	
	ПолучитьЛицензии(Команды.Найти("ПолучитьЛицензии"));
	
КонецПроцедуры

&НаКлиенте
Процедура ПереключитьВерсиюПродукта(Команда)
	
	сл2_Переопределяемый.ПриОткрытииФормыВыбораВерсииПродукта();
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьЛицензии(Команда)

	сл2_Переопределяемый.ПередОбновлениемСостояния();	
	сл2_Сервер.ОбновитьСостояниеЛицензирования();
	ОбновитьСостояние();
	сл2_Переопределяемый.ПослеОбновленияСостояния();	
	
КонецПроцедуры

&НаКлиенте
Процедура Подробности(Команда)
	
	П = Новый Структура("СостояниеЛицензирования", СостояниеЛицензирования); 
	ОткрытьФорму("Обработка.сл2_КлиентЛицензирования.Форма.ФормаПодробности", П, ЭтаФорма,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца); 
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "сл2_ПереключенаВерсияПродукта" Тогда
		ПереключенаВерсияПродукта(Параметр, Источник);		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НеОповещатьОбИстекшейПодписке(Команда)
	
	// Кэш настроек обработки
	НастройкиСтруктура.СкрытыеУведомления.СрокДействияПодпискиИстек = ТекущаяДата() + 30 * 86400;
	
	// Хранимые настройки
	ПерсональныеНастройки = сл2_Сервер.ПолучитьПерсональныеНастройки();
	ПерсональныеНастройки.СкрытыеУведомления.СрокДействияПодпискиИстек = НастройкиСтруктура.СкрытыеУведомления.СрокДействияПодпискиИстек;
	сл2_сервер.УстановитьПерсональныеНастройки(ПерсональныеНастройки);
	
	Элементы.НеОповещатьОбИстекшейПодписке.Видимость = Ложь;	
	сл2_Общий.ВывестиСообщение("Уведомление отключено на 30 дней. При запуске, клиент лицензирования не будет оповещать об этом событии.");
	
КонецПроцедуры

&НаКлиенте
Процедура НеОповещатьОбИстекающейПодписке(Команда)
	
	// Кэш настроек обработки
	НастройкиСтруктура.СкрытыеУведомления.СрокДействияПодпискиИстекает = ТекущаяДата() + 7 * 86400;
	
	// Хранимые настройки
	ПерсональныеНастройки = сл2_Сервер.ПолучитьПерсональныеНастройки();
	ПерсональныеНастройки.СкрытыеУведомления.СрокДействияПодпискиИстекает = НастройкиСтруктура.СкрытыеУведомления.СрокДействияПодпискиИстекает;
	сл2_сервер.УстановитьПерсональныеНастройки(ПерсональныеНастройки);
	
	Элементы.НеОповещатьОбИстекающейПодписке.Видимость = Ложь;	
	сл2_Общий.ВывестиСообщение("Уведомление отключено на 7 дней. При запуске, клиент лицензирования не будет оповещать об этом событии.");
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаАдресаСерверовСписокПроверить(Команда)
	
	Для Каждого ЭлементЗн Из АдресаСерверовЛицензий Цикл		
		РезультатПроверки        = сл2_Сервер.ПроверитьДоступностьСервераЛицензий(ЭлементЗн.СтрокаСоединения);
		ЭлементЗн.СерверДоступен = ЗначениеОпределено(РезультатПроверки);
		Если ЗначениеОпределено(РезультатПроверки) Тогда
			ЭлементЗн.Версия = РезультатПроверки.Версия; 
			ЭлементЗн.Пинг   = РезультатПроверки.Пинг;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
