
&НаКлиенте
Процедура РасширитьТекущуюСтроку(Элемент) Экспорт
	Элемент.Родитель.ТекущиеДанные.Контрагент = Элемент.Родитель.ТекущиеДанные.Объект;
	Элемент.Родитель.ТекущиеДанные.ДоговорКонтрагента = Элемент.Родитель.ТекущиеДанные.Объект;	
	Элемент.Родитель.ТекущиеДанные.УслугаПоДоговору = Элемент.Родитель.ТекущиеДанные.Объект;
	Элемент.Родитель.ТекущиеДанные.ДолговоеОбязательство = Элемент.Родитель.ТекущиеДанные.Объект;
	Элемент.Родитель.ТекущиеДанные.ИсполнительныйДокумент = Элемент.Родитель.ТекущиеДанные.Объект;	
КонецПроцедуры

&НаКлиенте
Процедура РасширитьТекущуюСтрокуОбъект(Элемент) Экспорт
	Элемент.Родитель.ТекущиеДанные.Объект = Элемент.Родитель.ТекущиеДанные[Сред(Элемент.Имя, 8)];
	РасширитьТекущуюСтроку(Элемент);	
КонецПроцедуры


&НаКлиенте
Процедура Подбор(ЭтаФорма) Экспорт
	//ФормаПодбор = ПолучитьФорму("Обработка.ПодборДО.Форма",, ЭтаФорма); 
	//ФормаПодбор.Объект.ТипИсточника = ТипЗнч(ЭтаФорма.Объект.Ссылка);
	////Чуров
	//ОткрытьФорму(ФормаПодбор);
	////ФормаПодбор.Открыть();
	
	ФормаПодбор = ПолучитьФорму("Обработка.ПодборДО.Форма.ФормаДинамическийСписок",, ЭтаФорма); 
	ФормаПодбор.Объект.ВидПодбораОбъектов = ПредопределенноеЗначение("Перечисление.ВидыПодбораОбъектов.ТолькоОбъектыВРаботе");
	ФормаПодбор.Объект.ВидСправочника = ПредопределенноеЗначение("Перечисление.ВидыСправочникаДляПодбора.ДолговыеОбязательства");
	//Чуров
	ОткрытьФорму(ФормаПодбор);
	//ФормаПодбор.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ПодборПоНастройкам(ЭтаФорма) Экспорт
	ФормаПодбор = ПолучитьФорму("Обработка.ПодборДО.Форма.Форма",, ЭтаФорма); 
	ФормаПодбор.Объект.ТипИсточника = ТипЗнч(ЭтаФорма.Объект.Ссылка);
	//Чуров
	ОткрытьФорму(ФормаПодбор);
	//ФормаПодбор.Открыть();
КонецПроцедуры


&НаКлиенте
Процедура ПодборИзДОК(ЭтаФорма) Экспорт
	ФормаПодборИзДОК = ПолучитьФорму("Обработка.ПодборДолговыхОбязательств.Форма",,ЭтаФорма); 
	ОткрытьФорму(ФормаПодборИзДОК);
КонецПроцедуры

&НаКлиенте
Процедура ПодборФайла(ЭтаФорма) Экспорт
	ФормаПодборФайла = ПолучитьФорму("Обработка.ПодборФайлов.Форма",,ЭтаФорма); 
	ФормаПодборФайла.Объект.Объект = ЭтаФорма.Объект.Объект;
	ОткрытьФорму(ФормаПодборФайла);
КонецПроцедуры

&НаКлиенте
Процедура ПодборФайлаПоШаблону(ЭтаФорма, ПечатнаяФормаШаблон) Экспорт
	ФормаПодборФайла = ПолучитьФорму("Обработка.ПодборФайловПоШаблону.Форма",,ЭтаФорма);
	Попытка
		ФормаПодборФайла.Объект.Объект = ЭтаФорма.Объект.Объект;
	Исключение
		ФормаПодборФайла.Объект.Объект = ЭтаФорма.Элементы.Объекты.ТекущиеДанные.Объект;
	КонецПопытки;	
	ФормаПодборФайла.Объект.ПечатнаяФормаШаблон = ПечатнаяФормаШаблон;	
	ОткрытьФорму(ФормаПодборФайла);
КонецПроцедуры



&НаКлиенте
Процедура ОбщаяДополнительныеРеквизитыНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка,ДополнительныеРеквизиты, ЭтаФорма) Экспорт
	Свойство = Неопределено;
	СвойствоВидСтроки = Неопределено;
	Код = Сред(Элемент.Имя, Найти(Элемент.Имя, "_") + 1);
	УправлениеСвойствами.ПолучитьСвойствоПоКоду(СтрЗаменить(Код, "_", " "), Свойство, СвойствоВидСтроки);
	
	Если СвойствоВидСтроки = ПредопределенноеЗначение("Перечисление.ВидыТипаСтрока.Адрес") ИЛИ
			СвойствоВидСтроки = ПредопределенноеЗначение("Перечисление.ВидыТипаСтрока.Телефон") Тогда
	    Строки = ДополнительныеРеквизиты.НайтиСтроки(Новый Структура("Свойство", Свойство));
		ТекСтрокаПараметры = Строки[0].Параметры;
						
		СписокСтрок = СтрЗаменить(ТекСтрокаПараметры, ";", Символы.ПС);
		ЗначенияПолей = Новый СписокЗначений();
		Если СтрЧислоСтрок(СписокСтрок) > 1 Тогда
			Для Индекс = 1 По СтрЧислоСтрок(СписокСтрок) Цикл
				Стр = СтрПолучитьСтроку(СписокСтрок, Индекс);
				Если Стр <> "" Тогда 
					СписокПодстрок = СтрЗаменить(Стр, "=", Символы.ПС);
					ЗначенияПолей.Добавить(СтрПолучитьСтроку(СписокПодстрок, 2), СтрПолучитьСтроку(СписокПодстрок, 1));
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		СтандартнаяОбработка = Ложь;			
		Если СвойствоВидСтроки = ПредопределенноеЗначение("Перечисление.ВидыТипаСтрока.Адрес") Тогда
			ИмяФормыРедактирования = "ОбщаяФорма.ВводАдреса";
		ИначеЕсли СвойствоВидСтроки = ПредопределенноеЗначение("Перечисление.ВидыТипаСтрока.Телефон") Тогда
			ИмяФормыРедактирования = "ОбщаяФорма.ВводТелефона";
		КонецЕсли;
			
		Пар = Новый Структура;
		Пар.Вставить("ЗначенияПолей",                ЗначенияПолей);
		Пар.Вставить("Вид",                          ""); //"Адрес");
		Пар.Вставить("БылиВнесеныИзменения",         Ложь);
		Пар.Вставить("Представление",                Элемент.ТекстРедактирования);
		Пар.Вставить("РедактированиеТолькоВДиалоге", Не Элемент.РедактированиеТекста);
		Пар.Вставить("АдресТолькоРоссийский",        Ложь);
			
		//Чуров
		Результат = ОткрытьФорму(ИмяФормыРедактирования, Пар);	
		//Результат = ОткрытьФормуМодально(ИмяФормыРедактирования, Пар);	
		Если ТипЗнч(Результат) = Тип("Структура") Тогда
			Строки[0].Значение = Результат.Представление;
			ЭтаФорма[Элемент.Имя] = Результат.Представление;
			ЗначенияПолей = Результат.ЗначенияПолей;
			Модифицированность = Истина;
			
			РезультатЗначение = "";
			Для Каждого Элемент Из ЗначенияПолей Цикл
				РезультатЗначение = РезультатЗначение + Элемент.Представление + "=" + Элемент.Значение + ";"; 
			КонецЦикла;
			
			Строки[0].Параметры = РезультатЗначение;
		КонецЕсли;
		
	ИначеЕсли СвойствоВидСтроки = ПредопределенноеЗначение("Перечисление.ВидыТипаСтрока.ПутьКФайлу") Тогда	
		#Если ВебКлиент Тогда
			СтандартнаяОбработка = Ложь;
			Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
			Диалог.Заголовок = "Выберите файл";
			Диалог.ПолноеИмяФайла = ЭтаФорма[Элемент.Имя];
			Диалог.МножественныйВыбор = Ложь;
			Если Диалог.Выбрать() Тогда
				ЭтаФорма[Элемент.Имя] = Диалог.ПолноеИмяФайла;
			КонецЕсли;
		#Иначе	
			СтандартнаяОбработка = Ложь;
			Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
			Диалог.Заголовок = "Выберите файл";
			Диалог.ПолноеИмяФайла = ЭтаФорма[Элемент.Имя];
			//Фильтр = "EXE (*.exe)|*.exe"; 
			//Диалог.Фильтр = Фильтр; 
			Диалог.МножественныйВыбор = Ложь;
			//Диалог.Каталог = "F:\";
			Оповещение = Новый ОписаниеОповещения("ОбщаяДополнительныеРеквизитыНачалоВыбораЗавершение", ЭтаФорма, Новый Структура("Диалог, Элемент, ЭтаФорма", Диалог, Элемент, ЭтаФорма)); 
			Диалог.Показать(Оповещение);
		#КонецЕсли
	КонецЕсли;
КонецПроцедуры

Процедура ОбщаяДополнительныеРеквизитыНачалоВыбораЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Диалог = ДополнительныеПараметры.Диалог;
	Элемент = ДополнительныеПараметры.Элемент;
	ЭтаФорма = ДополнительныеПараметры.ЭтаФорма;
	
	
	Если (ВыбранныеФайлы <> Неопределено) Тогда
		ЭтаФорма[Элемент.Имя] = Диалог.ПолноеИмяФайла;
	КонецЕсли;

КонецПроцедуры

//Лебедева 04102019
Функция ФамилияИнициалыФизЛица(Об = "", Фамилия = " ", Имя = " ", Отчество = " ") Экспорт
	ФИО = РазложитьСтрокуВМассивПодстрок(СокрЛП(Об)," ");
	КоличествоПодстрок = ФИО.Количество();
	Фамилия = ?(КоличествоПодстрок > 0,ФИО[0],"");
	Имя        = ?(КоличествоПодстрок > 1,ФИО[1],"");
	Отчество= ?(КоличествоПодстрок > 2,ФИО[2],"");
	
	Возврат ?(НЕ ПустаяСтрока(Фамилия), 
	Фамилия + ?(НЕ ПустаяСтрока(Имя)," " + Лев(Имя,1) + ?(НЕ ПустаяСтрока(Отчество),Лев(Отчество,1), ""), ""),
	"");
	
КонецФункции

Функция РазложитьСтрокуВМассивПодстрок(Знач Строка, Знач Разделитель = ",",
    Знач ПропускатьПустыеСтроки = Неопределено) Экспорт
 
    Результат = Новый Массив;
 
    // для обеспечения обратной совместимости
    Если ПропускатьПустыеСтроки = Неопределено Тогда
        ПропускатьПустыеСтроки = ?(Разделитель = " ", Истина, Ложь);
        Если ПустаяСтрока(Строка) Тогда 
            Если Разделитель = " " Тогда
                Результат.Добавить("");
            КонецЕсли;
            Возврат Результат;
        КонецЕсли;
    КонецЕсли;
    //
 
    Позиция = Найти(Строка, Разделитель);
    Пока Позиция > 0 Цикл
        Подстрока = Лев(Строка, Позиция - 1);
        Если Не ПропускатьПустыеСтроки Или Не ПустаяСтрока(Подстрока) Тогда
            Результат.Добавить(Подстрока);
        КонецЕсли;
        Строка = Сред(Строка, Позиция + СтрДлина(Разделитель));
        Позиция = Найти(Строка, Разделитель);
    КонецЦикла;
 
    Если Не ПропускатьПустыеСтроки Или Не ПустаяСтрока(Строка) Тогда
        Результат.Добавить(Строка);
    КонецЕсли;
 
    Возврат Результат;
 
КонецФункции

Функция УдалитьПовторяющиесяСимволы(Знач Значение, Знач УдаляемыйСимвол, Знач Режим = "Слева") Экспорт
    
    Если ВРег(Режим) = "СЛЕВА" Тогда
        Пока Лев(Значение, 1) = УдаляемыйСимвол Цикл
            Значение = Сред(Значение, 2);
        КонецЦикла;
    ИначеЕсли ВРег(Режим) = "СПРАВА" Тогда
        Пока Прав(Значение, 1) = УдаляемыйСимвол Цикл
            Значение = Лев(Значение, СтрДлина(Значение) - 1);
        КонецЦикла;
    КонецЕсли;
    
    Возврат Значение;
    
КонецФункции