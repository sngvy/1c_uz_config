&НаКлиенте
Перем ИндексВыбранногоЭлемента;

&НаКлиенте
Процедура КартаПриАктивизации(Элемент)
	Если Не Элемент.ТекущийЭлемент = Неопределено И 
			ТипЗнч(Элемент.ТекущийЭлемент) <> Тип("ЭлементГрафическойСхемыСоединительнаяЛиния") Тогда
		ИндексВыбранногоЭлемента = РаботаСГрафическойСхемой82.ПолучитьНомерТекущегоЭлемента(Элемент.ТекущийЭлемент, 
				Карта);	
		//эл = Элемент.ТекущийЭлемент;
		Элемент.ТекущийЭлемент = Неопределено;
		ПодключитьОбработчикОжидания("РаскраситьРамкиЭлементов", 0.01, Истина);
		//РаскраситьРамкиЭлементов();
		//Элемент.ТекущийЭлемент = эл;
	КонецЕсли;			
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьВидимостьКнопок()
	//Настройка доступности кнопок
	ВключитьВсеКнопки();
	//1 Если элементс СТАРТ тогда доступны все кроме 2-х удалить Иначе Если	
	Если ИндексВыбранногоЭлемента = 0 Тогда
		Элементы.УдалитьЭлемент.Доступность = Ложь;
		Элементы.УдалитьВетку.Доступность = Ложь;	
		Элементы.КартаКонтекстноеМенюУдалитьЭлемент.Доступность = Ложь;
		Элементы.КартаКонтекстноеМенюУдалитьВетку.Доступность = Ложь;
	КонецЕсли;
	//2 Нет Родителя не доступно создать Перед, Вниз
	СтрокаЭлемента = Объект.Дерево.НайтиСтроки(Новый Структура("Идентификатор", 
			Карта.ЭлементыГрафическойСхемы[ИндексВыбранногоЭлемента].Имя))[0];
	//3 Детей = 0 - создать после
	Если СтрокаЭлемента.КоличествоДетей = 0 Тогда
		Элементы.ДобавитьПосле.Доступность = Ложь;
		Элементы.КартаКонтекстноеМенюДобавитьПосле.Доступность = Ложь;
	КонецЕсли;		
			
	Если СтрокаЭлемента.Родитель = "" Тогда
		Элементы.ДобавитьВниз.Доступность = Ложь;
		Элементы.ДобавитьПеред.Доступность = Ложь;
		Элементы.ПереместитьВверх.Доступность = Ложь;
		Элементы.ПереместитьВниз.Доступность = Ложь;	
		Элементы.КартаКонтекстноеМенюДобавитьВниз.Доступность = Ложь;
		Элементы.КартаКонтекстноеМенюДобавитьПеред.Доступность = Ложь;
		Элементы.КартаКонтекстноеМенюПереместитьВверх.Доступность = Ложь;
		Элементы.КартаКонтекстноеМенюПереместитьВниз.Доступность = Ложь;
	Иначе
		СтрокаРодитель = Объект.Дерево.НайтиСтроки(Новый Структура("Идентификатор", СтрокаЭлемента.Родитель))[0];
		Если СтрокаЭлемента.Номер = СтрокаРодитель.КоличествоДетей Тогда
			//5 Я нижний брат - движение вниз
			Элементы.ПереместитьВниз.Доступность = Ложь;
			Элементы.КартаКонтекстноеМенюПереместитьВниз.Доступность = Ложь;
		КонецЕсли; 
		Если СтрокаЭлемента.Номер = 1 Тогда
			//4 Я верхний брат - движение вверх
			Элементы.ПереместитьВверх.Доступность = Ложь;
			Элементы.КартаКонтекстноеМенюПереместитьВверх.Доступность = Ложь;
		КонецЕсли; 
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВключитьВсеКнопки()
	Элементы.ДобавитьВниз.Доступность = Истина;
	Элементы.ДобавитьВправо.Доступность = Истина;
	Элементы.ДобавитьПеред.Доступность = Истина;
	Элементы.ДобавитьПосле.Доступность = Истина;
	Элементы.ПереместитьВверх.Доступность = Истина;
	Элементы.ПереместитьВниз.Доступность = Истина;
	Элементы.УдалитьЭлемент.Доступность = Истина;
	Элементы.УдалитьВетку.Доступность = Истина;
	
	Элементы.КартаКонтекстноеМенюДобавитьВниз.Доступность = Истина;
	Элементы.КартаКонтекстноеМенюДобавитьВправо.Доступность = Истина;
	Элементы.КартаКонтекстноеМенюДобавитьПеред.Доступность = Истина;
	Элементы.КартаКонтекстноеМенюДобавитьПосле.Доступность = Истина;
	Элементы.КартаКонтекстноеМенюПереместитьВверх.Доступность = Истина;
	Элементы.КартаКонтекстноеМенюПереместитьВниз.Доступность = Истина;
	Элементы.КартаКонтекстноеМенюУдалитьЭлемент.Доступность = Истина;
	Элементы.КартаКонтекстноеМенюУдалитьВетку.Доступность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура КартаВыбор(Элемент)
	Если Не Элемент.ТекущийЭлемент = Неопределено И 
			ТипЗнч(Элемент.ТекущийЭлемент) <> Тип("ЭлементГрафическойСхемыСоединительнаяЛиния") Тогда
		ПосмотретьСвойства(Неопределено);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВправо(Команда)
	//Чуров
	Форма = ПолучитьФорму("Справочник.ДеревоРешений.Форма.ФормаНастройки", Новый Структура("Команда", "ДобавитьВправо"),ЭтаФорма);
	Форма.ТипМероприятия = Объект.ТипМероприятия;	
	ОткрытьФорму(Форма);
	//Если Форма.ОткрытьМодально() = Истина Тогда	
		       
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьЭлементСтадияВправо(ЭлементКод = "", ЭлементНаименование, ЭлементПодсказка, РезультатМероприятия,
		ВыборИзСписка, ПодсказкаПользователю)
	Если ИндексВыбранногоЭлемента < 0 Тогда
		Возврат;	
	КонецЕсли;		
	ТекЭлемент = Карта.ЭлементыГрафическойСхемы[ИндексВыбранногоЭлемента];
	ИмяДобавленногоЭлемента = РаботаСГрафическойСхемой82.СоздатьУзел(ТекЭлемент, Карта, "ТочкаДействия", 
			ЭлементНаименование, РаботаСГрафическойСхемой82.НаправлениеВправо(),,,
			"Стадия-" + ЭлементКод + "-", ЭлементПодсказка);
	ДобавленныйЭлемент = Карта.ЭлементыГрафическойСхемы.Найти(ИмяДобавленногоЭлемента);
	
	//1 Найти и поправить строчку родителя
	СтрокаРодитель = Объект.Дерево.НайтиСтроки(Новый Структура("Идентификатор", ТекЭлемент.Имя))[0];
	СтрокаРодитель.КоличествоДетей = СтрокаРодитель.КоличествоДетей + 1;	
	//2 Добавить новую строчку	
	НаваяСтрока = Объект.Дерево.Добавить();
	НаваяСтрока.Уровень  = СтрокаРодитель.Уровень + 1;
	НаваяСтрока.Номер    = СтрокаРодитель.КоличествоДетей;
	НаваяСтрока.Родитель = СтрокаРодитель.Идентификатор;
	НаваяСтрока.Идентификатор = ДобавленныйЭлемент.Имя;
	НаваяСтрока.КоличествоДетей = 0;
	НаваяСтрока.Наименование = ДобавленныйЭлемент.Наименование;
	НаваяСтрока.Ширина = ДобавленныйЭлемент.Ширина;
	НаваяСтрока.Высота = ДобавленныйЭлемент.Высота;
	НаваяСтрока.Верх   = ДобавленныйЭлемент.Верх;
	НаваяСтрока.Лево   = ДобавленныйЭлемент.Лево;
	НаваяСтрока.РезультатМероприятия = РезультатМероприятия;
	НаваяСтрока.ВыборИзСписка = ВыборИзСписка;
	НаваяСтрока.ПодсказкаПользователю = ПодсказкаПользователю;

	ПросчитатьИОбновитьДерево();
КонецПроцедуры

&НаКлиенте 
Процедура ДобавитьВниз(Команда)
	//Чуров
	Форма = ПолучитьФорму("Справочник.ДеревоРешений.Форма.ФормаНастройки", Новый Структура("Команда", "ДобавитьВниз"),ЭтаФорма);
	Форма.ТипМероприятия = Объект.ТипМероприятия;	
	ОткрытьФорму(Форма);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьЭлементСтадияВниз(ЭлементКод = "", ЭлементНаименование, ЭлементПодсказка, РезультатМероприятия,
		ВыборИзСписка, ПодсказкаПользователю)
	Если ИндексВыбранногоЭлемента < 0 Тогда
		Возврат;	
	КонецЕсли;
	
	ТекЭлемент = Карта.ЭлементыГрафическойСхемы[ИндексВыбранногоЭлемента];
	//Ищем родителя текущего элемента
	КоличествоРодителейТекущегоЭлемента = 0;
	РодительТекущегоЭлемента = Неопределено;
	Для Каждого Элемент Из Карта.ЭлементыГрафическойСхемы Цикл
		Если ТипЗнч(Элемент) = Тип("ЭлементГрафическойСхемыСоединительнаяЛиния") И 
				Элемент.КонецЭлемент = ТекЭлемент И Не Элемент.НачалоЭлемент = Неопределено Тогда
		    КоличествоРодителейТекущегоЭлемента = КоличествоРодителейТекущегоЭлемента + 1;
			РодительТекущегоЭлемента = Элемент.НачалоЭлемент;
		КонецЕсли;                            
	КонецЦикла;
	
	Если КоличествоРодителейТекущегоЭлемента = 0 Тогда
		//Добавляем элемент под текущий, но без родителя
	ИначеЕсли КоличествоРодителейТекущегоЭлемента = 1 Тогда
		ИмяДобавленногоЭлемента = РаботаСГрафическойСхемой82.СоздатьУзел(РодительТекущегоЭлемента, Карта, 
				"ТочкаДействия", ЭлементНаименование, РаботаСГрафическойСхемой82.НаправлениеВправо(),,,
				"Стадия-" + ЭлементКод + "-", ЭлементПодсказка);
		ДобавленныйЭлемент = Карта.ЭлементыГрафическойСхемы.Найти(ИмяДобавленногоЭлемента);
				
		//1 Найти и поправить строчку родителя
		СтрокаРодитель = Объект.Дерево.НайтиСтроки(Новый Структура("Идентификатор", 
				РодительТекущегоЭлемента.Имя))[0];
		СтрокаРодитель.КоличествоДетей = СтрокаРодитель.КоличествоДетей + 1;
		//2 Найти строку текущего элемента и получить его Номер
		СтрокаТекЭлемента = Объект.Дерево.НайтиСтроки(Новый Структура("Идентификатор", ТекЭлемент.Имя))[0];
		//3 Перебрать всех братьев у которых Номер больще текущего и увеличить их Номер
		СтрокиБратьев = Объект.Дерево.НайтиСтроки(Новый Структура("Родитель", СтрокаРодитель.Идентификатор));
		Для Каждого Элемент Из СтрокиБратьев Цикл
			Если Элемент.Номер > СтрокаТекЭлемента.Номер Тогда
				Элемент.Номер = Элемент.Номер + 1;
			КонецЕсли;
		КонецЦикла;
		//4 Добавить новую строчку	
		НаваяСтрока = Объект.Дерево.Добавить();
		НаваяСтрока.Уровень  = СтрокаРодитель.Уровень + 1;
		НаваяСтрока.Номер    = СтрокаТекЭлемента.Номер + 1;
		НаваяСтрока.Родитель = СтрокаРодитель.Идентификатор;
		НаваяСтрока.Идентификатор = ДобавленныйЭлемент.Имя;
		НаваяСтрока.КоличествоДетей = 0;
		НаваяСтрока.Наименование = ДобавленныйЭлемент.Наименование;
		НаваяСтрока.Ширина = ДобавленныйЭлемент.Ширина;
		НаваяСтрока.Высота = ДобавленныйЭлемент.Высота;
		НаваяСтрока.Верх   = ДобавленныйЭлемент.Верх;
		НаваяСтрока.Лево   = ДобавленныйЭлемент.Лево;		
		НаваяСтрока.РезультатМероприятия = РезультатМероприятия;
		НаваяСтрока.ВыборИзСписка = ВыборИзСписка;
		НаваяСтрока.ПодсказкаПользователю = ПодсказкаПользователю;
		
		ПросчитатьИОбновитьДерево();
	Иначе
		Сообщить("Текущий элемент имеент несколько родителей! Добавление невозможно!");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПеред(Команда)
	//Чуров
	Форма = ПолучитьФорму("Справочник.ДеревоРешений.Форма.ФормаНастройки", Новый Структура("Команда", "ДобавитьПеред"),ЭтаФорма);
	Форма.ТипМероприятия = Объект.ТипМероприятия;	
	ОткрытьФорму(Форма);
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьЭлементСтадияПеред(ЭлементКод = "", ЭлементНаименование, ЭлементПодсказка, РезультатМероприятия,
		ВыборИзСписка, ПодсказкаПользователю)
	Если ИндексВыбранногоЭлемента < 0 Тогда
		Возврат;	
	КонецЕсли;
		         
	ТекЭлемент = Карта.ЭлементыГрафическойСхемы[ИндексВыбранногоЭлемента];
	//Ищем родителя текущего элемента
	КоличествоРодителейТекущегоЭлемента = 0;
	РодительТекущегоЭлемента = Неопределено;
	Для Каждого Элемент Из Карта.ЭлементыГрафическойСхемы Цикл
		Если ТипЗнч(Элемент) = Тип("ЭлементГрафическойСхемыСоединительнаяЛиния") И 
				Элемент.КонецЭлемент = ТекЭлемент И Не Элемент.НачалоЭлемент = Неопределено Тогда
		    КоличествоРодителейТекущегоЭлемента = КоличествоРодителейТекущегоЭлемента + 1;
			РодительТекущегоЭлемента = Элемент.НачалоЭлемент;
		КонецЕсли;                            
	КонецЦикла;
	
	Если КоличествоРодителейТекущегоЭлемента = 0 Тогда
		//Добавляем элемент под текущий, но без родителя
	ИначеЕсли КоличествоРодителейТекущегоЭлемента = 1 Тогда
		ИмяДобавленногоЭлемента = РаботаСГрафическойСхемой82.СоздатьУзелМеждуДругими(РодительТекущегоЭлемента, Карта, 
				"ТочкаДействия", ЭлементНаименование, РаботаСГрафическойСхемой82.НаправлениеВправо(),,,
				"Стадия-" + ЭлементКод + "-", ЭлементПодсказка, ТекЭлемент);
		ДобавленныйЭлемент = Карта.ЭлементыГрафическойСхемы.Найти(ИмяДобавленногоЭлемента);
		
		//1 Найти строку текущего элемента
		СтрокаТекЭлемента = Объект.Дерево.НайтиСтроки(Новый Структура("Идентификатор", ТекЭлемент.Имя))[0];
		//2 Скопировать данные с текЭлем на новый
		НаваяСтрока = Объект.Дерево.Добавить();
		НаваяСтрока.Уровень  = СтрокаТекЭлемента.Уровень;
		НаваяСтрока.Номер    = СтрокаТекЭлемента.Номер;
		НаваяСтрока.Родитель = СтрокаТекЭлемента.Родитель;
		НаваяСтрока.Идентификатор = ДобавленныйЭлемент.Имя;
		НаваяСтрока.КоличествоДетей = 1;
		НаваяСтрока.Наименование = ДобавленныйЭлемент.Наименование;
		НаваяСтрока.Ширина = ДобавленныйЭлемент.Ширина;
		НаваяСтрока.Высота = ДобавленныйЭлемент.Высота;
		НаваяСтрока.Верх   = ДобавленныйЭлемент.Верх;
		НаваяСтрока.Лево   = ДобавленныйЭлемент.Лево;
		НаваяСтрока.РезультатМероприятия = РезультатМероприятия;
		НаваяСтрока.ВыборИзСписка = ВыборИзСписка;
		НаваяСтрока.ПодсказкаПользователю = ПодсказкаПользователю;
		//3 Обновить данные старого элемента
		СтрокаТекЭлемента.Номер = 1;
		СтрокаТекЭлемента.Родитель = НаваяСтрока.Идентификатор;
		//4 В цикле обновить уровни всех детей нового элемента
		ИзменитьУровеньВВетке(СтрокаТекЭлемента.НомерСтроки, 1);
											
		ПросчитатьИОбновитьДерево();
	Иначе
		Сообщить("Текущий элемент имеент несколько родителей! Добавление невозможно!");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьУровеньВВетке(НомерСтроки, ИзменитьНа)
	СтрокаКорень = Объект.Дерево[НомерСтроки - 1];
	СтрокаКорень.Уровень = СтрокаКорень.Уровень + ИзменитьНа;
	СтрокиДетей = Объект.Дерево.НайтиСтроки(Новый Структура("Родитель", СтрокаКорень.Идентификатор));
	Для Каждого Элемент Из СтрокиДетей Цикл
		ИзменитьУровеньВВетке(Элемент.НомерСтроки, ИзменитьНа);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура РаскраситьРамкиЭлементов()
	//КартаТекущийЭлемент = Элементы.Карта.ТекущийЭлемент;
	//Закраска фона
	Для Каждого ЭлементСхемы Из Карта.ЭлементыГрафическойСхемы Цикл	
		Если ТипЗнч(ЭлементСхемы) = Тип("ЭлементГрафическойСхемыДействие") Тогда
			СтрокаЭлемента = Объект.Дерево.НайтиСтроки(Новый Структура("Идентификатор", ЭлементСхемы.Имя))[0];
			Если  СтрокаЭлемента.ВыборИзСписка = "Да" Тогда
				ЭлементСхемы.ЦветФона = Новый Цвет(253,169,167); //Цвет(220,110,110);
			ИначеЕсли СтрокаЭлемента.РезультатМероприятия.Пустая() Тогда
				ЭлементСхемы.ЦветФона = Новый Цвет(254,253,214);	
			Иначе
				ЭлементСхемы.ЦветФона = Новый Цвет(186,239,235); 	
			КонецЕсли;
		КонецЕсли;   		
	КонецЦикла;
	//Закраска рамок
	Для Каждого ЭлементСхемы Из Карта.ЭлементыГрафическойСхемы Цикл	
		Если (ТипЗнч(ЭлементСхемы) <> Тип("ЭлементГрафическойСхемыСоединительнаяЛиния"))
				И (ТипЗнч(ЭлементСхемы) <> Тип("ЭлементГрафическойСхемыДекорация")) Тогда
			ЭлементСхемы.ЦветРамки = Новый Цвет(179,172,134);                  
			ЭлементСхемы.Рамка = Новый Линия(ТипСоединительнойЛинии.Сплошная, 1);
		КонецЕсли;   		
	КонецЦикла;	
	 
	Карта.ЭлементыГрафическойСхемы[ИндексВыбранногоЭлемента].ЦветРамки = Новый Цвет(120,114,75); //WebЦвета.Красный;
	Карта.ЭлементыГрафическойСхемы[ИндексВыбранногоЭлемента].Рамка = Новый Линия(ТипСоединительнойЛинии.Сплошная, 3);
		
	ОбновитьОтображениеДанных();
	ОбновитьВидимостьКнопок();
	//Элементы.Карта.ТекущийЭлемент = КартаТекущийЭлемент;
КонецПроцедуры

&НаСервере
Функция ЗагрузитьКартуИзХранилища()
	Если Не Объект.Ссылка.Пустая() Тогда
		МодифицированностьКарты = Ложь;
		Возврат Объект.Ссылка.Схема.Получить();
	ИначеЕсли Не Объект.СсылкаНаОбъектКопирования.Пустая() Тогда
		Ссылка = Объект.СсылкаНаОбъектКопирования;
		Объект.СсылкаНаОбъектКопирования = Неопределено;
		МодифицированностьКарты = Истина;
		Возврат Ссылка.Схема.Получить();
	КонецЕсли; 
КонецФункции	

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ДвоичныеДанные = ЗагрузитьКартуИзХранилища();
	#Если не ВебКлиент Тогда
	Если Не ДвоичныеДанные = Неопределено Тогда
		ИмяТемпФайла = ПолучитьИмяВременногоФайла();
		ДвоичныеДанные.Записать(ИмяТемпФайла);
		Карта.Прочитать(ИмяТемпФайла);
		УдалитьФайлы(ИмяТемпФайла);
	КонецЕсли;		
	#КонецЕсли	
	Если Карта.ЭлементыГрафическойСхемы.Количество() = 0 Тогда	
		РаботаСГрафическойСхемой82.СоздатьНовуюКарту(Карта);
		
		Объект.Дерево.Очистить();
		НаваяСтрока = Объект.Дерево.Добавить();
		НаваяСтрока.Уровень = 1;
		НаваяСтрока.Номер = 1;
		НаваяСтрока.Родитель = "";
		НаваяСтрока.Идентификатор = Карта.ЭлементыГрафическойСхемы[0].Имя;
		НаваяСтрока.КоличествоДетей = 0;
		НаваяСтрока.Наименование = Карта.ЭлементыГрафическойСхемы[0].Наименование;
		НаваяСтрока.Ширина = Карта.ЭлементыГрафическойСхемы[0].Ширина;
		НаваяСтрока.Высота = Карта.ЭлементыГрафическойСхемы[0].Высота;
		НаваяСтрока.Верх   = Карта.ЭлементыГрафическойСхемы[0].Верх;
		НаваяСтрока.Лево   = Карта.ЭлементыГрафическойСхемы[0].Лево;
		НаваяСтрока.РезультатМероприятия = Неопределено;
		НаваяСтрока.ВыборИзСписка = "Нет";
		НаваяСтрока.ПодсказкаПользователю = "";
	КонецЕсли;	
	
	ИндексВыбранногоЭлемента = 0;
	КартаПриАктивизации(Элементы.Карта);
	РаскраситьРамкиЭлементов();
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	ИмяТемпФайла = ПолучитьИмяВременногоФайла();
	Карта.Записать(ИмяТемпФайла);
	ТекущийОбъект.Схема = Новый ХранилищеЗначения(Новый ДвоичныеДанные(ИмяТемпФайла), Новый СжатиеДанных(5));
	ТекущийОбъект.Записать();
	УдалитьФайлы(ИмяТемпФайла);

	МодифицированностьКарты = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ПросчитатьИОбновитьДерево()
	РаботаСГрафическойСхемой82.РасставитьЭлементыВДереве(Объект.Дерево, 0, 20, 20);
	РаботаСГрафическойСхемой82.СинхронизироватьРасположениеЭлементовСДеревом(Карта, Объект.Дерево);
	РаскраситьРамкиЭлементов();
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьВверх(Команда)
	ПереместитьЭлементВверхИлиВниз(РаботаСГрафическойСхемой82.НаправлениеВверх());	
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьВниз(Команда)
	ПереместитьЭлементВверхИлиВниз(РаботаСГрафическойСхемой82.НаправлениеВниз());
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьЭлементВверхИлиВниз(Направление)
	Если ИндексВыбранногоЭлемента < 0 Тогда
		Возврат;	
	КонецЕсли;		
	ТекЭлемент = Карта.ЭлементыГрафическойСхемы[ИндексВыбранногоЭлемента];
	
	//1 Найти оба элемента для замены местами
	СтрокаТекЭлемент = Объект.Дерево.НайтиСтроки(Новый Структура("Идентификатор", ТекЭлемент.Имя))[0];
	Если Направление = РаботаСГрафическойСхемой82.НаправлениеВверх() Тогда
		ВыборкаСтрок = Объект.Дерево.НайтиСтроки(Новый Структура("Родитель, Номер", СтрокаТекЭлемент.Родитель, 
				СтрокаТекЭлемент.Номер - 1));
	ИначеЕсли Направление = РаботаСГрафическойСхемой82.НаправлениеВниз() Тогда
        ВыборкаСтрок = Объект.Дерево.НайтиСтроки(Новый Структура("Родитель, Номер", СтрокаТекЭлемент.Родитель, 
				СтрокаТекЭлемент.Номер + 1));
	КонецЕсли;
	//Поменять местами		
	Если ВыборкаСтрок.Количество() = 0 Тогда		
	ИначеЕсли ВыборкаСтрок.Количество() = 1 Тогда
		Номер = СтрокаТекЭлемент.Номер;
		СтрокаТекЭлемент.Номер = ВыборкаСтрок[0].Номер;
		ВыборкаСтрок[0].Номер = Номер;
		МодифицированностьКарты = Истина;
		ПросчитатьИОбновитьДерево();
	Иначе
		Сообщить("Ошибка в дереве!");
	КонецЕсли;			
КонецПроцедуры	

&НаКлиенте
Процедура УдалитьВетку(Команда)
	Если ИндексВыбранногоЭлемента < 1 Тогда
		Возврат;	
	КонецЕсли;
	ТекЭлемент = Карта.ЭлементыГрафическойСхемы[ИндексВыбранногоЭлемента];
	ИмяРодителя = Объект.Дерево.НайтиСтроки(Новый Структура("Идентификатор", ТекЭлемент.Имя))[0].Родитель;	
		
	РаботаСГрафическойСхемой82.УдалитьЭлементВместеСДетьми(ТекЭлемент, Карта);
	УдалитьВеткуДерева(ТекЭлемент.Имя);	
	ИндексВыбранногоЭлемента = РаботаСГрафическойСхемой82.ПолучитьНомерТекущегоЭлемента(
			Карта.ЭлементыГрафическойСхемы.Найти(ИмяРодителя), Карта);
	МодифицированностьКарты = Истина;	
	ПросчитатьИОбновитьДерево();	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьВеткуДерева(Идентификатор)
	//1 Найти необходимые элементы
	Попытка
		СтрокаТекЭлемент = Объект.Дерево.НайтиСтроки(Новый Структура("Идентификатор", Идентификатор))[0];	
		СтрокаРодитель = Объект.Дерево.НайтиСтроки(Новый Структура("Идентификатор", СтрокаТекЭлемент.Родитель))[0];
	Исключение
		Сообщить("Обишка при удалении элемента из ТЧ Дерево");
		Возврат;
	КонецПопытки;
	СтрокиБратья = Объект.Дерево.НайтиСтроки(Новый Структура("Родитель", СтрокаТекЭлемент.Родитель));
	СтрокиДетей = Объект.Дерево.НайтиСтроки(Новый Структура("Родитель", Идентификатор));
	//2 Поправить необходимые элементы
	Для Каждого Элемент Из СтрокиДетей Цикл
		УдалитьВеткуДерева(Элемент.Идентификатор);
	КонецЦикла;
	Объект.Дерево.Удалить(СтрокаТекЭлемент.НомерСтроки - 1); //.ИсходныйНомерСтроки
	СтрокаРодитель.КоличествоДетей = СтрокаРодитель.КоличествоДетей - 1;		
	//3 Сдвинуть Братьев вверх
	Для Каждого Элемент Из СтрокиБратья Цикл
		Если Элемент.Номер > СтрокаТекЭлемент.Номер Тогда
			Элемент.Номер = Элемент.Номер - 1;
		КонецЕсли;	
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура ПосмотретьСвойства(Команда)
	ИмяТекЭлемента = Карта.ЭлементыГрафическойСхемы[ИндексВыбранногоЭлемента].Имя;
	СтрокаТекЭлемент = Объект.Дерево.НайтиСтроки(Новый Структура("Идентификатор", ИмяТекЭлемента))[0];
	
	Пар = Новый Структура;
	Пар.Вставить("ТипМероприятия", Объект.ТипМероприятия);
	Пар.Вставить("ЗаголовокЭлемента", СтрокаТекЭлемент.Наименование);
	Пар.Вставить("РезультатМероприятия", СтрокаТекЭлемент.РезультатМероприятия);
	Пар.Вставить("ВыборКонтактногоЛица", (СтрокаТекЭлемент.ВыборИзСписка = "Да"));
	Пар.Вставить("ПодсказкаПользователю", СтрокаТекЭлемент.ПодсказкаПользователю);
	Пар.Вставить("Шаблон", СтрокаТекЭлемент.Шаблон);
	
	ИмяФормыРедактирования = "Справочник.ДеревоРешений.Форма.ФормаНастройки";

	
	ОткрытьФорму(ИмяФормыРедактирования, Пар,,,,,Новый ОписаниеОповещения("ФормаНастройкиЗавершение", ЭтаФорма, новый Структура("СтрокаТекЭлемент", СтрокаТекЭлемент)));
	//Чуров
	//Если ОткрытьФорму(Форма) = Истина Тогда	
	//Если Форма.ОткрытьМодально() = Истина Тогда	
	//	СтрокаТекЭлемент.Наименование = Форма.ЗаголовокЭлемента;
	//	СтрокаТекЭлемент.РезультатМероприятия = Форма.РезультатМероприятия;
	//	СтрокаТекЭлемент.ВыборИзСписка = Строка(Форма.ВыборКонтактногоЛица);
	//	СтрокаТекЭлемент.ПодсказкаПользователю = Форма.ПодсказкаПользователю;
	//	СтрокаТекЭлемент.Шаблон = Форма.Шаблон;
	//	РаботаСГрафическойСхемой82.СинхронизироватьЭлементаГрафическойСхемыСДеревом(Карта, СтрокаТекЭлемент);
	//	МодифицированностьКарты = Истина;
	//	РаскраситьРамкиЭлементов();
	//КонецЕсли;	
КонецПроцедуры

&НаКлиенте                                                               
Процедура ФормаНастройкиЗавершение(Результат, ДопПараметры) Экспорт
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		СтрокаТекЭлемент = ДопПараметры.СтрокаТекЭлемент;
		ЗначенияПолей = Результат.ЗначенияПолей;
		СтрокаТекЭлемент.Наименование = ЗначенияПолей.ЗаголовокЭлемента;
		СтрокаТекЭлемент.РезультатМероприятия = ЗначенияПолей.РезультатМероприятия;
		СтрокаТекЭлемент.ВыборИзСписка = Строка(ЗначенияПолей.ВыборКонтактногоЛица);
		СтрокаТекЭлемент.ПодсказкаПользователю = ЗначенияПолей.ПодсказкаПользователю;
		СтрокаТекЭлемент.Шаблон = ЗначенияПолей.Шаблон;
		РаботаСГрафическойСхемой82.СинхронизироватьЭлементаГрафическойСхемыСДеревом(Карта, СтрокаТекЭлемент);
		МодифицированностьКарты = Истина;
		РаскраситьРамкиЭлементов();
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)	
			
	Если Не Отказ И Не Модифицированность И МодифицированностьКарты Тогда
		Если не ВыполняетсяЗакрытие Тогда
			Отказ = Истина;
			ПроверитьПустыеЛистья(Отказ);
		КонецЕсли;
	КонецЕсли;	
	//ПроверитьПустыеЛистья(Отказ);

	//Если Не Отказ И Не Модифицированность И МодифицированностьКарты Тогда
	//	Ответ = Вопрос("Данные были изменены! Сохранить изменения?", 
	//			РежимДиалогаВопрос.ДаНетОтмена,,,"Изменение данных");
	//	Если Ответ = КодВозвратаДиалога.Да Тогда
	//		//ПроверитьПустыеЛистья(Отказ);
	//		Если Не Отказ Тогда
	//			Записать();
	//		КонецЕсли;
	//	ИначеЕсли Ответ = КодВозвратаДиалога.Отмена Тогда
	//		Отказ = Истина;
	//	КонецЕсли;	
	//КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Ответ = РезультатВопроса;
	Если Ответ = КодВозвратаДиалога.Да Тогда
		Записать();
		Закрыть();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура УдалитьЭлемент(Команда)
	Если ИндексВыбранногоЭлемента < 1 Тогда
		Возврат;	
	КонецЕсли;
		
	ТекЭлемент = Карта.ЭлементыГрафическойСхемы[ИндексВыбранногоЭлемента];
	ИмяРодителя = Объект.Дерево.НайтиСтроки(Новый Структура("Идентификатор", ТекЭлемент.Имя))[0].Родитель;	
	
	РаботаСГрафическойСхемой82.УдалитьЭлементБезДетей(ТекЭлемент, Карта);
	УдалитьЭлементДерева(ТекЭлемент.Имя);
	ИндексВыбранногоЭлемента = РаботаСГрафическойСхемой82.ПолучитьНомерТекущегоЭлемента(
			Карта.ЭлементыГрафическойСхемы.Найти(ИмяРодителя), Карта);
	МодифицированностьКарты = Истина;
	ПросчитатьИОбновитьДерево();	
КонецПроцедуры	

&НаКлиенте
Процедура УдалитьЭлементДерева(Идентификатор)
	СтрокаТекЭлемента = Объект.Дерево.НайтиСтроки(Новый Структура("Идентификатор", Идентификатор))[0];
	СтрокаРодитель = Объект.Дерево.НайтиСтроки(Новый Структура("Идентификатор", СтрокаТекЭлемента.Родитель))[0];
	СтрокиДетей = Объект.Дерево.НайтиСтроки(Новый Структура("Родитель", СтрокаТекЭлемента.Идентификатор));
	СтрокиБратьев = Объект.Дерево.НайтиСтроки(Новый Структура("Родитель", СтрокаТекЭлемента.Родитель));
	//1 У всех детей уменьшить уровень	
	ИзменитьУровеньВВетке(СтрокаТекЭлемента.НомерСтроки, -1);	
    //2 У всех братьев старше меня увеличить номер на количество моих детей - 1	
	Для Каждого Элемент Из СтрокиБратьев Цикл
		Если Элемент.Номер > СтрокаТекЭлемента.Номер Тогда
			Элемент.Номер = Элемент.Номер + СтрокаТекЭлемента.КоличествоДетей - 1;
		КонецЕсли;
	КонецЦикла;		
	//3 У всех детей увеличить номер на мой номер - 1 и поменять родителя
	Для Каждого Элемент Из СтрокиДетей Цикл
		Элемент.Номер = Элемент.Номер + СтрокаТекЭлемента.Номер - 1;
		Элемент.Родитель = СтрокаТекЭлемента.Родитель;
	КонецЦикла;	
	//4 У строки родителя поправить количество детей	
    СтрокаРодитель.КоличествоДетей = СтрокаРодитель.КоличествоДетей + СтрокаТекЭлемента.КоличествоДетей - 1;
	//5 Удалить текущий элемент
	Объект.Дерево.Удалить(СтрокаТекЭлемента.НомерСтроки - 1);
КонецПроцедуры
       
&НаКлиенте
Процедура ДобавитьПосле(Команда)
	//Чуров
	Форма = ПолучитьФорму("Справочник.ДеревоРешений.Форма.ФормаНастройки", Новый Структура("Команда", "ДобавитьПосле"),ЭтаФорма);
	Форма.ТипМероприятия = Объект.ТипМероприятия;	
	ОткрытьФорму(Форма);
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьЭлементСтадияПосле(ЭлементКод = "", ЭлементНаименование, ЭлементПодсказка, РезультатМероприятия,
		ВыборИзСписка, ПодсказкаПользователю)
	Если ИндексВыбранногоЭлемента < 0 Тогда
		Возврат;	
	КонецЕсли;
		         
	ТекЭлемент = Карта.ЭлементыГрафическойСхемы[ИндексВыбранногоЭлемента];
	//Ищем любого ребенка текущего элемента
	РебенокТекущегоЭлемента = Неопределено;
	Для Каждого Элемент Из Карта.ЭлементыГрафическойСхемы Цикл
		Если ТипЗнч(Элемент) = Тип("ЭлементГрафическойСхемыСоединительнаяЛиния") И 
				Элемент.НачалоЭлемент = ТекЭлемент И Не Элемент.КонецЭлемент = Неопределено Тогда
			РебенокТекущегоЭлемента = Элемент.КонецЭлемент;
		КонецЕсли;                            
	КонецЦикла;
		
	Если Не РебенокТекущегоЭлемента = Неопределено Тогда		
		ИмяДобавленногоЭлемента = РаботаСГрафическойСхемой82.СоздатьУзелМеждуДругими(ТекЭлемент, Карта, 
				"ТочкаДействия", ЭлементНаименование, РаботаСГрафическойСхемой82.НаправлениеВправо(),,,
				"Стадия-" + ЭлементКод + "-", ЭлементПодсказка, РебенокТекущегоЭлемента, Истина);
		ДобавленныйЭлемент = Карта.ЭлементыГрафическойСхемы.Найти(ИмяДобавленногоЭлемента);
		
		//1 Найти строку текущего элемента
		СтрокаТекЭлемента = Объект.Дерево.НайтиСтроки(Новый Структура("Идентификатор", ТекЭлемент.Имя))[0];
		//2 Найти строки детей и поменять у них родителя
		СтрокиДетей = Объект.Дерево.НайтиСтроки(Новый Структура("Родитель", ТекЭлемент.Имя));
		Для Каждого Элемент Из СтрокиДетей Цикл
			Элемент.Родитель = ДобавленныйЭлемент.Имя;
		КонецЦикла;		
		//3 Создать новый элемент
		НаваяСтрока = Объект.Дерево.Добавить();
		НаваяСтрока.Уровень  = СтрокаТекЭлемента.Уровень;
		НаваяСтрока.Номер    = 1;
		НаваяСтрока.Родитель = ТекЭлемент.Имя;
		НаваяСтрока.Идентификатор = ДобавленныйЭлемент.Имя;
		НаваяСтрока.КоличествоДетей =СтрокаТекЭлемента.КоличествоДетей;
		НаваяСтрока.Наименование = ДобавленныйЭлемент.Наименование;
		НаваяСтрока.Ширина = ДобавленныйЭлемент.Ширина;
		НаваяСтрока.Высота = ДобавленныйЭлемент.Высота;
		НаваяСтрока.Верх   = ДобавленныйЭлемент.Верх;
		НаваяСтрока.Лево   = ДобавленныйЭлемент.Лево;
		НаваяСтрока.РезультатМероприятия = РезультатМероприятия;
		НаваяСтрока.ВыборИзСписка = ВыборИзСписка;
		НаваяСтрока.ПодсказкаПользователю = ПодсказкаПользователю;
		//3 Обновить данные старого элемента
		СтрокаТекЭлемента.КоличествоДетей = 1;
		//4 В цикле обновить уровни всех детей нового элемента
		ИзменитьУровеньВВетке(НаваяСтрока.НомерСтроки, 1);
											
		ПросчитатьИОбновитьДерево();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	МодифицированностьКарты = Не МодифицированностьКарты;
	МодифицированностьКарты = Не МодифицированностьКарты;
	
	//ПроверитьПустыеЛистья(Отказ);
			
	Если Не Отказ И Объект.Наименование <> "" Тогда
		СтруктураГрафическойСхемы = РаботаСГрафическойСхемой82.ПолучитьСтруктуруНеПустойГрафическойСхемы(Карта);
		РаботаСГрафическойСхемой82.ОтобразитьГрафическуюСхему(СтруктураГрафическойСхемы, Карта);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьПустыеЛистья(Отказ)
	СтрокиЛистья = Объект.Дерево.НайтиСтроки(Новый Структура("КоличествоДетей, РезультатМероприятия", 0, 
			ПредопределенноеЗначение("Справочник.РезультатыМероприятий.ПустаяСсылка")));
	Если СтрокиЛистья.Количество() > 0 И Объект.Дерево.Количество() > 1 Тогда
		ПоказатьВопрос(Новый ОписаниеОповещения("ПроверитьПустыеЛистьяЗавершение", ЭтаФорма), "Существуют варианты развития сценария с неопределенным результатом!" + Символы.ПС +
				"Продолжить?", РежимДиалогаВопрос.ДаНет,,,"Сохранение сценария"); 
	//Если Вопрос("Существуют варианты развития сценария с неопределенным результатом!" + Символы.ПС +
	//		"Продолжить?", РежимДиалогаВопрос.ДаНет,,,"Сохранение сценария")
	//		= КодВозвратаДиалога.Нет Тогда
	//	Отказ = Истина;				
	//КонецЕсли;
	Иначе
		ВыполняетсяЗакрытие = Истина;
		Закрыть();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьПустыеЛистьяЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ВыполняетсяЗакрытие = Истина;
		Записать();
		Закрыть();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	РаскраситьРамкиЭлементов();
КонецПроцедуры

&НаКлиенте
Процедура ТипМероприятияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтрокиЛистья = Объект.Дерево.НайтиСтроки(Новый Структура("РезультатМероприятия", 
			ПредопределенноеЗначение("Справочник.РезультатыМероприятий.ПустаяСсылка")));
	Если СтрокиЛистья.Количество() <> Объект.Дерево.Количество() Тогда
		//Чуров
		СтандартнаяОбработка = Ложь;
		ПоказатьВопрос(Новый ОписаниеОповещения("ТипМероприятияНачалоВыбораЗавершение", ЭтаФорма), "Изменение типа мероприятия приведет к очистке результатов элементов дерева!" + Символы.ПС +
				"Продолжить?", РежимДиалогаВопрос.ДаНет,,,"Изменение типа мероприятия");
	КонецЕсли;
КонецПроцедуры
//Чуров
&НаКлиенте
Процедура ТипМероприятияНачалоВыбораЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ОткрытьФорму("Справочник.ТипыМероприятий.ФормаВыбора");		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ТипМероприятияПриИзменении(Элемент)
	Для Каждого Элемент Из Объект.Дерево Цикл
		Элемент.РезультатМероприятия = ПредопределенноеЗначение("Справочник.РезультатыМероприятий.ПустаяСсылка");
	КонецЦикла;
	РаскраситьРамкиЭлементов();
КонецПроцедуры
//Чуров
&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ТипМероприятияВыбор" Тогда
		ТипМероприятия = Источник;	
		
	ИначеЕсли ИмяСобытия = "ДеревоРешенийНастройкаВыбор" Тогда
		Если Параметр = "ДобавитьВправо" Тогда	 
			ДобавитьЭлементСтадияВправо(, Источник.ЗаголовокЭлемента, Строка(Источник.РезультатМероприятия), 
				Источник.РезультатМероприятия, Строка(Источник.ВыборКонтактногоЛица), Источник.ПодсказкаПользователю);
		ИначеЕсли Параметр = "ДобавитьВниз" Тогда	 
			ДобавитьЭлементСтадияВниз(, Источник.ЗаголовокЭлемента, Строка(Источник.РезультатМероприятия), 
				Источник.РезультатМероприятия, Строка(Источник.ВыборКонтактногоЛица), Источник.ПодсказкаПользователю);		
		ИначеЕсли Параметр = "ДобавитьПеред" Тогда 
			ДобавитьЭлементСтадияПеред(, Источник.ЗаголовокЭлемента, Строка(Источник.РезультатМероприятия), Источник.РезультатМероприятия,
				Строка(Источник.ВыборКонтактногоЛица), Источник.ПодсказкаПользователю);
		ИначеЕсли Параметр = "ДобавитьПосле" Тогда 		
			ДобавитьЭлементСтадияПосле(, Источник.ЗаголовокЭлемента, Строка(Источник.РезультатМероприятия), Источник.РезультатМероприятия,
				Строка(Источник.ВыборКонтактногоЛица), Источник.ПодсказкаПользователю);
		КонецЕсли;
		МодифицированностьКарты = Истина;	
	КонецЕсли;
КонецПроцедуры
