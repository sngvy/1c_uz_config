
Процедура ОбработкаПроведения(Отказ, РежимПроведения) 
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;   
	
	СобытиеЗафиксировано = КредитныеИстории.СобытиеСубъектаЗафиксированоИсточником(ЭтотОбъект.Субъект, ЭтотОбъект.Ссылка, "1.12");
	Если Не СобытиеЗафиксировано Тогда 
		Для Каждого Стр ИЗ Публикации Цикл
			Если НЕ Стр.ЗафиксированоВКИ Тогда
				КредитныеИстории.ЗаписатьСобытиеСубъекта(ЭтотОбъект.Субъект, Стр.ДатаСобытия, ЭтотОбъект.Ссылка, "1.12");
			КонецЕсли;	
		КонецЦикла;  
	КонецЕсли; 
	
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДолговыеОбязательства.Ссылка КАК Сделка
	|ПОМЕСТИТЬ ДОДолжника
	|ИЗ
	|	Справочник.ДолговыеОбязательства КАК ДолговыеОбязательства
	|ГДЕ
	|	ДолговыеОбязательства.Должник = &Должник
	|	И НЕ ДолговыеОбязательства.ПометкаУдаления
	//|	И ДолговыеОбязательства.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сделка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(КредитныеИсторииДанныеСделки.ДатаСобытия) КАК ДатаСобытия,
	|	ДОДолжника.Сделка КАК Сделка
	|ИЗ
	|	ДОДолжника КАК ДОДолжника
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КредитныеИсторииДанныеСделки КАК КредитныеИсторииДанныеСделки
	|		ПО ДОДолжника.Сделка = КредитныеИсторииДанныеСделки.Сделка
	|
	|СГРУППИРОВАТЬ ПО
	|	ДОДолжника.Сделка" ;
	
	
	
	Если НЕ РаспространитьНаВсеСделки И ЗначениеЗаполнено(Сделка) Тогда 
		  Запрос.Текст = СтрЗаменить(Запрос.Текст, "И НЕ ДолговыеОбязательства.ПометкаУдаления", "И НЕ ДолговыеОбязательства.ПометкаУдаления" + " И ДолговыеОбязательства.Ссылка = &Ссылка");
		  Запрос.УстановитьПараметр("Ссылка", Сделка);
	КонецЕсли;	
	  
	Запрос.УстановитьПараметр("Должник", Субъект);
	Результат = Запрос.Выполнить().Выбрать();
		
	Пока Результат.Следующий() Цикл
		НаборЗаписей = РегистрыСведений.КредитныеИсторииДанныеСделки.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Сделка.Установить(Результат.Сделка); 
		НаборЗаписей.Отбор.ДатаСобытия.Установить(Результат.ДатаСобытия);
		НаборЗаписей.Прочитать(); 
		
		Для Каждого Запись ИЗ НаборЗаписей Цикл
			Запись.Банкротство = Ссылка;
		КонецЦикла;
		
		НаборЗаписей.Записать();
	КонецЦикла;	
		
	
КонецПроцедуры   

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	СобытиеЗафиксировано = КредитныеИстории.СобытиеСубъектаЗафиксированоИсточником(ЭтотОбъект.Субъект, ЭтотОбъект.Ссылка, "1.12"); 
	Если СобытиеЗафиксировано Тогда 
		КредитныеИстории.УдалитьСобытияИсточникаСубъекта(ЭтотОбъект.Субъект, ЭтотОбъект.Ссылка);  
	КонецЕсли; 
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДолговыеОбязательства.Ссылка КАК Сделка
	|ПОМЕСТИТЬ ДОДолжника
	|ИЗ
	|	Справочник.ДолговыеОбязательства КАК ДолговыеОбязательства
	|ГДЕ
	|	ДолговыеОбязательства.Должник = &Должник
	|	И НЕ ДолговыеОбязательства.ПометкаУдаления
	//|	И ДолговыеОбязательства.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сделка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(КредитныеИсторииДанныеСделки.ДатаСобытия) КАК ДатаСобытия,
	|	ДОДолжника.Сделка КАК Сделка
	|ИЗ
	|	ДОДолжника КАК ДОДолжника
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КредитныеИсторииДанныеСделки КАК КредитныеИсторииДанныеСделки
	|		ПО ДОДолжника.Сделка = КредитныеИсторииДанныеСделки.Сделка
	|
	|СГРУППИРОВАТЬ ПО
	|	ДОДолжника.Сделка" ;
		
	
	Если НЕ РаспространитьНаВсеСделки И ЗначениеЗаполнено(Сделка) Тогда 
		  Запрос.Текст = СтрЗаменить(Запрос.Текст, "И НЕ ДолговыеОбязательства.ПометкаУдаления", "И НЕ ДолговыеОбязательства.ПометкаУдаления " + "И ДолговыеОбязательства.Ссылка = &Ссылка");
		  Запрос.УстановитьПараметр("Ссылка", Сделка);
	КонецЕсли;	
	  
	Запрос.УстановитьПараметр("Должник", Субъект);
	Результат = Запрос.Выполнить().Выбрать();
		
	Пока Результат.Следующий() Цикл
		НаборЗаписей = РегистрыСведений.КредитныеИсторииДанныеСделки.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Сделка.Установить(Результат.Сделка); 
		НаборЗаписей.Отбор.ДатаСобытия.Установить(Результат.ДатаСобытия);
		НаборЗаписей.Прочитать(); 
		
		Для Каждого Запись ИЗ НаборЗаписей Цикл
			Запись.Банкротство = "0";
		КонецЦикла;
		
		НаборЗаписей.Записать();

	КонецЦикла;	
	
КонецПроцедуры


