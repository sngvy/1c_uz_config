////////////////////////////////////////////////////////////////////////////////
// СЕКЦИЯ ОБРАБОТЧИКОВ СОБЫТИЙ ФОРМЫ И ЭЛЕМЕНТОВ ФОРМЫ
//

// Обработчик события "при создании на сервере" формы
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Объект.Пароль) Тогда
		ЗапомнитьПароль = Истина;
	КонецЕсли;
	
	// Если используется только подсистема работы с почтовыми сообщениями
	// скрываем неиспользуемые элементы
	Если Метаданные.ОбщиеМодули.Найти("УправлениеЭлектроннойПочтой") = Неопределено Тогда
		Элементы.ВПредставлениеВключатьИмяПользователя.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

// Обработчик события "перед записью на сервере" формы
//
&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект)
	
	Если НЕ ЗапомнитьПароль Тогда
		ТекущийОбъект.Пароль = "";
	КонецЕсли;
	
	Если Объект.SMTPАутентификация <> Перечисления.ВариантыSMTPАутентификации.ЗадаетсяПараметрами Тогда
		Объект.ПользовательSMTP = "";
		Объект.ПарольSMTP = "";
	КонецЕсли;
	
КонецПроцедуры

// Обработчик события нажатия на кнопку "Дополнительно" формы
//
&НаКлиенте
Процедура ДополнительныеНастройкиВыполнить()
	
	УчетнаяЗаписьСтруктура = Новый Структура;
	УчетнаяЗаписьСтруктура.Вставить("ВремяОжидания",                    Объект.ВремяОжидания);
	УчетнаяЗаписьСтруктура.Вставить("ОставлятьКопииСообщенийНаСервере", Объект.ОставлятьКопииСообщенийНаСервере);
	УчетнаяЗаписьСтруктура.Вставить("ПериодХраненияСообщенийНаСервере", Объект.ПериодХраненияСообщенийНаСервере);
	УчетнаяЗаписьСтруктура.Вставить("ПользовательSMTP",                 Объект.ПользовательSMTP);
	УчетнаяЗаписьСтруктура.Вставить("ПарольSMTP",                       Объект.ПарольSMTP);
	УчетнаяЗаписьСтруктура.Вставить("ПортPOP3",                         Объект.ПортPOP3);
	УчетнаяЗаписьСтруктура.Вставить("ПортSMTP",                         Объект.ПортSMTP);
	УчетнаяЗаписьСтруктура.Вставить("SMTPАутентификация",               Объект.SMTPАутентификация);
	УчетнаяЗаписьСтруктура.Вставить("СпособSMTPАутентификации",         Объект.СпособSMTPАутентификации);
	УчетнаяЗаписьСтруктура.Вставить("СпособPOP3Аутентификации",         Объект.СпособPOP3Аутентификации);
	
	ПараметрыВызова = Новый Структура("Ссылка, УчетнаяЗаписьСтруктура", Объект.Ссылка, УчетнаяЗаписьСтруктура);
	
	ОткрытьФорму("Справочник.УчетныеЗаписиЭлектроннойПочты.Форма.ДополнительныеСвойстваУчетнойЗаписи", ПараметрыВызова);
	
	
КонецПроцедуры

// Обрабатывает оповещение, от формы настройки дополнительных свойств учетной записи,
// содержащее некоторые настройки учетной записи.
//
&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "УстановкаДополнительныхПараметровУчетнойЗаписи" И Источник = Объект.Ссылка Тогда
		Объект.ВремяОжидания                    = Параметр.ДлительностьОжиданияСервера;
		Объект.ОставлятьКопииСообщенийНаСервере = Параметр.ОставлятьКопииСообщенийНаСервере;
		Объект.ПериодХраненияСообщенийНаСервере = Параметр.ПериодХраненияСообщенийНаСервере;
		Объект.ПользовательSMTP                 = Параметр.ПользовательSMTP;
		Объект.ПарольSMTP                       = Параметр.ПарольSMTP;
		Объект.ПортPOP3                         = Параметр.ПортPOP3;
		Объект.ПортSMTP                         = Параметр.ПортSMTP;
		Объект.SMTPАутентификация               = Параметр.SMTPАутентификация;
		Объект.СпособSMTPАутентификации         = Параметр.СпособSMTPАутентификации;
		Объект.СпособPOP3Аутентификации         = Параметр.СпособPOP3Аутентификации;
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Пароль = ТекущийОбъект.Пароль;
	УстановитьПривилегированныйРежим(Истина);
	ОбщегоНазначения.ЗаписатьДанныеВБезопасноеХранилище(ТекущийОбъект.Ссылка, Пароль);
	ОбщегоНазначения.ЗаписатьДанныеВБезопасноеХранилище(ТекущийОбъект.Ссылка, Пароль, "ПарольSMTP");
	УстановитьПривилегированныйРежим(Ложь);
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	ЗаполнитьНастройки();
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.ПодключаемыеКоманды") Тогда
		МодульПодключаемыеКомандыКлиентСервер = ОбщегоНазначения.ОбщийМодуль("ПодключаемыеКомандыКлиентСервер");
		МодульПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНастройки()
	
	//ДоступноПолучениеПисем = РаботаСПочтовымиСообщениямиСлужебный.НастройкиПодсистемы().ДоступноПолучениеПисем;
	//Элементы.ОставлятьПисьмаНаСервере.Видимость = Объект.ПротоколВходящейПочты = "POP" И ДоступноПолучениеПисем;
	//
	//Элементы.СерверВходящейПочты.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
	//НСтр("ru = 'Сервер %1'"), Объект.ПротоколВходящейПочты);
	//
	//УдалятьПисьмаССервера = Объект.ПериодХраненияСообщенийНаСервере > 0;
	//Если Не УдалятьПисьмаССервера Тогда
	//	Объект.ПериодХраненияСообщенийНаСервере = 10;
	//КонецЕсли;
	
	//Если НЕ Объект.Ссылка.Пустая() Тогда
	//	УстановитьПривилегированныйРежим(Истина);
	//	ПарольУстановлен = ОбщегоНазначения.ПрочитатьДанныеИзБезопасногоХранилища(Объект.Ссылка) <> "";
	//	УстановитьПривилегированныйРежим(Ложь);
	//	Пароль = ?(ПарольУстановлен, ЭтотОбъект.УникальныйИдентификатор, "");
	//	
	//	Если Не Справочники.УчетныеЗаписиЭлектроннойПочты.ИзменениеРазрешено(Объект.Ссылка) Тогда
	//		ТолькоПросмотр = Истина;
	//	КонецЕсли;
	//КонецЕсли;
	
	Элементы.ФормаЗаписатьИЗакрыть.Доступность = Не ТолькоПросмотр;
	
	ЭтоПерсональнаяУчетнаяЗапись = ЗначениеЗаполнено(Объект.ВладелецУчетнойЗаписи);
	Элементы.ОтветственныйЗаОбработкуПисем.Доступность = ЭтоПерсональнаяУчетнаяЗапись;
	ВидУчетнойЗаписи = ?(ЭтоПерсональнаяУчетнаяЗапись, "Персональная", "Общая");
	//
	//ИспользуетсяПротоколPOP = Объект.ПротоколВходящейПочты = "POP";
	//Элементы.АвторизацияПриОтправкеПисем.Доступность = Объект.ПриОтправкеПисемТребуетсяАвторизация;
	////УстановитьВидГруппыТребуетсяАвторизация(ЭтотОбъект, ИспользуетсяПротоколPOP);
	//
	//ШифрованиеПриОтправкеПочты = ?(Объект.ИспользоватьЗащищенноеСоединениеДляИсходящейПочты, "SSL", "Авто");
	//ШифрованиеПриПолученииПочты = ?(Объект.ИспользоватьЗащищенноеСоединениеДляВходящейПочты, "SSL", "Авто");
	//
	//СпособАвторизацииПриОтправкеПочты = ?(Объект.ТребуетсяВходНаСерверПередОтправкой, "POP", "SMTP");
	//Элементы.ФормаПроверитьНастройки.Доступность = Объект.ИспользоватьДляОтправки Или Объект.ИспользоватьДляПолучения;
	//Элементы.ФормаОткрытьПомощникНастройки.Доступность = Не Объект.Ссылка.Пустая() И Не ТолькоПросмотр;
	//
	//Элементы.Пароль.КнопкаВыбора = Ложь;
	
КонецПроцедуры


&НаКлиенте
Процедура ДляКогоУчетнаяЗаписьПриИзменении(Элемент)
	Элементы.ОтветственныйЗаОбработкуПисем.Доступность = ВидУчетнойЗаписи = "Персональная";
	ОповеститьОбИзмененииВладельцаУчетнойЗаписи();
КонецПроцедуры

&НаКлиенте
Процедура ОповеститьОбИзмененииВладельцаУчетнойЗаписи()
	Оповестить("ПриИзмененииВидаУчетнойЗаписиЭлектроннойПочты", ВидУчетнойЗаписи = "Персональная", ЭтотОбъект);
КонецПроцедуры

