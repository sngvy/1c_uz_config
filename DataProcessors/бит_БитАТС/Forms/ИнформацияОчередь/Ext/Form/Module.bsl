
#Область ОписаниеПеременных

&НаКлиенте
Перем обКонтроллерАТС;

&НаКлиенте
Перем ИнтервалОбновления;

&НаКлиенте
Перем СоответствиеНомеровХоста;

&НаКлиенте
Перем кэшКонтактов;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если обКонтроллерАТС <> Неопределено Тогда
		обКонтроллерАТС.GetQueues();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "БитфонОчередьБИТАТС_ПеревестиОжидающийЗвонок" Тогда
		Если ЗначениеЗаполнено(Параметр.Результат) Тогда
			номерПеревода = Параметр.Результат;
			бит_АТСКлиент.ПеревестиОжидающийЗвонокНаНомер(ЭтаФорма, "Ожидающие", НомерСвязанногоТелефона, номерПеревода, обКонтроллерАТС, ИспользоватьВебСервис, ВебСервисИдКлиента);
		КонецЕсли;
	КонецЕсли;
	//
	Если Источник = ИсточникВнешнихСобытий И ИмяСобытия = "ОбновлениеОчередей" Тогда
		ЗагрузитьТаблицы(Параметр);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПеревестиНаВыбранныйНомер(Команда)
	бит_АТСКлиент.ПеревестиЗвонокВыборНомера(ЭтаФорма, "Ожидающие", обКонтроллерАТС, НомерСвязанногоТелефона,
					"БитфонОчередьБИТАТС_ПеревестиОжидающийЗвонок");
КонецПроцедуры

&НаКлиенте
Процедура ПеревестиНаСвойНомер(Команда)
	бит_АТСКлиент.ПеревестиОжидающийЗвонокНаСвойНомер(ЭтаФорма, "Ожидающие", НомерСвязанногоТелефона, обКонтроллерАТС, ИспользоватьВебСервис, ВебСервисИдКлиента);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УстановитьКонтроллерАТС(ссылкаКонтроллерАТС) ЭКСПОРТ
	обКонтроллерАТС = ссылкаКонтроллерАТС;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСоответствиеНомеров(СоответствиеВнутреннихНомеров, СоответствиеКонтактов) ЭКСПОРТ
	СоответствиеНомеровХоста = СоответствиеВнутреннихНомеров;
	кэшКонтактов = СоответствиеКонтактов;
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьТаблицы(соотвИнфо)

	списокОчередей = соотвИнфо.Получить("Queues");
	
	ИмяУзлаХмлОчереди = "Queue_" + ИдентификаторОчереди;
	обОчередь = списокОчередей.Получить(ИмяУзлаХмлОчереди);
	Если обОчередь = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Члены.Очистить();
	списокЧленов = обОчередь.Получить("Members");
	Для Каждого домЧленОчереди ИЗ списокЧленов Цикл
		строкаТабл = Члены.Добавить();
		ИмяЧлОчереди = домЧленОчереди.Получить("Name");
		строкаТабл.Наименование		= бит_АТСКлиент.ПолучитьИмяПоВнутреннемуНомеру(СоответствиеНомеровХоста, ИмяЧлОчереди);
		строкаТабл.Расположение		= домЧленОчереди.Получить("Location");
		строкаТабл.Членство			= домЧленОчереди.Получить("Membership");
		строкаТабл.ЗвонковПринято	= домЧленОчереди.Получить("CallsTaken");
		строкаТабл.ПоследнийЗвонок	= домЧленОчереди.Получить("LastCall");
		строкаТабл.Пауза			= домЧленОчереди.Получить("Paused");
		строкаТабл.Пенальти			= домЧленОчереди.Получить("Penalty");
		//
		СтатусЧленаОчередиЧисл = Число(домЧленОчереди.Получить("Status"));
		СтатусЧленаОчереди = "Неизвестно";
		ИндексКартинкиСтатуса = 0;
		Если СтатусЧленаОчередиЧисл = 1 Тогда
			СтатусЧленаОчереди = "Свободен";
			ИндексКартинкиСтатуса = 1;
		ИначеЕсли СтатусЧленаОчередиЧисл = 2 Тогда
			СтатусЧленаОчереди = "Разговаривает";
			ИндексКартинкиСтатуса = 2;
		ИначеЕсли СтатусЧленаОчередиЧисл = 3 Тогда
			СтатусЧленаОчереди = "Не беспокоить (DND)";
			ИндексКартинкиСтатуса = 3;
		ИначеЕсли СтатусЧленаОчередиЧисл = 5 Тогда
			СтатусЧленаОчереди = "Не зарегистирован на АТС";
			ИндексКартинкиСтатуса = 4;
		ИначеЕсли СтатусЧленаОчередиЧисл = 6 Тогда
			СтатусЧленаОчереди = "Входящий звонок";
			ИндексКартинкиСтатуса = 5;
		ИначеЕсли СтатусЧленаОчередиЧисл = 7 Тогда
			СтатусЧленаОчереди = "Разговаривает + входящий звонок";
			ИндексКартинкиСтатуса = 2;
		ИначеЕсли СтатусЧленаОчередиЧисл = 8 Тогда
			СтатусЧленаОчереди = "Удержание";
			ИндексКартинкиСтатуса = 6;
		КонецЕсли;
		строкаТабл.Статус = СтатусЧленаОчереди;
		строкаТабл.ИндексКартинкиСтатуса = ИндексКартинкиСтатуса;
	КонецЦикла;
	
	ИндексТекущейСтрокиОжидающих = Ожидающие.Индекс(Элементы.Ожидающие.ТекущиеДанные);
	Ожидающие.Очистить();
	списокОжидающих = обОчередь.Получить("Callers");
	//
	Для Каждого домОжидающийОчереди ИЗ списокОжидающих Цикл
		строкаТабл = Ожидающие.Добавить();
		строкаТабл.CallerIDИмя		= домОжидающийОчереди.Получить("CallerIDname");
		ОжидающийНомер				= домОжидающийОчереди.Получить("CallerIDnum");
		строкаТабл.Позиция			= домОжидающийОчереди.Получить("Position");
		строкаТабл.Канал			= домОжидающийОчереди.Получить("Channel");
		//
		стрВремяОжидания			= домОжидающийОчереди.Получить("Wait");
		числВремяОжидания			= Число(стрВремяОжидания);
		строкаТабл.ВремяОжидания	= бит_ТелефонияКлиентСервер.ФорматироватьДлительностьЗвонкаСЛидНулями(числВремяОжидания);
		//
		КонтрагентСсылка = Неопределено;
		КонтактноеЛицоСсылка = Неопределено;
		бит_АТСКлиент.СократитьНомерНайтиКонтрагента(кэшКонтактов, СоответствиеНомеровХоста, ОжидающийНомер, КонтрагентСсылка, КонтактноеЛицоСсылка);
		строкаТабл.CallerIDНомер	= ОжидающийНомер;
		строкаТабл.Контрагент		= КонтрагентСсылка;
		строкаТабл.КонтактноеЛицо	= КонтактноеЛицоСсылка;
	КонецЦикла;
	//
	Если (ИндексТекущейСтрокиОжидающих >= 0) И (ИндексТекущейСтрокиОжидающих < Ожидающие.Количество()) Тогда
		ВыделеннаяСтрокаОжид = Ожидающие[ИндексТекущейСтрокиОжидающих];
		Элементы.Ожидающие.ТекущаяСтрока = ВыделеннаяСтрокаОжид.ПолучитьИдентификатор();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

