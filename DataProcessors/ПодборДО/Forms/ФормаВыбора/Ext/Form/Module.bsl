
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ПростыеТипы = Перечисления.ТипВсеСсылки();
	ПростыеТипы = Новый ОписаниеТипов(ПростыеТипы, 
			"Число, Строка, Булево, Дата, УникальныйИдентификатор, ХранилищеЗначения");
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПриОткрытииСервер();      
	            
	Если РезультатДляВыполнения <> "" Тогда
		Строки = СтрЗаменить(РезультатДляВыполнения, ".", Символы.ПС);
		Набор = Дерево;
		НомерСтроки = 0;
		Для Номер = 1 По СтрЧислоСтрок(Строки) Цикл
			Стр = СтрПолучитьСтроку(Строки, Номер);
			Для Каждого ЭлементНабор Из Набор.ПолучитьЭлементы() Цикл
				Если ЭлементНабор.Поле = Стр Тогда
					НомерСтроки = ЭлементНабор.ПолучитьИдентификатор();
                    Набор = ЭлементНабор;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриОткрытииСервер()
	Для Каждого Элемент Из Список Цикл		
		Нов = Дерево.ПолучитьЭлементы().Добавить();
		Нов.Поле = Элемент.Представление;
		Нов.ТипПоля = ?(ТипЗнч(Элемент.Значение) = Тип("ОписаниеТипов"), Элемент.Значение, 
				Новый ОписаниеТипов(Элемент.Значение));
		
		Если ТипЗнч(Элемент.Значение) = Тип("ОписаниеТипов") Тогда
			Для Каждого ЭлементТип Из Элемент.Значение.Типы() Цикл
				Если Не ПростыеТипы.СодержитТип(ЭлементТип) Тогда
					Нов.ПолучитьЭлементы().Добавить();
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
		ИначеЕсли Не ПростыеТипы.СодержитТип(Элемент.Значение) Тогда
			Нов.ПолучитьЭлементы().Добавить();
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура Выбрать(Команда)
	ПолучитьРезультатВыбора(Элементы.Дерево.ТекущаяСтрока);
КонецПроцедуры

&НаКлиенте
Процедура ДеревоВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ПолучитьРезультатВыбора(ВыбраннаяСтрока);
КонецПроцедуры

&НаКлиенте
Функция ПолучитьРезультатВыбора(Номер)
	РезультатДляОтображения = "";
	РезультатДляВыполнения = "";
	РезультатВидСоставляющей = "";
		
	ТекЭлемент = Дерево.НайтиПоИдентификатору(Номер);
	РезультатТип = ТекЭлемент.ТипПоля;
	РезультатВидСтроки = ТекЭлемент.ВидСтрокиРодитель;
	Пока ТекЭлемент <> Неопределено Цикл
		РезультатДляОтображения = "." + ТекЭлемент.Поле + РезультатДляОтображения;
		Если ТекЭлемент.ВидСтрокиРодитель = ПредопределенноеЗначение("Перечисление.ВидыТипаСтрока.Адрес") ИЛИ ТекЭлемент.ВидСтрокиРодитель = ПредопределенноеЗначение("Перечисление.ВидыТипаСтрока.Телефон") Тогда
			РезультатВидСоставляющей = ТекЭлемент.Поле;
		Иначе
			РезультатДляВыполнения = "." + ?(ТекЭлемент.КодСвойства = "", ТекЭлемент.Поле, ТекЭлемент.КодСвойства) + 
				РезультатДляВыполнения;
		КонецЕсли;
		ТекЭлемент = ТекЭлемент.ПолучитьРодителя();		
	КонецЦикла;
		
	РезультатДляОтображения = Сред(РезультатДляОтображения, 2);
	РезультатДляВыполнения = Сред(РезультатДляВыполнения, 2);
	
	Закрыть(Истина);
КонецФункции

&НаКлиенте
Процедура ДеревоПередРазворачиванием(Элемент, Строка, Отказ)
	Если Элементы.Дерево.ТекущаяСтрока <> Неопределено Тогда
		ДеревоПередРазворачиваниемСервер(Строка);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ДеревоПередРазворачиваниемСервер(Номер);
	НаборТЗ = Новый ТаблицаЗначений();
	НаборТЗ.Колонки.Добавить("Поле");
	НаборТЗ.Колонки.Добавить("ТипПоля");
	НаборТЗ.Колонки.Добавить("КодСвойства");
	НаборТЗ.Колонки.Добавить("СложныйТип");
	НаборТЗ.Колонки.Добавить("ПолеРодитель");
	НаборТЗ.Колонки.Добавить("ВидСтроки");
	НаборТЗ.Колонки.Добавить("ВидСтрокиРодитель");
	
	Если Дерево.НайтиПоИдентификатору(Номер).ВидСтроки = Перечисления.ВидыТипаСтрока.Адрес Тогда
		Нов = НаборТЗ.Добавить(); 
		ЭлементТип = Тип("Строка"); 
		Нов.Поле = "Регион";
		Нов.ТипПоля = ЭлементТип;
		Нов.ПолеРодитель = Строка(ЭлементТип);
		Нов.ВидСтрокиРодитель = Перечисления.ВидыТипаСтрока.Адрес;
		Нов.СложныйТип = Ложь;
		
		Нов = НаборТЗ.Добавить(); 
		ЭлементТип = Тип("Строка"); 
		Нов.Поле = "Район";
		Нов.ТипПоля = ЭлементТип;
		Нов.ПолеРодитель = Строка(ЭлементТип);
		Нов.ВидСтрокиРодитель = Перечисления.ВидыТипаСтрока.Адрес;
		Нов.СложныйТип = Ложь;
		
		Нов = НаборТЗ.Добавить(); 
		ЭлементТип = Тип("Строка"); 
		Нов.Поле = "Город";
		Нов.ТипПоля = ЭлементТип;
		Нов.ПолеРодитель = Строка(ЭлементТип);
		Нов.ВидСтрокиРодитель = Перечисления.ВидыТипаСтрока.Адрес;
		Нов.СложныйТип = Ложь;	
		
		Нов = НаборТЗ.Добавить(); 
		ЭлементТип = Тип("Строка"); 
		Нов.Поле = "НаселенныйПункт";
		Нов.ТипПоля = ЭлементТип;
		Нов.ПолеРодитель = Строка(ЭлементТип);
		Нов.ВидСтрокиРодитель = Перечисления.ВидыТипаСтрока.Адрес;
		Нов.СложныйТип = Ложь;

		Нов = НаборТЗ.Добавить(); 
		ЭлементТип = Тип("Строка"); 
		Нов.Поле = "Улица";
		Нов.ТипПоля = ЭлементТип;
		Нов.ПолеРодитель = Строка(ЭлементТип);
		Нов.ВидСтрокиРодитель = Перечисления.ВидыТипаСтрока.Адрес;
		Нов.СложныйТип = Ложь;
		
		Нов = НаборТЗ.Добавить(); 
		ЭлементТип = Тип("Строка"); 
		Нов.Поле = "Дом";
		Нов.ТипПоля = ЭлементТип;
		Нов.ПолеРодитель = Строка(ЭлементТип);
		Нов.ВидСтрокиРодитель = Перечисления.ВидыТипаСтрока.Адрес;
		Нов.СложныйТип = Ложь;

		Нов = НаборТЗ.Добавить(); 
		ЭлементТип = Тип("Строка"); 
		Нов.Поле = "Корпус";
		Нов.ТипПоля = ЭлементТип;
		Нов.ПолеРодитель = Строка(ЭлементТип);
		Нов.ВидСтрокиРодитель = Перечисления.ВидыТипаСтрока.Адрес;
		Нов.СложныйТип = Ложь;
		
		Нов = НаборТЗ.Добавить(); 
		ЭлементТип = Тип("Строка"); 
		Нов.Поле = "Квартира";
		Нов.ТипПоля = ЭлементТип;
		Нов.ПолеРодитель = Строка(ЭлементТип);
		Нов.ВидСтрокиРодитель = Перечисления.ВидыТипаСтрока.Адрес;
		Нов.СложныйТип = Ложь;		
	КонецЕсли;
	
	Если Дерево.НайтиПоИдентификатору(Номер).ВидСтроки = Перечисления.ВидыТипаСтрока.Телефон Тогда
		Нов = НаборТЗ.Добавить(); 
		ЭлементТип = Тип("Строка"); 
		Нов.Поле = "Комментарий";
		Нов.ТипПоля = ЭлементТип;
		Нов.ПолеРодитель = Строка(ЭлементТип);
		Нов.ВидСтрокиРодитель = Перечисления.ВидыТипаСтрока.Телефон;
		Нов.СложныйТип = Ложь;
		
		Нов = НаборТЗ.Добавить(); 
		ЭлементТип = Тип("Строка"); 
		Нов.Поле = "Добавочный";
		Нов.ТипПоля = ЭлементТип;
		Нов.ПолеРодитель = Строка(ЭлементТип);
		Нов.ВидСтрокиРодитель = Перечисления.ВидыТипаСтрока.Телефон;
		Нов.СложныйТип = Ложь;
		
		Нов = НаборТЗ.Добавить(); 
		ЭлементТип = Тип("Строка"); 
		Нов.Поле = "НомерТелефона";
		Нов.ТипПоля = ЭлементТип;
		Нов.ПолеРодитель = Строка(ЭлементТип);
		Нов.ВидСтрокиРодитель = Перечисления.ВидыТипаСтрока.Телефон;
		Нов.СложныйТип = Ложь;
		
		Нов = НаборТЗ.Добавить(); 
		ЭлементТип = Тип("Строка"); 
		Нов.Поле = "КодГорода";
		Нов.ТипПоля = ЭлементТип;
		Нов.ПолеРодитель = Строка(ЭлементТип);
		Нов.ВидСтрокиРодитель = Перечисления.ВидыТипаСтрока.Телефон;
		Нов.СложныйТип = Ложь;
		
		Нов = НаборТЗ.Добавить(); 
		ЭлементТип = Тип("Строка"); 
		Нов.Поле = "КодСтраны";
		Нов.ТипПоля = ЭлементТип;
		Нов.ПолеРодитель = Строка(ЭлементТип);
		Нов.ВидСтрокиРодитель = Перечисления.ВидыТипаСтрока.Телефон;
		Нов.СложныйТип = Ложь;		
	КонецЕсли;	
	
	Для Каждого ЭлементТип Из Дерево.НайтиПоИдентификатору(Номер).ТипПоля.Типы() Цикл
		Если Не ПростыеТипы.СодержитТип(ЭлементТип) Тогда
			Для Каждого ЭлементРек Из Метаданные.НайтиПоТипу(ЭлементТип).СтандартныеРеквизиты Цикл
				Нов = НаборТЗ.Добавить(); 
				Нов.Поле = ЭлементРек.Имя;
				Нов.ТипПоля = ЭлементРек.Тип;
				Нов.ПолеРодитель = Строка(ЭлементТип);
				Если СодержитСложныйТип(ЭлементРек.Тип, Неопределено) Тогда
					Нов.СложныйТип = Истина;
				КонецЕсли;
			КонецЦикла;
			
			Для Каждого ЭлементРек Из Метаданные.НайтиПоТипу(ЭлементТип).Реквизиты Цикл
				Нов = НаборТЗ.Добавить(); 
				Нов.Поле = ЭлементРек.Имя;
				Нов.ТипПоля = ЭлементРек.Тип;
				Нов.ПолеРодитель = Строка(ЭлементТип);
				Если СодержитСложныйТип(ЭлементРек.Тип, Неопределено) Тогда
					Нов.СложныйТип = Истина;
				КонецЕсли;
			КонецЦикла;
			
			//ДопРиС
			Если Справочники.ТипВсеСсылки().СодержитТип(ЭлементТип) Тогда
				Стр = СтрЗаменить(Метаданные.НайтиПоТипу(ЭлементТип).ПолноеИмя(), ".", "_");
			    Попытка
					СсылкаПВХ = Вычислить("ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения." + Стр);
				Исключение
					Продолжить;
				КонецПопытки;
				Запрос = Новый Запрос("ВЫБРАТЬ
				                      |	ДополнительныеРеквизитыИСведения.ТипЗначения,
				                      |	ДополнительныеРеквизитыИСведения.Наименование,
				                      |	""Р"" + ДополнительныеРеквизитыИСведения.Код КАК Код,
				                      |	ДополнительныеРеквизитыИСведения.ВидСтроки КАК ВидСтроки
				                      |ИЗ
				                      |	ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК ДополнительныеРеквизитыИСведения
				                      |ГДЕ
				                      |	ДополнительныеРеквизитыИСведения.Родитель.Родитель = &Родитель
				                      |	И НЕ ДополнительныеРеквизитыИСведения.ЭтоГруппа
				                      |
				                      |ОБЪЕДИНИТЬ ВСЕ
				                      |
				                      |ВЫБРАТЬ
				                      |	ТипыСотрудников.ТипЗначения,
				                      |	ТипыСотрудников.Наименование,
				                      |	""С"" + ТипыСотрудников.Код,
				                      |	NULL
				                      |ИЗ
				                      |	ПланВидовХарактеристик.ТипыСотрудников КАК ТипыСотрудников
				                      |
				                      |ОБЪЕДИНИТЬ ВСЕ
				                      |
				                      |ВЫБРАТЬ
				                      |	ВидыСкоринга.ТипЗначения,
				                      |	ВидыСкоринга.Наименование,
				                      |	""В"" + ВидыСкоринга.Код,
				                      |	NULL
				                      |ИЗ
				                      |	ПланВидовХарактеристик.ВидыСкоринга КАК ВидыСкоринга
				                      |
				                      |ОБЪЕДИНИТЬ ВСЕ
				                      |
				                      |ВЫБРАТЬ
				                      |	ТипыЗадолженности.ТипЗначения,
				                      |	ТипыЗадолженности.Наименование,
				                      |	""З"" + ТипыЗадолженности.Код,
				                      |	NULL
				                      |ИЗ
				                      |	ПланВидовХарактеристик.ТипыЗадолженности КАК ТипыЗадолженности
				                      |
				                      |ОБЪЕДИНИТЬ ВСЕ
				                      |
				                      |ВЫБРАТЬ
				                      |	ТИП(Справочник.Пользователи),
				                      |	""В работе сотрудника"",
				                      |	""Ч"",
				                      |	NULL");
				Запрос.УстановитьПараметр("Родитель", СсылкаПВХ);
				Результат = Запрос.Выполнить().Выбрать();
				Пока Результат.Следующий() Цикл        
					Если Результат.Код = "Ч" Тогда
						ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.Пользователи");
					Иначе 
						ТипЗначения = Результат.ТипЗначения;
					КонецЕсли;
					Нов = НаборТЗ.Добавить(); 
					Нов.Поле = Результат.Наименование;
					Нов.ТипПоля = ТипЗначения;
					Нов.КодСвойства = СтрЗаменить(Результат.Код, " ", "_");
					Нов.ПолеРодитель = Строка(ЭлементТип);
					Нов.ВидСтроки = Результат.ВидСтроки;
					Если СодержитСложныйТип(ТипЗначения, Результат.ВидСтроки) Тогда
						Нов.СложныйТип = Истина;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	НаборТЗ.Сортировать("Поле");
	Набор = Дерево.НайтиПоИдентификатору(Номер).ПолучитьЭлементы();
	Набор.Очистить();
	Для Каждого Эл Из НаборТЗ Цикл
		Нов = Набор.Добавить(); 
		Нов.Поле = Эл.Поле;
		Нов.ТипПоля = Эл.ТипПоля;
		Нов.ВидСтроки = Эл.ВидСтроки;
		Нов.ВидСтрокиРодитель = Эл.ВидСтрокиРодитель;
		Нов.КодСвойства = СтрЗаменить(Эл.КодСвойства, " ", "_");
		Нов.ПолеРодитель = Эл.ПолеРодитель;
		Если Эл.СложныйТип = Истина Тогда
			Нов.ПолучитьЭлементы().Добавить();
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция СодержитСложныйТип(ТипОТ, ВидСтроки)
	Для Каждого ЭлементТип Из ТипОТ.Типы() Цикл 
		Если Не ПростыеТипы.СодержитТип(ЭлементТип) Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	Если ВидСтроки = Перечисления.ВидыТипаСтрока.Адрес ИЛИ ВидСтроки = Перечисления.ВидыТипаСтрока.Телефон Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
КонецФункции
