
Процедура ОбработкаПроведения(Отказ, РежимПроведения) 
	// 19012022
	//Изменен состав полей при записи в регистр ФССП_СостояниеИП в связи с изменением данных в Предметах ИП
	//ЭтотОбъект.Движения.Записать();
	
	ДокументСсылка = ЭтотОбъект.Ссылка;
	ОбработатьТабличнуюЧастьДокумента();
	тзИП_Документ = Новый ТаблицаЗначений;
	тзИП_Документ = ЭтотОбъект.тчИсполнительныеПроизводства.Выгрузить(,);
	тзИП_Документ.Колонки.Добавить("Идентификатор");
	
	Для Каждого ИП из тзИП_Документ Цикл
		НомерИП = бит_ФССП_ИнтеграцияФССП.ПолучитьНомерОт(ИП.exe_production);
		ДатаВозбужденияИП= бит_ФССП_ИнтеграцияФССП.ПолучитьДатуОт(ИП.exe_production);
		ID = НомерИП + " от " + Лев(Строка(ДатаВозбужденияИП), 10);
		ИП.Идентификатор = ID;
	КонецЦикла;
	
	МассивПредметов = новый Массив;
	
	ПоискОдинаковыхИсполнительныхИзДокумента(тзИП_Документ);	
	
	ЗапросСрезПоследних = Новый Запрос;
	ЗапросСрезПоследних.Текст = "ВЫБРАТЬ
	                            |	ФССП_СостояниеИПСрезПоследних.bailiff КАК bailiff,
	                            |	ФССП_СостояниеИПСрезПоследних.department КАК department,
	                            |	ФССП_СостояниеИПСрезПоследних.name КАК name,
	                            |	ФССП_СостояниеИПСрезПоследних.subject КАК subject,
	                            |	ФССП_СостояниеИПСрезПоследних.ip_end КАК ip_end,
	                            |	ФССП_СостояниеИПСрезПоследних.exe_production КАК exe_production,
	                            |	ФССП_СостояниеИПСрезПоследних.details КАК details,
	                            |	ФССП_СостояниеИПСрезПоследних.СтатусИП КАК СтатусИП,
	                            |	ФССП_СостояниеИПСрезПоследних.Завершено КАК Завершено,
	                            |	ФССП_СостояниеИПСрезПоследних.ОтделСудебныхПриставов КАК ОтделСудебныхПриставов,
	                            |	ФССП_СостояниеИПСрезПоследних.СудебныйПриставИсполнитель КАК СудебныйПриставИсполнитель,
	                            |	ФССП_СостояниеИПСрезПоследних.ПричинаОкончания КАК ПричинаОкончания,
	                            |	ФССП_СостояниеИПСрезПоследних.ДатаОкончания КАК ДатаОкончания,
	                            |	ФССП_СостояниеИПСрезПоследних.НомерИД КАК НомерИД,
	                            |	ФССП_СостояниеИПСрезПоследних.НомерСД КАК НомерСД,
	                            |	ФССП_СостояниеИПСрезПоследних.ДатаВозбуждения КАК ДатаВозбуждения,
	                            |	ФССП_ИсполнительноеПроизводство.Ссылка КАК Ссылка,
	                            |	ПРЕДСТАВЛЕНИЕ(ФССП_ИсполнительноеПроизводство.Ссылка) КАК Идентификатор
	                            |ИЗ
	                            |	Справочник.ФССП_ИсполнительноеПроизводство КАК ФССП_ИсполнительноеПроизводство
	                            |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФССП_СостояниеИП.СрезПоследних(&МоментДоДокумента, ) КАК ФССП_СостояниеИПСрезПоследних
	                            |		ПО ФССП_ИсполнительноеПроизводство.Ссылка = ФССП_СостояниеИПСрезПоследних.ИП
	                            |ГДЕ
	                            |	ФССП_ИсполнительноеПроизводство.Владелец = &Владелец";
	ЗапросСрезПоследних.УстановитьПараметр("Владелец",ЭтотОбъект.Должник);  
	ЗапросСрезПоследних.УстановитьПараметр("МоментДоДокумента",Новый Граница(ЭтотОбъект.МоментВремени(), ВидГраницы.Исключая)); 
	
	ЗапросСуммОстатки = Новый Запрос;
	ЗапросСуммОстатки.Текст = "ВЫБРАТЬ
	|	ФССП_ЗадолженностьПоПредметамИПОстатки.ИсполнительноеПроизводство КАК ИсполнительноеПроизводство,
	|	ФССП_ЗадолженностьПоПредметамИПОстатки.Предмет КАК Предмет,
	|	ФССП_ЗадолженностьПоПредметамИПОстатки.СуммаОстаток КАК СуммаОстаток
	|ИЗ
	|	РегистрНакопления.ФССП_ЗадолженностьПоПредметамИП.Остатки(&датаОстатков, ИсполнительноеПроизводство.Владелец = &Должник) КАК ФССП_ЗадолженностьПоПредметамИПОстатки";
	ЗапросСуммОстатки.УстановитьПараметр("Должник",ЭтотОбъект.Должник);
	ЗапросСуммОстатки.УстановитьПараметр("датаОстатков",Новый Граница(ЭтотОбъект.МоментВремени(), ВидГраницы.Исключая));
	тзИП_Суммы = ЗапросСуммОстатки.Выполнить().Выгрузить();
	
	тзИП_База = ЗапросСрезПоследних.Выполнить().Выгрузить();
	//Ищем в Базе
	Движения.ФССП_СостояниеИП.Записывать = Истина; 
	Для Каждого ИП из тзИП_База Цикл
		Отбор = Новый Структура;
		Отбор.Вставить("Идентификатор",Строка(ИП.Идентификатор));
		НайденныеИП = тзИП_Документ.НайтиСтроки(Отбор);
		Если НайденныеИП.Количество() = 0 И ((Не ЗначениеЗаполнено(ИП.СтатусИП)) Или ИП.СтатусИП = Перечисления.ФССП_СтатусыИП.Действующее) И ИП.Завершено = Ложь Тогда
			//Делаем запись о Завершении ИСПОЛНЕНИЕМ  
			Движение = Движения.ФССП_СостояниеИП.Добавить();
			Движение.bailiff = ИП.bailiff;
			Движение.department = ИП.department;
			Движение.details = ИП.details;
			Движение.exe_production = ИП.exe_production;
			Движение.ip_end = ИП.ip_end;
			Движение.name = ИП.name;
			Движение.subject = ИП.subject;
			Движение.ИП = ИП.Ссылка;
			Движение.Регистратор = ДокументСсылка;
			Движение.Период = ДокументСсылка.Дата;
			Движение.Завершено = Истина;
			Движение.СтатусИП = Перечисления.ФССП_СтатусыИП.ОконченоИсполнением;
			Движение.ОтделСудебныхПриставов = ИП.ОтделСудебныхПриставов;
			Движение.СудебныйПриставИсполнитель = ИП.СудебныйПриставИсполнитель;
			Движение.НомерИД = ?(ИП.Ссылка.НомерИД = Справочники.ИсполнительныеДокументы.ПустаяСсылка(),Справочники.ИсполнительныеДокументы.ПустаяСсылка(),ИП.Ссылка.НомерИД);
			Движение.НомерСД = ИП.НомерСД;
			Движение.ДатаВозбуждения = ИП.ДатаВозбуждения;
			Движение.ДатаОкончания = Дата(1,1,1);
			Движение.ПричинаОкончания = ""; 
			ОтборПредметов = Новый Структура;
			ОтборПредметов.Вставить("ИсполнительноеПроизводство",Движение.ИП);	
			ПредметыИПОстатки = тзИП_Суммы.НайтиСтроки(ОтборПредметов);
			а = 1;
			Для Каждого ПредметОстатки из ПредметыИПОстатки Цикл
				ПредСсылка = ПредметОстатки.Предмет;
				Если ЗначениеЗаполнено(ПредСсылка) Тогда
					СуммаЧисло = ПредметОстатки.СуммаОстаток;
					СтруктураПредметов = Новый Структура("ИП,Предмет,Сумма");
					СтруктураПредметов.ИП = Движение.ИП; 
					СтруктураПредметов.Предмет = ПредСсылка;
					СтруктураПредметов.Сумма = СуммаЧисло; 
					МассивПредметов.Добавить(СтруктураПредметов); 
					Если ЗначениеЗаполнено(СуммаЧисло) Тогда
						Если ПредСсылка = Справочники.ФССП_ПредметыИП.НайтиПоНаименованию("Исполнительский сбор",Истина) Тогда 
							Движение.Предмет2 = ПредСсылка;
							Движение.Сумма2 = СуммаЧисло;
						Иначе
							Движение.Предмет1 = ПредСсылка;
							Движение.Сумма1 = СуммаЧисло; 
							Продолжить;
						КонецЕсли;	
					КонецЕсли;	
				КонецЕсли;		
			КонецЦикла;	
		Иначе
			Продолжить;
		КонецЕсли;
	КонецЦикла;		
	Движения.ФССП_СостояниеИП.Записывать = Истина;
	
	//Ищем в Документе
	Для Каждого ИП из тзИП_Документ Цикл
		//Шаг Раз: Ищем по Идентификатору
		ОтборИД = Новый Структура;
		ОтборИД.Вставить("Идентификатор",ИП.Идентификатор);
		НайденныеИП = тзИП_База.НайтиСтроки(ОтборИД);
		Если НайденныеИП.Количество() = 0 Тогда
			//Если НЕТ ИП в базе
			НовоеИП = Справочники.ФССП_ИсполнительноеПроизводство.СоздатьЭлемент();
			НовоеИП.Наименование = ИП.Идентификатор;
			НовоеИП.Владелец = ЭтотОбъект.Должник;
			НовоеИП.ДатаВозбуждения = ИП.ДатаВозбуждения;
			НовоеИП.Записать();
			НовоеИПСсыль = НовоеИП.Ссылка;
			НовыйИДСсылка = Справочники.ИсполнительныеДокументы.ПустаяСсылка();
			//Если нет ИП в базе, проверяем, есть ли какие-либо ИД у должника по ИП.ДатаИД и ИП.НомерИД
			//ПривязатьИПкДО
			//Если ИД есть - Процедура свяжет ИП и ИД,а также свяжет ИП и ДО по ИД: проставит в поле ИП "Связанное ДО" Владельца ИД 
			//( при условии, что Владелец - ДО);
			//Если ИД нет - Процедура создаст новый ИД, запишет его реквизиты, привяжет его к ИП и Владельцем проставит должника
			
			ПривязатьИПкДО(ИП.НомерИД,ИП.ДатаИД,ИП.ОрганВыдавшийИД,ИП.ВидИД,НовоеИПСсыль,НовыйИДСсылка);
			
			Движение = Движения.ФССП_СостояниеИП.Добавить();
			Движение.bailiff = ИП.bailiff;
			Движение.department = ИП.department;
			Движение.details = ИП.details;
			Движение.exe_production = ИП.exe_production;
			Движение.ip_end = ИП.ip_end;
			Движение.name = ИП.name;
			Движение.subject = ИП.subject;
			Движение.ОтделСудебныхПриставов = ИП.ОтделСудебныхПриставов;
			Движение.СудебныйПриставИсполнитель = ИП.СудебныйПриставИсполнитель;
			Движение.НомерИД = НовыйИДСсылка;
			Движение.НомерСД = ИП.НомерСД;
			Движение.ДатаВозбуждения = ИП.ДатаВозбуждения;
			Движение.ИП = НовоеИПСсыль;
			Движение.Регистратор = ДокументСсылка;
			Движение.Период = ДокументСсылка.Дата;
			Если ЗначениеЗаполнено(ИП.ip_end) Тогда
				Движение.Завершено = Истина;
				Движение.СтатусИП = Перечисления.ФССП_СтатусыИП.ОконченоБезИсполнения;
				Движение.ДатаОкончания = ИП.ДатаОкончания;
				Движение.ПричинаОкончания = ИП.ПричинаОкончания;
			Иначе
				Движение.Завершено = Ложь;
				Движение.СтатусИП = Перечисления.ФССП_СтатусыИП.Действующее;
				Движение.ДатаОкончания = Дата(1,1,1);
				Движение.ПричинаОкончания = "";
			КонецЕсли;
			
			Для к = 1 по 5 Цикл 
				ИмяКолонкиПредмет = "Предмет" + Строка(к); 
				ИмяКолонкиСумма = "Сумма"+Строка(к); 
				ПредСсылка = ИП[ИмяКолонкиПредмет];
				Если ЗначениеЗаполнено(ПредСсылка) Тогда
					СуммаЧисло = ИП[ИмяКолонкиСумма];
					СтруктураПредметов = Новый Структура("ИП,Предмет,Сумма");
					СтруктураПредметов.ИП = Движение.ИП; 
					СтруктураПредметов.Предмет = ПредСсылка;
					СтруктураПредметов.Сумма = СуммаЧисло; 
					МассивПредметов.Добавить(СтруктураПредметов); 
					Если ЗначениеЗаполнено(СуммаЧисло) Тогда
						Если ПредСсылка = Справочники.ФССП_ПредметыИП.НайтиПоНаименованию("Исполнительский сбор",Истина) Тогда 
							Движение.Предмет2 = ПредСсылка;
							Движение.Сумма2 = СуммаЧисло;
						Иначе
							Движение.Предмет1 = ПредСсылка;
							Движение.Сумма1 = СуммаЧисло; 
							Продолжить;
						КонецЕсли;	
					КонецЕсли;	
					
				КонецЕсли;	
			КонецЦикла;
			//ПИШЕМ НОВОЕ ИП
		Иначе
			//Если ЕСТЬ такое ИП в базе
			//Ищем Неизмененные ИП
			ИПСсылка = НайденныеИП[0].Ссылка;
			//ПривязатьИПкДО(ИП.НомерИД,ИП.ДатаИД,ИПСсылка);
			Если бит_ФССП_ИнтеграцияФССП.ПолучитьТипСлова(ИП.department) = "Число" или типзнч(ИП.department) = Тип("Число") Тогда
				Отбор = Новый Структура;
				Отбор.Вставить("Идентификатор",ИП.Идентификатор);
				Отбор.Вставить("name", ИП.name);
				Отбор.Вставить("exe_production", ИП.exe_production);
				Отбор.Вставить("details", ИП.details);
				Отбор.Вставить("ip_end", ИП.ip_end);
				Отбор.Вставить("subject", ИП.subject);
				Отбор.Вставить("bailiff", ИП.bailiff);
				//Отбор.Вставить("department", ИП.department);
			Иначе
				Отбор = Новый Структура;
				Отбор.Вставить("Идентификатор",ИП.Идентификатор);
				Отбор.Вставить("name", ИП.name);
				Отбор.Вставить("exe_production", ИП.exe_production);
				Отбор.Вставить("details", ИП.details);
				Отбор.Вставить("ip_end", ИП.ip_end);
				Отбор.Вставить("subject", ИП.subject);
				Отбор.Вставить("bailiff", ИП.bailiff);
				Отбор.Вставить("department", ИП.department);
			КонецЕсли;
			
			ИП_Неизмененные = тзИП_База.НайтиСтроки(Отбор);
			Если ИП_Неизмененные.Количество() = 0 Тогда
				//Записываем изменения
				//ФССП_ОбщийМодуль_ИнтеграцияФССП.ЗаписатьИзмененияВ_ИП(ИП,ИПСсылка,ЭтотОбъект.Должник,ДокументСсылка);
				Движение = Движения.ФССП_СостояниеИП.Добавить();
				Движение.bailiff = ИП.bailiff;
				Движение.department = ИП.department;
				Движение.details = ИП.details;
				Движение.exe_production = ИП.exe_production;
				Движение.ip_end = ИП.ip_end;
				Движение.name = ИП.name;
				Движение.subject = ИП.subject;
				Движение.ОтделСудебныхПриставов = ИП.ОтделСудебныхПриставов;
				Движение.СудебныйПриставИсполнитель = ИП.СудебныйПриставИсполнитель;
				СсылкаИД= Справочники.ИсполнительныеДокументы.ПустаяСсылка();
				ПроверитьИзмененияИсполДока(ИПСсылка,ИП.НомерИД,ИП.ДатаИД,ИП.ОрганВыдавшийИД,ИП.ВидИД,СсылкаИД);
				Движение.НомерИД = СсылкаИД;
				Движение.ИП = ИПСсылка;
				Движение.НомерСД = ИП.НомерСД;
				Движение.ДатаВозбуждения = ИП.ДатаВозбуждения;
				Движение.Регистратор = ДокументСсылка;
				Движение.Период = ДокументСсылка.Дата;
				Если ЗначениеЗаполнено(ИП.ip_end) Тогда
					Движение.Завершено = Истина;
					Движение.СтатусИП = Перечисления.ФССП_СтатусыИП.ОконченоБезИсполнения;
					Движение.ДатаОкончания = ИП.ДатаОкончания;
					Движение.ПричинаОкончания = ИП.ПричинаОкончания;
				Иначе
					Движение.Завершено = Ложь;
					Движение.СтатусИП = Перечисления.ФССП_СтатусыИП.Действующее;
					Движение.ДатаОкончания = Дата(1,1,1);
					Движение.ПричинаОкончания = "";
				КонецЕсли;  
				
				Для к = 1 по 5 Цикл 
					ИмяКолонкиПредмет = "Предмет" + Строка(к); 
					ИмяКолонкиСумма = "Сумма"+Строка(к); 
					ПредСсылка = ИП[ИмяКолонкиПредмет];
					Если ЗначениеЗаполнено(ПредСсылка) Тогда
						СуммаЧисло = ИП[ИмяКолонкиСумма];
						СтруктураПредметов = Новый Структура("ИП,Предмет,Сумма");
						СтруктураПредметов.ИП = Движение.ИП; 
						СтруктураПредметов.Предмет = ПредСсылка;
						СтруктураПредметов.Сумма = СуммаЧисло;
						МассивПредметов.Добавить(СтруктураПредметов); 
						Если ЗначениеЗаполнено(СуммаЧисло) Тогда
							Если ПредСсылка = Справочники.ФССП_ПредметыИП.НайтиПоНаименованию("Исполнительский сбор",Истина) Тогда 
								Движение.Предмет2 = ПредСсылка;
								Движение.Сумма2 = СуммаЧисло;
							Иначе
								Движение.Предмет1 = ПредСсылка;
								Движение.Сумма1 = СуммаЧисло; 
								Продолжить;
							КонецЕсли;	
						КонецЕсли;		
					КонецЕсли;	
				КонецЦикла;				
			Иначе
				Продолжить;
			КонецЕсли;
		КонецЕсли;					
		
	КонецЦикла;
	
	ТаблицаДвиженийЗадолженность = Неопределено;
	Документы.ФССП_ЗагрузкаИсполнительногоПроизводства.ИнициализироватьДанныеДокумента(ЭтотОбъект,Движения.ФССП_СостояниеИП,МассивПредметов,ТаблицаДвиженийЗадолженность); 
	Если ТаблицаДвиженийЗадолженность <> Неопределено Тогда 
		Если ТаблицаДвиженийЗадолженность.Количество() > 0 Тогда 
			// 190120222 ФССП_ЗадолженностьПоИП Заменен на ФССП_ЗадолженностьПоПредметамИП
			//ЭтотОбъект.Движения.ФССП_ЗадолженностьПоИП.Загрузить(ТаблицаДвиженийЗадолженность);
			//ЭтотОбъект.Движения.ФССП_ЗадолженностьПоИП.Записывать = Истина;  
			ЭтотОбъект.Движения.ФССП_ЗадолженностьПоПредметамИП.Загрузить(ТаблицаДвиженийЗадолженность);
			ЭтотОбъект.Движения.ФССП_ЗадолженностьПоПредметамИП.Записывать = Истина;  
		КонецЕсли;   
	КонецЕсли; 		
	
	
	
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
КонецПроцедуры

Процедура ПоискОдинаковыхИсполнительныхИзДокумента(тзИП_Документ)
	ТаблЗнач = тзИП_Документ; 
	
	Отбор = Новый Структура();
	
	Для каждого Стр Из ТаблЗнач Цикл
		Отбор.Очистить();
		Отбор.Вставить("Идентификатор",Стр.Идентификатор);
		Строки = ТаблЗнач.НайтиСтроки(Отбор);
		Если Строки.Количество() > 1 Тогда
			Для каждого НайденныеСтроки Из Строки Цикл
				ТипСловаДепартамент = бит_ФССП_ИнтеграцияФССП.ПолучитьТипСлова(НайденныеСтроки.department);
				Если ТипСловаДепартамент = "Число" И Не ЗначениеЗаполнено(НайденныеСтроки.ОтделСудебныхПриставов) и Не ЗначениеЗаполнено(НайденныеСтроки.СудебныйПриставИсполнитель) Тогда
					ТаблЗнач.Удалить(НайденныеСтроки);
					Продолжить;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ПривязатьИПкДО(ИсполДок,ДатаИсполДока,ОрганВыдавший,Вид,ИсполПроизводство,ИД_Ссылка)
	 ЗапросИДДО= Новый Запрос( "ВЫБРАТЬ
	                      |	ИсполнительныеДокументы.Ссылка КАК Ссылка,
	                      |	ИсполнительныеДокументы.Владелец КАК Владелец
						  |ИЗ
	                      |	Справочник.ИсполнительныеДокументы КАК ИсполнительныеДокументы
	                      |ГДЕ
	                      |	ИсполнительныеДокументы.НомерДела = &НомерДела
	                      |	И ИсполнительныеДокументы.ПометкаУдаления = ЛОЖЬ
	                      |	И ИсполнительныеДокументы.ДатаИД = &ДатаИД");
	 //ЗапросИДДО.УстановитьПараметр("Должник",ЭтотОбъект.Должник);
	 ЗапросИДДО.УстановитьПараметр("НомерДела",ИсполДок);
	 ЗапросИДДО.УстановитьПараметр("ДатаИД",ДатаИсполДока);
	 
	 Выборка = ЗапросИДДО.Выполнить().Выбрать();
	 ИПОбъект = ИсполПроизводство.ПолучитьОбъект(); 
	 Если Выборка.Следующий() Тогда
		 //Если ТипЗнч(Выборка.Владелец) = Тип("СправочникСсылка.ДолговыеОбязательства") Тогда 
		 //    ИПОбъект.ДолговоеОбязательствоИП = Выборка.Владелец;
		 //КонецЕсли;
		 ИПОбъект.НомерИД = Выборка.Ссылка;
		 ИД_Ссылка = Выборка.Ссылка;
		 ИД_Об =  ИД_Ссылка.ПолучитьОбъект();
		 ИД_Об.ОрганВыдавшийИД = ОрганВыдавший;
		 ИД_Об.ВидИД = Вид;
		 ИД_Об.Записать();
	 Иначе 
		 НовыйИД = Справочники.ИсполнительныеДокументы.СоздатьЭлемент();
		 НовыйИД.Владелец =этотобъект.Должник;
		 НовыйИД.Должник = этотобъект.Должник;
		 Если ЗначениеЗаполнено(ИсполДок) Тогда
			 НовыйИД.НомерДела = ИсполДок;
			 НовыйИД.КодИД = Строка(ИсполДок) + " "+Лев(Строка(ДатаИсполДока),10) +  " " + Строка(ЭтотОбъект.Должник.КодКонтрагента);
		 Иначе
			 НовыйИД.НомерДела = Строка(Вид) + " от "+ Лев(Строка(ДатаИсполДока),10);
			 НовыйИД.КодИД = Строка(Вид) + " от "+ Лев(Строка(ДатаИсполДока),10) + " " + Строка(ЭтотОбъект.Должник.КодКонтрагента);
		 КонецЕсли;
		 НовыйИД.ДатаИД = ДатаИсполДока;
		 НовыйИД.ВидИД = Вид;
		 НовыйИД.ОрганВыдавшийИД = ОрганВыдавший;
		 НовыйИД.Записать();
		 ИПОбъект.НомерИД = НовыйИД.Ссылка;
		 ИД_Ссылка = НовыйИД.Ссылка;
	 КонецЕсли;	
	 ИПОбъект.Записать();	

 Конецпроцедуры
 
 
Процедура ПроверитьИзмененияИсполДока(ИП,НомерИД,ДатаИД,ОрганВыдавшийИД,ВидИД,ИД_ССылка)
	 Если Не ЗначениеЗаполнено(НомерИД) Тогда
		 ИД_ССылка = ИП.НомерИД;
		 Возврат;
	 Иначе	 
		 
		 Запрос = Новый Запрос("ВЫБРАТЬ
		 |	ФССП_ИсполнительноеПроизводство.Ссылка КАК Ссылка,
		 |	ФССП_ИсполнительноеПроизводство.НомерИД КАК НомерИД
		 |ИЗ
		 |	Справочник.ФССП_ИсполнительноеПроизводство КАК ФССП_ИсполнительноеПроизводство
		 |ГДЕ
		 |	ФССП_ИсполнительноеПроизводство.Ссылка = &Ссылка");
		 Запрос.УстановитьПараметр("Ссылка",ИП);
		 Выборка = Запрос.Выполнить().Выбрать();
		 Пока Выборка.Следующий() цикл
			 Если Выборка.НомерИД.НомерДела = НомерИД Тогда
				 ИД_ССылка = Выборка.НомерИД;
				 Продолжить;
			 Иначе
				 ИДОб = Выборка.НомерИД.ПолучитьОбъект();
				 ИДОб.НомерДела =НомерИД;
				 ИДОб.ДатаИД =ДатаИД;
				 ИДОб.ОрганВыдавшийИД =ОрганВыдавшийИД;
				 ИДОб.ВидИД = ВидИД;
				 ИДОб.Записать();
				 ИД_ССылка = ИДОб.Ссылка;
			 КонецЕсли;
			 
		 КонецЦикла;
	 КонецЕсли;
КонецПроцедуры 

Процедура ОбработкаУдаленияПроведения(Отказ)
	ЗапросКонтроль = Новый Запрос("ВЫБРАТЬ
	                              |	ФССП_СостояниеИП.ИП.Владелец КАК ИПВладелец,
	                              |	ФССП_СостояниеИП.Период КАК Период,
	                              |	ФССП_СостояниеИП.ИП КАК ИП,
	                              |	ФССП_СостояниеИП.НомерСД КАК НомерСД
	                              |ИЗ
	                              |	РегистрСведений.ФССП_СостояниеИП КАК ФССП_СостояниеИП
	                              |ГДЕ
	                              |	ФССП_СостояниеИП.ИП.Владелец = &Владелец
	                              |	И ФССП_СостояниеИП.Период > &Период");
	ЗапросКонтроль.УстановитьПараметр("Владелец",Должник);
	ЗапросКонтроль.УстановитьПараметр("Период",Дата);
	РезультатКонтроль = ЗапросКонтроль.Выполнить().Выбрать();
	Если РезультатКонтроль.Следующий() Тогда
		Сообщить("Сперва распроведите следующие документы по данному должнику!");
		Отказ = Истина;
	КонецЕсли;	
	
КонецПроцедуры

Процедура ОбработатьТабличнуюЧастьДокумента()
	Для каждого ТекСтрока из ЭтотОбъект.тчИсполнительныеПроизводства Цикл
		ТекИП = ТекСтрока.exe_production;
		Для Каждого Стрк ИЗ ЭтотОбъект.тчИсполнительныеПроизводства Цикл
			ТипСлова = Бит_ФССП_ИнтеграцияФССП.ПолучитьТипСлова(Стрк.department);
			Если Стрк.exe_production = ТекИП И ТипСлова = "Число" Тогда 
				ЭтотОбъект.тчИсполнительныеПроизводства.Удалить(Стрк);
			КонецЕсли;    
		КонецЦикла;        
	КонецЦикла;		
КонецПроцедуры     

