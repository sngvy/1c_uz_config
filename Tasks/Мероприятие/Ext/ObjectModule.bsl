
Перем ТекстИзменений;
Перем Пользователь Экспорт;

Процедура ПередЗаписью(Отказ)
	ЭтотОбъект.Наименование = ЭтотОбъект.ТипМероприятия.Наименование;
	
	// Проверяем мероприятия по рассылке
	Если ЭтотОбъект.ПометкаУдаления Тогда
		Если Не ЭтотОбъект.ТипМероприятия.ВидРассылки.Пустая() Тогда
			НаборЗаписей = РегистрыСведений.УдалитьЗаданияДляРассылки.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Автор.Установить(ЭтотОбъект.Ссылка);
			НаборЗаписей.Прочитать();
			Если НаборЗаписей.Количество() > 0 Тогда
				Если НаборЗаписей[0].Статус > 0 Тогда
					Сообщить("Имеется мероприятие с уже запущенной рассылкой!");
					Отказ = Истина;
				Иначе
					НаборЗаписей = РегистрыСведений.УдалитьЗаданияДляРассылки.СоздатьНаборЗаписей();
					НаборЗаписей.Отбор.Автор.Установить(ЭтотОбъект.Ссылка);
					НаборЗаписей.Записать(Истина);
				КонецЕсли;
			КонецЕсли;	
		КонецЕсли;
	КонецЕсли;
	//
	ТекстИзменений = ОбъектыСервер.ПроверитьИзмененияВОбъекте(ЭтотОбъект);
	//++КазанцевЯА-БП
	Если Константы.КонтрольСроковМероприятий.Получить() Тогда
		ДобавитьСрокВыполненияВИсторию();
	КонецЕсли;
	//--КазанцевЯА-БП
КонецПроцедуры

Процедура ВыполнитьМероприятиеКакНеАктуальное(Отказ) Экспорт
	ФункционалБП.ВыполнитьМероприятиеКакНеАктуальноеМ(Отказ, ЭтотОбъект);
КонецПроцедуры

Процедура ВыполнитьМероприятие(Отказ) Экспорт
	ФункционалБП.ВыполнитьМероприятиеМ(Отказ, ЭтотОбъект);
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	//РегистрыНакопления.ОбъектыВРаботе.ПринятьУбратьВРаботу(Отказ, ОбщегоНазначения.ТекущийПользователь());
	Если Не Отказ Тогда
		Справочники.Пользователи.ОтслеживаниеИзменений(Отказ, Ссылка, ТекстИзменений);
	КонецЕсли;
	
	//!!! не знаю надо или нет...
	Справочники.ФункцииДополнительныхСвойств.ПроставитьЗначенияДопСвойств(ЭтотОбъект,
			Перечисления.ИнициаторыСобытийДляДопСвойств.Мероприятие);
			
	//Очистка связных документов
	Если Не Выполнена ИЛИ ПометкаУдаления Тогда
		Запрос = Новый Запрос("ВЫБРАТЬ
		                      |	ЗагрузкаЗадолженности.Ссылка
		                      |ИЗ
		                      |	Документ.ЗагрузкаЗадолженности КАК ЗагрузкаЗадолженности
		                      |ГДЕ
		                      |	(ВЫРАЗИТЬ(ЗагрузкаЗадолженности.Автор КАК Задача.Мероприятие)) = &Автор
		                      |	И ЗагрузкаЗадолженности.Проведен
		                      |
		                      |ОБЪЕДИНИТЬ ВСЕ
		                      |
		                      |ВЫБРАТЬ
		                      |	ПоступлениеПлатежей.Ссылка
		                      |ИЗ
		                      |	Документ.ПоступлениеПлатежей КАК ПоступлениеПлатежей
		                      |ГДЕ
		                      |	(ВЫРАЗИТЬ(ПоступлениеПлатежей.Автор КАК Задача.Мероприятие)) = &Автор
		                      |	И ПоступлениеПлатежей.Проведен
		                      |
		                      |ОБЪЕДИНИТЬ ВСЕ
		                      |
		                      |ВЫБРАТЬ
		                      |	АктуализацияЗадолженности.Ссылка
		                      |ИЗ
		                      |	Документ.АктуализацияЗадолженности КАК АктуализацияЗадолженности
		                      |ГДЕ
		                      |	(ВЫРАЗИТЬ(АктуализацияЗадолженности.Автор КАК Задача.Мероприятие)) = &Автор
		                      |	И АктуализацияЗадолженности.Проведен");
		Запрос.УстановитьПараметр("Автор", Ссылка);
		Результат_ = Запрос.Выполнить().Выбрать();
		Пока Результат_.Следующий() Цикл
			Об = Результат_.Ссылка.ПолучитьОбъект();
			Если ПометкаУдаления Тогда
				Об.УстановитьПометкуУдаления(Истина);
			Иначе
				Об.Записать(РежимЗаписиДокумента.ОтменаПроведения);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Объект = ДанныеЗаполнения;	
КонецПроцедуры

Процедура ДобавитьСрокВыполненияВИсторию()
	Если ЭтотОбъект.СрокВыполнения <> Ссылка.СрокВыполнения ИЛИ ЭтотОбъект.СрокВыполненияПричина <> Ссылка.СрокВыполненияПричина Тогда
		СтрТЧ = ЭтотОбъект.ПереносСроковВыполнения.Добавить();
		СтрТЧ.ДатаУстановки = ТекущаяДата();
		СтрТЧ.СрокВыполнения = ЭтотОбъект.СрокВыполнения;
		СтрТЧ.Причина = ЭтотОбъект.СрокВыполненияПричина;
	КонецЕсли;
КонецПроцедуры // ДобавитьСрокВыполненияВИсторию()
