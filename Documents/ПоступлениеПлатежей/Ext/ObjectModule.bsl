
Процедура ОбработкаУдаленияПроведения(Отказ)
	//ПроведениеСервер.ОчиститьДвиженияДокумента(ЭтотОбъект,, Отказ);   
		
	//Корректировка последовательности, поиск первого документа актуализации и его ПРОГРАММНОЕ перепроведение
  	Документы.АктуализацияЗадолженности.ПровестиПоследовательность(ЭтотОбъект);
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	ВалютаРегл = Константы.ВалютаРегламентированногоУчета.Получить();
	Если ВалютаРегл = Справочники.Валюты.ПустаяСсылка() Тогда
		Сообщить("Не определена валюта регламентированного учета!");
		Отказ = Истина;     
	КонецЕсли;
	
	ТаблицаДвиженийОбъекты = Неопределено;
	ТаблицаДвиженийСобытия = Неопределено;
	
	Документы.ПоступлениеПлатежей.ИнициализироватьДанныеДокумента(ЭтотОбъект, ТаблицаДвиженийОбъекты, 
			ТаблицаДвиженийСобытия);
		
	Если Не Отказ И ТаблицаДвиженийОбъекты.Количество() > 0 Тогда
		ЭтотОбъект.Движения.ЗадолженностьПоОбъектам.Загрузить(ТаблицаДвиженийОбъекты);
		ЭтотОбъект.Движения.ЗадолженностьПоОбъектам.Записывать = Истина;
	КонецЕсли;		
			
	Если Не Отказ И ТаблицаДвиженийСобытия.Количество() > 0 Тогда
		ЭтотОбъект.Движения.СобытияПоОбъектам.Загрузить(ТаблицаДвиженийСобытия);
		ЭтотОбъект.Движения.СобытияПоОбъектам.Записывать = Истина;
	КонецЕсли;		
			
	ЭтотОбъект.Движения.Записать();	
	
	//Корректировка последовательности, поиск первого документа актуализации и его ПРОГРАММНОЕ перепроведение
  	Документы.АктуализацияЗадолженности.ПровестиПоследовательность(ЭтотОбъект);
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	ОбъектыСервер.ОбработкаЗаполненияДокументов(ЭтотОбъект, ДанныеЗаполнения, СтандартнаяОбработка);
КонецПроцедуры

Процедура ЗаполнитьДанные(ПолеИмпорта, НастройкаСоответствий) Экспорт
	СписокРеквизитов = Новый СписокЗначений;
	//ФормаДокумента = ПолучитьФорму("Документ.ПоступлениеПлатежей.Форма.ФормаДокумента");
	//ТзДанныеЭлементы = ФормаДокумента.Элементы.Объекты.ПодчиненныеЭлементы;
	//Для Каждого Элемент Из ТзДанныеЭлементы Цикл	
	//	Имя = Сред(Элемент.Имя, СтрДлина("Объекты") + 1);
	//	Попытка   
	//		Если Элемент.Заголовок = "" Тогда
	//			Синоним = Метаданные.Документы.ПоступлениеПлатежей.ТабличныеЧасти.Объекты.Реквизиты.Найти(Имя).Синоним;
	//		Иначе 
	//			Синоним = Элемент.Заголовок;
	//		КонецЕсли;		
	//		//Элементы.ВыборСоответствий.ПодчиненныеЭлементы.ВыборСоответствийИмяДанных.СписокВыбора.Добавить(Синоним);			
	//		СписокРеквизитов.Добавить(Имя,Синоним);
	//	Исключение
	//	КонецПопытки;
	//КонецЦикла; 	
	
	СписокРеквизитов.Добавить("ДатаПлатежа", "Дата платежа");
	СписокРеквизитов.Добавить("Объект", "Объект");
	СписокРеквизитов.Добавить("ВалютаПлатежа", "Валюта платежа");
	СписокРеквизитов.Добавить("СуммаВВалютеПлатежа", "Сумма в валюте платежа");
	СписокРеквизитов.Добавить("ОсновнойДолг", "Основной долг");
	СписокРеквизитов.Добавить("Проценты", "Проценты");
	СписокРеквизитов.Добавить("Штрафы", "Штрафы");
	СписокРеквизитов.Добавить("Пени", "Пени");
	СписокРеквизитов.Добавить("Составляющая1", "Составляющая1");
	СписокРеквизитов.Добавить("Составляющая2", "Составляющая2");
	СписокРеквизитов.Добавить("Составляющая3", "Составляющая3");
	СписокРеквизитов.Добавить("Составляющая4", "Составляющая4");
	СписокРеквизитов.Добавить("Составляющая5", "Составляющая5");
	СписокРеквизитов.Добавить("Составляющая6", "Составляющая6");
	СписокРеквизитов.Добавить("Составляющая7", "Составляющая7");
	СписокРеквизитов.Добавить("Составляющая8", "Составляющая8");
		
	Для НомерСтрокиТаблицыИмпорта = 2 По ПолеИмпорта.ВысотаТаблицы Цикл
		ПустаяСтрокаТаблицы = Истина;
		Для НомерСтолбца = 1 По ПолеИмпорта.ШиринаТаблицы Цикл
			Если ЗначениеЗаполнено(ПолеИмпорта.Область("R" + Формат(НомерСтрокиТаблицыИмпорта, "ЧГ=") + "C" + 
					Формат(НомерСтолбца, "ЧГ=")).Текст) Тогда
				ПустаяСтрокаТаблицы = Ложь;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если ПустаяСтрокаТаблицы Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = ЭтотОбъект.Объекты.Добавить(); 
		Для Каждого ТекСтрока Из НастройкаСоответствий.ВыборСоответствий Цикл
			Если Не ЗначениеЗаполнено(ТекСтрока.ПараметрыСвязи) Тогда
				Продолжить;
			КонецЕсли;
			                         
			Если ТекСтрока.ТипДанных = "Строка" Тогда
				Для Каждого Элемент Из СписокРеквизитов Цикл
					Если Элемент.Представление = Строка(ТекСтрока.ИмяДанных) Тогда
						НоваяСтрока[Элемент.Значение] = РаботаСДокументами.СформироватьСтрокуИзДанных82(ТекСтрока.ПараметрыСвязи, 
								НомерСтрокиТаблицыИмпорта, ПолеИмпорта);
						Прервать;
					КонецЕсли
				КонецЦикла;	
				
			ИначеЕсли ТекСтрока.ТипДанных = "Число" Тогда
				Попытка
					Результат = Число(СтрЗаменить(РаботаСДокументами.НайтиЗначениеВТаблицеИмпорта(НомерСтрокиТаблицыИмпорта, 
							ТекСтрока.ПараметрыСвязи, ПолеИмпорта), " ", ""));
				Исключение
					Результат = 0;
				КонецПопытки;
				
				Для Каждого Элемент Из СписокРеквизитов Цикл
					Если Элемент.Представление = Строка(ТекСтрока.ИмяДанных) Тогда
						НоваяСтрока[Элемент.Значение] = Результат;
						Прервать;
					КонецЕсли
				КонецЦикла;
				
			ИначеЕсли ТекСтрока.ТипДанных = "Дата" Тогда
				Попытка
					Результат = Дата(РаботаСДокументами.НайтиЗначениеВТаблицеИмпорта(НомерСтрокиТаблицыИмпорта, 
							ТекСтрока.ПараметрыСвязи, ПолеИмпорта));
				Исключение
					Результат = Технический.ПреобразоватьДату(РаботаСДокументами.НайтиЗначениеВТаблицеИмпорта(
							НомерСтрокиТаблицыИмпорта, ТекСтрока.ПараметрыСвязи, ПолеИмпорта));
				КонецПопытки;
						
				Для Каждого Элемент Из СписокРеквизитов Цикл
					Если Элемент.Представление = Строка(ТекСтрока.ИмяДанных) Тогда
						НоваяСтрока[Элемент.Значение] = Результат;
						Прервать;
					КонецЕсли
				КонецЦикла;
					
			//ИначеЕсли Найти(ТекСтрока.ТипДанных,  "Перечисление ссылка:") = 1 
			//		Или НРег(ТекСтрока.ТипДанных) = Нрег(Строка(Тип("СправочникСсылка.тсЗначенияСвойствОбъектов"))) 
			//		Или ТекСтрока.ТипДанных = "Булево" Тогда
			//	НайтиИЗаписатьПеречисление(ТекСтрока, НоваяСтрока, НомерСтрокиТаблицыИмпорта, ПолеИмпорта);
				       
			Иначе	
			    Для Каждого Элемент Из СписокРеквизитов Цикл
					Если ТекСтрока.ИмяДанных = "Должник" Тогда
						РаботаСДокументами.НайтиИЗаписатьДокументИлиСправочник81("Объект", ТекСтрока.ТипДанных, 
								ТекСтрока.ПараметрыСвязи, НоваяСтрока, НомерСтрокиТаблицыИмпорта, ПолеИмпорта);
						ВладелецДолжник = НоваяСтрока.Объект;
						// Боевкин 07.07.2017 
						// НоваяСтрока.Объект = Неопределено;
						////////////////////////////////////
						Прервать;
					ИначеЕсли ТекСтрока.ИмяДанных = "Долговое обязательство" Тогда
						РаботаСДокументами.НайтиИЗаписатьДокументИлиСправочник81("Объект", ТекСтрока.ТипДанных, 
								ТекСтрока.ПараметрыСвязи, НоваяСтрока, НомерСтрокиТаблицыИмпорта, ПолеИмпорта, 
								ВладелецДолжник);
						Прервать;
					ИначеЕсли Элемент.Представление = Строка(ТекСтрока.ИмяДанных) Тогда
						РаботаСДокументами.НайтиИЗаписатьДокументИлиСправочник81(Элемент.Значение, ТекСтрока.ТипДанных, 
								ТекСтрока.ПараметрыСвязи, НоваяСтрока, НомерСтрокиТаблицыИмпорта, ПолеИмпорта);		
						Прервать;
					КонецЕсли;		
				КонецЦикла;				
			КонецЕсли;
		КонецЦикла;
		Если не ЗначениеЗаполнено(НоваяСтрока.ДатаПлатежа) ИЛИ Не ЗначениеЗаполнено(НоваяСтрока.Объект) Тогда
			ЭтотОбъект.Объекты.Удалить(НоваяСтрока.НомерСтроки-1);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры
