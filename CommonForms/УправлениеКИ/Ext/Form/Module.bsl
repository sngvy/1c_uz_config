
&НаСервере
Процедура ПриОткрытииНаСервере(Отказ)
	ЭтаФорма.РольАБД = РольДоступна("АБД");
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// Получить непредопредленное значение с сервера
	ПриОткрытииНаСервере(Отказ);
	// Проверить права доступа
	Если ЭтаФорма.РольАБД = Ложь Тогда
		Предупреждение("Нарушение прав доступа",,"Предупреждение");
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСобытияКИНаСервере()
	ЭтаФорма.НастройкаВыгрузкиКИ = Справочники.НастройкиВыгрузкиКредитныхИсторий.НайтиПоКоду("000000001");
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСобытияКИ(Команда)
	ЗаполнитьСобытияКИНаСервере();
	Массив = Элементы.Список.ВыделенныеСтроки;	
	Ном = 1;
	Для Каждого Эл Из Массив Цикл
		Состояние("Интеграция с НБКИ", Цел(Ном * 100 / (Массив.Количество() + 1)),"Пожалуйста, подождите...",БиблиотекаКартинок.NC_ПодсистемаОбменСНБКИ);
		Ном = Ном + 1;
		ФормаНастроек = ПолучитьФорму("Справочник.НастройкиВыгрузкиКредитныхИсторий.ФормаОбъекта", Новый Структура("Ключ", ЭтаФорма.НастройкаВыгрузкиКИ));
		ФормаНастроек.Обязательство = Элементы.Список.ДанныеСтроки(Эл).Ссылка;
		ФормаНастроек.Должник = Элементы.Список.ДанныеСтроки(Эл).Должник;
		ФормаНастроек.ПервичноеЗаполнениеПоОдномуДО(Неопределено);
	КонецЦикла;	
	Состояние(, 100);
КонецПроцедуры

&НаСервере
Процедура ПрекратитьОбязательствоНаСервере(Ссылка)
	ИсходноеСобытие = РегистрыСведений.КредитныеИсторииДанныеСделки.СоздатьМенеджерЗаписи();
	
	ИсходноеСобытие.Сделка = Ссылка;
	ИсходноеСобытие.ДатаСобытия = ОбъектыСервер.ПолучитьЗначениеСвойства(Ссылка, "0158");
	ИсходноеСобытие.Событие = Справочники.КредитныеИсторииСобытияСделки.НайтиПоНаименованию("Правопреемство от другого лица");
	ИсходноеСобытие.ДокументСобытие = Справочники.НастройкиВыгрузкиКредитныхИсторий.НайтиПоКоду("000000001");
	ИсходноеСобытие.Прочитать();
	Если ИсходноеСобытие.Выбран() Тогда
		НовоеСобытие = РегистрыСведений.КредитныеИсторииДанныеСделки.СоздатьМенеджерЗаписи();
		НовоеСобытие.Событие = Справочники.КредитныеИсторииСобытияСделки.НайтиПоНаименованию("Обязательство субъекта прекратилось");
		ЗаполнитьЗначенияСвойств(НовоеСобытие, ИсходноеСобытие, , "Событие");
	Иначе
		Сообщить("Для ДО " + Ссылка + " не найдено событие правопреемства! Обработка пропущена");
		Возврат;
	КонецЕсли;
	
	НовоеСобытие.Записать();
	
	СобытиеПрекращения = РегистрыСведений.КредитныеИсторииДанныеСделки.СоздатьМенеджерЗаписи();
	
	СобытиеПрекращения.Сделка = Ссылка;
	СобытиеПрекращения.ДатаСобытия = ОбъектыСервер.ПолучитьЗначениеСвойства(Ссылка, "0158");
	СобытиеПрекращения.Событие = Справочники.КредитныеИсторииСобытияСделки.НайтиПоНаименованию("Обязательство субъекта прекратилось");
	СобытиеПрекращения.ДокументСобытие = Справочники.НастройкиВыгрузкиКредитныхИсторий.НайтиПоКоду("000000001");
	СобытиеПрекращения.Прочитать();
	СобытиеПрекращения.ДатаСобытия = ТекущаяДата();
	СобытиеПрекращения.ДатаРасчетаСрочнойЗадолженности = ТекущаяДата();
	СобытиеПрекращения.ДатаРасчетаПросроченнойЗадолженности = ТекущаяДата();
	СобытиеПрекращения.ПрекращениеОбязательства = "1";
	СобытиеПрекращения.Просрочка90плюс = "0";	
	
	СобытиеПрекращения.Записать();
	Сообщить("Действие ДО " + Ссылка + " прекращено");
КонецПроцедуры

&НаКлиенте
Процедура ПрекратитьОбязательство(Команда)
	Массив = Элементы.Список.ВыделенныеСтроки;	
	Ном = 1;
	Для Каждого Эл Из Массив Цикл	
		Состояние("Интеграция с НБКИ", Цел(Ном * 100 / (Массив.Количество() + 1)),"Пожалуйста, подождите...",БиблиотекаКартинок.NC_ПодсистемаОбменСНБКИ);
		Ном = Ном + 1;
		Ссылка = Элементы.Список.ДанныеСтроки(Эл).Ссылка;
		КомандаWindows = "Timeout /T " + Формат(10, "ЧГ=0") + " /NoBreak";
		WshShell = Новый COMОбъект("WScript.Shell"); 
		WshShell.Run(КомандаWindows, 0, -1);
		ПрекратитьОбязательствоНаСервере(Ссылка);
	КонецЦикла;	
	Состояние(, 100);
КонецПроцедуры

&НаСервере
Процедура ПрекратитьОбязательствоБанкротствоНаСервере(Ссылка)
	ИсходноеСобытие = РегистрыСведений.КредитныеИсторииДанныеСделки.СоздатьМенеджерЗаписи();
	
	ИсходноеСобытие.Сделка = Ссылка;
	ИсходноеСобытие.ДатаСобытия = ОбъектыСервер.ПолучитьЗначениеСвойства(Ссылка, "0158");
	ИсходноеСобытие.Событие = Справочники.КредитныеИсторииСобытияСделки.НайтиПоНаименованию("Правопреемство от другого лица");
	ИсходноеСобытие.ДокументСобытие = Справочники.НастройкиВыгрузкиКредитныхИсторий.НайтиПоКоду("000000001");
	ИсходноеСобытие.Прочитать();
	Если ИсходноеСобытие.Выбран() Тогда
		НовоеСобытие = РегистрыСведений.КредитныеИсторииДанныеСделки.СоздатьМенеджерЗаписи();
		НовоеСобытие.Событие = Справочники.КредитныеИсторииСобытияСделки.НайтиПоНаименованию("Обязательство субъекта прекратилось");
		ЗаполнитьЗначенияСвойств(НовоеСобытие, ИсходноеСобытие, , "Событие");
	Иначе
		Сообщить("Для ДО " + Ссылка + " не найдено событие правопреемства! Обработка пропущена");
		Возврат;
	КонецЕсли;
	
	НовоеСобытие.Записать();
	
	СобытиеПрекращения = РегистрыСведений.КредитныеИсторииДанныеСделки.СоздатьМенеджерЗаписи();
	
	СобытиеПрекращения.Сделка = Ссылка;
	СобытиеПрекращения.ДатаСобытия = ОбъектыСервер.ПолучитьЗначениеСвойства(Ссылка, "0158");
	СобытиеПрекращения.Событие = Справочники.КредитныеИсторииСобытияСделки.НайтиПоНаименованию("Обязательство субъекта прекратилось");
	СобытиеПрекращения.ДокументСобытие = Справочники.НастройкиВыгрузкиКредитныхИсторий.НайтиПоКоду("000000001");
	СобытиеПрекращения.Прочитать();
	СобытиеПрекращения.ДатаСобытия = ТекущаяДата();
	СобытиеПрекращения.ДатаРасчетаСрочнойЗадолженности = ТекущаяДата();
	СобытиеПрекращения.ДатаРасчетаПросроченнойЗадолженности = ТекущаяДата();
	СобытиеПрекращения.ПрекращениеОбязательства = "1";
	// Установить признак банкротства
	СобытиеПрекращения.Банкротство = "1";
	СобытиеПрекращения.Просрочка90плюс = "0";	
	
	СобытиеПрекращения.Записать();
	Сообщить("Действие ДО " + Ссылка + " прекращено по причине банкротства");
КонецПроцедуры

&НаКлиенте
Процедура ПрекратитьОбязательствоБанкротство(Команда)
	Массив = Элементы.Список.ВыделенныеСтроки;	
	Ном = 1;
	Для Каждого Эл Из Массив Цикл	
		Состояние("Интеграция с НБКИ", Цел(Ном * 100 / (Массив.Количество() + 1)),"Пожалуйста, подождите...",БиблиотекаКартинок.NC_ПодсистемаОбменСНБКИ);
		Ном = Ном + 1;
		Ссылка = Элементы.Список.ДанныеСтроки(Эл).Ссылка;
		КомандаWindows = "Timeout /T " + Формат(10, "ЧГ=0") + " /NoBreak";
		WshShell = Новый COMОбъект("WScript.Shell"); 
		WshShell.Run(КомандаWindows, 0, -1);
		ПрекратитьОбязательствоБанкротствоНаСервере(Ссылка);
	КонецЦикла;	
	Состояние(, 100);
КонецПроцедуры

&НаКлиенте
Процедура СформироватьОтчетВНБКИ(Команда)
	ЗаполнитьСобытияКИНаСервере();
	ФормаДокументаОтчета = ПолучитьФорму("Документ.НБКИДокументRUTDF.ФормаОбъекта");
	ФормаДокументаОтчета.Объект.Дата = ТекущаяДата();
	ФормаДокументаОтчета.Объект.НастройкаВыгрузки = ЭтаФорма.НастройкаВыгрузкиКИ;
	ФормаДокументаОтчета.НастройкаВыгрузкиПриИзменении(ФормаДокументаОтчета.Объект.НастройкаВыгрузки);
	Массив = Элементы.Список.ВыделенныеСтроки;	
	Ном = 1;
	Для Каждого Эл Из Массив Цикл
		Состояние("Интеграция с НБКИ", Цел(Ном * 100 / (Массив.Количество() + 1)),"Пожалуйста, подождите...",БиблиотекаКартинок.NC_ПодсистемаОбменСНБКИ);
		Ном = Ном + 1;
		ОбновляемаяЗапись = ФормаДокументаОтчета.Объект.тчОбновляемыеЗаписиB.Добавить();
		ОбновляемаяЗапись.ОбъектУчета = Элементы.Список.ДанныеСтроки(Эл).Ссылка;
		ОбновляемаяЗапись.Должник = Элементы.Список.ДанныеСтроки(Эл).Должник;
		// Создать служебное мероприятие
		СоздатьМероприятиеВыгрузки(Элементы.Список.ДанныеСтроки(Эл).Ссылка);
	КонецЦикла;
	ПараметрыЗаписи = Новый Структура("РежимЗаписи",РежимЗаписиДокумента.Проведение);
	ФормаДокументаОтчета.Записать(ПараметрыЗаписи);
	ФормаДокументаОтчета.СформироватьОтчет(Неопределено);
	Состояние(, 100);
КонецПроцедуры

&НаСервере
Процедура СоздатьМероприятиеВыгрузки(Объект)
	НовоеМероприятие = Задачи.Мероприятие.СоздатьЗадачу();	
	НовоеМероприятие.Автор = ПараметрыСеанса.ТекущийПользователь;
	НовоеМероприятие.Исполнитель = ПараметрыСеанса.ТекущийПользователь;
	НовоеМероприятие.Дата = ТекущаяДата();
	НовоеМероприятие.ВремяСоздания = ТекущаяДата();
	НовоеМероприятие.ПланируемаяДата = ТекущаяДата();
	НовоеМероприятие.ДатаВыполнения = ТекущаяДата();
	НовоеМероприятие.ФактическаяДата = ТекущаяДата();
	НовоеМероприятие.ДлительностьРазговора = "0:00:00";
	НовоеМероприятие.Объект = Объект;
	НовоеМероприятие.ТипМероприятия = Справочники.ТипыМероприятий.НайтиПоНаименованию("Служебное");
	НовоеМероприятие.Результат = Справочники.РезультатыМероприятий.НайтиПоНаименованию("Выгрузка в НБКИ");
	НовоеМероприятие.Выполнена = Истина;
	НовоеМероприятие.Записать();
КонецПроцедуры
