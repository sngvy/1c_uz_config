
&НаКлиенте
Процедура КонструкторЗапроса(Команда)
	#Если ТолстыйКлиентУправляемоеПриложение Тогда
		Конструктор = Новый КонструкторЗапроса();
		Конструктор.РежимКомпоновкиДанных = Ложь;
		Конструктор.АвтоДобавлениеПредставлений=Ложь;
		                     
		СтарыйЗапрос = Ложь;	
		ИсходныйТекстЗапроса = "";
		ИсходныйТекст = Элементы.ПолеТекстовогоДокумента.ВыделенныйТекст;	
		// Определяем нужно ли вставить только текст запроса (по выделению). 
		// Если выделенияе ест, то дополнительные фразы писать не будем и попытаемся получить текст
		// старого запроса.
		Если НЕ ИсходныйТекст = "" Тогда
			СтарыйЗапрос = истина;
			Если Найти(ИсходныйТекст,"ВЫБРАТЬ") <> Неопределено Тогда
				ИсходныйТекстЗапроса = СтрЗаменить(ИсходныйТекст,"|"," ");
			КонецЕсли;
		КонецЕсли;	
		// Пробуем передать в конструктор текст старого запроса.
		Если ИсходныйТекстЗапроса <> "" Тогда
			Попытка
				Конструктор.Текст = ИсходныйТекстЗапроса;
			Исключение		
			КонецПопытки;
		КонецЕсли;
		
		//Чуров
		Конструктор.Показать(Новый ОписаниеОповещения("КонструкторЗапросаПослеЗакрытия", ЭтаФорма, Новый Структура("СтарыйЗапрос", СтарыйЗапрос)));
		
			
	
	
	//Если Конструктор.ОткрытьМодально() Тогда
	//		ТекстЗапроса = Конструктор.Текст;
	//	Иначе
	//		Возврат;
	//	КонецЕсли;	
	//	Если ТекстЗапроса = Неопределено Или ТекстЗапроса = "" Тогда
	//		Возврат;	
	//	КонецЕсли; 
	//	
	//	//Добавляем разделители
	//	ТекстЗапросаСРазделителями = "";
	//	КоличествоСтрок = СтрЧислоСтрок(ТекстЗапроса);
	//	Для Счетчик = 1 По КоличествоСтрок Цикл
	//		Если Счетчик=1 И СтарыйЗапрос=Истина Тогда
	//			ТекСтрока =  ""+СтрПолучитьСтроку(ТекстЗапроса, Счетчик);
	//		Иначе
	//			ТекСтрока = "|"+СтрПолучитьСтроку(ТекстЗапроса, Счетчик);		
	//		КонецЕсли;			
	//		Если Не Счетчик = КоличествоСтрок  Тогда 			
	//			ТекСтрока = ТекСтрока + Символы.ПС;
	//		КонецЕсли;	
	//		ТекстЗапросаСРазделителями = ТекстЗапросаСРазделителями + ТекСтрока;		
	//	КонецЦикла;

	//	ВспомогательнаяЧасть = Объект.Функция;
	//	Если ЗначениеЗаполнено(ВспомогательнаяЧасть) Тогда
	//		ВспомогательнаяЧасть = ВспомогательнаяЧасть + Символы.ПС;	
	//	КонецЕсли;
	//							
	//	Если СтарыйЗапрос Тогда
	//		ДобавленныйТекст = ТекстЗапросаСРазделителями;
	//	Иначе
	//		ДобавленныйТекст =  
	//			"Запрос = Новый Запрос();"+Символы.ПС
	//			+"Запрос.Текст = """+Символы.ПС
	//			+ ТекстЗапросаСРазделителями
	//			+""";"+Символы.ПС
	//			+"Запрос.УстановитьПараметр("""", );"+Символы.ПС
	//			+"Результат = Запрос.Выполнить();"+Символы.ПС
	//			+"Значение = Результат.Выгрузить();";
	//	КонецЕсли;
	//	
	//	Если НЕ Элементы.ПолеТекстовогоДокумента.ВыделенныйТекст = "" Тогда										
	//		Элементы.ПолеТекстовогоДокумента.ВыделенныйТекст = ДобавленныйТекст;
	//	Иначе
	//		Элементы.ПолеТекстовогоДокумента.ВыделенныйТекст = Элементы.ПолеТекстовогоДокумента.ВыделенныйТекст + 
	//				ДобавленныйТекст;
	//	КонецЕсли;
	//	Объект.Функция = ПолеТекстовогоДокумента.ПолучитьТекст();	
	#Иначе
		Сообщить("Конструктор запроса работает только под Толстый клиент (управляемое приложение)!");
	#КонецЕсли
КонецПроцедуры

//Чуров++
&НаКлиенте
Процедура КонструкторЗапросаПослеЗакрытия(ТекстЗапроса, ДополнительныеПараметры) Экспорт
	
	
		Если ТекстЗапроса = Неопределено Или ТекстЗапроса = "" Тогда
			Возврат;	
		КонецЕсли; 
		
		//Добавляем разделители
		ТекстЗапросаСРазделителями = "";
		КоличествоСтрок = СтрЧислоСтрок(ТекстЗапроса);
		Для Счетчик = 1 По КоличествоСтрок Цикл
			Если Счетчик=1 И ДополнительныеПараметры.СтарыйЗапрос=Истина Тогда
				ТекСтрока =  ""+СтрПолучитьСтроку(ТекстЗапроса, Счетчик);
			Иначе
				ТекСтрока = "|"+СтрПолучитьСтроку(ТекстЗапроса, Счетчик);		
			КонецЕсли;			
			Если Не Счетчик = КоличествоСтрок  Тогда 			
				ТекСтрока = ТекСтрока + Символы.ПС;
			КонецЕсли;	
			ТекстЗапросаСРазделителями = ТекстЗапросаСРазделителями + ТекСтрока;		
		КонецЦикла;

		ВспомогательнаяЧасть = Объект.Функция;
		Если ЗначениеЗаполнено(ВспомогательнаяЧасть) Тогда
			ВспомогательнаяЧасть = ВспомогательнаяЧасть + Символы.ПС;	
		КонецЕсли;
								
		Если ДополнительныеПараметры.СтарыйЗапрос Тогда
			ДобавленныйТекст = ТекстЗапросаСРазделителями;
		Иначе
			ДобавленныйТекст =  
				"Запрос = Новый Запрос();"+Символы.ПС
				+"Запрос.Текст = """+Символы.ПС
				+ ТекстЗапросаСРазделителями
				+""";"+Символы.ПС
				+"Запрос.УстановитьПараметр("""", );"+Символы.ПС
				+"Результат = Запрос.Выполнить();"+Символы.ПС
				+"Значение = Результат.Выгрузить();";
		КонецЕсли;
		
		Если НЕ Элементы.ПолеТекстовогоДокумента.ВыделенныйТекст = "" Тогда										
			Элементы.ПолеТекстовогоДокумента.ВыделенныйТекст = ДобавленныйТекст;
		Иначе
			Элементы.ПолеТекстовогоДокумента.ВыделенныйТекст = Элементы.ПолеТекстовогоДокумента.ВыделенныйТекст + 
					ДобавленныйТекст;
		КонецЕсли;
		Объект.Функция = ПолеТекстовогоДокумента.ПолучитьТекст();
КонецПроцедуры

//Чуров--


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПолеТекстовогоДокумента.УстановитьТекст(Объект.Функция);
КонецПроцедуры

&НаКлиенте
Процедура Тест(Команда)
	Объект.Функция = ПолеТекстовогоДокумента.ПолучитьТекст();	
	ВычислитьФункцию(Объект.Функция, НаПримереОбъект, Обновлять, Объект.СтрокаВх);
КонецПроцедуры

&НаСервере
Процедура ВычислитьФункцию(Знач Запрос, Знач ОбъектВх, Знач Обновлять, Знач СтрокаВх)
	ЗначениеОбъект = РеквизитФормыВЗначение("Объект");
	ЗначениеОбъект.ВыполнитьПроцедуру(Запрос, ОбъектВх, Обновлять, СтрокаВх);
	ЗначениеВРеквизитФормы(ЗначениеОбъект, "Объект");
КонецПроцедуры

&НаКлиенте
Процедура ПолеТекстовогоДокументаПриИзменении(Элемент)
	Модифицированность = Истина;
	Объект.Функция = ПолеТекстовогоДокумента.ПолучитьТекст();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Не Объект.Ссылка.Пустая() Тогда
		//Заполнение полей НаПримере
		ИмяСправочника = Перечисления.ОбъектыУчета.ПолучитьИмяСправочника(Объект.ОбъектУчета);
		Если ИмяСправочника <> Неопределено Тогда
			Выполнить("НаПримереОбъект = Справочники." + ИмяСправочника + ".НайтиПоКоду(Объект.НаПримереОбъект);");
		КонецЕсли;			
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбъектПриИзменении(Элемент)
	Объект.НаПримереОбъект = ПолучитьКодПоСсылке(НаПримереОбъект);
КонецПроцедуры

&НаСервере
Функция ПолучитьКодПоСсылке(Элемент)
	Попытка
		Возврат Элемент.Код;
	Исключение 
		Возврат "";
	КонецПопытки;
КонецФункции

&НаСервере
Функция ПолучитьНомерПоСсылке(Элемент)
	Возврат Элемент.Номер;
КонецФункции

&НаКлиенте
Процедура КонструкторФормата(Команда)
	Конструктор = Новый КонструкторФорматнойСтроки();
	
	ИсходныйТекстФормата = "";
	ИсходныйТекст = Элементы.ПолеТекстовогоДокумента.ВыделенныйТекст;
	Если НЕ ИсходныйТекст = "" Тогда
		Если Найти(ИсходныйТекст, "Формат") <> Неопределено Тогда
			Попытка
				ПерваяКовычка =Найти(ИсходныйТекст, Символ(34));
				ВтораяКовычка = Найти(Сред(ИсходныйТекст, ПерваяКовычка + 1), Символ(34));
				ИсходныйТекстФормата = Сред(ИсходныйТекст, ПерваяКовычка + 1, ВтораяКовычка - 1);
			Исключение
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;
	
	СтарыйТекст = Ложь;
	Попытка
		Конструктор.Текст = ИсходныйТекстФормата;
		Если ИсходныйТекстФормата <> "" Тогда
			СтарыйТекст = Истина;
		КонецЕсли;
	Исключение
		
	КонецПопытки;
		
	//Чуров
	Конструктор.Показать(Новый ОписаниеОповещения("КонструкторФорматаПослеЗакрытия", ЭтаФорма, Новый Структура("СтарыйТекст", СтарыйТекст)));
		
	
	//Если Конструктор.ОткрытьМодально() Тогда
	//    ФорматнаяСтрока = Конструктор.Текст;
	//КонецЕсли;
	//
	//Если ФорматнаяСтрока = Неопределено Или ФорматнаяСтрока = "" Тогда
	//	Возврат;	
	//КонецЕсли; 
	//
	//ВспомогательнаяЧасть = Объект.Функция;
	//Если ЗначениеЗаполнено(ВспомогательнаяЧасть) Тогда
	//	ВспомогательнаяЧасть = ВспомогательнаяЧасть + Символы.ПС;	
	//КонецЕсли;
	//Если СтарыйТекст Тогда
	//	ДобавленныйТекст = "Значение[н] = Формат(Значение[н], """ + ФорматнаяСтрока + """);"
	//Иначе
	//	ДобавленныйТекст =  
	//			"Для н = 0 По Значение.ВГраница() Цикл" + Символы.ПС + 
	//			Символы.Таб + "Значение[н] = Формат(Значение[н], """ + ФорматнаяСтрока + """);" + Символы.ПС + 
	//			"КонецЦикла;";
	//КонецЕсли;
	//
	//Если Не Элементы.ПолеТекстовогоДокумента.ВыделенныйТекст = "" Тогда										
	//	Элементы.ПолеТекстовогоДокумента.ВыделенныйТекст = ДобавленныйТекст;
	//Иначе
	//	Элементы.ПолеТекстовогоДокумента.ВыделенныйТекст = Элементы.ПолеТекстовогоДокумента.ВыделенныйТекст + 
	//			ДобавленныйТекст;
	//КонецЕсли;
	//Объект.Функция = ПолеТекстовогоДокумента.ПолучитьТекст();
КонецПроцедуры

//Чуров++
&НаКлиенте
Процедура КонструкторФорматаПослеЗакрытия(ФорматнаяСтрока, ДополнительныеПараметры) Экспорт
	
	
	Если ФорматнаяСтрока = Неопределено Или ФорматнаяСтрока = "" Тогда
		Возврат;	
	КонецЕсли; 
	
	ВспомогательнаяЧасть = Объект.Функция;
	Если ЗначениеЗаполнено(ВспомогательнаяЧасть) Тогда
		ВспомогательнаяЧасть = ВспомогательнаяЧасть + Символы.ПС;	
	КонецЕсли;
	Если ДополнительныеПараметры.СтарыйТекст Тогда
		ДобавленныйТекст = "Значение[н] = Формат(Значение[н], """ + ФорматнаяСтрока + """);"
	Иначе
		ДобавленныйТекст =  
				"Для н = 0 По Значение.ВГраница() Цикл" + Символы.ПС + 
				Символы.Таб + "Значение[н] = Формат(Значение[н], """ + ФорматнаяСтрока + """);" + Символы.ПС + 
				"КонецЦикла;";
	КонецЕсли;
	
	Если Не Элементы.ПолеТекстовогоДокумента.ВыделенныйТекст = "" Тогда										
		Элементы.ПолеТекстовогоДокумента.ВыделенныйТекст = ДобавленныйТекст;
	Иначе
		Элементы.ПолеТекстовогоДокумента.ВыделенныйТекст = Элементы.ПолеТекстовогоДокумента.ВыделенныйТекст + 
				ДобавленныйТекст;
	КонецЕсли;
	Объект.Функция = ПолеТекстовогоДокумента.ПолучитьТекст();

КонецПроцедуры

//Чуров--


&НаКлиенте
Процедура ТестТипПриИзменении(Элемент)
	Если ВРег(ТестТип) = "БУЛЕВО" Тогда 
		Объект.ПринимаемыеЗначения.Добавить().Значение = Истина;
	ИначеЕсли ВРег(ТестТип) = "СТРОКА" Тогда 
		Объект.ПринимаемыеЗначения.Добавить().Значение = "";
	ИначеЕсли ВРег(ТестТип) = "ЧИСЛО" Тогда 
		Объект.ПринимаемыеЗначения.Добавить().Значение = 0;	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТестЗапросПриИзменении(Элемент)
	ПолеТекстовогоДокумента.УстановитьТекст(ТестЗапрос);
КонецПроцедуры

&НаКлиенте
Процедура ОбновлятьРанееЗаписанныеПриИзменении(Элемент)
	Объект.Обновлять = Обновлять;
КонецПроцедуры
