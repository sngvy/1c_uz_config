
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЭлементОтбора = РС_СписокИсходящейКорреспонденции.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных")); 
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Партия"); 	
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно; 	
	ЭлементОтбора.Использование = Истина; 
	ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный; 
	ЭлементОтбора.ПравоеЗначение = Объект.Ссылка; 
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьДатуОтправки(Команда)
	ИзменитьДатуОтправкиСервер()
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьДатуОтправкиСервер()
	тЗаписьJSON = Новый ЗаписьJSON;
	тПараметрыJSON = Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Нет, " ", Истина);  
	тЗаписьJSON.УстановитьСтроку(тПараметрыJSON);   
	token = бит_ИнтеграцияПочтаРФ.ПолучитьТокенИлиКлюч("токен");
	Logkey = бит_ИнтеграцияПочтаРФ.ПолучитьТокенИлиКлюч("ключ");
	
	имяПартии = Объект.ИмяПартии;
	тЗапрос = имяПартии;
	
	
	//СтрокаЗапроса = "?query="+тЗапрос;
	
	ЗаписатьJSON(тЗаписьJSON, тЗапрос);
	Год = СтрЗаменить(Строка(Год(ТекущаяДата())),Символы.НПП,"");
	Месяц = Строка(Месяц(ТекущаяДата()));
	День = Строка(День(ТекущаяДата()));
	strJSON = тЗаписьJSON.Закрыть();
	Сервер = "otpravka-api.pochta.ru";      
	Ресурс = "/1.0/batch/";
	
	HTTPЗапрос = Новый HTTPЗапрос;
	
	HTTPЗапрос.АдресРесурса = Ресурс + тЗапрос + "/sending/"+Год+"/"+Месяц+"/"+День;
	
	ssl = Новый ЗащищенноеСоединениеOpenSSL;
	
	HTTP = Новый HTTPСоединение(Сервер,,,,,,ssl);   
	
	HTTPЗапрос.Заголовки.Вставить("Content-Type", "application/json;charset=UTF-8");
	
	HTTPЗапрос.Заголовки.Вставить("Authorization","AccessToken "+ token);
	
	HTTPЗапрос.Заголовки.Вставить("X-User-Authorization","Basic "+ Logkey );
	
	ОтветHTTP = HTTP.ОтправитьДляОбработки(HTTPЗапрос);
	СтрокаОтвет  = ОтветHTTP.ПолучитьТелоКакСтроку();
	Если Стрнайти(СтрокаОтвет, "error",,,) <> 0 Тогда
		Сообщить(СтрокаОтвет);
	Иначе
		Сообщить("Дата отправки изменена на " + ТекущаяДата());
	КонецЕсли;	
КонецПроцедуры	


&НаКлиенте
Процедура ЗарегистрироватьВОПС(Команда)
	ЗарегистрироватьВОПСНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗарегистрироватьВОПСНаСервере()
	тЗаписьJSON = Новый ЗаписьJSON;
	тПараметрыJSON = Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Нет, " ", Истина);  
	тЗаписьJSON.УстановитьСтроку(тПараметрыJSON);   
	token = бит_ИнтеграцияПочтаРФ.ПолучитьТокенИлиКлюч("токен");
	Logkey = бит_ИнтеграцияПочтаРФ.ПолучитьТокенИлиКлюч("ключ");
	
	ИмяПартии = Объект.ИмяПартии; 
	тЗапрос = Объект.ИмяПартии;
	
	//СтрокаЗапроса = "?query="+тЗапрос;
	
	ЗаписатьJSON(тЗаписьJSON, тЗапрос);
	strJSON = тЗаписьJSON.Закрыть();
	Сервер = "otpravka-api.pochta.ru";      
	Ресурс = "/1.0/batch/";
	
	HTTPЗапрос = Новый HTTPЗапрос;
	
	HTTPЗапрос.АдресРесурса = Ресурс + тЗапрос + "/checkin";  
	
	Если Константы.ПочтаРФОнлайнБаланс.Получить() Тогда 
		HTTPЗапрос.АдресРесурса = HTTPЗапрос.АдресРесурса +"?useOnlineBalance=true";
	КонецЕсли;
	
	ssl = Новый ЗащищенноеСоединениеOpenSSL;
	
	HTTP = Новый HTTPСоединение(Сервер,,,,,,ssl);   
	
	HTTPЗапрос.Заголовки.Вставить("Content-Type", "application/json;charset=UTF-8");
	
	HTTPЗапрос.Заголовки.Вставить("Authorization","AccessToken "+ token);
	
	HTTPЗапрос.Заголовки.Вставить("X-User-Authorization","Basic "+ Logkey );
	ИмяВыходногоФайла = ПолучитьИмяВременногоФайла();
	
	Попытка
		СчетчикПопыток = 1;
		Пока СчетчикПопыток<20 Цикл
			Попытка
				ОтветHTTP = HTTP.ОтправитьДляОбработки(HTTPЗапрос,ИмяВыходногоФайла);
				Прервать;
			Исключение
				Сообщить("Попытка получения ответа: "+СчетчикПопыток);
				СчетчикПопыток  = СчетчикПопыток+1;
			КонецПопытки;	
		КонецЦикла;		
	Исключение
		СтрокаСообщения = ОписаниеОшибки();
		Сообщить(СтрокаСообщения, СтатусСообщения.Важное);
		УдалитьФайлы(имяВыходногоФайла);
	КонецПопытки;	
	
	ЧтениеJSON = Новый ЧтениеJSON;
	
	ЧтениеJSON.ОткрытьФайл(имяВыходногоФайла);
	
	СтруктураJSON = ПрочитатьJSON(ЧтениеJSON,Истина);
	Для каждого элемент из СтруктураJSON цикл
		Если элемент.Ключ = "error-code" Тогда
			Если Элемент.Значение = "PAST_DUE_DATE" Тогда
				Сообщить("Партия № "+имяПартии+" устарела. Поробнее: " + элемент.Значение + ". Измените дату отправки партии.");
			КонецЕсли;
		КонецЕсли;
		Если элемент.Ключ = "f103-sent" Тогда
			Если Элемент.Значение = Ложь Тогда
				Сообщить("Ошибка регистрации партии № "+имяПартии+" по причине: " + элемент.Значение);
			Иначе
				Сообщить("Партия № "+имяПартии+" успешно зарегистрирована.");
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	ЧтениеJSON.Закрыть();
	
	//удаляем файл после использования
	УдалитьФайлы(имяВыходногоФайла);

КонецПроцедуры


&НаКлиенте
Процедура ПолучитьФорму103(Команда)
	ДД_Файла = "";
	Получена103 = Ложь;
	ПолучитьФорму103Сервер(Объект.ИмяПартии,получена103,ДД_Файла);
	Если получена103 Тогда
		Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
		Если Диалог.Выбрать() Тогда
			ИмяКаталога = Диалог.Каталог;
		КонецЕсли;
		ИмяФайла = "\Форма103Партия_"+ Объект.ИмяПартии;
		Форма103ПДФ = Новый Файл(ИмяКаталога + ИмяФайла+".pdf");
		ДД_Файла.Записать(Форма103ПДФ.ПолноеИмя);
		ПрикрепитьФорму103(Объект.Ссылка,Форма103ПДФ.ПолноеИмя,ДД_Файла);
		ИзменитьСтатусШПИ(Объект.Ссылка);
		Сообщить("Для партии № " + Объект.ИмяПартии + " получен файл формы 103");
	иначе
		Сообщить ("Произошла ошибка получения файла формы 103 для партии № "+Объект.ИмяПартии);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПолучитьФорму103Сервер(ИмяПартии, Получено, ДД_Ответ)
	тЗаписьJSON = Новый ЗаписьJSON;
	тПараметрыJSON = Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Нет, " ", Истина);  
	тЗаписьJSON.УстановитьСтроку(тПараметрыJSON);
	
	token = бит_ИнтеграцияПочтаРФ.ПолучитьТокенИлиКлюч("токен");
	Logkey = бит_ИнтеграцияПочтаРФ.ПолучитьТокенИлиКлюч("ключ");
	
	тЗапрос = имяПартии;
	//СтрокаЗапроса = "?query="+тЗапрос;
	
	ЗаписатьJSON(тЗаписьJSON, тЗапрос);
	
	strJSON = тЗаписьJSON.Закрыть();
	Сервер = "otpravka-api.pochta.ru";      
	Ресурс = "/1.0/forms/";
	
	HTTPЗапрос = Новый HTTPЗапрос;
	
	HTTPЗапрос.АдресРесурса = Ресурс + тЗапрос + "/f103pdf";
	
	ssl = Новый ЗащищенноеСоединениеOpenSSL;
	
	HTTP = Новый HTTPСоединение(Сервер,,,,,,ssl);   
	
	ИмяВыходногоФайла = ПолучитьИмяВременногоФайла();
	
	HTTPЗапрос.Заголовки.Вставить("Content-Type", "application/json;charset=UTF-8");
	
	HTTPЗапрос.Заголовки.Вставить("Authorization","AccessToken "+ token);
	
	HTTPЗапрос.Заголовки.Вставить("X-User-Authorization","Basic "+ Logkey );
	
	ИмяФайла = "Форма103Партия_"+ тЗапрос;
	
	Попытка
		СчетчикПопыток = 1;
		Пока СчетчикПопыток<20 Цикл
			Попытка
				ОтветHTTP = HTTP.Получить(HTTPЗапрос);
				Прервать;
			Исключение
				Сообщить("Попытка получения ответа: "+СчетчикПопыток);
				СчетчикПопыток = СчетчикПопыток+1;
			КонецПопытки;	
		КонецЦикла;		
	Исключение
		СтрокаСообщения = ОписаниеОшибки();
		Сообщить(СтрокаСообщения, СтатусСообщения.Важное);
		УдалитьФайлы(имяВыходногоФайла);
		Возврат;
	КонецПопытки;	
	
	Если ОтветHTTP.КодСостояния = 400 Тогда
		СтрокаОтвет =  ОтветHTTP.ПолучитьТелоКакСтроку();
		Сообщить(СтрокаОтвет);
		Получено = Ложь;
	ИначеЕсли ОтветHTTP.КодСостояния = 200 Тогда
		ДД_Ответ = ОтветHTTP.ПолучитьТелоКакДвоичныеДанные();
		Получено = Истина;
	КонецЕсли;
	Если Получено = Ложь Тогда
		Возврат;
	КонецЕсли;	
КонецПроцедуры


&НаСервере
Процедура ИзменитьСтатусШПИ(ДокументПартия)
	ДокИзменениеСтатуса = Документы.ИзменениеСтатусаШПИРегистрация.СоздатьДокумент();
	ДокИзменениеСтатуса.Дата = ТекущаяДата();
	ДокИзменениеСтатуса.Организация = параметрыСеанса.ТекущийПользователь.Организация;
	ДокИзменениеСтатуса.Автор = параметрыСеанса.ТекущийПользователь;
	
	Для Каждого Корр из ДокументПартия.СписокИсходящейКорреспонденции Цикл
		Нстрока = ДокИзменениеСтатуса.ШПИ.Добавить();
		Нстрока.ШПИ = Корр.ШПИ;
		НСтрока.Корреспонденция = Корр.ИсходящаяКорреспонденция;
		НСтрока.ИдентификаторПочты = Корр.ИдентификаторПочты;
		НСтрока.Статус = Перечисления.СтатусыШПИРегистрация.ПолученаФорма103;
	КонецЦикла;
	ДокИзменениеСтатуса.Записать(РежимЗаписиДокумента.Проведение);	
КонецПроцедуры	

&НаСервере
Процедура ПрикрепитьФорму103(ДокПартия,Файл103Путь,ДД)
	
	Файл103 = Новый Файл(Файл103Путь);
	Если Файл103.Существует() тогда
		Документ = Документы.ПрикрепитьФайлы.СоздатьДокумент();
		Документ.Организация = ПараметрыСеанса.ТекущийПользователь.Организация;
		Документ.Автор = ПараметрыСеанса.ТекущийПользователь;
		Документ.Объект = ДокПартия;
		Документ.Дата = ТекущаяДата();
		Документ.Комментарий = "Автоматическое прикрепление формы 103";
		Стр = Документ.Файлы.Добавить();
		Стр.Загружен = Ложь;  
		Стр.Путь = Файл103.ПолноеИмя;
		Стр.УИД = Новый УникальныйИдентификатор();
		Стр.ТипФайла = Справочники.ТипыПрикрепляемыхФайлов.Форма103;
		Стр.Размер = ОкруглитьРазмерФайла(Строка(Файл103.Размер()));
		МассивДанных = Новый Массив;
		МассивДанных.Добавить(ДД);
		Документ.ПоместитьВХранилище(МассивДанных);
		Документ.Записать(РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Неоперативный);
	Иначе
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ОкруглитьРазмерФайла(СтрРазмер)
	Размер = Число(СтрРазмер);
	Если Размер > 1024 Тогда
		Размер = Окр(Размер/1024, 0);
		Стр = Строка(Размер) + " Кб";
	КонецЕсли;
	Если Размер > 1024 Тогда
		Размер = Окр(Размер/1024, 1);
		Стр = Строка(Размер) + " Мб";
	КонецЕсли;	
	Возврат Стр;		
КонецФункции
