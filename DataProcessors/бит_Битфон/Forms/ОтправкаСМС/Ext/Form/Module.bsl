
&НаКлиенте
Функция ВыполнитьОтправкуСМСНаСервер(списокНомеров)
	Если НЕ ЗначениеЗаполнено(списокНомеров) Тогда
		бит_ТелефонияКлиент.ВывестиСообщение("Не задан список номеров для отправки SMS");
		Возврат Ложь;
	КонецЕсли;
	
	//бит_ТелефонияКлиент.ВывестиСообщение("Начинается отправка SMS сообщений...");
	//бит_СМС_Коммуникатор.УстановитьИмяПользователяИПароль(СМСЛогин, СМСПароль);
	//Результат = бит_СМС_Коммуникатор.Подключиться();
	//Если Результат < 0 Тогда
	//	бит_ТелефонияКлиент.ВывестиСообщение("Не смогли подключиться к серверу SMS4B для отправки сообщений...");
	//	бит_ТелефонияКлиент.ВывестиСообщение(бит_СМС_Коммуникатор.ОписаниеОшибокВебСервиса(Результат));
	//	Возврат Ложь;
	//КонецЕсли;
	
	СписокСообщений = Новый Массив;
	
	Для Каждого НомерСпискаРассылки Из списокНомеров Цикл
		GUID = Строка(Новый УникальныйИдентификатор);
		//
		Структура = Новый Структура;
		Структура.Вставить("GUID",    GUID);
		Структура.Вставить("НомерПолучателя",
			"8" + бит_ТелефонияКлиентСервер.СократитьНомерДляПоиска(бит_ТелефонияКлиентСервер.ОчиститьНомерТолькоЦифры(НомерСпискаРассылки)));
		Структура.Вставить("ТекстСообщения",  ТекстСМС);
		Структура.Вставить("КодОшибки", 0);
		//
		СписокСообщений.Добавить(Структура);
	КонецЦикла;
	
	
	Актуальность = ТекущаяДата() + (24 * 3600);
	//Результат = бит_СМС_Коммуникатор.ОтправитьСообщения(СписокСообщений, Отправитель, ТекстСМС, ТекущаяДата(), Актуальность);
	
	// Боевкин
	SMS4B.ОтправитьСписокСМС(СписокСообщений);
	
	//Если Результат < 0 Тогда
	//	бит_ТелефонияКлиент.ВывестиСообщение("Отправка SMS сообщений НЕ выполнена ...");
	//	бит_ТелефонияКлиент.ВывестиСообщение(бит_СМС_Коммуникатор.ОписаниеОшибокВебСервиса(Результат));
	//	Результат = бит_СМС_Коммуникатор.Отключиться();
	//	Если Результат = Неопределено Тогда
	//		бит_ТелефонияКлиент.ВывестиСообщение("Не выполнено отключение от сервера!");
	//	КонецЕсли;
	// 	Возврат Ложь;
	//КонецЕсли;
	//
	//бит_ТелефонияКлиент.ВывестиСообщение("Отправка SMS сообщений успешно завершена ...");
	//
	//Результат = бит_СМС_Коммуникатор.Отключиться();
	//Если Результат = Неопределено Тогда
	//	бит_ТелефонияКлиент.ВывестиСообщение("Не выполнено отключение от сервера!");
	//КонецЕсли;
	
	Возврат Истина;
КонецФункции

&НаКлиенте
Процедура ПолучательНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	формаВыбораТелефона = ПолучитьФорму("Обработка.бит_Битфон.Форма.ФормаВыбораНомера", , ЭтаФорма);
	бит_ТелефонияКлиентПереопределяемый.ОткрытьФормуСБлокировкойВладельца(формаВыбораТелефона);
КонецПроцедуры

&НаСервере
Функция ПолучитьСписокНомеровРассылки(списокСсылка)
	номера = Новый СписокЗначений;
	Если ЗначениеЗаполнено(списокСсылка) Тогда
		Для Каждого строкаСписка Из списокСсылка.Список Цикл
			стрНомер = строкаСписка.НомерТелефона;
			стрНомер = бит_ТелефонияКлиентСервер.ОчиститьНомерТолькоЦифры(стрНомер);
			стрНомер = бит_ТелефонияКлиентСервер.СократитьНомерДляПоиска(стрНомер);
			номера.Добавить(стрНомер);
		КонецЦикла;
	КонецЕсли;
	Возврат номера;
КонецФункции

&НаКлиенте
Процедура Отправить(Команда)
	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	//
	Если ВидПолучателя = 0 Тогда
		Если ЗначениеЗаполнено(НомерПолучателя) Тогда
			номера = Новый СписокЗначений;
			номера.Добавить(НомерПолучателя);
			Если ВыполнитьОтправкуСМСНаСервер(номера) Тогда
				//Закрыть("ок");
			КонецЕсли;
		Иначе
			бит_ТелефонияКлиентПереопределяемый.ПоказПредупреждение("Не задан номер получателя");
		КонецЕсли;
	ИначеЕсли ВидПолучателя = 1 Тогда
		Если ЗначениеЗаполнено(СписокРассылки) Тогда
			номера = ПолучитьСписокНомеровРассылки(СписокРассылки);
			Если номера.Количество() = 0 Тогда
				бит_ТелефонияКлиентПереопределяемый.ПоказПредупреждение("Список рассылки SMS пуст");
			Иначе
				Если ВыполнитьОтправкуСМСНаСервер(номера) Тогда
					//Закрыть("ок");
				КонецЕсли;
			КонецЕсли;
		Иначе
			бит_ТелефонияКлиентПереопределяемый.ПоказПредупреждение("Не задан список рассылки SMS");
		КонецЕсли;
	КонецЕсли;
	Предупреждение("Выполняется отправка сообщения...",1,"Отправка СМС");
	Оповестить("ШаблонИзмененСМС");
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДоступность()
	Если ВидПолучателя = 0 Тогда
		Элементы.НомерПолучателя.Доступность = Истина;
		Элементы.СписокРассылки.Доступность = Ложь;
	ИначеЕсли ВидПолучателя = 1 Тогда
		Элементы.НомерПолучателя.Доступность = Ложь;
		Элементы.СписокРассылки.Доступность = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВидПолучателяПриИзменении(Элемент)
	ОбновитьДоступность();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ВидПолучателя = 0;
	ОбновитьДоступность();
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		стрНомер = бит_ТелефонияКлиентСервер.ОчиститьНомерТолькоЦифры(ВыбранноеЗначение);
		НомерПолучателя = бит_ТелефонияКлиентСервер.СократитьНомерДляПоиска(стрНомер);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ШаблоныСМС(Команда)
	ФормаСпискаШаблонов = ПолучитьФорму("Справочник.ШаблоныТекстаДляАвтоинформирования.Форма.ФормаСписка");
	ФормаСпискаШаблонов.СкрытоеПолеНомерДО = ЭтаФорма.Договор;
	ФормаСпискаШаблонов.Открыть();
КонецПроцедуры