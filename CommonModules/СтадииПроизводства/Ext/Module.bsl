
Процедура ДобавитьСтадииПроизводства(ЭтаФорма) Экспорт
	Элементы = ЭтаФорма.Элементы;
	Объект = ЭтаФорма.Объект;	
	
	ТекстЗапросаМероприятия = "ВЫБРАТЬ
	                          |	Мероприятие.Ссылка,
	                          |	Мероприятие.ВерсияДанных,
	                          |	Мероприятие.ПометкаУдаления,
	                          |	Мероприятие.Номер,
	                          |	Мероприятие.Дата,
	                          |	Мероприятие.БизнесПроцесс,
	                          |	Мероприятие.ТочкаМаршрута,
	                          |	Мероприятие.Наименование,
	                          |	Мероприятие.Выполнена,
	                          |	Мероприятие.Организация,
	                          |	Мероприятие.Подразделение,
	                          |	Мероприятие.Объект,
	                          |	ВЫРАЗИТЬ(Мероприятие.Объект.Ссылка КАК Справочник.Контрагенты) КАК Контрагенты,
	                          |	ВЫРАЗИТЬ(Мероприятие.Объект.Ссылка КАК Справочник.ДоговорыКонтрагентов) КАК ДоговорыКонтрагентов,
	                          |	ВЫРАЗИТЬ(Мероприятие.Объект.Ссылка КАК Справочник.УслугиПоДоговору) КАК УслугиПоДоговору,
	                          |	ВЫРАЗИТЬ(Мероприятие.Объект.Ссылка КАК Справочник.ДолговыеОбязательства) КАК ДолговыеОбязательства,
	                          |	ВЫРАЗИТЬ(Мероприятие.Объект.Ссылка КАК Справочник.ИсполнительныеДокументы) КАК ИсполнительныеДокументы,
	                          |	Мероприятие.Ответственный,
	                          |	Мероприятие.Исполнитель,
	                          |	Мероприятие.Автор,
	                          |	Мероприятие.Комментарий,
	                          |	Мероприятие.ТипМероприятия,
	                          |	ВЫБОР
	                          |		КОГДА Мероприятие.Выполнена
	                          |			ТОГДА Мероприятие.Результат
	                          |		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.РезультатыМероприятий.ПустаяСсылка)
	                          |	КОНЕЦ КАК Результат,
	                          |	Мероприятие.КонтактноеЛицо,
	                          |	Мероприятие.ПланируемаяДата,
	                          |	Мероприятие.ПланируемоеВремя,
	                          |	Мероприятие.ПланируемоеВремяКонца,
	                          |	Мероприятие.ФактическаяДата,
	                          |	Мероприятие.СвязанныйДокумент,
	                          |	Мероприятие.Схема,
	                          |	Мероприятие.Точка,
	                          |	Мероприятие.ОбъектРодитель,
	                          |	Мероприятие.Контакт,
	                          |	Мероприятие.СледующееМероприятие,
	                          |	Мероприятие.ПривязкаПоВремени,
	                          |	Мероприятие.Оповещение,
	                          |	Мероприятие.СрокОповещения,
	                          |	Мероприятие.ХранилищеСостояниеБП,
	                          |	Мероприятие.КомментарийИзменен,
	                          |	Мероприятие.ДатаВыполнения,
	                          |	Мероприятие.МоментВремени
	                          |ИЗ
	                          |	Задача.Мероприятие КАК Мероприятие
	                          |ГДЕ
	                          |	НЕ Мероприятие.ПометкаУдаления
	                          |	И (Мероприятие.БизнесПроцесс = ЗНАЧЕНИЕ(БизнесПроцесс.БизнесПроцессы.ПустаяСсылка)
	                          |			ИЛИ НЕ Мероприятие.БизнесПроцесс.ПометкаУдаления)";
	
	ТекстЗапросаДокументы = "ВЫБРАТЬ
	                        |	РегистрСведенийПрикрепляемыеФайлы.Регистратор,
	                        |	РегистрСведенийПрикрепляемыеФайлы.НомерСтроки,
	                        |	ВложенныйЗапрос2.Объект,
	                        |	РегистрСведенийПрикрепляемыеФайлы.Объект КАК ОбъектИсходный,
	                        |	РегистрСведенийПрикрепляемыеФайлы.ТипФайла,
	                        |	РегистрСведенийПрикрепляемыеФайлы.ИмяФайла,
	                        |	РегистрСведенийПрикрепляемыеФайлы.Период,
	                        |	РегистрСведенийПрикрепляемыеФайлы.РазмерФайла
	                        |ИЗ
	                        |	РегистрСведений.ПрикрепляемыеФайлы КАК РегистрСведенийПрикрепляемыеФайлы
	                        |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	                        |			МАКСИМУМ(ПрикрепляемыеФайлы.Период) КАК Период,
	                        |			ПрикрепляемыеФайлы.ТипФайла КАК ТипФайла,
	                        |			ПрикрепляемыеФайлы.Объект КАК Объект
	                        |		ИЗ
	                        |			РегистрСведений.ПрикрепляемыеФайлы КАК ПрикрепляемыеФайлы
	                        |		ГДЕ
	                        |			ПрикрепляемыеФайлы.ТипФайла.АктуаленПоследний
	                        |		
	                        |		СГРУППИРОВАТЬ ПО
	                        |			ПрикрепляемыеФайлы.Объект,
	                        |			ПрикрепляемыеФайлы.ТипФайла) КАК ВложенныйЗапрос
	                        |		ПО (РегистрСведенийПрикрепляемыеФайлы.ТипФайла.АктуаленПоследний)
	                        |			И РегистрСведенийПрикрепляемыеФайлы.ТипФайла = ВложенныйЗапрос.ТипФайла
	                        |			И РегистрСведенийПрикрепляемыеФайлы.Период = ВложенныйЗапрос.Период
	                        |			И РегистрСведенийПрикрепляемыеФайлы.Объект = ВложенныйЗапрос.Объект
	                        |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	                        |			ПрикрепляемыеФайлы.Объект КАК Объект
	                        |		ИЗ
	                        |			РегистрСведений.ПрикрепляемыеФайлы КАК ПрикрепляемыеФайлы
	                        |		
	                        |		СГРУППИРОВАТЬ ПО
	                        |			ПрикрепляемыеФайлы.Объект) КАК ВложенныйЗапрос2
	                        |		ПО (ВложенныйЗапрос2.Объект В (РегистрСведенийПрикрепляемыеФайлы.Объект, РегистрСведенийПрикрепляемыеФайлы.Объект.Владелец))
	                        |ГДЕ
	                        |	(НЕ РегистрСведенийПрикрепляемыеФайлы.ТипФайла.АктуаленПоследний
	                        |			ИЛИ НЕ ВложенныйЗапрос.ТипФайла ЕСТЬ NULL 
	                        |			ИЛИ РегистрСведенийПрикрепляемыеФайлы.ТипФайла = ЗНАЧЕНИЕ(Справочник.ТипыПрикрепляемыхФайлов.ПустаяСсылка))";
	
	ТекстЗапросаБизнесПроцессы = "ВЫБРАТЬ
	                             |	БизнесПроцессы.Ссылка,
	                             |	БизнесПроцессы.Схема
	                             |ИЗ
	                             |	БизнесПроцесс.БизнесПроцессы КАК БизнесПроцессы
	                             |ГДЕ
	                             |	БизнесПроцессы.ПометкаУдаления = ЛОЖЬ";
	
	
	ТипыРеквизита = Новый Массив;
	ТипыРеквизита.Добавить(Тип("ДинамическийСписок"));
	//ТипыРеквизита.Добавить(Тип("Строка")); 
	ОписаниеТиповДляРеквизита = Новый ОписаниеТипов(ТипыРеквизита);	
		
	ТипыРеквизита = Новый Массив;
	ТипыРеквизита.Добавить(Тип("Строка")); 
	ОписаниеТиповДляИстории = Новый ОписаниеТипов(ТипыРеквизита);		
	
	ЗапросСтадии = Новый Запрос("ВЫБРАТЬ
	                            |	СтадииПроизводства.Ссылка
	                            |ИЗ
	                            |	Справочник.СтадииПроизводства КАК СтадииПроизводства
	                            |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Пользователи.ГруппыПользователей КАК ПользователиГруппыПользователей
	                            |		ПО СтадииПроизводства.ГруппаПользователей = ПользователиГруппыПользователей.Группа
	                            |ГДЕ
	                            |	СтадииПроизводства.ПометкаУдаления = ЛОЖЬ
	                            |	И СтадииПроизводства.Используется = ИСТИНА
	                            |	И ПользователиГруппыПользователей.Ссылка = &ТекущийПользователь
	                            |
	                            |УПОРЯДОЧИТЬ ПО
	                            |	СтадииПроизводства.Порядок");
	ЗапросСтадии.УстановитьПараметр("ТекущийПользователь", ПараметрыСеанса.ТекущийПользователь);							
	РезультатСтадии = ЗапросСтадии.Выполнить().Выбрать();
	
	Пока РезультатСтадии.Следующий() Цикл
		
		Если РезультатСтадии.Ссылка = Справочники.СтадииПроизводства.ИсковоеПроизводство Тогда
			ГруппаСтраница = ЭтаФорма.Элементы.Добавить("ГруппаСтадияИсковоеПроизводство", Тип("ГруппаФормы"), ЭтаФорма.Элементы.ГруппаСтадииПроизводства);
			ГруппаСтраница.Вид = ВидГруппыФормы.Страница;
			ГруппаСтраница.Заголовок = "Исковое производство";
			ЗаполнитьИсковоеПроизводство(ЭтаФорма);
			
			Продолжить;
		ИначеЕсли РезультатСтадии.Ссылка = Справочники.СтадииПроизводства.ИсполнительноеПроизводство Тогда
			ГруппаСтраница = ЭтаФорма.Элементы.Добавить("ГруппаСтадияИсполнительноеПроизводство", Тип("ГруппаФормы"), ЭтаФорма.Элементы.ГруппаСтадииПроизводства);
			ГруппаСтраница.Вид = ВидГруппыФормы.Страница;
			ГруппаСтраница.Заголовок = "Исполнительное производство";
			ЗаполнитьИсполнительноеПроизводство(ЭтаФорма, ЭтаФорма.Объект.Ссылка);
			Продолжить;
		КонецЕсли;
		
		НомерСтадии = СтрЗаменить(РезультатСтадии.Ссылка.Код, " ", "_");
		ГруппаСтраница = ЭтаФорма.Элементы.Добавить("ГруппаСтадия" + НомерСтадии, Тип("ГруппаФормы"), ЭтаФорма.Элементы.ГруппаСтадииПроизводства);
		ГруппаСтраница.Вид = ВидГруппыФормы.Страница;
		ГруппаСтраница.Заголовок = РезультатСтадии.Ссылка.Наименование;
		
		ГруппаВкладки = ЭтаФорма.Элементы.Добавить("ГруппаВкладки" + НомерСтадии, Тип("ГруппаФормы"), ГруппаСтраница);
		ГруппаВкладки.Вид = ВидГруппыФормы.Страницы;
		
		//ГруппаДанные
		ГруппаВкладка = ЭтаФорма.Элементы.Добавить("ГруппаВкладкаДанные" + НомерСтадии, Тип("ГруппаФормы"), ГруппаВкладки);
		ГруппаВкладка.Вид = ВидГруппыФормы.Страница;
		ГруппаВкладка.Заголовок = "Данные";
		
		ГруппаОбычная = ЭтаФорма.Элементы.Добавить("ГруппаОбычнаяДанные" + НомерСтадии, Тип("ГруппаФормы"), ГруппаВкладка);
		ГруппаОбычная.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		ГруппаОбычная.Отображение = ОтображениеОбычнойГруппы.ОбычноеВыделение;
		ГруппаОбычная.ОтображатьЗаголовок = Ложь;
		
		//ГруппаИстория
		Если РезультатСтадии.Ссылка.ОтображатьИсторию Тогда
			ГруппаВкладка = ЭтаФорма.Элементы.Добавить("ГруппаВкладкаИстория" + НомерСтадии, Тип("ГруппаФормы"), ГруппаВкладки);
			ГруппаВкладка.Вид = ВидГруппыФормы.Страница;
			ГруппаВкладка.Заголовок = "История";
			
			ГруппаОбычная = ЭтаФорма.Элементы.Добавить("ГруппаОбычнаяИстория" + НомерСтадии, Тип("ГруппаФормы"), ГруппаВкладка);
			ГруппаОбычная.Вид = ВидГруппыФормы.ОбычнаяГруппа;
			ГруппаОбычная.Отображение = ОтображениеОбычнойГруппы.ОбычноеВыделение;
			ГруппаОбычная.ОтображатьЗаголовок = Ложь;
			
			ЗапросИстория = Новый Запрос("ВЫБРАТЬ
			                             |	СтадииПроизводстваТипыМероприятий.Ссылка,
			                             |	СтадииПроизводстваТипыМероприятий.НомерСтроки,
			                             |	СтадииПроизводстваТипыМероприятий.Используется,
			                             |	СтадииПроизводстваТипыМероприятий.ТипМероприятия,
			                             |	СтадииПроизводстваТипыМероприятий.Заголовок
			                             |ПОМЕСТИТЬ ТипыМероприятий
			                             |ИЗ
			                             |	Справочник.СтадииПроизводства.ТипыМероприятий КАК СтадииПроизводстваТипыМероприятий
			                             |ГДЕ
			                             |	СтадииПроизводстваТипыМероприятий.Используется = ИСТИНА
			                             |	И СтадииПроизводстваТипыМероприятий.Ссылка = &Ссылка
			                             |;
			                             |
			                             |////////////////////////////////////////////////////////////////////////////////
			                             |ВЫБРАТЬ
			                             |	Мероприятие.Ссылка,
			                             |	Мероприятие.ТипМероприятия,
			                             |	Мероприятие.Результат,
			                             |	Мероприятие.ФактическаяДата КАК ФактическаяДата,
			                             |	Мероприятие.Комментарий
			                             |ИЗ
			                             |	Задача.Мероприятие КАК Мероприятие
			                             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТипыМероприятий КАК ТипыМероприятий
			                             |		ПО Мероприятие.ТипМероприятия = ТипыМероприятий.ТипМероприятия
			                             |ГДЕ
			                             |	Мероприятие.Объект = &Объект
			                             |	И Мероприятие.ПометкаУдаления = ЛОЖЬ
			                             |	И Мероприятие.Выполнена = ИСТИНА
			                             |
			                             |УПОРЯДОЧИТЬ ПО
			                             |	ФактическаяДата");
			ЗапросИстория.УстановитьПараметр("Ссылка", РезультатСтадии.Ссылка);	
			ЗапросИстория.УстановитьПараметр("Объект", Объект.Ссылка);
			РезультатИстория = ЗапросИстория.Выполнить().Выбрать();
			
			История = "";
			Пока РезультатИстория.Следующий() Цикл
				История = История + Формат(РезультатИстория.ФактическаяДата, "ДФ=yyyy-MM-dd") + ". " + Символы.ПС + РезультатИстория.Комментарий;
				История = История + Символы.ПС;
				История = История + Символы.ПС;
			КонецЦикла;
			
			НовыйРеквизит = Новый РеквизитФормы("История_" + НомерСтадии,									// имя		
			ОписаниеТиповДляИстории,    																	// тип		
			,                                                                           					// путь		
			"История",                                 														// заголовок		
			Истина);                                                        								// сохраняемые данные
			
			ДобавляемыеРеквизиты = Новый Массив;
			ДобавляемыеРеквизиты.Добавить(НовыйРеквизит);
			ЭтаФорма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);	
						
			ЭтаФорма["История_" + НомерСтадии] = История;
		
					
			НовыйЭлемент = Элементы.Добавить("История" + НомерСтадии, Тип("ПолеФормы"), ГруппаВкладка);
			
			НовыйЭлемент.ПутьКДанным = "История_" + НомерСтадии;   
			НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
			НовыйЭлемент.Заголовок = "История";
			НовыйЭлемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
			НовыйЭлемент.МногострочныйРежим = Истина;
			
			НовыйЭлемент.ТолькоПросмотр = Истина;
			
			
		КонецЕсли;
		
		// Мероприятия
		
		
		ЗапросТипыМероприятий = Новый Запрос("ВЫБРАТЬ
		                                     |	СтадииПроизводстваТипыМероприятий.Ссылка,
		                                     |	СтадииПроизводстваТипыМероприятий.НомерСтроки,
		                                     |	СтадииПроизводстваТипыМероприятий.Используется,
		                                     |	СтадииПроизводстваТипыМероприятий.ТипМероприятия,
		                                     |	СтадииПроизводстваТипыМероприятий.Заголовок,
		                                     |	СтадииПроизводстваТипыМероприятий.Должник
		                                     |ИЗ
		                                     |	Справочник.СтадииПроизводства.ТипыМероприятий КАК СтадииПроизводстваТипыМероприятий
		                                     |ГДЕ
		                                     |	СтадииПроизводстваТипыМероприятий.Используется = ИСТИНА
		                                     |	И СтадииПроизводстваТипыМероприятий.Ссылка = &Ссылка");
		ЗапросТипыМероприятий.УстановитьПараметр("Ссылка", РезультатСтадии.Ссылка);	
		РезультатТипыМероприятий = ЗапросТипыМероприятий.Выполнить().Выбрать();
		
		Если Не РезультатСтадии.Ссылка.ГруппироватьМероприятия Тогда
			Пока РезультатТипыМероприятий.Следующий() Цикл
				КодМероприятия = СтрЗаменить(РезультатТипыМероприятий.ТипМероприятия.Код, " ", "_");
				НовыйРеквизит = Новый РеквизитФормы("СписокМероприятий_" + НомерСтадии + "_" + КодМероприятия,	// имя		
				ОписаниеТиповДляРеквизита,    																	// тип		
				,                                                                           					// путь		
				РезультатСтадии.Ссылка.Наименование,                                 							// заголовок		
				Истина);                                                        								// сохраняемые данные
				
				ГруппаВкладка = ЭтаФорма.Элементы.Добавить("ГруппаВкладка" + НомерСтадии + "_" + КодМероприятия, Тип("ГруппаФормы"), ГруппаВкладки);
				ГруппаВкладка.Вид = ВидГруппыФормы.Страница;
				ГруппаВкладка.Заголовок = РезультатТипыМероприятий.Заголовок;
				
				ДобавляемыеРеквизиты = Новый Массив;
				ДобавляемыеРеквизиты.Добавить(НовыйРеквизит);
				ЭтаФорма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);	
				
				ОтборСписка = Новый Структура("ТипМероприятия", РезультатТипыМероприятий.ТипМероприятия);
				Если Не РезультатТипыМероприятий.Должник Тогда
					ОтборСписка.Вставить("Объект", Объект.Ссылка);
				Иначе
					ОтборСписка.Вставить("Объект", Объект.Ссылка.Должник);
				КонецЕсли;
				
				РеквизитСписок = ЭтаФорма["СписокМероприятий_" + НомерСтадии + "_" + КодМероприятия];
				РеквизитСписок.ТекстЗапроса = ТекстЗапросаМероприятия;
				РеквизитСписок.ОсновнаяТаблица = "Задача.Мероприятие";  
				
				ЭлементОтбора = РеквизитСписок.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
				ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект");
				ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
				ЭлементОтбора.Использование = Истина;
				ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Авто;
				Если Не РезультатТипыМероприятий.Должник Тогда
					ЭлементОтбора.ПравоеЗначение = Объект.Ссылка;
				Иначе
					ЭлементОтбора.ПравоеЗначение = Объект.Ссылка.Должник;
				КонецЕсли;
				ЭлементОтбора = РеквизитСписок.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
				ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТипМероприятия");
				ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
				ЭлементОтбора.Использование = Истина;
				ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Авто;
				ЭлементОтбора.ПравоеЗначение = РезультатТипыМероприятий.ТипМероприятия;
				
				// Создать таблицу мероприятий на форме
				
				НовыйЭлемент = Элементы.Добавить("РеквизитСтадия" + НомерСтадии + "_" + КодМероприятия, Тип("ТаблицаФормы"), ГруппаВкладка);
				НовыйЭлемент.ПутьКДанным = "СписокМероприятий_" + НомерСтадии + "_" + КодМероприятия;   
				НовыйЭлемент.Заголовок = РезультатТипыМероприятий.Заголовок;
				
				// Создать колонки и связать их с данными.
				
				НоваяКолонкаТаблицы = Элементы.Добавить("Ссылка" + НомерСтадии + "_" + КодМероприятия, Тип("ПолеФормы"), НовыйЭлемент);
				НоваяКолонкаТаблицы.ПутьКДанным = "СписокМероприятий_" + НомерСтадии + "_" + КодМероприятия + ".Ссылка";
				
				НоваяКолонкаТаблицы = Элементы.Добавить("Результат" + НомерСтадии + "_" + КодМероприятия, Тип("ПолеФормы"), НовыйЭлемент);
				НоваяКолонкаТаблицы.ПутьКДанным = "СписокМероприятий_" + НомерСтадии + "_" + КодМероприятия + ".Результат";
				
			КонецЦикла;
			
		Иначе
			НовыйРеквизит = Новый РеквизитФормы("ПолныйСписокМероприятий_" + НомерСтадии,					// имя		
			ОписаниеТиповДляРеквизита,    																	// тип		
			,                                                                           					// путь		
			"Мероприятия",                                 													// заголовок		
			Истина);                                                        								// сохраняемые данные
			
			ГруппаВкладка = ЭтаФорма.Элементы.Добавить("ГруппаМероприятия" + НомерСтадии, Тип("ГруппаФормы"), ГруппаВкладки);
			ГруппаВкладка.Вид = ВидГруппыФормы.Страница;
			ГруппаВкладка.Заголовок = "Мероприятия";
			
			ДобавляемыеРеквизиты = Новый Массив;
			ДобавляемыеРеквизиты.Добавить(НовыйРеквизит);
			ЭтаФорма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);	
						
			РеквизитСписок = ЭтаФорма["ПолныйСписокМероприятий_" + НомерСтадии];
			РеквизитСписок.ТекстЗапроса = ТекстЗапросаМероприятия;
			РеквизитСписок.ОсновнаяТаблица = "Задача.Мероприятие";
			
			СписокТипов = Новый СписокЗначений;
			к = 0;
			Пока РезультатТипыМероприятий.Следующий() Цикл
				СписокТипов.Вставить(к, РезультатТипыМероприятий.ТипМероприятия,,,);
				к = к + 1;	
			КонецЦикла;
			
			ЭлементОтбора = РеквизитСписок.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект");
			ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
			ЭлементОтбора.Использование = Истина;
			ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Авто;
			ЭлементОтбора.ПравоеЗначение = Объект.Ссылка.Должник;	
			
			ЭлементОтбора = РеквизитСписок.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТипМероприятия");
			ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
			ЭлементОтбора.Использование = Истина;
			ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Авто;
			ЭлементОтбора.ПравоеЗначение = СписокТипов;			
			
			// Создать таблицу мероприятий на форме
			
			НовыйЭлемент = Элементы.Добавить("МероприятияСтадия" + НомерСтадии, Тип("ТаблицаФормы"), ГруппаВкладка);
			НовыйЭлемент.ПутьКДанным = "ПолныйСписокМероприятий_" + НомерСтадии;   
			НовыйЭлемент.Заголовок = "Мероприятия";
			
			// Создать колонки и связать их с данными.
			
			НоваяКолонкаТаблицы = Элементы.Добавить("Ссылка" + НомерСтадии, Тип("ПолеФормы"), НовыйЭлемент);
			НоваяКолонкаТаблицы.ПутьКДанным = "ПолныйСписокМероприятий_" + НомерСтадии + ".Ссылка";
			
			НоваяКолонкаТаблицы = Элементы.Добавить("Результат" + НомерСтадии, Тип("ПолеФормы"), НовыйЭлемент);
			НоваяКолонкаТаблицы.ПутьКДанным = "ПолныйСписокМероприятий_" + НомерСтадии + ".Результат";
			
		КонецЕсли;
		
		// Создаем таблицу прикрепленных файлов
		
		
		
		// Получаем список типов прикрепляемых файлов 
		ЗапросТипыФайлов = Новый Запрос("ВЫБРАТЬ
		                                |	СтадииПроизводстваТипыПрикрепляемыхФайлов.ТипФайла
		                                |ИЗ
		                                |	Справочник.СтадииПроизводства.ТипыПрикрепляемыхФайлов КАК СтадииПроизводстваТипыПрикрепляемыхФайлов
		                                |ГДЕ
		                                |	СтадииПроизводстваТипыПрикрепляемыхФайлов.Ссылка = &Ссылка");
										
		ЗапросТипыФайлов.УстановитьПараметр("Ссылка", РезультатСтадии.Ссылка);	
		Если ЗапросТипыФайлов.Выполнить().Выгрузить().Количество() > 0 Тогда
			СписокТипов = Новый СписокЗначений;
			
			СписокТипов.ЗагрузитьЗначения(ЗапросТипыФайлов.Выполнить().Выгрузить().ВыгрузитьКолонку("ТипФайла"));
			
			////////////////////////////////////////////////////////////////////////////////
			
			НовыйРеквизит = Новый РеквизитФормы("СписокДокументов_" + НомерСтадии,	// имя		
			ОписаниеТиповДляРеквизита,    											// тип		
			,																		// путь		
			"Документы",                              							    // заголовок		
			Истина);                                                        		// сохраняемые данные
			
			ГруппаВкладка = ЭтаФорма.Элементы.Добавить("ГруппаВкладкаДокументы" + НомерСтадии, Тип("ГруппаФормы"), ГруппаВкладки);
			ГруппаВкладка.Вид = ВидГруппыФормы.Страница;
			ГруппаВкладка.Заголовок = "Документы";
			
			ДобавляемыеРеквизиты = Новый Массив;
			ДобавляемыеРеквизиты.Добавить(НовыйРеквизит);
			ЭтаФорма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);	
			
			//ОтборСписка = Новый Структура("ТипМероприятия", РезультатТипыМероприятий.ТипМероприятия);
			//ОтборСписка.Вставить("Объект", Объект.Ссылка);
			
			РеквизитСписок = ЭтаФорма["СписокДокументов_" + НомерСтадии];
			РеквизитСписок.ТекстЗапроса = ТекстЗапросаДокументы;
			РеквизитСписок.ОсновнаяТаблица = "РегистрСведений.ПрикрепляемыеФайлы";  
			
			ЭлементОтбора = РеквизитСписок.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект");
			ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
			ЭлементОтбора.Использование = Истина;
			ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Авто;
			ЭлементОтбора.ПравоеЗначение = Объект.Ссылка;
			
			ЭлементОтбора = РеквизитСписок.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТипФайла");
			ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
			ЭлементОтбора.Использование = Истина;
			ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Авто;
			ЭлементОтбора.ПравоеЗначение = СписокТипов;			
			
			// Создать таблицу документов на форме
			
			НовыйЭлемент = Элементы.Добавить("ДокументСтадия" + НомерСтадии, Тип("ТаблицаФормы"), ГруппаВкладка);
			НовыйЭлемент.ПутьКДанным = "СписокДокументов_" + НомерСтадии;   
			НовыйЭлемент.Заголовок = "Документы";
			
			// Создать колонки и связать их с данными.
			
			НоваяКолонкаТаблицы = Элементы.Добавить("Регистратор" + НомерСтадии, Тип("ПолеФормы"), НовыйЭлемент);
			НоваяКолонкаТаблицы.ПутьКДанным = "СписокДокументов_" + НомерСтадии + ".Регистратор";
			
			НоваяКолонкаТаблицы = Элементы.Добавить("ИмяФайла" + НомерСтадии, Тип("ПолеФормы"), НовыйЭлемент);
			НоваяКолонкаТаблицы.ПутьКДанным = "СписокДокументов_" + НомерСтадии + ".ИмяФайла";
			
			НоваяКолонкаТаблицы = Элементы.Добавить("ТипФайла" + НомерСтадии, Тип("ПолеФормы"), НовыйЭлемент);
			НоваяКолонкаТаблицы.ПутьКДанным = "СписокДокументов_" + НомерСтадии + ".ТипФайла";		
			
			НоваяКоманда = ЭтаФорма.Команды.Добавить("ОткрытьФайлы_" + НомерСтадии);
			НоваяКоманда.Действие = "ОткрытьФайлы";
			
			НоваяКнопка = Элементы.Добавить("КомандаОткрытьФайлы_" + НомерСтадии, Тип("КнопкаФормы"), НовыйЭлемент.КоманднаяПанель);
			НоваяКнопка.ИмяКоманды = "ОткрытьФайлы_" + НомерСтадии;
			НоваяКнопка.Заголовок = "Открыть файлы";
			НоваяКнопка.Картинка = БиблиотекаКартинок.ОткрытьФайл;
			НоваяКнопка.Отображение = ОтображениеКнопки.КартинкаИТекст;
			
			
			НоваяКоманда = ЭтаФорма.Команды.Добавить("ПрикрепитьФайлы_" + НомерСтадии);
			НоваяКоманда.Действие = "ПрикрепитьФайлы";
			
			НоваяКнопка = Элементы.Добавить("КомандаПрикрепитьФайлы_" + НомерСтадии, Тип("КнопкаФормы"), НовыйЭлемент.КоманднаяПанель);
			НоваяКнопка.ИмяКоманды = "ПрикрепитьФайлы_" + НомерСтадии;
			НоваяКнопка.Заголовок = "Прикрепить файлы";
			НоваяКнопка.Картинка = БиблиотекаКартинок.ДобавитьЭлементСписка;
			НоваяКнопка.Отображение = ОтображениеКнопки.КартинкаИТекст;			
		КонецЕсли;
		
		
		// Создаем вкладки с бизнес-процессами
		
		ЗапросСхемыБизнесПроцессов = Новый Запрос("ВЫБРАТЬ
		                                          |	СтадииПроизводстваСхемы.Ссылка,
		                                          |	СтадииПроизводстваСхемы.НомерСтроки,
		                                          |	СтадииПроизводстваСхемы.Используется,
		                                          |	СтадииПроизводстваСхемы.Схема,
		                                          |	СтадииПроизводстваСхемы.Заголовок
		                                          |ИЗ
		                                          |	Справочник.СтадииПроизводства.Схемы КАК СтадииПроизводстваСхемы
		                                          |ГДЕ
		                                          |	СтадииПроизводстваСхемы.Используется = ИСТИНА
		                                          |	И СтадииПроизводстваСхемы.Ссылка = &Ссылка");
		ЗапросСхемыБизнесПроцессов.УстановитьПараметр("Ссылка", РезультатСтадии.Ссылка);	
		РезультатСхемыБизнесПроцессов = ЗапросСхемыБизнесПроцессов.Выполнить().Выбрать();
		
		Пока РезультатСхемыБизнесПроцессов.Следующий() Цикл
			КодБизнесПроцесса = СтрЗаменить(РезультатСхемыБизнесПроцессов.Схема.Код, " ", "_");
			НовыйРеквизит = Новый РеквизитФормы("СписокБизнесПроцессов_" + НомерСтадии + "_" + КодБизнесПроцесса,	// имя		
			ОписаниеТиповДляРеквизита,    																			// тип		
			,                                                                           							// путь		
			РезультатСтадии.Ссылка.Наименование,                                 									// заголовок		
			Истина);                                                        								// сохраняемые данные
			
			ГруппаВкладка = ЭтаФорма.Элементы.Добавить("ГруппаВкладка" + НомерСтадии + "_" + КодБизнесПроцесса, Тип("ГруппаФормы"), ГруппаВкладки);
			ГруппаВкладка.Вид = ВидГруппыФормы.Страница;
			ГруппаВкладка.Заголовок = РезультатСхемыБизнесПроцессов.Заголовок;
			
			ДобавляемыеРеквизиты = Новый Массив;
			ДобавляемыеРеквизиты.Добавить(НовыйРеквизит);
			ЭтаФорма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);	
						
			РеквизитСписок = ЭтаФорма["СписокБизнесПроцессов_" + НомерСтадии + "_" + КодБизнесПроцесса];
			РеквизитСписок.ТекстЗапроса = ТекстЗапросаБизнесПроцессы;
			РеквизитСписок.ОсновнаяТаблица = "БизнесПроцесс.БизнесПроцессы";  
			
			ЭлементОтбора = РеквизитСписок.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект");
			ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
			ЭлементОтбора.Использование = Истина;
			ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Авто;
			ЭлементОтбора.ПравоеЗначение = Объект.Ссылка;
			
			ЭлементОтбора = РеквизитСписок.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Схема");
			ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
			ЭлементОтбора.Использование = Истина;
			ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Авто;
			ЭлементОтбора.ПравоеЗначение = РезультатСхемыБизнесПроцессов.Схема;
			
			// Создать таблицу бизнес-процессов на форме
			
			НовыйЭлемент = Элементы.Добавить("РеквизитСтадия" + НомерСтадии + "_" + КодБизнесПроцесса, Тип("ТаблицаФормы"), ГруппаВкладка);
			НовыйЭлемент.ПутьКДанным = "СписокБизнесПроцессов_" + НомерСтадии + "_" + КодБизнесПроцесса;   
			НовыйЭлемент.Заголовок = РезультатСхемыБизнесПроцессов.Заголовок;
			
			// Создать колонки и связать их с данными.
			
			НоваяКолонкаТаблицы = Элементы.Добавить("Ссылка" + НомерСтадии + "_" + КодБизнесПроцесса, Тип("ПолеФормы"), НовыйЭлемент);
			НоваяКолонкаТаблицы.ПутьКДанным = "СписокБизнесПроцессов_" + НомерСтадии + "_" + КодБизнесПроцесса + ".Ссылка";
			
			НоваяКолонкаТаблицы = Элементы.Добавить("Схема" + НомерСтадии + "_" + КодБизнесПроцесса, Тип("ПолеФормы"), НовыйЭлемент);
			НоваяКолонкаТаблицы.ПутьКДанным = "СписокБизнесПроцессов_" + НомерСтадии + "_" + КодБизнесПроцесса + ".Схема";
			
		КонецЦикла;
				
		////ГруппаВкладка = ЭтаФорма.Элементы.Добавить("ГруппаВкладкаДанные" + НомерСтадии, Тип("ГруппаФормы"), ГруппаВкладки);
		////ГруппаВкладка.Вид = ВидГруппыФормы.Страница;
		////ГруппаВкладка.Заголовок = "Данные";
		////
		////ГруппаОбычная = ЭтаФорма.Элементы.Добавить("ГруппаОбычнаяДанные" + НомерСтадии, Тип("ГруппаФормы"), ГруппаВкладка);
		////ГруппаОбычная.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		////ГруппаОбычная.Отображение = ОтображениеОбычнойГруппы.Нет;
		////ГруппаОбычная.ОтображатьЗаголовок = Ложь;
		
		//ДобавитьДополнительныеРеквизиты(ЭтаФорма, РезультатСтадии.Ссылка, ГруппаОбычная);
	КонецЦикла;
КонецПроцедуры

// Используется только в не используемой функции
Процедура ЗаполнитьИсковоеПроизводство(ЭтаФорма) Экспорт
	
	ЭлементФормы = ЭтаФорма.Элементы.Найти("ГруппаСтраницыИсковоеПроизводство");
	Если ЭлементФормы <> Неопределено Тогда
	
		ЭтаФорма.Элементы.Удалить(ЭлементФормы);
	
	КонецЕсли;
	//Попытка
	//	ЭтаФорма.Элементы.Удалить(ЭтаФорма.Элементы.ГруппаСтраницыИсковоеПроизводство);
	//Исключение
	//	
	//КонецПопытки;
	МассивРеквизитов = ЭтаФорма.ПолучитьРеквизиты();
	МассивДляУдаления = Новый Массив;
	Для Каждого Реквизит Из МассивРеквизитов Цикл
		Если СтрНайти(Реквизит.Имя, "Реквизит_Иск_") Тогда
			МассивДляУдаления.Добавить(Реквизит.Имя);
		КонецЕсли;
	КонецЦикла;
	
	ЭтаФорма.ИзменитьРеквизиты(,МассивДляУдаления);
	
	ГруппаСтраницыИск = ЭтаФорма.Элементы.Добавить("ГруппаСтраницыИсковоеПроизводство", Тип("ГруппаФормы"), ЭтаФорма.Элементы.ГруппаСтадияИсковоеПроизводство);
	ГруппаСтраницыИск.Вид = ВидГруппыФормы.Страницы;

	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	СудебноеДело.Ссылка КАК Ссылка
	                      |ИЗ
	                      |	Документ.СудебноеДело КАК СудебноеДело
	                      |ГДЕ
	                      |	СудебноеДело.Проведен = ИСТИНА
	                      |	И СудебноеДело.Займ = &Займ
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	СудебноеДело.ДатаИска");
	Запрос.УстановитьПараметр("Займ", ЭтаФорма.Объект.Ссылка);

	Результат = Запрос.Выполнить().Выбрать();   
	к = 1;
	Пока Результат.Следующий() Цикл
		ГруппаСтраница = ЭтаФорма.Элементы.Добавить("ГруппаСудебная_" + к, Тип("ГруппаФормы"), ЭтаФорма.Элементы.ГруппаСтраницыИсковоеПроизводство);
	
		СудебноеДело = Результат.Ссылка;
		//СудебноеДело = Документы.СудебноеДело.СоздатьДокумент();
		Заголовок = "Судебное дело от ";
		Если СудебноеДело.ВидИска = Перечисления.ВидыИска.ВзысканиеПросроченнойЗадолженности Тогда
			Если СудебноеДело.ВидТребований = Перечисления.ВидыИсковыхТребований.ИсковоеЗаявление Тогда
				Заголовок = "Иск от "; // + Формат(СудебноеДело.ДатаИска, "ДФ=dd.MM.yyyy");
			ИначеЕсли СудебноеДело.ВидТребований = Перечисления.ВидыИсковыхТребований.СудебныйПриказ Тогда
				Заголовок = "Приказ от "; // + Формат(СудебноеДело.ДатаИска, "ДФ=dd.MM.yyyy");
			КонецЕсли;
		ИначеЕсли СудебноеДело.ВидИска = Перечисления.ВидыИска.ВзысканиеПроцентов395 Тогда
			Заголовок = "395 ГК от ";
		ИначеЕсли СудебноеДело.ВидИска = Перечисления.ВидыИска.Индексация208 Тогда
			Заголовок = "208 ГПК от ";
		КонецЕсли;
		Заголовок = Заголовок + Формат(СудебноеДело.ДатаИска, "ДФ=dd.MM.yyyy") + " г.";
		ГруппаСтраница.Вид = ВидГруппыФормы.Страница;
		ГруппаСтраница.РастягиватьПоГоризонтали = Истина;
		ГруппаСтраница.РастягиватьПоВертикали = Истина;
		ГруппаСтраница.Заголовок = Заголовок;

		
		МассивРеквизитов = Новый Массив;
		РеквизитИскСсылка = Новый РеквизитФормы("Реквизит_Иск_Ссылка_" + к, Новый ОписаниеТипов("ФорматированнаяСтрока"),, "Иск");
		МассивРеквизитов.Добавить(РеквизитИскСсылка);
		ЭтаФорма.ИзменитьРеквизиты(МассивРеквизитов,);
		
		ПолеФормы = ЭтаФорма.Элементы.Добавить("Реквизит_Иск_Ссылка_" + к, Тип("ПолеФормы"), ГруппаСтраница);
		ПолеФормы.ПутьКДанным = "Реквизит_Иск_Ссылка_" + к;  
		ПолеФормы.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		
		ЭтаФорма["Реквизит_Иск_Ссылка_" + к] = Новый ФорматированнаяСтрока(Строка(СудебноеДело),,,,ПолучитьНавигационнуюСсылку(СудебноеДело));
		
		к = к + 1;
	КонецЦикла;
КонецПроцедуры

Процедура ЗаполнитьИсполнительноеПроизводство(ЭтаФорма, СправочникОбъект) Экспорт
	
	ЭлементФормы = ЭтаФорма.Элементы.Найти("ГруппаСтраницыИсполнительноеПроизводство");
	Если ЭлементФормы <> Неопределено Тогда
	
		ЭтаФорма.Элементы.Удалить(ЭлементФормы);
	
	КонецЕсли;
	//Попытка
	//	ЭтаФорма.Элементы.Удалить(ЭтаФорма.Элементы.ГруппаСтраницыИсполнительноеПроизводство);
	//Исключение
	//	
	//КонецПопытки;
	МассивРеквизитов = ЭтаФорма.ПолучитьРеквизиты();
	МассивДляУдаления = Новый Массив;
	Для Каждого Реквизит Из МассивРеквизитов Цикл
		Если СтрНайти(Реквизит.Имя, "Реквизит_ИП_") Тогда
			МассивДляУдаления.Добавить(Реквизит.Имя);
		КонецЕсли;
	КонецЦикла;
	Если МассивДляУдаления.Количество() > 0 Тогда
		ЭтаФорма.ИзменитьРеквизиты(,МассивДляУдаления);
	КонецЕсли;
	
	ГруппаСтраницыИП = ЭтаФорма.Элементы.Добавить("ГруппаСтраницыИсполнительноеПроизводство", Тип("ГруппаФормы"), ЭтаФорма.Элементы.ГруппаСтадияИсполнительноеПроизводство);
	ГруппаСтраницыИП.Вид = ВидГруппыФормы.Страницы;	
	
	Если ТипЗНч(СправочникОбъект) = Тип("СправочникСсылка.ДолговыеОбязательства") Тогда
		Запрос = Новый Запрос("ВЫБРАТЬ
		                      |	ФССП_ИсполнительноеПроизводство.Ссылка КАК Ссылка,
		                      |	ФССП_СостояниеИПСрезПоследних.ДатаОкончания КАК ДатаОкончания,
		                      |	ФССП_СостояниеИПСрезПоследних.ДатаВозбуждения КАК ДатаВозбуждения,
		                      |	ФССП_СостояниеИПСрезПоследних.ОтделСудебныхПриставов КАК ОтделСудебныхПриставов,
		                      |	ФССП_СостояниеИПСрезПоследних.СудебныйПриставИсполнитель КАК СудебныйПриставИсполнитель,
		                      |	ФССП_СостояниеИПСрезПоследних.ПричинаОкончания КАК ПричинаОкончания,
		                      |	ФССП_СостояниеИПСрезПоследних.СтатусИП КАК СтатусИП,
		                      |	ФССП_СостояниеИПСрезПоследних.НомерСД КАК НомерСД,
		                      |	ФССП_СостояниеИПСрезПоследних.Предмет1 КАК Предмет1,
		                      |	ФССП_СостояниеИПСрезПоследних.Сумма1 КАК Сумма1
		                      |ИЗ
		                      |	Справочник.ФССП_ИсполнительноеПроизводство КАК ФССП_ИсполнительноеПроизводство
		                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФССП_СостояниеИП.СрезПоследних(&ТекущаяДата) КАК ФССП_СостояниеИПСрезПоследних
		                      |		ПО (ФССП_СостояниеИПСрезПоследних.ИП = ФССП_ИсполнительноеПроизводство.Ссылка)
		                      |ГДЕ
		                      |	ФССП_ИсполнительноеПроизводство.НомерИД.Владелец = &Владелец
		                      |	И ФССП_ИсполнительноеПроизводство.ПометкаУдаления = ЛОЖЬ
		                      |
		                      |УПОРЯДОЧИТЬ ПО
		                      |	ФССП_СостояниеИПСрезПоследних.ДатаВозбуждения");

		Запрос.УстановитьПараметр("Владелец", СправочникОбъект);
		Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
	ИначеЕсли ТипЗнч(СправочникОбъект) = Тип("СправочникСсылка.ИсполнительныеДокументы") Тогда
		Запрос = Новый Запрос("ВЫБРАТЬ
		                      |	ФССП_ИсполнительноеПроизводство.Ссылка КАК Ссылка,
		                      |	ФССП_СостояниеИПСрезПоследних.ДатаОкончания КАК ДатаОкончания,
		                      |	ФССП_СостояниеИПСрезПоследних.ДатаВозбуждения КАК ДатаВозбуждения,
		                      |	ФССП_СостояниеИПСрезПоследних.ОтделСудебныхПриставов КАК ОтделСудебныхПриставов,
		                      |	ФССП_СостояниеИПСрезПоследних.СудебныйПриставИсполнитель КАК СудебныйПриставИсполнитель,
		                      |	ФССП_СостояниеИПСрезПоследних.ПричинаОкончания КАК ПричинаОкончания,
		                      |	ФССП_СостояниеИПСрезПоследних.СтатусИП КАК СтатусИП,
		                      |	ФССП_СостояниеИПСрезПоследних.НомерСД КАК НомерСД,
		                      |	ФССП_СостояниеИПСрезПоследних.Предмет1 КАК Предмет1,
		                      |	ФССП_СостояниеИПСрезПоследних.Сумма1 КАК Сумма1
		                      |ИЗ
		                      |	Справочник.ФССП_ИсполнительноеПроизводство КАК ФССП_ИсполнительноеПроизводство
		                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФССП_СостояниеИП.СрезПоследних(&ТекущаяДата) КАК ФССП_СостояниеИПСрезПоследних
		                      |		ПО (ФССП_СостояниеИПСрезПоследних.ИП = ФССП_ИсполнительноеПроизводство.Ссылка)
		                      |ГДЕ
		                      |	ФССП_ИсполнительноеПроизводство.НомерИД = &НомерИД
		                      |	И ФССП_ИсполнительноеПроизводство.ПометкаУдаления = ЛОЖЬ
		                      |
		                      |УПОРЯДОЧИТЬ ПО
		                      |	ФССП_СостояниеИПСрезПоследних.ДатаВозбуждения");
		Запрос.УстановитьПараметр("НомерИД", СправочникОбъект);
		Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
	КонецЕсли;

	Результат = Запрос.Выполнить().Выбрать();   
	к = 1;
	Пока Результат.Следующий() Цикл  
		ИсполнительноеПроизводство = Результат.Ссылка;
		
		ГруппаСтраница = ЭтаФорма.Элементы.Добавить("ГруппаИсполнительная_" + к, Тип("ГруппаФормы"), ЭтаФорма.Элементы.ГруппаСтраницыИсполнительноеПроизводство);
	
		ГруппаСтраница.Вид = ВидГруппыФормы.Страница;
		ГруппаСтраница.РастягиватьПоГоризонтали = Истина;
		ГруппаСтраница.РастягиватьПоВертикали = Истина;
		ГруппаСтраница.Заголовок = ИсполнительноеПроизводство.Наименование;//"ИП " + к;
				
		//Срез = 
		
		МассивРеквизитов = Новый Массив;
		РеквизитИПСсылка = Новый РеквизитФормы("Реквизит_ИП_Ссылка_" + к, Новый ОписаниеТипов("ФорматированнаяСтрока"),, "ИП");
		МассивРеквизитов.Добавить(РеквизитИПСсылка);
		
		РеквизитИП_ИД = Новый РеквизитФормы("Реквизит_ИП_ИД_" + к, Новый ОписаниеТипов("ФорматированнаяСтрока"),, "ИД");
		МассивРеквизитов.Добавить(РеквизитИП_ИД);
		
		РеквизитИП_ДатаВозбуждения = Новый РеквизитФормы("Реквизит_ИП_ДатаВозбуждения_" + к, Новый ОписаниеТипов("Строка"),, "Дата возбуждения");
		МассивРеквизитов.Добавить(РеквизитИП_ДатаВозбуждения);
		
		РеквизитИП_СтатусИП = Новый РеквизитФормы("Реквизит_ИП_СтатусИП_" + к, Новый ОписаниеТипов("Строка"),, "Статус");
		МассивРеквизитов.Добавить(РеквизитИП_СтатусИП);
		
		РеквизитИП_ОСП = Новый РеквизитФормы("Реквизит_ИП_ОСП_" + к, Новый ОписаниеТипов("ФорматированнаяСтрока"),, "ОСП");
		МассивРеквизитов.Добавить(РеквизитИП_ОСП);
		
		РеквизитИП_Пристав = Новый РеквизитФормы("Реквизит_ИП_Пристав_" + к, Новый ОписаниеТипов("ФорматированнаяСтрока"),, "Пристав");
		МассивРеквизитов.Добавить(РеквизитИП_Пристав);
		
		РеквизитИП_ДатаОкончания = Новый РеквизитФормы("Реквизит_ИП_ДатаОкончания_" + к, Новый ОписаниеТипов("Строка"),, "Дата окончания");
		МассивРеквизитов.Добавить(РеквизитИП_ДатаОкончания);
		
		РеквизитИП_ПричинаОкончания = Новый РеквизитФормы("Реквизит_ИП_ПричинаОкончания_" + к, Новый ОписаниеТипов("Строка"),, "Причина окончания");
		МассивРеквизитов.Добавить(РеквизитИП_ПричинаОкончания);		
		
		РеквизитИП_НомерСД = Новый РеквизитФормы("Реквизит_ИП_НомерСД_" + к, Новый ОписаниеТипов("Строка"),, "НомерСД");
		МассивРеквизитов.Добавить(РеквизитИП_НомерСД);	
		
		РеквизитИП_РеестрСПИ = Новый РеквизитФормы("Реквизит_ИП_РеестрСПИ_" + к, Новый ОписаниеТипов("Строка"),, "РеестрСПИ");
		МассивРеквизитов.Добавить(РеквизитИП_РеестрСПИ);
		
		РеквизитИП_РеестрССП = Новый РеквизитФормы("Реквизит_ИП_РеестрССП_" + к, Новый ОписаниеТипов("Строка"),, "РеестрССП");
		МассивРеквизитов.Добавить(РеквизитИП_РеестрССП);
		
		РеквизитИП_РеестрНаличиеИП = Новый РеквизитФормы("Реквизит_ИП_РеестрНаличиеИП_" + к, Новый ОписаниеТипов("Строка"),, "РеестрНаличиеИП");
		МассивРеквизитов.Добавить(РеквизитИП_РеестрНаличиеИП);
		
		РеквизитИП_РеестрОграничение = Новый РеквизитФормы("Реквизит_ИП_РеестрОграничение_" + к, Новый ОписаниеТипов("Строка"),, "РеестрОграничение");
		МассивРеквизитов.Добавить(РеквизитИП_РеестрОграничение);
		
		
		ЭтаФорма.ИзменитьРеквизиты(МассивРеквизитов,);
		
		ПолеФормы = ЭтаФорма.Элементы.Добавить("Реквизит_ИП_Ссылка_" + к, Тип("ПолеФормы"), ГруппаСтраница);
		ПолеФормы.ПутьКДанным = "Реквизит_ИП_Ссылка_" + к;  
		ПолеФормы.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;	
		ЭтаФорма["Реквизит_ИП_Ссылка_" + к] = Новый ФорматированнаяСтрока(ИсполнительноеПроизводство.Наименование,,,,ПолучитьНавигационнуюСсылку(ИсполнительноеПроизводство));
		
		Если ТипЗнч(СправочникОбъект) = Тип("СправочникСсылка.ДолговыеОбязательства") Тогда
			ПолеФормы = ЭтаФорма.Элементы.Добавить("Реквизит_ИП_ИД_" + к, Тип("ПолеФормы"), ГруппаСтраница);
			ПолеФормы.ПутьКДанным = "Реквизит_ИП_ИД_" + к;  
			ПолеФормы.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;		
			ЭтаФорма["Реквизит_ИП_ИД_" + к] = Новый ФорматированнаяСтрока(ИсполнительноеПроизводство.НомерИД.ВидИД.Наименование + " " + ИсполнительноеПроизводство.НомерИД.Наименование,,,,ПолучитьНавигационнуюСсылку(ИсполнительноеПроизводство.НомерИД));
		КонецЕсли;
		
		ПолеФормы = ЭтаФорма.Элементы.Добавить("Реквизит_ИП_ДатаВозбуждения_" + к, Тип("ПолеФормы"), ГруппаСтраница);
		ПолеФормы.ПутьКДанным = "Реквизит_ИП_ДатаВозбуждения_" + к;  
		ПолеФормы.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Авто;
		ПолеФормы.Заголовок = "Дата возбуждения";		
		ЭтаФорма["Реквизит_ИП_ДатаВозбуждения_" + к] = Формат(ИсполнительноеПроизводство.ДатаВозбуждения, "ДФ='dd.MM.yyyy'");
		
		ПолеФормы = ЭтаФорма.Элементы.Добавить("Реквизит_ИП_СтатусИП_" + к, Тип("ПолеФормы"), ГруппаСтраница);
		ПолеФормы.ПутьКДанным = "Реквизит_ИП_СтатусИП_" + к;  
		ПолеФормы.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Авто;
		ПолеФормы.Заголовок = "Статус";		
		ЭтаФорма["Реквизит_ИП_СтатусИП_" + к] = Формат(Результат.СтатусИП, "ДФ='dd.MM.yyyy'");		
		
		Если ЗначениеЗаполнено(Результат.ОтделСудебныхПриставов) Тогда
			ПолеФормы = ЭтаФорма.Элементы.Добавить("Реквизит_ИП_ОСП_" + к, Тип("ПолеФормы"), ГруппаСтраница);
			ПолеФормы.ПутьКДанным = "Реквизит_ИП_ОСП_" + к;  
			ПолеФормы.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Авто;
			ПолеФормы.Заголовок = "ОСП";
			ЭтаФорма["Реквизит_ИП_ОСП_" + к] = Новый ФорматированнаяСтрока(Результат.ОтделСудебныхПриставов.Наименование,,,,ПолучитьНавигационнуюСсылку(Результат.ОтделСудебныхПриставов));	
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Результат.СудебныйПриставИсполнитель) Тогда
			ПолеФормы = ЭтаФорма.Элементы.Добавить("Реквизит_ИП_Пристав_" + к, Тип("ПолеФормы"), ГруппаСтраница);
			ПолеФормы.ПутьКДанным = "Реквизит_ИП_Пристав_" + к;  
			ПолеФормы.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Авто;
			ПолеФормы.Заголовок = "Пристав";
			ЭтаФорма["Реквизит_ИП_Пристав_" + к] = Новый ФорматированнаяСтрока(Результат.СудебныйПриставИсполнитель.Наименование,,,,ПолучитьНавигационнуюСсылку(Результат.СудебныйПриставИсполнитель));			
		КонецЕсли;
	
		ПолеФормы = ЭтаФорма.Элементы.Добавить("Реквизит_ИП_ДатаОкончания_" + к, Тип("ПолеФормы"), ГруппаСтраница);
		ПолеФормы.ПутьКДанным = "Реквизит_ИП_ДатаОкончания_" + к;  
		ПолеФормы.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Авто;
		ПолеФормы.Заголовок = "Дата окончания";		
		ЭтаФорма["Реквизит_ИП_ДатаОкончания_" + к] = Формат(Результат.ДатаОкончания, "ДФ='dd.MM.yyyy'");
		
		ПолеФормы = ЭтаФорма.Элементы.Добавить("Реквизит_ИП_ПричинаОкончания_" + к, Тип("ПолеФормы"), ГруппаСтраница);
		ПолеФормы.ПутьКДанным = "Реквизит_ИП_ПричинаОкончания_" + к;  
		ПолеФормы.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Авто;
		ПолеФормы.Заголовок = "Причина окончания";		
		ЭтаФорма["Реквизит_ИП_ПричинаОкончания_" + к] = Формат(Результат.ПричинаОкончания, "ДФ='dd.MM.yyyy'");
		
		ПолеФормы = ЭтаФорма.Элементы.Добавить("Реквизит_ИП_НомерСД_" + к, Тип("ПолеФормы"), ГруппаСтраница);
		ПолеФормы.ПутьКДанным = "Реквизит_ИП_НомерСД_" + к;  
		ПолеФормы.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Авто;
		ПолеФормы.Заголовок = "Номер СД";		
		ЭтаФорма["Реквизит_ИП_НомерСД_" + к] = Результат.НомерСД;
		
		ГруппаРеестр = ЭтаФорма.Элементы.Добавить("ГруппаРеестр_" + к, Тип("ГруппаФормы"), ГруппаСтраница);
		ГруппаРеестр.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		ГруппаРеестр.РастягиватьПоГоризонтали = Истина;
		ГруппаРеестр.РастягиватьПоВертикали = Истина;
		ГруппаРеестр.Отображение = ОтображениеОбычнойГруппы.СильноеВыделение;
		ГруппаРеестр.Заголовок = "Реестр";

		ПолеФормы = ЭтаФорма.Элементы.Добавить("Реквизит_ИП_РеестрСПИ_" + к, Тип("ПолеФормы"), ГруппаРеестр);
		ПолеФормы.ПутьКДанным = "Реквизит_ИП_РеестрСПИ_" + к;  
		ПолеФормы.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Авто;
		//ПолеФормы.РастягиватьПоВертикали = Истина;
		//ПолеФормы.Вид = ВидПоляФормы.ПолеТекстовогоДокумента;
		//ПолеФормы.МногострочныйРежим = Истина;
		ПолеФормы.Заголовок = "СПИ";		
		ЭтаФорма["Реквизит_ИП_РеестрСПИ_" + к] = ИсполнительноеПроизводство.СПИ;
		
		ПолеФормы = ЭтаФорма.Элементы.Добавить("Реквизит_ИП_РеестрССП_" + к, Тип("ПолеФормы"), ГруппаРеестр);
		ПолеФормы.ПутьКДанным = "Реквизит_ИП_РеестрССП_" + к;  
		ПолеФормы.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Авто;
		ПолеФормы.Заголовок = "ССП";		
		ЭтаФорма["Реквизит_ИП_РеестрССП_" + к] = ИсполнительноеПроизводство.ОтделССП;
		
		ПолеФормы = ЭтаФорма.Элементы.Добавить("Реквизит_ИП_РеестрНаличиеИП_" + к, Тип("ПолеФормы"), ГруппаРеестр);
		ПолеФормы.ПутьКДанным = "Реквизит_ИП_РеестрНаличиеИП_" + к;  
		ПолеФормы.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Авто;
		ПолеФормы.Заголовок = "Наличие ИП";		
		ЭтаФорма["Реквизит_ИП_РеестрНаличиеИП_" + к] = ИсполнительноеПроизводство.НаличиеИП;
		
		ПолеФормы = ЭтаФорма.Элементы.Добавить("Реквизит_ИП_РеестрОграничение_" + к, Тип("ПолеФормы"), ГруппаРеестр);
		ПолеФормы.ПутьКДанным = "Реквизит_ИП_РеестрОграничение_" + к;  
		ПолеФормы.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Авто;
		ПолеФормы.Заголовок = "Ограничение выезда";		
		ЭтаФорма["Реквизит_ИП_РеестрОграничение_" + к] = ИсполнительноеПроизводство.ОграничениеВыезда;
		
		Если ТипЗнч(СправочникОбъект) = Тип("СправочникСсылка.ИсполнительныеДокументы") Тогда 
			//ЭтаФорма.ТекущийЭлемент = ГруппаСтраница;
		КонецЕсли;

		к = к + 1;
	КонецЦикла;
	КонецПроцедуры

Процедура ДобавитьДополнительныеРеквизиты(ЭтаФорма) Экспорт
	
	Массив_ГруппыТекПольз = ПараметрыСеанса.ТекущийПользователь.ГруппыПользователей.ВыгрузитьКолонку("Группа");
	
	Элементы = ЭтаФорма.Элементы;
	Объект = ЭтаФорма.Объект;	
	ДополнительныеРеквизиты = ЭтаФорма.ДополнительныеРеквизиты;	
	
	ОписаниеТиповБулево = Новый ОписаниеТипов("Булево");
	ОписаниеТиповСтрока = Новый ОписаниеТипов("Строка");
	
	Для Каждого Элемент Из ДополнительныеРеквизиты Цикл
		Если (Элемент.Свойство.ВидСтроки = Перечисления.ВидыТипаСтрока.Адрес ИЛИ 
				Элемент.Свойство.ВидСтроки = Перечисления.ВидыТипаСтрока.Телефон) И Элемент.Параметры = "" Тогда
			Номер = Найти(Элемент.Значение, ";");
			Элемент.Параметры = Сред(Элемент.Значение, Номер + 1);	
			Элемент.Значение = Сред(Элемент.Значение, 1, Номер - 1);	
		КонецЕсли;
	КонецЦикла;
	
	// Подготовка
	ТЧ = ДополнительныеРеквизиты.Выгрузить();
	ТЧ.ЗаполнитьЗначения(Истина, "НеобходимоУдалить");
	ТЧ.ЗаполнитьЗначения(0, "НомерСтроки");
	ДополнительныеРеквизиты.Загрузить(ТЧ);
		
	Если ТипЗнч(Объект.Ссылка) = Тип("СправочникСсылка.Контрагенты") Тогда
		ОбъектВид = Объект.ЮрФизЛицо;
		ВидТЧ = Объект.ЮрФизЛицо.ДополнительныеРеквизиты;
	ИначеЕсли ТипЗнч(Объект.Ссылка) = Тип("СправочникСсылка.ДолговыеОбязательства") Тогда
		ОбъектВид = Объект.ТипДолговогоОбязательства;
		ВидТЧ = Объект.ТипДолговогоОбязательства.ДополнительныеРеквизиты.Выгрузить();
	ИначеЕсли ТипЗнч(Объект.Ссылка) = Тип("СправочникСсылка.Залоги") Тогда
		ОбъектВид = Объект.ТипЗалога;
		ВидТЧ = Объект.ТипЗалога.ДополнительныеРеквизиты;
	ИначеЕсли ТипЗнч(Объект.Ссылка) = Тип("ЗадачаСсылка.Мероприятие") Тогда
		ОбъектВид = Объект.Результат;
		ВидТЧ = ?(Не Объект.Результат.Пустая(), Объект.Результат.ДополнительныеРеквизиты, Новый Массив());
	ИначеЕсли ТипЗнч(Объект.Ссылка) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
		ОбъектВид = Объект.ТипДоговора;
		ВидТЧ = Объект.ТипДоговора.ДополнительныеРеквизиты;
	Иначе
		ОбъектВид = "_";
		Запрос = Новый Запрос("ВЫБРАТЬ
		                      |	ДополнительныеРеквизитыИСведения.Ссылка КАК Свойство,
		                      |	"""" КАК Заголовок,
		                      |	ЛОЖЬ КАК Обязательное,
		                      |	ДополнительныеРеквизитыИСведения.ПорядковыйНомер КАК НомерСтроки
		                      |ИЗ
		                      |	ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК ДополнительныеРеквизитыИСведения
		                      |ГДЕ
		                      |	НЕ ДополнительныеРеквизитыИСведения.ЭтоДополнительноеСведение
		                      |	И ДополнительныеРеквизитыИСведения.Родитель = &РодительПВХ
		                      |	И НЕ ДополнительныеРеквизитыИСведения.ПометкаУдаления");
		РодительПВХ = Неопределено;
		Выполнить("РодительПВХ = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.ДополнительныеРеквизиты_" + 
				Объект.Ссылка.Метаданные().Имя + ";");
		Запрос.УстановитьПараметр("РодительПВХ", РодительПВХ);
		ВидТЧ = Запрос.Выполнить().Выгрузить();
	КонецЕсли;
		
	Если ЗначениеЗаполнено(ОбъектВид) Тогда
		Для Каждого Элемент Из ВидТЧ Цикл
			Попытка 
				Флаг = Элемент.Функция.Пустая();
			Исключение
				Флаг = Истина;
			КонецПопытки;
			//////////////////////////////////////// Боевкин
			//Если Элемент.Стадия <> ТекущаяСтадия Тогда
			//	Флаг = Ложь;
			//КонецЕсли;
			///////////////////////////////////////////////////
			
			ОтборПоГруппе = Истина;
			ГруппаСвойства = Элемент.Свойство.ГруппаПользователей;
			Если ЗначениеЗаполнено(ГруппаСвойства) = Ложь Тогда
				ОтборПоГруппе = Истина;
			Иначе
				Если Массив_ГруппыТекПольз.Найти(ГруппаСвойства) <> Неопределено Тогда
					ОтборПоГруппе = Истина;
				Иначе
					ОтборПОГруппе = Ложь;
				КонецЕсли;
			КонецЕсли;
			
			Если Флаг Тогда // ИЛИ ВычислитьФункциюВидимости(Элемент.Функция.Функция, Объект) Тогда
				Строки = ДополнительныеРеквизиты.НайтиСтроки(Новый Структура("Свойство", Элемент.Свойство));			
				Если Строки.Количество() > 0 И ОтборПоГруппе Тогда
					Строки[0].НеобходимоУдалить = Ложь;
					Строки[0].НомерСтроки = Элемент.НомерСтроки;
					Строки[0].Обязательное = Элемент.Обязательное;
					Строки[0].Заголовок = ?(Элемент.Заголовок <> "", Элемент.Заголовок, Элемент.Свойство.Наименование);
					Строки[0].Стадия = Элемент.Стадия;
				ИначеЕсли Строки.Количество() = 0 И ОтборПоГруппе Тогда
					НоваяСтрока = ДополнительныеРеквизиты.Добавить();
					НоваяСтрока.Заголовок = ?(Элемент.Заголовок <> "", Элемент.Заголовок, Элемент.Свойство.Наименование);
					ЗаполнитьЗначенияСвойств(НоваяСтрока, Элемент, "НомерСтроки, Свойство, Обязательное, Стадия");
				КонецЕсли;	
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	// Очистка группы	
	МассивРеквизитов = Новый Массив();
	НовСтруктура = Новый Структура("НеобходимоУдалить", Истина);
	НовСтруктура.Вставить("Стадия", Справочники.СтадииПроизводства.ПустаяСсылка());
	Для Каждого Элемент Из ДополнительныеРеквизиты.НайтиСтроки(НовСтруктура) Цикл 
		Если Элемент.Свойство.ТипЗначения.СодержитТип(Тип("СправочникСсылка.тсЗначенияСвойствОбъектов")) Тогда
			
			ИмяЭлементаФормы = "РеквизитСвойство_" + СтрЗаменить(Элемент.Свойство.Код, " ", "_");
			ЭлементФормы = ЭтаФорма.Элементы.Найти(ИмяЭлементаФормы);
			Если ЭлементФормы <> Неопределено Тогда
			
				МассивРеквизитов.Добавить(ИмяЭлементаФормы);
			
			КонецЕсли;
			//Попытка
			//	ТестНаНаличие = ЭтаФорма["РеквизитСвойство_" + СтрЗаменить(Элемент.Свойство.Код, " ", "_")];
			//	МассивРеквизитов.Добавить("РеквизитСвойство_" + СтрЗаменить(Элемент.Свойство.Код, " ", "_"));
			//Исключение
			//КонецПопытки;
		КонецЕсли;
				
		ЭлементФормы = Элементы.Найти("Реквизит_" + СтрЗаменить(Элемент.Свойство.Код, " ", "_"));
		Если ЭлементФормы <> Неопределено Тогда		
			Элементы.Удалить(ЭлементФормы); 
			МассивРеквизитов.Добавить("Реквизит_" + СтрЗаменить(Элемент.Свойство.Код, " ", "_"));
		КонецЕсли;
		ДополнительныеРеквизиты.Удалить(Элемент);
	КонецЦикла;
	ЭтаФорма.ИзменитьРеквизиты(, МассивРеквизитов);
	
	МассивРеквизитов.Очистить();
	// Заполнение
	Для Каждого Элемент Из ДополнительныеРеквизиты Цикл
		Если Элементы.Найти("Реквизит_" + СтрЗаменить(Элемент.Свойство.Код, " ", "_")) = Неопределено Тогда
			//МассивРеквизитов.Очистить();
			Реквизит = Новый РеквизитФормы("Реквизит_" + СтрЗаменить(Элемент.Свойство.Код, " ", "_"), Элемент.Свойство.ТипЗначения,, 
					Элемент.Свойство.Наименование);
	
			МассивРеквизитов.Добавить(Реквизит);
			Если Элемент.Свойство.ТипЗначения.СодержитТип(Тип("СправочникСсылка.тсЗначенияСвойствОбъектов")) Тогда
				Реквизит = Новый РеквизитФормы("РеквизитСвойство_" + СтрЗаменить(Элемент.Свойство.Код, " ", "_"), 
						Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.ДополнительныеРеквизитыИСведения"),, 
						Элемент.Свойство.Наименование);
				МассивРеквизитов.Добавить(Реквизит);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
		
	ЭтаФорма.ИзменитьРеквизиты(МассивРеквизитов);
	
	Для Каждого Элемент Из ДополнительныеРеквизиты Цикл
		Если Элементы.Найти("Реквизит_" + СтрЗаменить(Элемент.Свойство.Код, " ", "_")) = Неопределено Тогда	
			Выполнить("ЭтаФорма.Реквизит_" + СтрЗаменить(Элемент.Свойство.Код, " ", "_") + " = Элемент.Значение;");
			
			//////////////////
			Если ЗначениеЗаполнено(Элемент.Стадия) Тогда  
				Попытка
					ТекущаяГруппа = Элементы["ГруппаОбычнаяДанные" + Элемент.Стадия.Код];
				Исключение
					ТекущаяГруппа = Элементы.ГруппаДополнительныеРеквизиты;
				КонецПопытки;
			Иначе
				ТекущаяГруппа = Элементы.ГруппаДополнительныеРеквизиты;
			КонецЕсли;
			/////////

			
			ПолеФормы = Элементы.Добавить("Реквизит_" + СтрЗаменить(Элемент.Свойство.Код, " ", "_"), Тип("ПолеФормы"), 
			ТекущаяГруппа);
			Если Элемент.Свойство.ТипЗначения = ОписаниеТиповБулево Тогда
				ПолеФормы.Вид = ВидПоляФормы.ПолеФлажка;
			Иначе 
				ПолеФормы.Вид = ВидПоляФормы.ПолеВвода;  
				ПолеФормы.ВыбиратьТип = Ложь;
				ПолеФормы.УстановитьДействие("НачалоВыбора", "ДополнительныеРеквизитыНачалоВыбора");
				ПолеФормы.УстановитьДействие("Открытие", "ДополнительныеРеквизитыОткрытие");	
				ПолеФормы.АвтоМаксимальнаяШирина = Ложь;
				ПолеФормы.АвтоМаксимальнаяВысота = Ложь;
			КонецЕсли;
						
			Если Элемент.Свойство.СписокДоступныхЗначений Тогда
				ПолеФормы.РежимВыбораИзСписка = Истина;
				//МассивЗначений = Новый Массив;
				Для Каждого ЭлСписка из Элемент.Свойство.СписокЗначений Цикл
					ПолеФормы.СписокВыбора.Добавить(ЭлСписка.Значение);
				КонецЦикла;
				
			КонецЕсли;
			
			ПолеФормы.ПутьКДанным = "Реквизит_" + СтрЗаменить(Элемент.Свойство.Код, " ", "_");
			ПолеФормы.ТолькоПросмотр = ПолучитьТолькоПросмотр(Элемент.Свойство);
			
			ПолеФормы.УстановитьДействие("ПриИзменении", "ДополнительныеРеквизитыПриИзменении");
			
			Если Элемент.Свойство.ТипЗначения.СодержитТип(Тип("СправочникСсылка.тсЗначенияСвойствОбъектов")) Тогда
				ЭтаФорма["РеквизитСвойство_" + СтрЗаменить(Элемент.Свойство.Код, " ", "_")] = Элемент.Свойство;
				Связь = Новый СвязьПараметраВыбора("Отбор.Владелец", "РеквизитСвойство_" + СтрЗаменить(Элемент.Свойство.Код, " ", "_"));
				масСвязи = Новый Массив;
				масСвязи.Добавить(Связь);
				ПолеФормы.СвязиПараметровВыбора = Новый ФиксированныйМассив(масСвязи);	
				
			ИначеЕсли Элемент.Свойство.ТипЗначения.СодержитТип(Тип("СправочникСсылка.ИсполнительныеДокументы")) Тогда
				Связь = Новый СвязьПараметраВыбора("Отбор.Владелец", "Объект.Объект");
				масСвязи = Новый Массив;
				масСвязи.Добавить(Связь);
				ПолеФормы.СвязиПараметровВыбора = Новый ФиксированныйМассив(масСвязи);
				
			ИначеЕсли Элемент.Свойство.ТипЗначения.СодержитТип(Тип("Строка")) Тогда
				//+Protas 17.12.18 Открытие формы адреса в формате ФИАС
				//Если Элемент.Свойство.ВидСтроки = Перечисления.ВидыТипаСтрока.Адрес ИЛИ
				//      Элемент.Свойство.ВидСтроки = Перечисления.ВидыТипаСтрока.Телефон Тогда
				Если Элемент.Свойство.ВидСтроки = Перечисления.ВидыТипаСтрока.Адрес ИЛИ
					Элемент.Свойство.ВидСтроки = Перечисления.ВидыТипаСтрока.АдресФИАС ИЛИ
					Элемент.Свойство.ВидСтроки = Перечисления.ВидыТипаСтрока.Телефон Тогда
					//+Protas
					ПолеФормы.КнопкаВыбора = Истина;	
					
					ПолеФормы.РедактированиеТекста = Ложь;
					
				ИначеЕсли Элемент.Свойство.ВидСтроки = Перечисления.ВидыТипаСтрока.ПутьКФайлу Тогда
					ПолеФормы.КнопкаВыбора = Истина;
					ПолеФормы.КнопкаОткрытия = Истина;
				Иначе
					ПолеФормы.МногострочныйРежим = Элемент.Свойство.МногострочныйРежим;
				КонецЕсли;
				
				Если Не Элемент.Свойство.РедактируемоеЗначение.Пустая() Тогда
					ПолеФормы.КнопкаСпискаВыбора = Истина;
					ЗапросСЗ = Новый Запрос("ВЫБРАТЬ
					                        |	тсЗначенияСвойствОбъектов.Наименование КАК Наименование
					                        |ИЗ
					                        |	Справочник.тсЗначенияСвойствОбъектов КАК тсЗначенияСвойствОбъектов
					                        |ГДЕ
					                        |	тсЗначенияСвойствОбъектов.Владелец = &Владелец
					                        |	И НЕ тсЗначенияСвойствОбъектов.ПометкаУдаления
					                        |
					                        |УПОРЯДОЧИТЬ ПО
					                        |	Наименование");
					ЗапросСЗ.УстановитьПараметр("Владелец", Элемент.Свойство.РедактируемоеЗначение);
					РезультатСЗ = ЗапросСЗ.Выполнить().Выбрать();
					Пока РезультатСЗ.Следующий() Цикл
						ПолеФормы.СписокВыбора.Добавить(РезультатСЗ.Наименование, РезультатСЗ.Наименование);
					КонецЦикла;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		Элементы["Реквизит_" + СтрЗаменить(Элемент.Свойство.Код, " ", "_")].Заголовок = Элемент.Заголовок;
	КонецЦикла;
	
	//Сортировка
	ДополнительныеРеквизиты.Сортировать("НомерСтроки Убыв, Заголовок Убыв");
	ПолеФормыСлед = Неопределено;
	Для Каждого Элемент Из ДополнительныеРеквизиты Цикл		
		ПолеФормы = Элементы.Найти("Реквизит_" + СтрЗаменить(Элемент.Свойство.Код, " ", "_"));
		Если Элемент.Свойство.ТипЗначения <> ОписаниеТиповБулево Тогда
			ПолеФормы.АвтоОтметкаНезаполненного = ?(Элемент.Обязательное, Истина, Неопределено);
		КонецЕсли;
		
		//////////////////
		Если ЗначениеЗаполнено(Элемент.Стадия) Тогда  
			Попытка
				ТекущаяГруппа = Элементы["ГруппаОбычнаяДанные" + Элемент.Стадия.Код];
			Исключение
				ТекущаяГруппа = Элементы.ГруппаДополнительныеРеквизиты;
			КонецПопытки;			
		Иначе
			ТекущаяГруппа = Элементы.ГруппаДополнительныеРеквизиты;
		КонецЕсли;
		/////////
		
		
		Элементы.Переместить(ПолеФормы, ТекущаяГруппа, ПолеФормыСлед);
		ПолеФормыСлед = ПолеФормы;
	КонецЦикла;
	ДополнительныеРеквизиты.Сортировать("НомерСтроки, Заголовок");	
КонецПроцедуры

Функция ПолучитьТолькоПросмотр(Свойство)
	//Свойство = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.СоздатьЭлемент();
	Если Свойство.ГруппаПользователейДоступность = Справочники.ГруппыПользователей.ПустаяСсылка() Тогда
		Возврат Ложь;
	Иначе
		Запрос = Новый Запрос("ВЫБРАТЬ
		                      |	ПользователиГруппыПользователей.Ссылка
		                      |ИЗ
		                      |	Справочник.Пользователи.ГруппыПользователей КАК ПользователиГруппыПользователей
		                      |ГДЕ
		                      |	ПользователиГруппыПользователей.Ссылка = &Пользователь
		                      |	И ПользователиГруппыПользователей.Группа = &Группа");
		Запрос.УстановитьПараметр("Пользователь", ПараметрыСеанса.ТекущийПользователь);
		Запрос.УстановитьПараметр("Группа", Свойство.ГруппаПользователейДоступность);
		Результат = Запрос.Выполнить().Выбрать();
		Если Результат.Следующий() Тогда
			Возврат Ложь;
		Иначе
			Возврат Истина;
		КонецЕсли;
	КонецЕсли;
КонецФункции

Функция ВычислитьФункциюВидимости(ТекстФункции, ОбъектВх, ВидКонтрагента = Неопределено) Экспорт
	Попытка
		Значение = Неопределено;
		Выполнить(ТекстФункции);
		Возврат Значение;
	Исключение
		Возврат Неопределено;
	КонецПопытки;	 	
КонецФункции
