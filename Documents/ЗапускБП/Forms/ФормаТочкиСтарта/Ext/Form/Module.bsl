
&НаКлиенте
Перем ТСТочкаИмя;
&НаКлиенте
Перем ТСМероприятиеНаименование;


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	СписокДеревоБП.Добавить().НомерСтроки = 1;
	СоздатьДерево();
КонецПроцедуры

&НаСервере
Процедура СоздатьДерево()
	ДеревоБП.ПолучитьЭлементы().Очистить();
	Для Каждого Элемент Из СписокДеревоБП Цикл
		Элемент.Схема = Неопределено;
		Элемент.ОбъектРодитель = "";
	КонецЦикла;
	
	НоваяСтрока = СписокДеревоБП.Добавить();
	НоваяСтрока.Схема = ТекСхема;
	НоваяСтрока.НомерСтроки = СписокДеревоБП.Количество();
	
	НовыйЭлемент = ДеревоБП.ПолучитьЭлементы().Добавить();
	НовыйЭлемент.Схема = ТекСхема;	
	НовыйЭлемент.Наименование = Строка(ТекСхема);
	ЗаполнитьДерево(НовыйЭлемент.ПолучитьЭлементы(), НовыйЭлемент.Схема, НовыйЭлемент.ОбъектРодитель);
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДерево(ЭлементДерева, Схема, ОбъектРодитель, Знач Глубина = 1)
	//Если ТипЗнч(Схема) = Тип("Строка") Тогда
	//	Возврат;
	//КонецЕсли;
	          
	Строки = Схема.Стадии.НайтиСтроки(Новый Структура("ВидСтадии", Перечисления.ВидыСтадийБП.БизнесПроцесс));
	//Для Номер_ = 1 По Строки.Количество() Цикл
	//	Элемент = Строки[Номер_ - 1];
	Для Каждого Элемент Из Строки Цикл
		Если ТипЗнч(Элемент.Стадия) = Тип("СправочникСсылка.КартыМаршрутов") Тогда
		    ВложеннаяСхема = Элемент.Стадия;
		ИначеЕсли ТипЗнч(Элемент.Стадия) = Тип("СправочникСсылка.ТипыМероприятий") Тогда
			//ВложеннаяСхема = Неопределено;
			ВложеннаяСхема = РегистрыСведений.НастройкиБП.ПолучитьСхемуПоОперации(Справочники.Организации.ПустаяСсылка(),
					Справочники.ПодразделенияОрганизаций.ПустаяСсылка(), Элемент.Операция);
		КонецЕсли;
				
		НоваяСтрока = СписокДеревоБП.Добавить();
		НоваяСтрока.Схема = ВложеннаяСхема;
		НоваяСтрока.ОбъектРодитель = ОбъектРодитель + "_" + Элемент.Идентификатор;
		НоваяСтрока.НомерСтроки = СписокДеревоБП.Количество();
		
		НовыйЭлемент = ЭлементДерева.Добавить();
		НовыйЭлемент.ОбъектРодитель = ОбъектРодитель + "_" + Элемент.Идентификатор;
		НовыйЭлемент.Наименование = Элемент.Наименование;
		Если ВложеннаяСхема = Неопределено Тогда
			НовыйЭлемент.Схема = "<Нет доступа>";	
		Иначе
			НовыйЭлемент.Схема = ВложеннаяСхема;
			Если Глубина < 4 Тогда
				ЗаполнитьДерево(НовыйЭлемент.ПолучитьЭлементы(), НовыйЭлемент.Схема, НовыйЭлемент.ОбъектРодитель, Глубина + 1);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	СоздатьДерево();	
	Если ДеревоБП.ПолучитьЭлементы().Количество() > 0 Тогда
		Элементы.ДеревоБП.Развернуть(ДеревоБП.ПолучитьЭлементы()[0].ПолучитьИдентификатор(), Истина);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоБППриАктивизацииСтроки(Элемент)
	ТСМассив.Очистить();
	Если Элементы.ДеревоБП.ТекущиеДанные <> Неопределено Тогда
		ТСПуть = ЗаполнитьПутьСхемПоНомеру(ДеревоБП.ПолучитьЭлементы(), Элементы.ДеревоБП.ТекущаяСтрока);
		ТССхема = Элементы.ДеревоБП.ТекущиеДанные.Схема;
		ТСОбъектРодитель = Элементы.ДеревоБП.ТекущиеДанные.ОбъектРодитель;
		ТСМероприятие = "";
		ТСТипМероприятия = Неопределено;
		ТСТочка = "";
		
		ПоказатьКарту(Элементы.ДеревоБП.ТекущиеДанные.Схема);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция ЗаполнитьПутьСхемПоНомеру(ЭлементДерева, НомерЭлемента)
	Результат = "";
	Для Каждого Элемент Из ЭлементДерева Цикл
		Если Элемент.ПолучитьИдентификатор() = НомерЭлемента Тогда
			Результат = Элемент.Наименование;
			
			НоваяСтрока = ТСМассив.Добавить();
			НоваяСтрока.Схема = Элемент.Схема;
			НоваяСтрока.ОбъектРодитель = Элемент.ОбъектРодитель;
			Прервать;
		Иначе
			Результат = ЗаполнитьПутьСхемПоНомеру(Элемент.ПолучитьЭлементы(), НомерЭлемента);
			Если Результат <> "" Тогда
				Результат = Элемент.Наименование + " -> " + Результат;
				
				НоваяСтрока = ТСМассив.Добавить();
				НоваяСтрока.Схема = Элемент.Схема;
				НоваяСтрока.ОбъектРодитель = Элемент.ОбъектРодитель;
				
				Идентификатор = ТСМассив[ТСМассив.Количество() - 2].ОбъектРодитель;
				Идентификатор = СтрЗаменить(Идентификатор, "_", Символы.ПС);
				Идентификатор = СтрПолучитьСтроку(Идентификатор, СтрЧислоСтрок(Идентификатор));
				НоваяСтрока.Идентификатор = Идентификатор;
				Прервать;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Возврат Результат;
КонецФункции

&НаКлиенте
Процедура ПоказатьКарту(Схема)
	ЗаполнитьТаблицуСтадийДляРаскраски(Схема);
	
	ДвоичныеДанные = ЗагрузитьКартуИзХранилища(Схема);
	Если Не ДвоичныеДанные = Неопределено Тогда
		ИмяТемпФайла = ПолучитьИмяВременногоФайла();
		ДвоичныеДанные.Записать(ИмяТемпФайла);		
		Карта.Прочитать(ИмяТемпФайла);
		УдалитьФайлы(ИмяТемпФайла);
	Иначе
		ИмяТемпФайла = ПолучитьИмяВременногоФайла();
		
		//НоваяСхема = Новый ГрафическаяСхема();
		//НоваяСхема.Записать(ИмяТемпФайла);
		ЗаписатьКартуСТекстом("Нет доступа!", ИмяТемпФайла);
		
		Карта.Прочитать(ИмяТемпФайла);
		УдалитьФайлы(ИмяТемпФайла);	
	КонецЕсли;	
		
	РаскраситьРамкиЭлементов();
КонецПроцедуры

&НаКлиенте
Процедура КартаВыбор(Элемент)
	Если Элементы.Карта.ТекущийЭлемент <> Неопределено И 
			ТипЗнч(Элементы.Карта.ТекущийЭлемент) = Тип("ЭлементГрафическойСхемыВыборВарианта") Тогда
		ТСТочкаИмя = Элементы.Карта.ТекущийЭлемент.Имя;
		//СтрокаСтадии = ТССхема.Стадии.НайтиСтроки(Новый Структура("Идентификатор", ТСТочкаИмя));
		ЗапретСтарта = ТССхемаСтадии_СтрокаСтадии(ТСТочкаИмя);
		Если ЗапретСтарта Тогда		
			Сообщить("С выбранного мероприятия старт бизнесс-процесса запрещен!");
		КонецЕсли;
		ТСМероприятиеНаименование = ?(ЗапретСтарта, "", Элементы.Карта.ТекущийЭлемент.Наименование);
		ПодключитьОбработчикОжидания("ВыбратьЭлементКарты", 0.01, Истина);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ТССхемаСтадии_СтрокаСтадии(ТСТочкаИмя_)
	СтрокаСтадии = ТССхема.Стадии.НайтиСтроки(Новый Структура("Идентификатор", ТСТочкаИмя_));
	Возврат СтрокаСтадии[0].ЗапретСтарта;
КонецФункции

&НаКлиенте
Процедура ВыбратьЭлементКарты()
	ТССхемаСтадии(ТСТочкаИмя);
	
	Если ТСТипМероприятия.Пустая() Тогда
		ТСТочка = "";
		ТСМероприятие = "";
	Иначе
		ТСТочка = ТСТочкаИмя;
		ТСМероприятие = ТСМероприятиеНаименование;
		
		ТСМассив[0].Идентификатор = ТСТочка; 
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ТССхемаСтадии(ТСТочкаИмя_)
	СтрокиСтадии = ТССхема.Стадии.НайтиСтроки(Новый Структура("Идентификатор", ТСТочкаИмя_));
	Попытка
		ТСТипМероприятия = СтрокиСтадии[0].Стадия;
		ТСИсполнитель = СтрокиСтадии[0].Исполнитель;
	Исключение
		ТСТипМероприятия = Неопределено;
		ТСИсполнитель = Неопределено;
	КонецПопытки;
КонецПроцедуры

&НаСервере
Функция ЗагрузитьКартуИзХранилища(Ссылка)
	Если ТипЗнч(Ссылка) <> Тип("Строка") И Не Ссылка.Пустая() Тогда
		Возврат Ссылка.Схема.Получить(); 
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура ЗаписатьКартуСТекстом(Текст, ИмяФайла)
	ТекстовыйДокумент = Новый ТекстовыйДокумент();
	ТекстовыйДокумент.УстановитьТекст(
		"{5,
		|{
		|{1,
		|{3,3,
		|{-10}
		|},0,20,20,3,6,6,
		|{""N"",10},7,
		|{""N"",10},8,
		|{""N"",10},9,
		|{""N"",10},13,
		|{""N"",0},16,
		|{""N"",0}
		|}
		|},1,0,
		|{
		|{4,1,
		|{1,1,
		|{""#"",""" + Текст + """}
		|},""Декорация1"",1},2,
		|{
		|{
		|{6,
		|{3,3,
		|{-10}
		|},
		|{3,0,
		|{8826035}
		|},
		|{3,3,
		|{-17}
		|},
		|{6,1,62,
		|{0},160,400,0,0,0,1},
		|{1,0},0,0,1,0,0,1,0},6,21,22,510,245,4,
		|{3,0,
		|{0},"""",-1,-1,1,0},1,0,0,0}
		|}
		|},1}");
	ТекстовыйДокумент.Записать(ИмяФайла);
КонецПроцедуры

&НаКлиенте
Процедура РаскраситьРамкиЭлементов()
	//Закраска фона
	Для Каждого ЭлементСхемы Из Карта.ЭлементыГрафическойСхемы Цикл	
		Если ТипЗнч(ЭлементСхемы) = Тип("ЭлементГрафическойСхемыВыборВарианта") Тогда
			//Заменил "Элементы.ДеревоБП.ТекущиеДанные.Схема.Стадии" на "СтадииДляРаскраски"
			СтрокаЭлемента = СтадииДляРаскраски.НайтиСтроки(Новый Структура("Идентификатор", 
					ЭлементСхемы.Имя))[0]; 
			Если СтрокаЭлемента.ВидСтадии = ПредопределенноеЗначение("Перечисление.ВидыСтадийБП.Мероприятие") Тогда
				ЭлементСхемы.ЦветФона = Новый Цвет(253,251,150);
				Для Каждого Вариант Из ЭлементСхемы.Элементы Цикл
					Вариант.ЦветФона = Новый Цвет(254,253,214);
				КонецЦикла;
			ИначеЕсли СтрокаЭлемента.ВидСтадии = ПредопределенноеЗначение("Перечисление.ВидыСтадийБП.БизнесПроцесс") Тогда
				ЭлементСхемы.ЦветФона = Новый Цвет(200,200,233); 
				Для Каждого Вариант Из ЭлементСхемы.Элементы Цикл
					Вариант.ЦветФона = Новый Цвет(224,224,243);
				КонецЦикла;
			ИначеЕсли СтрокаЭлемента.ВидСтадии = ПредопределенноеЗначение("Перечисление.ВидыСтадийБП.Функция") Тогда
				ЭлементСхемы.ЦветФона = Новый Цвет(250,200,100); 
				Для Каждого Вариант Из ЭлементСхемы.Элементы Цикл
					Вариант.ЦветФона = Новый Цвет(250,230,180);
				КонецЦикла;
			КонецЕсли;
		ИначеЕсли ТипЗнч(ЭлементСхемы) = Тип("ЭлементГрафическойСхемыДекорация") Тогда
			ЭлементСхемы.ЦветФона = Новый Цвет(150,200,250);
		КонецЕсли;  		
	КонецЦикла;
	
	//Закраска рамок
	Для Каждого ЭлементСхемы Из Карта.ЭлементыГрафическойСхемы Цикл	
		Если ТипЗнч(ЭлементСхемы) = Тип("ЭлементГрафическойСхемыДекоративнаяЛиния") Тогда
			ЭлементСхемы.ЦветЛинии = Новый Цвет(179,172,134);                  
			ЭлементСхемы.Линия = Новый Линия(ТипСоединительнойЛинии.Сплошная, 1);
		Иначе                                   
			ЭлементСхемы.ЦветРамки = Новый Цвет(179,172,134);
			Если ТипЗнч(ЭлементСхемы) <> Тип("ЭлементГрафическойСхемыДекорация") Тогда
				ЭлементСхемы.Рамка = Новый Линия(ТипСоединительнойЛинии.Сплошная, 1);
			КонецЕсли;
		КонецЕсли;   		
	КонецЦикла;	
	 	
	//Если ИндексВыбраннойСтадии > -1 Тогда
	//	Карта.ЭлементыГрафическойСхемы[ИндексВыбраннойСтадии].ЦветРамки = Новый Цвет(255,0,0);  //120,114,75);
	//	Карта.ЭлементыГрафическойСхемы[ИндексВыбраннойСтадии].Рамка = Новый Линия(ТипСоединительнойЛинии.Сплошная, 1);	
	//КонецЕсли;
	//Если ИндексВыбраннойЗадержки > -1 Тогда
	//	Карта.ЭлементыГрафическойСхемы[ИндексВыбраннойЗадержки].ЦветЛинии = Новый Цвет(255,0,0);  //120,114,75);
	//	Карта.ЭлементыГрафическойСхемы[ИндексВыбраннойЗадержки].Линия = Новый Линия(ТипСоединительнойЛинии.Сплошная, 2);
	//КонецЕсли;
		
	ОбновитьОтображениеДанных();
	//ОбновитьВидимостьКнопок();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуСтадийДляРаскраски(Схема)
	СтадииДляРаскраски.Загрузить(Схема.Стадии.Выгрузить(, "Идентификатор, ВидСтадии, ЗапретСтарта"));
КонецПроцедуры

&НаКлиенте
Процедура ОК(Команда)
	Закрыть(Истина);
	ОповеститьОВыборе(Элементы.Карта.ТекущийЭлемент);
КонецПроцедуры
