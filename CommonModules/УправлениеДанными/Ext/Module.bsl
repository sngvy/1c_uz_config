
#Область ПрограммныйИнтерфейс

&НаКлиенте
Процедура ЗаполнитьЭлементыОтбора(ГруппаОтбора, НаборОтбора) Экспорт

	Для каждого Элемент Из НаборОтбора Цикл
		
		Запись = ГруппаОтбора.Элементы.Добавить(Тип(Элемент));
		ЗаполнитьЗначенияСвойств(Запись, Элемент);
		
		Если ТипЗнч(Элемент) = Тип("ГруппаЭлементовОтбораКомпоновкиДанных") Тогда
		
			ЗаполнитьЭлементыОтбора(
				ГруппаОтбора.Элементы[ГруппаОтбора.Элементы.Количество() - 1],
				Элемент.Элементы);
		
		КонецЕсли;
	
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКарточкуЗначения(Значение) Экспорт

	Если ЭтоБазовыйТип(Значение) Тогда
	
		Возврат;
	
	КонецЕсли;
	
	ОткрытьЗначение(Значение);

КонецПроцедуры

// Возвращает значение по умолчанию по переданному описанию типов
//   Если ОписаниеТипов пустое, возвращает Неопределено
//   Если ОписаниеТипов содержит несколько Типов, при приведении значения возвращается Неопределено
//
// Параметры:
//  ОписаниеТипаДанных  - ОписаниеТипов - Описание типа по которому надо получить значение по умолчанию
//
// Возвращаемое значение:
//   ПроизвольныйТип   - Значение зависит от переданного Описания типа
//
Функция ЗначениеПоУмолчанию(ОписаниеТипаДанных) Экспорт

	НаборТипов = ОписаниеТипаДанных.Типы();
	Если НаборТипов.Количество() = 0 Тогда
	
		Возврат Неопределено;
	
	КонецЕсли;

	Возврат ОписаниеТипаДанных.ПривестиЗначение();

КонецФункции // ()

Функция СодержитТип(ОписаниеТипаДанных, ПроверяемыйТип) Экспорт

	НаборТипов = ОписаниеТипаДанных;
	
	Если ТипЗнч(НаборТипов) = Тип("ОписаниеТипов") Тогда
	
		Возврат НаборТипов.СодержитТип(ПроверяемыйТип);
	
	КонецЕсли;
	
	Если ТипЗнч(НаборТипов) = Тип("Массив") Тогда
	
		Возврат НаборТипов.Найти(ПроверяемыйТип) <> Неопределено;
	
	КонецЕсли;
	
	Возврат НаборТипов = ПроверяемыйТип;

КонецФункции // ()

Процедура ОграничитьТипыЗначения(Свойство, Элемент) Экспорт

	ТипСвойства = Свойство.ТипЗначения;
	Элемент.ОграничениеТипа = ТипСвойства;

КонецПроцедуры

Функция ЭтоБазовыйТип(Значение) Экспорт

	Если Значение = Неопределено Тогда
	
		Возврат Истина;
	
	КонецЕсли;
	
	Возврат ЭтоПримитивныйТип(ТипЗнч(Значение));

КонецФункции // ()

Функция ЭтоПримитивныйТип(ТипЗначения) Экспорт

	ПримитивныеТипы = ПримитивныеТипы();
	
	Для каждого Примитив Из ПримитивныеТипы Цикл
	
		Если ТипЗначения = Примитив Тогда
		
			Возврат Истина;
		
		КонецЕсли;
	
	КонецЦикла;
	
	Возврат Ложь;

КонецФункции // ()

Функция ЭтоОписаниеПримитива(ОписаниеТипа) Экспорт

	ПримитивныеТипы = ПримитивныеТипы();
	
	Для каждого Примитив Из ПримитивныеТипы Цикл
	
		Если ОписаниеТипа.СодержитТип(Примитив) Тогда
		
			Возврат Истина;
		
		КонецЕсли;
	
	КонецЦикла;
	
	Возврат Ложь;

КонецФункции // ()

// TODO - Избавиться от попытки (ОбщегоНазначения.ПредопределенныйЭлемент() После обновления БСП)
&НаСервере
Функция ПредопределенныйСуществует(Менеджер, ИмяЭлемента) Экспорт

	Попытка
	
		Результат = Менеджер[ИмяЭлемента];
	
	Исключение
		Возврат Ложь;
	КонецПопытки;
	
	Возврат Истина;
КонецФункции // ()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПримитивныеТипы()

	Набор = Новый Массив;
	Набор.Добавить(Тип("Булево"));
	Набор.Добавить(Тип("Число"));
	Набор.Добавить(Тип("Строка"));
	Набор.Добавить(Тип("Дата"));
	
	Возврат Набор;

КонецФункции // ()

#КонецОбласти