
////////////////////////////////////////////////////////////////////////////////
// ЧТЕНИЕ КОНТАКТНОЙ ИНФОРМАЦИИ ОБЪЕКТОВ ДРУГИМИ ПОДСИСТЕМАМИ

// Получить значение определенного вида контактной информации у объекта
Функция ПолучитьКонтактнуюИнформацияОбъекта(Ссылка, ВидКонтактнойИнформации) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КонтактнаяИнформация.Представление
	|ИЗ
	|	Справочник." + Ссылка.Метаданные().Имя + ".КонтактнаяИнформация КАК КонтактнаяИнформация
	|ГДЕ
	|	КонтактнаяИнформация.Ссылка = &Ссылка
	|	И КонтактнаяИнформация.Вид = &Вид";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Вид",    ВидКонтактнойИнформации);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Представление;
	Иначе
		Возврат "";
	КонецЕсли;
	
КонецФункции



////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ И МОДУЛЯ ОБЪЕКТА

// Обработчик для события формы ПриСозданииНаСервере
Процедура ПриСозданииНаСервере(Форма, Объект, ИмяЭлементаДляРазмещения) Экспорт
	
	масРеквизитов = Новый Массив;
	
	// Создадим таблицу значений
	ИмяОписания = "__КИ_ОписаниеДополнительныхРеквизитов";
	масРеквизитов.Добавить(Новый РеквизитФормы(ИмяОписания,        Новый ОписаниеТипов("ТаблицаЗначений")));
	масРеквизитов.Добавить(Новый РеквизитФормы("ИмяРеквизита",     Новый ОписаниеТипов("Строка"),                                      ИмяОписания));
	масРеквизитов.Добавить(Новый РеквизитФормы("ЗначенияПолей",    Новый ОписаниеТипов("СписокЗначений"),                              ИмяОписания));
	масРеквизитов.Добавить(Новый РеквизитФормы("ТолькоРоссийский", Новый ОписаниеТипов("Булево"),                                      ИмяОписания));
	масРеквизитов.Добавить(Новый РеквизитФормы("Тип",              Новый ОписаниеТипов("ПеречислениеСсылка.ТипыКонтактнойИнформации"), ИмяОписания));
	масРеквизитов.Добавить(Новый РеквизитФормы("Вид",              Новый ОписаниеТипов("СправочникСсылка.ВидыКонтактнойИнформации"),   ИмяОписания));
	масРеквизитов.Добавить(Новый РеквизитФормы("ТипНомер",         Новый ОписаниеТипов("Число"),                                       ИмяОписания));

	
	// Получим список видов КИ
	ИмяСправочника = Объект.Ссылка.Метаданные().Имя;
	ГруппаВидовКИ = Справочники.ВидыКонтактнойИнформации["Справочник" + ИмяСправочника];
	
	Запрос = Новый Запрос;
	Запрос.Текст =
			"ВЫБРАТЬ
			|	ВидыКонтактнойИнформации.Ссылка КАК Вид,
			|	ВидыКонтактнойИнформации.Наименование,
			|	ВидыКонтактнойИнформации.Тип,
			|	ВидыКонтактнойИнформации.РедактированиеТолькоВДиалоге,
			|	ВидыКонтактнойИнформации.АдресТолькоРоссийский,
			|	ВидыКонтактнойИнформации.ПометкаУдаления КАК ПометкаУдаления,
			|	ИСТИНА КАК Использовать
			|ИЗ
			|	Справочник.ВидыКонтактнойИнформации КАК ВидыКонтактнойИнформации
			|ГДЕ
			|	ВидыКонтактнойИнформации.Родитель = &ГруппаВидовКИ
			|
			|УПОРЯДОЧИТЬ ПО
			|	ПометкаУдаления,
			|	ВидыКонтактнойИнформации.РеквизитДопУпорядочивания";
	
	Запрос.УстановитьПараметр("ГруппаВидовКИ", ГруппаВидовКИ);
	УстановитьПривилегированныйРежим(Истина);
	КонтактнаяИнформация = Запрос.Выполнить().Выгрузить();
	УстановитьПривилегированныйРежим(Ложь);
	
	
	// Добавим нужные реквизиты
	Если ТипЗнч(Объект.КонтактнаяИнформация) = Тип("ТаблицаЗначений") Тогда
		ТабЗн = Объект.КонтактнаяИнформация;
	Иначе
		ТабЗн = Объект.КонтактнаяИнформация.Выгрузить();
	КонецЕсли;
	
	Номер = 0;
	соотвВидИмя = Новый Соответствие;
	Для Каждого Стр Из КонтактнаяИнформация Цикл
		
		СтрВКИ = ТабЗн.Найти(Стр.Вид, "Вид");
		Если СтрВКИ = Неопределено И Стр.ПометкаУдаления Тогда
			Стр.Использовать = Ложь;
			Продолжить;
		КонецЕсли;
		
		Номер = Номер + 1;
		ИмяРеквизита = "__КИ_Поле" + Номер;
		масРеквизитов.Добавить(Новый РеквизитФормы(ИмяРеквизита, Новый ОписаниеТипов("Строка"), , Стр.Наименование, Истина));
		
		соотвВидИмя.Вставить(Стр.Вид, ИмяРеквизита);
		
	КонецЦикла;
	
	// Добавим новые реквизиты
	Форма.ИзменитьРеквизиты(масРеквизитов);
	
	// Создадим элементы на форме и заполним значения реквизитов
	Родитель = ?(ПустаяСтрока(ИмяЭлементаДляРазмещения), Форма, Форма.Элементы[ИмяЭлементаДляРазмещения]);
	Для Каждого Стр Из КонтактнаяИнформация Цикл
		
		Если Не Стр.Использовать Тогда
			Продолжить;
		КонецЕсли;
		
		Вид = Стр.Вид;
		ИмяРеквизита = соотвВидИмя.Получить(Вид);
		Элемент = Форма.Элементы.Добавить(ИмяРеквизита, Тип("ПолеФормы"), Родитель);
		Элемент.Вид = ВидПоляФормы.ПолеВвода;
		Элемент.ПутьКДанным = ИмяРеквизита;
		Элемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Верх;
		
		Если Стр.Тип = Перечисления.ТипыКонтактнойИнформации.Другое Тогда
			Элемент.Высота = 5;
			Элемент.МногострочныйРежим = Истина;
		КонецЕсли;
		
		Если ДляТипаКонтактнойИнформацииДоступноРедактированиеВДиалоге(Стр.Тип) Тогда
			Элемент.КнопкаВыбора = Истина;
			Если Стр.РедактированиеТолькоВДиалоге Тогда
				Элемент.РедактированиеТекста = Ложь;
				Элемент.ЦветФона = WebЦвета.Кремовый;
			КонецЕсли;
			Элемент.УстановитьДействие("НачалоВыбора", "Подключаемый_КонтактнаяИнформацияНачалоВыбора");
			Элемент.УстановитьДействие("ПриИзменении", "Подключаемый_КонтактнаяИнформацияПриИзменении");
		КонецЕсли;
		
		
		новСтр = Форма.__КИ_ОписаниеДополнительныхРеквизитов.Добавить();
		новСтр.ИмяРеквизита     = ИмяРеквизита;
		новСтр.ТолькоРоссийский = Стр.АдресТолькоРоссийский;
		новСтр.Вид              = Вид;
		новСтр.Тип              = Стр.Тип;
		новСтр.ТипНомер         = ПоТипуКонтактнойИнформацииПолучитьНомер(Стр.Тип);
		
		СтрВКИ = ТабЗн.Найти(Стр.Вид, "Вид");
		Если СтрВКИ <> Неопределено Тогда
			
			Форма[ИмяРеквизита] = СтрВКИ.Представление;
			новСтр.ЗначенияПолей   = ПреобразоватьСтрокуВСписокПолей(СтрВКИ.ЗначенияПолей);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Обработчик для события формы ПередЗаписьюНаСервере
Процедура ПередЗаписьюНаСервере(Форма, ТекущийОбъект, Отказ = Ложь) Экспорт
	
	ТекущийОбъект.КонтактнаяИнформация.Очистить();
	
	Для Каждого Стр Из Форма.__КИ_ОписаниеДополнительныхРеквизитов Цикл
		
		Представление = Форма[Стр.ИмяРеквизита];
		Если ПустаяСтрока(Представление) Тогда
			Продолжить;
		КонецЕсли;
		
		новСтр = ТекущийОбъект.КонтактнаяИнформация.Добавить();
		новСтр.Тип = Стр.Тип;
		новСтр.Вид = Стр.Вид;
		новСтр.Представление = Представление;
		
		Если Стр.ЗначенияПолей.Количество() > 0 Тогда
			новСтр.ЗначенияПолей = ПреобразоватьСписокПолейВСтроку(Стр.ЗначенияПолей);
		КонецЕсли;
		
		// Заполним значения дополнительных реквизитов таб. части
		Если Стр.Тип = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты Тогда
			// Email
			СообщениеОбОшибке = "";
			ЗаполнитьРеквизитыТабличнойЧастиДляАдресаЭлектроннойПочты(новСтр, СообщениеОбОшибке);
			Если НЕ ПустаяСтрока(СообщениеОбОшибке) Тогда
				УдалитьОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеОбОшибке, , Стр.ИмяРеквизита);
				Отказ = Истина;
			КонецЕсли;
		ИначеЕсли Стр.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес Тогда
			// Адрес
			ЗаполнитьРеквизитыТабличнойЧастиДляАдреса(новСтр, Стр.ЗначенияПолей);
		ИначеЕсли Стр.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон ИЛИ Стр.Тип = Перечисления.ТипыКонтактнойИнформации.Факс Тогда
			// Телефон/факс
			ЗаполнитьРеквизитыТабличнойЧастиДляТелефона(новСтр, Стр.ЗначенияПолей);
		ИначеЕсли Стр.Тип = Перечисления.ТипыКонтактнойИнформации.ВебСтраница Тогда
			// WWW
			ЗаполнитьРеквизитыТабличнойЧастиДляВебСтраницы(новСтр);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ЗАПОЛНЕНИЕ ДОПОЛНИТЕЛЬНЫХ РЕКВИЗИТОВ ТАБЛИЧНОЙ ЧАСТИ "КОНТАКТНАЯ ИНФОРМАЦИЯ"

// Для адреса
Процедура ЗаполнитьРеквизитыТабличнойЧастиДляАдреса(СтрокаТабличнойЧасти, ЗначенияПолей)
	
	Для Каждого ЗначениеПоля Из ЗначенияПолей Цикл
		Если ВРег(ЗначениеПоля.Представление) = "СТРАНА" Тогда
			СтрокаТабличнойЧасти.Страна = ЗначениеПоля.Значение;
		ИначеЕсли ВРег(ЗначениеПоля.Представление) = "РЕГИОН" Тогда
			СтрокаТабличнойЧасти.Регион = ЗначениеПоля.Значение;
		ИначеЕсли ВРег(ЗначениеПоля.Представление) = "ГОРОД" Тогда
			СтрокаТабличнойЧасти.Город = ЗначениеПоля.Значение;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Для адреса электронной почты
Процедура ЗаполнитьРеквизитыТабличнойЧастиДляАдресаЭлектроннойПочты(СтрокаТабличнойЧасти, СообщениеОбОшибке = "")
	
	Попытка
		Результат = УдалитьОбщегоНазначенияКлиентСервер.РазобратьСтрокуСПочтовымиАдресами(СтрокаТабличнойЧасти.Представление);
	Исключение
		СообщениеОбОшибке = ОбработкаОшибок.КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
		Возврат;
	КонецПопытки;
	
	Если Результат.Количество() > 0 Тогда
		СтрокаТабличнойЧасти.АдресЭП = Результат[0].Адрес;
		
		Поз = Найти(СтрокаТабличнойЧасти.АдресЭП, "@");
		Если Поз <> 0 Тогда
			СтрокаТабличнойЧасти.ДоменноеИмяСервера = Сред(СтрокаТабличнойЧасти.АдресЭП, Поз+1);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Для телефона и факса
Процедура ЗаполнитьРеквизитыТабличнойЧастиДляТелефона(СтрокаТабличнойЧасти, ЗначенияПолей)
	
	КодСтраны = "";
	КодГорода = "";
	НомерТелефона = "";
	
	Для Каждого ЗначениеПоля Из ЗначенияПолей Цикл
		Если ВРег(ЗначениеПоля.Представление) = "КОДСТРАНЫ" Тогда
			КодСтраны = ЗначениеПоля.Значение;
		ИначеЕсли ВРег(ЗначениеПоля.Представление) = "КОДГОРОДА" Тогда
			КодГорода = ЗначениеПоля.Значение;
		ИначеЕсли ВРег(ЗначениеПоля.Представление) = "НОМЕРТЕЛЕФОНА" Тогда
			НомерТелефона = ЗначениеПоля.Значение;
		КонецЕсли;
	КонецЦикла;
	
	Если Лев(КодСтраны, 1) = "+" Тогда
		КодСтраны = Сред(КодСтраны, 2);
	КонецЕсли;
	
	Поз = Найти(НомерТелефона, ",");
	Если Поз <> 0 Тогда
		НомерТелефона = Лев(НомерТелефона, Поз-1);
	КонецЕсли;
	
	Поз = Найти(НомерТелефона, Символы.ПС);
	Если Поз <> 0 Тогда
		НомерТелефона = Лев(НомерТелефона, Поз-1);
	КонецЕсли;
	
	СтрокаТабличнойЧасти.НомерТелефонаБезКодов = УбратьРазделителиВНомерТелефона(НомерТелефона);
	СтрокаТабличнойЧасти.НомерТелефона         = УбратьРазделителиВНомерТелефона(КодСтраны + КодГорода + НомерТелефона);
		
КонецПроцедуры

Функция УбратьРазделителиВНомерТелефона(Знач СтрНомер)
	
	Поз = Найти(СтрНомер, ",");
	Если Поз <> 0 Тогда
		СтрНомер = Лев(СтрНомер, Поз-1);
	КонецЕсли;
	
	СтрНомер = СтрЗаменить(СтрНомер, "-", "");
	СтрНомер = СтрЗаменить(СтрНомер, " ", "");
	СтрНомер = СтрЗаменить(СтрНомер, "+", "");

	Возврат СтрНомер;

КонецФункции

// Для веб страницы
Процедура ЗаполнитьРеквизитыТабличнойЧастиДляВебСтраницы(СтрокаТабличнойЧасти)

	Стр = СтрокаТабличнойЧасти.Представление;

	// Вырежем имя протокола
	Поз = Найти(Стр, "://");
	Если Поз <> 0 Тогда
		ЛевЧасть = НРег(Лев(Стр, Поз-1));
		Если (ЛевЧасть = "http") ИЛИ (ЛевЧасть = "https") Тогда
			Стр = Сред(Стр, Поз + 3);
		КонецЕсли;
	КонецЕсли;

	// Вырежем слева www
	Если НРег(Лев(Стр, 4)) = "www." Тогда
		Стр = Сред(Стр, 5);
	КонецЕсли;
	
	Поз = Найти(Стр, "/");
	СтрокаТабличнойЧасти.ДоменноеИмяСервера = ?(Поз = 0, Стр, Лев(Стр, Поз-1));
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ

// Проверить по типу контактной информации, доступно ли редактирование в диалоге
Функция ДляТипаКонтактнойИнформацииДоступноРедактированиеВДиалоге(Тип)
	
	Если Тип = Перечисления.ТипыКонтактнойИнформации.Адрес Тогда
		Возврат Истина;
	ИначеЕсли Тип = Перечисления.ТипыКонтактнойИнформации.Телефон Тогда
		Возврат Истина;
	ИначеЕсли Тип = Перечисления.ТипыКонтактнойИнформации.Факс Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

// По типу контактной информации получить номер.
//
// Номер используется при определении способа редактирования вида контактной
// информации:
// 1 - Адрес
// 2 - Телефон или факс
// 0 - Все остальные типы
//
Функция ПоТипуКонтактнойИнформацииПолучитьНомер(Тип)
	
	Если Тип = Перечисления.ТипыКонтактнойИнформации.Адрес Тогда
		Возврат 1;
	ИначеЕсли Тип = Перечисления.ТипыКонтактнойИнформации.Телефон ИЛИ Тип = Перечисления.ТипыКонтактнойИнформации.Факс Тогда
		Возврат 2;
	Иначе
		Возврат 0;
	КонецЕсли;
	
КонецФункции

// Преобразовать список полей в строку
Функция ПреобразоватьСписокПолейВСтроку(СоответствиеПолей)
	
	Результат = "";
	Для Каждого Элемент Из СоответствиеПолей Цикл
		
		Значение = Элемент.Значение;
		Если ПустаяСтрока(Значение) Тогда
			Продолжить;
		КонецЕсли;
		
		Результат = Результат + ?(Результат = "", "", Символы.ПС) + 
			Элемент.Представление + "=" + СтрЗаменить(Значение, Символы.ПС, Символы.ПС + Символы.Таб);
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

// Преобразовать строку полей в список значений
Функция ПреобразоватьСтрокуВСписокПолей(СтрокаПолей)
	
	Результат = Новый СписокЗначений;
	ПоследнийЭлемент = Неопределено;
	
	Для Сч = 1 По СтрЧислоСтрок(СтрокаПолей) Цикл
		Стр = СтрПолучитьСтроку(СтрокаПолей, Сч);
		Если Лев(Стр, 1) = Символы.Таб Тогда
			Если ПоследнийЭлемент <> Неопределено Тогда
				ПоследнийЭлемент.Значение = ПоследнийЭлемент.Значение + Символы.ПС + Сред(Стр, 2);
			КонецЕсли;
		Иначе
			Поз = Найти(Стр, "=");
			Если Поз <> 0 Тогда
				ПоследнийЭлемент = Результат.Добавить(Сред(Стр, Поз+1), Лев(Стр, Поз-1));
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции


////////////////////////////////////////////////////////////////////////////////
// ОБНОВЛЕНИЕ ИНФОРМАЦИОННОЙ БАЗЫ

// Обновить один вид контактной информации
Процедура ОбновитьВидКИ(ВидКИ, Тип, МожноИзменятьСпособРедактирования, РедактированиеТолькоВДиалоге, АдресТолькоРоссийский) Экспорт

	Объект = ВидКИ.ПолучитьОбъект();
	ЗаблокироватьДанныеДляРедактирования(Объект.Ссылка);
	Объект.Тип                               = Тип;
	Объект.МожноИзменятьСпособРедактирования = МожноИзменятьСпособРедактирования;
	Объект.РедактированиеТолькоВДиалоге      = РедактированиеТолькоВДиалоге;
	Объект.АдресТолькоРоссийский             = АдресТолькоРоссийский;
	Объект.Записать();

КонецПроцедуры

// Загрузить справочник стран мира
Процедура ЗагрузитьСтраныМира() Экспорт
	
	// Получим список уже загруженных стран
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СтраныМира.Код КАК Код
	|ИЗ
	|	Справочник.СтраныМира КАК СтраныМира
	|
	|	УПОРЯДОЧИТЬ ПО Код";
	
	ТабКоды = Запрос.Выполнить().Выгрузить();
	
	Макет = Справочники.СтраныМира.ПолучитьМакет("Классификатор");
	ТабЗн = УдалитьОбщегоНазначения.ПрочитатьXMLВТаблицу(Макет.ПолучитьТекст()).Данные;
	
	Для Каждого Стр Из ТабЗн Цикл
		Если ТабКоды.Найти(Стр.Code, "Код") <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Элемент = Справочники.СтраныМира.СоздатьЭлемент();
		Элемент.Код				= Стр.Code;
		Элемент.Наименование	= Стр.ShortName;
		Элемент.КодАльфа2		= Стр.Alpha2;
		Элемент.КодАльфа3		= Стр.Alpha3;
		Элемент.НаименованиеПолное = Стр.FullName;
		Элемент.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура РазбитьНомерТелефонаНаСоставляющие(Строка, Номер) Экспорт
	ОчищенныйНомер = бит_ТелефонияКлиентСервер.ОчиститьНомерТолькоЦифры(Номер);
	НомерТелефона = прав(ОчищенныйНомер, 7);
	стр = Лев(ОчищенныйНомер, стрДлина(ОчищенныйНомер) - 7);
	КодГорода = Прав(Стр, 3);
	КодСтраны = Лев(ОчищенныйНомер, стрДлина(ОчищенныйНомер) - 10);  
	
	Если ЗначениеЗаполнено(КодСтраны) Тогда
		КодСтраны = "+" + КодСтраны;
	КонецЕсли;
	
	Представление = СокрЛП(КодСтраны);
	
	Если Не ПустаяСтрока(КодГорода) Тогда
		Представление = Представление + ?(ПустаяСтрока(Представление), "", " ") + "(" + СокрЛП(КодГорода) + ")";
	КонецЕсли;
	
	Если Не ПустаяСтрока(НомерТелефона) Тогда
		Представление = Представление + ?(ПустаяСтрока(Представление), "", " ") + СокрЛП(НомерТелефона);
	КонецЕсли;

	Строка.Номер = Представление;
	Строка.НомерДляПоиска = КодГорода + НомерТелефона;
	Строка.НомерТелефона = НомерТелефона;
	Строка.КодГорода = КодГорода;
	Строка.КодСтраны = КодСтраны;
КонецПроцедуры