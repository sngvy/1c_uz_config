
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаСервереБезКонтекста
// Функция возвращает массив структур имен и сининимов справочников, имеющих табличную часть "КонтактнаяИнформация"
//
// Параметры:
//	Нет.
//
// Возвращаемое значение:
//	Массив	- Массив имен справочников
//
Функция SMS4B_ПолучитьМассивСтруктурСправочников()
	МассивСтруктурСправочников = Новый Массив;
	УстановитьПривилегированныйРежим(Истина); 	
	Для Каждого ТекущийСправочник Из Метаданные.Справочники Цикл
		Попытка
			Если НЕ ТекущийСправочник.ТабличныеЧасти.Найти("КонтактнаяИнформация") = Неопределено Тогда
				СтруктураСправочника = Новый Структура;
				СтруктураСправочника.Вставить("Имя",		ТекущийСправочник.Имя);
				СтруктураСправочника.Вставить("Синоним",	ТекущийСправочник.Синоним);
				МассивСтруктурСправочников.Добавить(СтруктураСправочника);	
			КонецЕсли;
		Исключение
		КонецПопытки;	
	КонецЦикла;
	УстановитьПривилегированныйРежим(Ложь); 	
	Возврат МассивСтруктурСправочников;
КонецФункции // SMS4B_ПолучитьМассивСтруктурСправочников()

&НаСервереБезКонтекста
// Функция возвращает номер телефона в котором убраны все символы, кроме цифр
//
// Параметры:
//	НомерТелефона	- Строка	- Номер телефона
//
// Возвращаемое значение:
//	Строка	- Очищенный номер телефона
//
Функция SMS4B_УбратьИзНомераЛишниеСимволы(НомерТелефона)
	СтрокаЦифр = "0123456789";
	ОчищенныйНомер = "";
	ДлинаНомера = СтрДлина(НомерТелефона);
	Для НомерСимвола = 1 По ДлинаНомера Цикл
		ТекущийСимвол = Сред(НомерТелефона, НомерСимвола, 1);
		Если Найти(СтрокаЦифр, ТекущийСимвол) > 0 Тогда
			ОчищенныйНомер = ОчищенныйНомер + ТекущийСимвол;
		КонецЕсли;
	КонецЦикла;
	Возврат ОчищенныйНомер;
КонецФункции // SMS4B_УбратьИзНомераЛишниеСимволы()
	
&НаСервереБезКонтекста
// Функция возвращает массив номеров мобильных телефонов получателя
//
// Параметры:
//	Получатель	- СправочникСсылка	- Получатель
//
// Возвращаемое значение:
//	Массив	- Массив номеров мобильных телефонов
//
Функция SMS4B_ПолучитьМобильныеТелефоныПолучателя(Получатель, ИмяТипаСправочника)
	МассивМобильныхНомеров = Новый Массив;
	Если ЗначениеЗаполнено(Получатель) Тогда
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Ссылка", Получатель);
	 	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	 	               |	КонтактнаяИнформация.Представление КАК НомерТелефона
	 	               |ИЗ
	 	               |	Справочник." + ИмяТипаСправочника + ".КонтактнаяИнформация КАК КонтактнаяИнформация
	 	               |ГДЕ
	 	               |	КонтактнаяИнформация.Ссылка = &Ссылка";
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			ТекущийНомер	= SMS4B_УбратьИзНомераЛишниеСимволы(Выборка.НомерТелефона);
			ЕстьПлюс		= (Лев(Выборка.НомерТелефона, 1) = "+");
			Если СтрДлина(ТекущийНомер) = 11 Тогда
				ПервыйСимвол = Лев(ТекущийНомер, 1);
				ВторойСимвол = Сред(ТекущийНомер, 2, 1);
				Если ВторойСимвол = "9" Тогда
					Если ПервыйСимвол = "8" Тогда
						Если ЕстьПлюс Тогда
							МассивМобильныхНомеров.Добавить(ТекущийНомер);
						Иначе	
							// Меняем первый символ на "7"
							МассивМобильныхНомеров.Добавить("7" + Сред(ТекущийНомер, 2));
						КонецЕсли;	
					ИначеЕсли  ПервыйСимвол = "7" Тогда	
						МассивМобильныхНомеров.Добавить(ТекущийНомер);
					ИначеЕсли ЕстьПлюс Тогда
						МассивМобильныхНомеров.Добавить(ТекущийНомер);
					КонецЕсли;	
				ИначеЕсли ЕстьПлюс Тогда
					МассивМобильныхНомеров.Добавить(ТекущийНомер);
				КонецЕсли;	
			ИначеЕсли СтрДлина(ТекущийНомер) = 10 Тогда
				// Возможно не указан код страны
				ПервыйСимвол = Лев(ТекущийНомер, 1);
				Если ПервыйСимвол = "9" Тогда
					Если ЕстьПлюс Тогда
						МассивМобильныхНомеров.Добавить(ТекущийНомер);
					Иначе	
						// Добавляем код страны "7"
						МассивМобильныхНомеров.Добавить("7" + ТекущийНомер);
					КонецЕсли;
				ИначеЕсли ЕстьПлюс Тогда
					МассивМобильныхНомеров.Добавить(ТекущийНомер);
				КонецЕсли;
			ИначеЕсли ЕстьПлюс Тогда
				МассивМобильныхНомеров.Добавить(ТекущийНомер);
			КонецЕсли;	
		КонецЦикла;	
	КонецЕсли;
	Возврат МассивМобильныхНомеров;
КонецФункции // SMS4B_ПолучитьМобильныеТелефоныПолучателя()

&НаСервереБезКонтекста
// Функция возвращает массив элементов переданного справочника
//
// Параметры:
//	Справочник	- Строка	- Имя справочника в конфигурации
//
// Возвращаемое значение:
//	Массив	- Массив элементов справочника
//
Функция SMS4B_ПолучитьМассивПолучателей(Справочник, Владелец = Неопределено)
	МассивПолучателей = Новый Массив;
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Владелец", Владелец);
	Запрос.Текст = "";
 	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	               |	Получатели.Ссылка
	               |ИЗ
	               |	Справочник." + Справочник + " КАК Получатели
	               |ГДЕ
	               |	НЕ Получатели.ПометкаУдаления";
	УстановитьПривилегированныйРежим(Истина); 	
	Если ЗначениеЗаполнено(Владелец) И (Метаданные.Справочники[Справочник].Владельцы.Количество() > 0) Тогда
		Запрос.Текст = Запрос.Текст + "
				   |	И Получатели.Владелец = &Владелец";
	КонецЕсли;	
	УстановитьПривилегированныйРежим(Ложь); 	
	Запрос.Текст = Запрос.Текст + "
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Получатели.Наименование";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если НЕ Выборка.Ссылка.ЭтоГруппа Тогда
			МассивПолучателей.Добавить(Выборка.Ссылка);
		КонецЕсли;	
	КонецЦикла;	
	Возврат МассивПолучателей;
КонецФункции // SMS4B_ПолучитьМассивПолучателей()

&НаСервереБезКонтекста
// Функция возвращает владельца переданного справочника
//
// Параметры:
//	Справочник	- Строка	- Имя справочника в конфигурации
//
// Возвращаемое значение:
//	Строка	- Имя справочника-владельца в конфигурации
//
Функция SMS4B_ПолучитьВладельца(Справочник)
	ВладелецСправочника = "";
	УстановитьПривилегированныйРежим(Истина); 	
	Для Каждого ТекущийВладалец Из Метаданные.Справочники[Справочник].Владельцы Цикл
		ВладелецСправочника = ТекущийВладалец.Имя;
		Прервать;
	КонецЦикла;	
	УстановитьПривилегированныйРежим(Ложь); 	
	Возврат ВладелецСправочника;
КонецФункции // SMS4B_ПолучитьВладельца()	

&НаСервере
// Процедура заполняет таблицу телефонов для получателя
//
// Параметры:
//	Получатель	- СправочникСсылка	- Получатель
//
Процедура SMS4B_ЗаполнитьТаблицуТелефонов(Получатель)
	смсНомераТелефонов.Очистить();
	МассивТелефонов = SMS4B_ПолучитьМобильныеТелефоныПолучателя(Получатель, смсТекущийСправочник);
	Для Каждого ЭлементМассива Из МассивТелефонов Цикл
		НоваяСтрока = смсНомераТелефонов.Добавить();
		НоваяСтрока.НомерТелефона = ЭлементМассива;
	КонецЦикла;	
КонецПроцедуры // SMS4B_ЗаполнитьТаблицуТелефонов()

&НаКлиенте
// Процедура - обработчик ожидания события "ПриАктивизацииСтроки" таблицы формы "смсПолучатели"
//
// Параметры:
//	Нет.
//
Процедура SMS4B_ОбработчикПолучателиПриАктивизацииСтроки()
	ОтключитьОбработчикОжидания("SMS4B_ОбработчикПолучателиПриАктивизацииСтроки");
	ТД = Элементы.смсПолучатели.ТекущиеДанные;
	Если ТД = Неопределено Тогда
		Возврат;
	ИначеЕсли смсТекущийПолучатель = ТД.Получатель Тогда
		Возврат;
	КонецЕсли;
	смсТекущийПолучатель = ТД.Получатель;
	SMS4B_ЗаполнитьТаблицуТелефонов(смсТекущийПолучатель);	
КонецПроцедуры // SMS4B_ОбработчикПолучателиПриАктивизацииСтроки()	

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ФОРМЫ

&НаКлиенте
// Процедура - обработчик события "ОбработкаВыбора" элемента формы "смсСправочник"
//
Процедура смсСправочникОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	смсИмяВладельца = SMS4B_ПолучитьВладельца(ВыбранноеЗначение);
	Если ЗначениеЗаполнено(смсИмяВладельца) Тогда
		Элементы.смсВладелец.Видимость = Истина;
		Элементы.смсВладелец.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка." + смсИмяВладельца);
	Иначе
		Элементы.смсВладелец.Видимость = Ложь;
	КонецЕсли;	
	смсТекущийСправочник = ВыбранноеЗначение;
	смсВладелец = Неопределено;
	смсВладелецПриИзменении(Элемент);
КонецПроцедуры // смсСправочникОбработкаВыбора()

&НаКлиенте
// Процедура - обработчик события "ПриИзменении" элемента формы "смсВладелец"
//
Процедура смсВладелецПриИзменении(Элемент)
	смсПолучатели.Очистить();
	смсНомераТелефонов.Очистить();
	МассивПолучателей = SMS4B_ПолучитьМассивПолучателей(смсТекущийСправочник, смсВладелец);
	Для Каждого ЭлементМассива Из МассивПолучателей Цикл
		НоваяСтрока = смсПолучатели.Добавить();
		НоваяСтрока.Получатель = ЭлементМассива;
	КонецЦикла;	
КонецПроцедуры // смсВладелецПриИзменении()

&НаКлиенте
// Процедура - обработчик события "ОбработкаВыбора" элемента формы "смсВладелец"
//
Процедура смсВладелецНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимВыбора",			Истина);
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе",	Истина);
	ПараметрыФормы.Вставить("МножественныйВыбор",	Ложь);
	Если ЗначениеЗаполнено(смсВладелец) Тогда
		ПараметрыФормы.Вставить("ТекущаяСтрока",	смсВладелец);
	КонецЕсли;	
	ПараметрыФормы.Вставить("ВыборГруппИЭлементов", ИспользованиеГруппИЭлементов.Элементы);	
	ОткрытьФорму("Справочник." + смсИмяВладельца + ".ФормаВыбора", ПараметрыФормы, Элемент, , ВариантОткрытияОкна.ОтдельноеОкно);
КонецПроцедуры // смсВладелецНачалоВыбора()

&НаКлиенте
// Процедура - обработчик события "Очистка" элемента формы "смсВладелец"
//
Процедура смсВладелецОчистка(Элемент, СтандартнаяОбработка)
	смсВладелец = Неопределено;
	смсВладелецПриИзменении(Элемент);
КонецПроцедуры // смсВладелецОчистка()

&НаКлиенте
// Процедура - обработчик события "Выбор" таблицы формы "смсПолучатели"
//
Процедура смсПолучателиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ТД = Элементы.смсПолучатели.ТекущиеДанные;
	Если ТД = Неопределено Тогда Возврат; КонецЕсли;
	СтруктураПодбора = Новый Структура();
	СтруктураПодбора.Вставить("Получатель", ТД.Получатель);
	МассивНомеров = Новый Массив;
	Для Каждого ТекущаяСтрока Из смсНомераТелефонов Цикл
		МассивНомеров.Добавить(ТекущаяСтрока.НомерТелефона);
	КонецЦикла;	
	СтруктураПодбора.Вставить("Номера", МассивНомеров);
	Оповестить("SMS4B_СтруктураПодбора", СтруктураПодбора);
КонецПроцедуры // смсПолучателиВыбор()

&НаКлиенте
// Процедура - обработчик события "ПриАктивизацииСтроки" таблицы формы "смсПолучатели"
//
Процедура смсПолучателиПриАктивизацииСтроки(Элемент)
	ПодключитьОбработчикОжидания("SMS4B_ОбработчикПолучателиПриАктивизацииСтроки", 0.1, Истина);
КонецПроцедуры // смсПолучателиПриАктивизацииСтроки()

&НаКлиенте
// Процедура - обработчик события "Выбор" таблицы формы "смсНомераТелефонов"
//
Процедура смсНомераТелефоновВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ТД = Элементы.смсПолучатели.ТекущиеДанные;
	Если ТД = Неопределено Тогда Возврат; КонецЕсли;
	СтруктураПодбора = Новый Структура();
	СтруктураПодбора.Вставить("Получатель", ТД.Получатель);
	МассивНомеров = Новый Массив;
	ТД = Элементы.смсНомераТелефонов.ТекущиеДанные;
	Если ТД = Неопределено Тогда
		Для Каждого ТекущаяСтрока Из смсНомераТелефонов Цикл
			МассивНомеров.Добавить(ТекущаяСтрока.НомерТелефона);
		КонецЦикла;	
	Иначе
		МассивНомеров.Добавить(ТД.НомерТелефона);
	КонецЕсли;	
	СтруктураПодбора.Вставить("Номера", МассивНомеров);
	Оповестить("SMS4B_СтруктураПодбора", СтруктураПодбора);
КонецПроцедуры // смсНомераТелефоновВыбор()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаКлиенте
// Процедура - обработчик события формы "ПриОткрытии"
//
Процедура ПриОткрытии(Отказ)
	// Заполняем список справочников, имеющих ТЧ "Контактная информация"
	МассивСтруктурСправочников = SMS4B_ПолучитьМассивСтруктурСправочников();
	Если МассивСтруктурСправочников.Количество() = 0 Тогда
		Отказ = Истина;
	Иначе
		Элементы.смсСправочник.СписокВыбора.Очистить();
		Для Каждого ЭлементМассива Из МассивСтруктурСправочников Цикл
			Элементы.смсСправочник.СписокВыбора.Добавить(ЭлементМассива.Имя, ЭлементМассива.Синоним);
		КонецЦикла;	
		Элементы.смсСправочник.СписокВыбора.СортироватьПоПредставлению(НаправлениеСортировки.Возр);
		смсТекущийСправочник = Элементы.смсСправочник.СписокВыбора[0].Значение;
		смсСправочникОбработкаВыбора(Неопределено, смсТекущийСправочник, Истина);
	КонецЕсли;
КонецПроцедуры // ПриОткрытии()
