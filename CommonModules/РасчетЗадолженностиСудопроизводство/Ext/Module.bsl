
Функция РассчитатьГрафикИндексации(стрДанные, СписокПлатежей) Экспорт
	СписокПлатежей.Сортировать("ДатаПлатежа");
	
	ГрафикИндексации = Новый ТаблицаЗначений;  
	
	Для Каждого Реквизит Из Метаданные.Обработки.РасчетИндексацииЗадолженности.ТабличныеЧасти.ГрафикИндексации.Реквизиты Цикл  
		ГрафикИндексации.Колонки.Добавить(Реквизит.Имя, Реквизит.Тип);  
	КонецЦикла; 	
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	СписокПлатежей.СуммаПлатежа КАК СуммаПлатежа,
	|	СписокПлатежей.ДатаПлатежа КАК ДатаПлатежа
	|ПОМЕСТИТЬ вт_Платежи
	|ИЗ
	|	&СписокПлатежей КАК СписокПлатежей
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_Платежи.ДатаПлатежа КАК ДатаПлатежа,
	|	вт_Платежи.СуммаПлатежа КАК СуммаПлатежа,
	|	НАЧАЛОПЕРИОДА(вт_Платежи.ДатаПлатежа, МЕСЯЦ) КАК МесяцСписания
	|ИЗ
	|	вт_Платежи КАК вт_Платежи
	|
	|УПОРЯДОЧИТЬ ПО
	|	МесяцСписания,
	|	ДатаПлатежа");
	Запрос.УстановитьПараметр("СписокПлатежей", СписокПлатежей);
	СписокПлатежей = Запрос.Выполнить().Выгрузить();	
	
	БазаНачисления = стрДанные.СуммаЗадолженности;
	КУплате = стрДанные.СуммаЗадолженности;
	ОстаткиОсновнойДолг = стрДанные.СуммаЗадолженности;
	ОстаткиПроценты = 0;
	
	Капитализация = стрДанные.КапитализацияПроцентов;
	
	Если стрДанные.ИсключитьКрайниеМесяцы Тогда
		стрДатаРасчета = НачалоМесяца(стрДанные.ДатаРасчета) - 24*3600;
		НачалоПериода = КонецМесяца(стрДанные.ДатаРешения) + 1;
	Иначе
		стрДатаРасчета = стрДанные.ДатаРасчета;
		НачалоПериода = стрДанные.ДатаРешения;
	КонецЕсли;
	//Если стрДанные.ПереноситьОплатыНаНачалоМесяца Тогда
	//	Пока НачалоПериода <= стрДатаРасчета Цикл
	//		стр = ЭтотОбъект.ГрафикИндексации.Добавить();
	//		
	//		стр.НачалоПериода = НачалоПериода;
	//		
	//		КонецПериода = мин(стрДатаРасчета, НачалоДня(КонецМесяца(НачалоПериода)));
	//		
	//		Платежи = СписокПлатежей.НайтиСтроки(Новый Структура("ДатаПлатежа", НачалоПериода));
	//		Если Платежи.Количество() > 0 Тогда
	//			стр.СуммаПлатежа = Платежи[0].СуммаПлатежа;
	//		КонецЕсли;
	//		стр.КонецПериода = КонецПериода;
	//		
	//		НачалоПериода = КонецПериода + 24*3600;
	//	КонецЦикла;	
	//Иначе
	//	
	//КонецЕсли;
	
	Пока НачалоПериода <= стрДатаРасчета Цикл
		Платежи = СписокПлатежей.НайтиСтроки(Новый Структура("МесяцСписания", НачалоПериода));
		Для Каждого Платеж Из Платежи Цикл
			стр = ГрафикИндексации.Добавить();
			стр.НачалоПериода = Платеж.ДатаПлатежа;
			стр.СуммаПлатежа = Платеж.СуммаПлатежа;
		КонецЦикла;
		
		
		стр = ГрафикИндексации.Добавить();
		
		стр.НачалоПериода = НачалоПериода;
		
		КонецПериода = мин(стрДатаРасчета, НачалоДня(КонецМесяца(НачалоПериода)));
		
		стр.КонецПериода = КонецПериода;
		
		НачалоПериода = КонецПериода + 24*3600;
	КонецЦикла;	
	
	
	Для Каждого стр Из ГрафикИндексации Цикл
		Если Капитализация Тогда
			БазаНачисления = КУплате;
		Иначе
			БазаНачисления = ОстаткиОсновнойДолг;
		КонецЕсли;
		стр.Сумма = БазаНачисления;
		СуммаПлатежа = стр.СуммаПлатежа;
		
		Если СуммаПлатежа = 0 Тогда
			стр.Дни = (стр.КонецПериода - стр.НачалоПериода)/24/3600 + 1;
			стр.ИПЦ = ПолучитьЗначениеИПЦ(НачалоМесяца(стр.НачалоПериода), стрДанные.Территория);
			
			КоличествоДнейВМесяце = КоличествоДнейВМесяце(стр.НачалоПериода);
			
			
			
			
			
			стр.Проценты = ?(стр.ИПЦ > 0, РасчетЗадолженностиМФО.ОкруглитьЧисло((стр.ИПЦ - 100) * БазаНачисления * стр.Дни / КоличествоДнейВМесяце / 100, Перечисления.ПорядкиОкругления.Окр0_01), 0);
		КонецЕсли;
		
		стр.ОстаткиОсновнойДолг = ОстаткиОсновнойДолг;
		стр.ОстаткиПроценты = ОстаткиПроценты + стр.Проценты;
		
		
		Если СуммаПлатежа > 0 И Капитализация Тогда
			стр.ОплатаПроценты = мин(стр.ОстаткиПроценты, СуммаПлатежа);
			стр.ОстаткиПроценты = стр.ОстаткиПроценты - стр.ОплатаПроценты;
			СуммаПлатежа = СуммаПлатежа - стр.ОплатаПроценты;
		КонецЕсли;
		
		Если СуммаПлатежа > 0 Тогда
			стр.ОплатаОсновнойДолг = мин(стр.ОстаткиОсновнойДолг, СуммаПлатежа);
			стр.ОстаткиОсновнойДолг = стр.ОстаткиОсновнойДолг - стр.ОплатаОсновнойДолг;
			СуммаПлатежа = СуммаПлатежа - стр.ОплатаОсновнойДолг;
		КонецЕсли; 
		стр.Переплата = СуммаПлатежа;
		стр.КУплате = стр.ОстаткиОсновнойДолг + стр.ОстаткиПроценты;
		
		КУплате = стр.КУплате;
		ОстаткиПроценты = стр.ОстаткиПроценты;
		ОстаткиОсновнойДолг = стр.ОстаткиОсновнойДолг;
		
		
		//	НачалоПериода = КонецПериода + 24*3600;
	КонецЦикла;	
	
	Возврат ГрафикИндексации;
КонецФункции


Функция РассчитатьНачислениеПроцентов395(стрДанные, ИсторияПлатежей) Экспорт
	НачалоПериода = стрДанные.НачалоПериода;
	КонецПериода = стрДанные.КонецПериода;
	СуммаЗадолженности = стрДанные.СуммаЗадолженности;
	
	Расчет = Новый ТаблицаЗначений;  

	Для Каждого Реквизит Из Метаданные.Обработки.РасчетПроцентов395.ТабличныеЧасти.РасчетПроцентов.Реквизиты Цикл  
		Расчет.Колонки.Добавить(Реквизит.Имя, Реквизит.Тип);  
	КонецЦикла; 	
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ВЫБОР
	                      |		КОГДА ИсторияПлатежей.ВидДвижения = ЗНАЧЕНИЕ(Перечисление.ВидДвиженияЗадолженности.Начисление)
	                      |			ТОГДА ИсторияПлатежей.ДатаПлатежа
	                      |		ИНАЧЕ ДОБАВИТЬКДАТЕ(ИсторияПлатежей.ДатаПлатежа, ДЕНЬ, 1)
	                      |	КОНЕЦ КАК Период,
	                      |	ИсторияПлатежей.ДатаПлатежа КАК ДатаПлатежа,
	                      |	ИсторияПлатежей.СуммаПлатежа КАК СуммаПлатежа,
	                      |	ИсторияПлатежей.ВидДвижения КАК ВидДвижения
	                      |ПОМЕСТИТЬ вт_ИсторияПлатежей
	                      |ИЗ
	                      |	&ИсторияПлатежей КАК ИсторияПлатежей
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	вт_ИсторияПлатежей.Период КАК НачалоПериода
	                      |ПОМЕСТИТЬ вт_Периоды
	                      |ИЗ
	                      |	вт_ИсторияПлатежей КАК вт_ИсторияПлатежей
	                      |ГДЕ
	                      |	вт_ИсторияПлатежей.Период > &НачалоПериода
	                      |	И вт_ИсторияПлатежей.Период <= &КонецПериода
	                      |
	                      |ОБЪЕДИНИТЬ
	                      |
	                      |ВЫБРАТЬ
	                      |	АЭ_ЗначенияВидовПроцентныхСтавок.Период
	                      |ИЗ
	                      |	РегистрСведений.АЭ_ЗначенияВидовПроцентныхСтавок КАК АЭ_ЗначенияВидовПроцентныхСтавок
	                      |ГДЕ
	                      |	АЭ_ЗначенияВидовПроцентныхСтавок.Период > &НачалоПериода
	                      |	И АЭ_ЗначенияВидовПроцентныхСтавок.Период <= &КонецПериода
	                      |	И АЭ_ЗначенияВидовПроцентныхСтавок.ВидСтавки = &ВидСтавки
	                      |
						  //|ОБЪЕДИНИТЬ
						  //|
						  //|ВЫБРАТЬ
						  //|	ДОБАВИТЬКДАТЕ(&КонецПериода, ДЕНЬ, 1)
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	вт_Периоды.НачалоПериода КАК НачалоПериода,
	                      |	вт_ИсторияПлатежей.ДатаПлатежа КАК ДатаПлатежа,
	                      |	вт_ИсторияПлатежей.СуммаПлатежа КАК СуммаПлатежа,
	                      |	вт_ИсторияПлатежей1.ДатаПлатежа КАК ДатаНачисления,
	                      |	вт_ИсторияПлатежей1.СуммаПлатежа КАК СуммаНачисления
	                      |ИЗ
	                      |	вт_Периоды КАК вт_Периоды
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ вт_ИсторияПлатежей КАК вт_ИсторияПлатежей
	                      |		ПО вт_Периоды.НачалоПериода = вт_ИсторияПлатежей.Период
	                      |			И (вт_ИсторияПлатежей.ВидДвижения = ЗНАЧЕНИЕ(Перечисление.ВидДвиженияЗадолженности.Оплата))
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ вт_ИсторияПлатежей КАК вт_ИсторияПлатежей1
	                      |		ПО вт_Периоды.НачалоПериода = вт_ИсторияПлатежей1.Период
	                      |			И (вт_ИсторияПлатежей1.ВидДвижения = ЗНАЧЕНИЕ(Перечисление.ВидДвиженияЗадолженности.Начисление))
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	НачалоПериода");
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	Запрос.УстановитьПараметр("ВидСтавки", Справочники.АЭ_ВидыСтавок.КлючеваяСтавкаЦБ);
	
	Запрос.УстановитьПараметр("ИсторияПлатежей", ИсторияПлатежей);
	
	Результат = Запрос.Выполнить().Выбрать();
	
	стрРасчет = Расчет.Добавить();
	стрРасчет.НачалоПериода = НачалоПериода;
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	к = 0;
	Для Каждого стр Из Результат Цикл
		стрРасчет.КонецПериода = стр.НачалоПериода - 86400;
		стрРасчет.Дни = (стрРасчет.КонецПериода - стрРасчет.НачалоПериода)/86400 + 1;
		
		
		к = к + 1;
		//Если к < Результат.Количество()-1 Тогда
			стрРасчет = Расчет.Добавить();
			ЗаполнитьЗначенияСвойств(стрРасчет, стр);
		//КонецЕсли;
	КонецЦикла;
	стрРасчет.КонецПериода = КонецПериода;
	стрРасчет.Дни = (стрРасчет.КонецПериода - стрРасчет.НачалоПериода)/86400 + 1;

	Для Каждого стрРасчет из Расчет Цикл
		СуммаЗадолженности = СуммаЗадолженности + стрРасчет.СуммаНачисления - стрРасчет.СуммаПлатежа;
		стрРасчет.СуммаЗадолженности = СуммаЗадолженности;
		стрРасчет.ДнейВГоду = ДеньГода(КонецГода(стрРасчет.НачалоПериода));
		
		Срез = РегистрыСведений.АЭ_ЗначенияВидовПроцентныхСтавок.СрезПоследних(стрРасчет.НачалоПериода, Новый Структура("ВидСтавки", Справочники.АЭ_ВидыСтавок.КлючеваяСтавкаЦБ));
		
		стрРасчет.ПроцентнаяСтавка = Срез[0].Процент;
		
		СуммаПроценты = стрРасчет.СуммаЗадолженности * стрРасчет.Дни * стрРасчет.ПроцентнаяСтавка / 100 / стрРасчет.ДнейВГоду;
		стрРасчет.Проценты = РасчетЗадолженностиМФО.ОкруглитьЧисло(СуммаПроценты, Перечисления.ПорядкиОкругления.Окр0_01);
	КонецЦикла;
	
	Возврат Расчет;
КонецФункции


Функция ПолучитьЗначениеИПЦ(Период, Территория)
	Менеджер = РегистрыСведений.ЗначенияИПЦ.СоздатьМенеджерЗаписи();
	Менеджер.ПериодИПЦ = Период;
	Менеджер.Территория = Территория;
	
	Менеджер.Прочитать();
	Возврат Менеджер.Значение;
КонецФункции

Функция КоличествоДнейВМесяце(Период)
	Возврат (НачалоДня(КонецМесяца(Период)) - НачалоМесяца(Период))/3600/24 + 1;
КонецФункции

Процедура ПечатнаяФорма208(ТабДок, Расчет, ГрафикИндексации) Экспорт
	Макет = Документы.РасчетИндексацииЗадолженности208.ПолучитьМакет("Макет");

	к = ГрафикИндексации.Количество();
	ОбластьШапка  = Макет.ПолучитьОбласть("Шапка");
	ОбластьШапка.Параметры.ФИО = СклонениеФИО.daСклонение(Расчет.Займ.Должник.Наименование,"Р",,,);
	ОбластьШапка.Параметры.НомерДела = Расчет.СудебноеРешение.НомерДела;
	ОбластьШапка.Параметры.СуммаИндексации = Формат(Расчет.СуммаЗадолженности, "ЧДЦ=2");
	ОбластьШапка.Параметры.ДатаРешенияСуда = Формат(Расчет.ДатаРешения, "ДЛФ=Д");
	ОбластьШапка.Параметры.ДатаИндексации = Формат(Расчет.ДатаРасчета, "ДЛФ=Д");
	ОбластьШапка.Параметры.Регион = Строка(Расчет.Территория);
	ТабДок.Вывести(ОбластьШапка);
	// Строка
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	Для Каждого СтрокаТЧ из ГрафикИндексации Цикл
		ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
		
		ОбластьСтрока.Параметры.База 		  	  = Формат(СтрокаТЧ.Сумма, "ЧДЦ=2");;
		ОбластьСтрока.Параметры.НачалоПериода 	  = Формат(СтрокаТЧ.НачалоПериода, "ДЛФ=Д");
		ОбластьСтрока.Параметры.КонецПериода 	  = Формат(СтрокаТЧ.КонецПериода, "ДЛФ=Д");
		ОбластьСтрока.Параметры.Дни  		 	  = СтрокаТЧ.Дни;
		ОбластьСтрока.Параметры.ИПЦ			  	  = Формат(СтрокаТЧ.ИПЦ, "ЧДЦ=2");
		Если СтрокаТЧ.СуммаПлатежа > 0 Тогда
			ОбластьСтрока.Параметры.ДатаПлатежа   = Формат(СтрокаТЧ.НачалоПериода, "ДЛФ=Д");
			ОбластьСтрока.Параметры.СуммаПлатежа  = Формат(СтрокаТЧ.СуммаПлатежа, "ЧДЦ=2");
		КонецЕсли;
		
		ОбластьСтрока.Параметры.Проценты	  	  = Формат(СтрокаТЧ.Проценты, "ЧДЦ=2");
		ОбластьСтрока.Параметры.Итого		  	  = Формат(СтрокаТЧ.КУплате, "ЧДЦ=2");
		
		ТабДок.Вывести(ОбластьСтрока);
	КонецЦикла;
	//Итого
	//ОбластьИтого = Макет.ПолучитьОбласть("Итого");
	//
	//Если к > 0 Тогда
	//	ОбластьИтого.Параметры.СуммаИПЦ = ТЧРасчетИндексации[к-1].Проценты;
	//	ОбластьИтого.Параметры.ИтогоСумма = ТЧРасчетИндексации[к-1].Куплате;
	//КонецЕсли;
	//
	//ТабДок.Вывести(ОбластьИтого);
	ОбластьИтого = Макет.ПолучитьОбласть("Итого");
	СуммаПроц = 0;
	//СуммаИтого = 0;
	Для Каждого СтрокаТЧ1 из ГрафикИндексации Цикл
		Стр1Проц = СтрЗаменить(СтрокаТЧ1.Проценты,Символы.НПП,"");
		Стр2Проц = СтрЗаменить(Стр1Проц,",",".");
		СтрЧисло = Число(Стр2Проц);
		СуммаПроц = СуммаПроц + СтрЧисло;
		
		//	Сообщить(СтрокаТЧ1.Куплате);
		//	Стр1Итого = СтрЗаменить(СтрокаТЧ1.Куплате,Символы.НПП,"");
		//	Стр2Итого = СтрЗаменить(Стр1Итого,",",".");
		//	Сообщить(Стр2Итого);
		//	СтрИтого = Число(Стр2Итого);
		//
		//	СуммаИтого = СуммаИтого + СтрИтого;
		//  СуммаИтого = СуммаИтого + Число(СтрЗаменить(СтрокаТЧ1.Куплате,Символы.НПП,""));
	КонецЦикла;	
	Если к > 0 Тогда
		ОбластьИтого.Параметры.СуммаИПЦ = СуммаПроц;
		ОбластьИтого.Параметры.ИтогоСумма = ГрафикИндексации[к-1].Куплате;
	//	Стр.СуммаИндексации = СуммаПроц;
		//Если ПолучитьДатуСудебногоРешенияСтадия(Стр.Объект) = 1 Тогда
		//	ОбъектыСервер.ЗаписатьЗначениеСвойства(Стр.Объект, "0531     ", Стр.СуммаИндексации);
		//ИначеЕсли ПолучитьДатуСудебногоРешенияСтадия(Стр.Объект) = 2 Тогда
		//	ОбъектыСервер.ЗаписатьЗначениеСвойства(Стр.Объект, "0533     ", Стр.СуммаИндексации);
		//ИначеЕсли ПолучитьДатуСудебногоРешенияСтадия(Стр.Объект) = 3 Тогда
		//	ОбъектыСервер.ЗаписатьЗначениеСвойства(Стр.Объект, "0532     ", Стр.СуммаИндексации);
		//КонецЕсли;
		//ОбъектыСервер.ЗаписатьЗначениеСвойства(Стр.Объект, "0558     ", Стр.СуммаИндексации);

	КонецЕсли;
		
	
	ТабДок.Вывести(ОбластьИтого);
	
	
	// Шапка1
	ОбластьШапка2 = Макет.ПолучитьОбласть("Шапка2"); 
	ОбластьШапка2.Параметры.Регион = Строка(Расчет.Территория);
	
	ТабДок.Вывести(ОбластьШапка2);
	// ИнформацияИПЦ
	
	Запрос = Новый Запрос;
	Запрос.Текст =	
	"ВЫБРАТЬ
	|ЗначенияИПЦ.ПериодИПЦ КАК ПериодИПЦ,
	|ЗначенияИПЦ.Значение КАК Значение,
	|ГОД(ЗначенияИПЦ.ПериодИПЦ) КАК Год
	|ИЗ
	|РегистрСведений.ЗначенияИПЦ КАК ЗначенияИПЦ
	|ГДЕ
	|ЗначенияИПЦ.ПериодИПЦ МЕЖДУ НАЧАЛОПЕРИОДА(&ДатаНачала, ГОД) И КОНЕЦПЕРИОДА(&ДатаКонца, ГОД)";
	
	Запрос.УстановитьПараметр("ДатаНачала",Расчет.ДатаРешения);
	Запрос.УстановитьПараметр("ДатаКонца",Расчет.ДатаРасчета);
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	Если Запрос.Выполнить().Пустой() Тогда
		ТекущийГод = Дата(1,1,1);	
	Иначе
		ТекущийГод = Запрос.Выполнить().Выгрузить()[0].Год;		
	КонецЕсли;
	
	ОбластьИнформацияИПЦ = Макет.ПолучитьОбласть("ИнформацияИПЦ");
	ОбластьИнформацияИПЦ.Параметры.Год = ТекущийГод;
	
	Пока РезультатЗапроса.Следующий() Цикл
		
		
		Если РезультатЗапроса.Год = ТекущийГод Тогда
			
			Если Месяц(РезультатЗапроса.ПериодИПЦ) = 1 Тогда
				ОбластьИнформацияИПЦ.Параметры.Сумма1 = Формат(РезультатЗапроса.Значение, "ЧДЦ=2");
			КонецЕсли;
			Если Месяц(РезультатЗапроса.ПериодИПЦ) = 2 Тогда
				ОбластьИнформацияИПЦ.Параметры.Сумма2 = Формат(РезультатЗапроса.Значение, "ЧДЦ=2");
			КонецЕсли;
			Если Месяц(РезультатЗапроса.ПериодИПЦ) = 3 Тогда
				ОбластьИнформацияИПЦ.Параметры.Сумма3 = Формат(РезультатЗапроса.Значение, "ЧДЦ=2");
			КонецЕсли;
			Если Месяц(РезультатЗапроса.ПериодИПЦ) = 4 Тогда
				ОбластьИнформацияИПЦ.Параметры.Сумма4 = Формат(РезультатЗапроса.Значение, "ЧДЦ=2");
			КонецЕсли;
			Если Месяц(РезультатЗапроса.ПериодИПЦ) = 5 Тогда
				ОбластьИнформацияИПЦ.Параметры.Сумма5 = Формат(РезультатЗапроса.Значение, "ЧДЦ=2");
			КонецЕсли;
			Если Месяц(РезультатЗапроса.ПериодИПЦ) = 6 Тогда
				ОбластьИнформацияИПЦ.Параметры.Сумма6 = Формат(РезультатЗапроса.Значение, "ЧДЦ=2");
			КонецЕсли;
			Если Месяц(РезультатЗапроса.ПериодИПЦ) = 7 Тогда
				ОбластьИнформацияИПЦ.Параметры.Сумма7 = Формат(РезультатЗапроса.Значение, "ЧДЦ=2");
			КонецЕсли;
			Если Месяц(РезультатЗапроса.ПериодИПЦ) = 8 Тогда
				ОбластьИнформацияИПЦ.Параметры.Сумма8 = Формат(РезультатЗапроса.Значение, "ЧДЦ=2");
			КонецЕсли;
			Если Месяц(РезультатЗапроса.ПериодИПЦ) = 9 Тогда
				ОбластьИнформацияИПЦ.Параметры.Сумма9 = Формат(РезультатЗапроса.Значение, "ЧДЦ=2");
			КонецЕсли;
			Если Месяц(РезультатЗапроса.ПериодИПЦ) = 10 Тогда
				ОбластьИнформацияИПЦ.Параметры.Сумма10 = Формат(РезультатЗапроса.Значение, "ЧДЦ=2");
			КонецЕсли;
			Если Месяц(РезультатЗапроса.ПериодИПЦ) = 11 Тогда
				ОбластьИнформацияИПЦ.Параметры.Сумма11 = Формат(РезультатЗапроса.Значение, "ЧДЦ=2");
			КонецЕсли;
			Если Месяц(РезультатЗапроса.ПериодИПЦ) = 12 Тогда
				ОбластьИнформацияИПЦ.Параметры.Сумма12 = Формат(РезультатЗапроса.Значение, "ЧДЦ=2");
			КонецЕсли;
		иначе
			
			ТабДок.Вывести(ОбластьИнформацияИПЦ);
			ОбластьИнформацияИПЦ = Макет.ПолучитьОбласть("ИнформацияИПЦ");
			ТекущийГод  = РезультатЗапроса.Год;
			ОбластьИнформацияИПЦ.Параметры.Год = ТекущийГод;
			
			Если Месяц(РезультатЗапроса.ПериодИПЦ) = 1 Тогда
				ОбластьИнформацияИПЦ.Параметры.Сумма1 = Формат(РезультатЗапроса.Значение, "ЧДЦ=2");
			КонецЕсли;
			Если Месяц(РезультатЗапроса.ПериодИПЦ) = 2 Тогда
				ОбластьИнформацияИПЦ.Параметры.Сумма2 = Формат(РезультатЗапроса.Значение, "ЧДЦ=2");
			КонецЕсли;
			Если Месяц(РезультатЗапроса.ПериодИПЦ) = 3 Тогда
				ОбластьИнформацияИПЦ.Параметры.Сумма3 = Формат(РезультатЗапроса.Значение, "ЧДЦ=2");
			КонецЕсли;
			Если Месяц(РезультатЗапроса.ПериодИПЦ) = 4 Тогда
				ОбластьИнформацияИПЦ.Параметры.Сумма4 = Формат(РезультатЗапроса.Значение, "ЧДЦ=2");
			КонецЕсли;
			Если Месяц(РезультатЗапроса.ПериодИПЦ) = 5 Тогда
				ОбластьИнформацияИПЦ.Параметры.Сумма5 = Формат(РезультатЗапроса.Значение, "ЧДЦ=2");
			КонецЕсли;
			Если Месяц(РезультатЗапроса.ПериодИПЦ) = 6 Тогда
				ОбластьИнформацияИПЦ.Параметры.Сумма6 = Формат(РезультатЗапроса.Значение, "ЧДЦ=2");
			КонецЕсли;
			Если Месяц(РезультатЗапроса.ПериодИПЦ) = 7 Тогда
				ОбластьИнформацияИПЦ.Параметры.Сумма7 = Формат(РезультатЗапроса.Значение, "ЧДЦ=2");
			КонецЕсли;
			Если Месяц(РезультатЗапроса.ПериодИПЦ) = 8 Тогда
				ОбластьИнформацияИПЦ.Параметры.Сумма8 = Формат(РезультатЗапроса.Значение, "ЧДЦ=2");
			КонецЕсли;
			Если Месяц(РезультатЗапроса.ПериодИПЦ) = 9 Тогда
				ОбластьИнформацияИПЦ.Параметры.Сумма9 = Формат(РезультатЗапроса.Значение, "ЧДЦ=2");
			КонецЕсли;
			Если Месяц(РезультатЗапроса.ПериодИПЦ) = 10 Тогда
				ОбластьИнформацияИПЦ.Параметры.Сумма10 = Формат(РезультатЗапроса.Значение, "ЧДЦ=2");
			КонецЕсли;
			Если Месяц(РезультатЗапроса.ПериодИПЦ) = 11 Тогда
				ОбластьИнформацияИПЦ.Параметры.Сумма11 = Формат(РезультатЗапроса.Значение, "ЧДЦ=2");
			КонецЕсли;
			Если Месяц(РезультатЗапроса.ПериодИПЦ) = 12 Тогда
				ОбластьИнформацияИПЦ.Параметры.Сумма12 = Формат(РезультатЗапроса.Значение, "ЧДЦ=2");
			КонецЕсли;
			
		КонецЕсли;			
		
	КонецЦикла;
	ТабДок.Вывести(ОбластьИнформацияИПЦ);
	
	//Подвал
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьПодвал.Параметры.ФИО = ПараметрыСеанса.ТекущийПользователь;
	ТабДок.Вывести(ОбластьПодвал);
	
	
	//КонецЕсли;
	
КонецПроцедуры

Процедура ПечатнаяФорма395(ТабДок, Расчет, РасчетПроцентов) Экспорт
	Макет = Документы.РасчетПроцентов395.ПолучитьМакет("Макет");

	ОбластьШапка  = Макет.ПолучитьОбласть("Шапка");
	ОбластьШапка.Параметры.ФИО = СклонениеФИО.daСклонение(Расчет.Займ.Должник.Наименование,"Р",,,);
	ОбластьШапка.Параметры.НомерДела = Расчет.СудебноеРешение.НомерДела;
	ОбластьШапка.Параметры.СуммаРешения = Формат(Расчет.СуммаЗадолженности, "ЧДЦ=2");
	ОбластьШапка.Параметры.НачалоПериода = Формат(Расчет.НачалоПериода, "ДЛФ=Д");
	ОбластьШапка.Параметры.КонецПериода = Формат(Расчет.КонецПериода, "ДЛФ=Д");

	ТабДок.Вывести(ОбластьШапка);
	// Строка
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	Для Каждого СтрокаТЧ из РасчетПроцентов Цикл
		ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
		
		ОбластьСтрока.Параметры.СуммаЗадолженности 		= Формат(СтрокаТЧ.СуммаЗадолженности, "ЧДЦ=2");;
		ОбластьСтрока.Параметры.НачалоПериода 	  		= Формат(СтрокаТЧ.НачалоПериода, "ДЛФ=Д");
		ОбластьСтрока.Параметры.КонецПериода 	 		= Формат(СтрокаТЧ.КонецПериода, "ДЛФ=Д");
		ОбластьСтрока.Параметры.Дни  		 	  		= СтрокаТЧ.Дни;
		ОбластьСтрока.Параметры.ДнейВГоду				= Формат(СтрокаТЧ.ДнейВГоду, "ЧДЦ=2");
		Если СтрокаТЧ.СуммаПлатежа > 0 Тогда
			ОбластьСтрока.Параметры.ДатаПлатежа   = Формат(СтрокаТЧ.ДатаПлатежа, "ДЛФ=Д");
			ОбластьСтрока.Параметры.СуммаПлатежа  = Формат(СтрокаТЧ.СуммаПлатежа, "ЧДЦ=2");
		КонецЕсли;
		
		ОбластьСтрока.Параметры.Проценты	  	  = Формат(СтрокаТЧ.Проценты, "ЧДЦ=2");
		ОбластьСтрока.Параметры.Ставка	  	  = Формат(СтрокаТЧ.ПроцентнаяСтавка, "ЧДЦ=2");
		ТабДок.Вывести(ОбластьСтрока);
	КонецЦикла;
	
	ОбластьИтого = Макет.ПолучитьОбласть("Итого");	
	ОбластьИтого.Параметры.ИтогоПроценты = Расчет.НачисленныеПроценты;	
	ТабДок.Вывести(ОбластьИтого);
	
		
	//Подвал
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьПодвал.Параметры.ФИО = ПараметрыСеанса.ТекущийПользователь;
	ТабДок.Вывести(ОбластьПодвал);
	
	
	//КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция СписокРеквизитовСудебноеДело() Экспорт
	Массив = Новый Массив();
	Массив.Добавить("НомерДела");
	Массив.Добавить("ДатаИска");
	Массив.Добавить("ВидИска");
	Массив.Добавить("ВидТребований");
	Массив.Добавить("Суд");
	Массив.Добавить("Решение");
	Массив.Добавить("ДатаРешения");
	Массив.Добавить("ДатаВступленияВЗаконнуюСилу");
	Массив.Добавить("СуммаРешения");
	
	Возврат Массив;
КонецФункции

&НаСервере
Функция СписокРеквизитовДокументаСудебноеДело() Экспорт
	Массив = Новый Массив();
	Массив.Добавить("НомерДела");
	Массив.Добавить("ДатаИска");
	Массив.Добавить("ВидИска");
	Массив.Добавить("ВидТребований");
	Массив.Добавить("Суд");
	Массив.Добавить("Решение");
	Массив.Добавить("ДатаРешения");
	Массив.Добавить("ДатаВступленияВЗаконнуюСилу");
	
	Возврат Массив;
КонецФункции

&НаСервере
Функция СписокСоставляющихДолгаПоРешению() Экспорт
	Массив = Новый Массив();
	Массив.Добавить("ОсновнойДолг");
	Массив.Добавить("Проценты");
	Массив.Добавить("Штрафы");
	Массив.Добавить("Пени");
	Массив.Добавить("Госпошлина");

	Возврат Массив;
КонецФункции

Функция ПорядокСписанияСудебка() Экспорт
	Массив = Новый Массив;
	
	//Массив.Добавить(ПланыВидовХарактеристик.ТипыЗадолженностиПоРешению.Госпошлина);
	//Массив.Добавить(ПланыВидовХарактеристик.ТипыЗадолженностиПоРешению.Проценты);
	//Массив.Добавить(ПланыВидовХарактеристик.ТипыЗадолженностиПоРешению.ОсновнойДолг);
	//Массив.Добавить(ПланыВидовХарактеристик.ТипыЗадолженностиПоРешению.Пени);
	//Массив.Добавить(ПланыВидовХарактеристик.ТипыЗадолженностиПоРешению.Штрафы);	
		
	Массив.Добавить(ПланыВидовХарактеристик.ТипыЗадолженностиПоРешению.Госпошлина);
	Массив.Добавить(ПланыВидовХарактеристик.ТипыЗадолженностиПоРешению.Пени);
	Массив.Добавить(ПланыВидовХарактеристик.ТипыЗадолженностиПоРешению.Штрафы);
	Массив.Добавить(ПланыВидовХарактеристик.ТипыЗадолженностиПоРешению.Проценты);
	Массив.Добавить(ПланыВидовХарактеристик.ТипыЗадолженностиПоРешению.ОсновнойДолг);
	
	Возврат Массив;
КонецФункции

Процедура ОбновитьСуммыЗадолженностиПоИД(ИД) Экспорт
	НаборЗаписей = РегистрыСведений.ЗадолженностьПоИсполнительнымДокументамОстатки.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Объект.Установить(ИД);
	
	МенеджерЗаписи = РегистрыСведений.ХарактеристикиИД.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.ИсполнительныйДокумент = ИД;
	МенеджерЗаписи.Свойство = ПланыВидовХарактеристик.ХарактеристикиИД.СД_СуммаРешения;
	
	Если ИД.Утрачен Или ИД.ПометкаУдаления Или Не ЗначениеЗаполнено(ИД.СудебноеРешение) ИЛИ Не ЗначениеЗаполнено(ИД.ЧастьРешения) Тогда
		НаборЗаписей.Записать();
		МенеджерЗаписи.Записать();
	Иначе
		Запрос = Новый Запрос("ВЫБРАТЬ
		                      |	&ИД КАК Объект,
		                      |	ЗадолженностьПоСудебнымРешениямОстатки.ТипЗадолженности КАК ТипЗадолженности,
		                      |	ЗадолженностьПоСудебнымРешениямОстатки.СуммаОстаток КАК Сумма
		                      |ИЗ
		                      |	РегистрНакопления.ЗадолженностьПоСудебнымРешениям.Остатки(
		                      |			,
		                      |			Решение = &Решение
		                      |				И ЧастьРешения = &ЧастьРешения) КАК ЗадолженностьПоСудебнымРешениямОстатки");
		Запрос.УстановитьПараметр("Решение", ИД.СудебноеРешение);
		Запрос.УстановитьПараметр("ЧастьРешения", ИД.ЧастьРешения);
		Запрос.УстановитьПараметр("ИД", ИД);
		Результат = Запрос.Выполнить().Выгрузить();
		НаборЗаписей.Загрузить(Результат);
		СуммаРешения = 0;
		Для Каждого Запись Из НаборЗаписей Цикл
			СуммаРешения = СуммаРешения + Запись.Сумма;
		КонецЦикла;

		Если СуммаРешения > 0 Тогда
			Запись = НаборЗаписей.Добавить();
			Запись.Объект = ИД;
			Запись.ТипЗадолженности = ПланыВидовХарактеристик.ТипыЗадолженностиПоРешению.Сумма;
			Запись.Сумма = СуммаРешения;
		КонецЕсли;
		НаборЗаписей.Записать();
		
		строки = ИД.СудебноеРешение.ЧастиРешения.НайтиСтроки(Новый Структура("ЧастьРешения", ИД.ЧастьРешения));
		Если Строки.Количество() = 1 Тогда
			МенеджерЗаписи.Значение = Строки[0].СуммаРешения;
			МенеджерЗаписи.Записать();
		Иначе
			МенеджерЗаписи.Записать();
		КонецЕсли;
	
	КонецЕсли;
КонецПроцедуры


Функция СоставляющиеДолгаПоРешению() Экспорт
	Запрос = Новый Запрос();	
КонецФункции
