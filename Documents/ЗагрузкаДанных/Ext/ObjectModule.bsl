
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
    Если ЭтотОбъект.ЗапретНаРедактирование Тогда
        Отказ = Истина;
    ИначеЕсли ЭтотОбъект.ПоставитьВОчередь Тогда
        Если ЗаписатьСправочникиВФоне() Тогда    
            ЭтотОбъект.ЗапретНаРедактирование = Истина;
            Записать(РежимЗаписиДокумента.Запись);
        Иначе
            Отказ = Истина;
        КонецЕсли;
    Иначе
        Если ЗаписатьДолжниковНаСервере(ЭтотОбъект.ВыводитьСообщения) Тогда
            ЭтотОбъект.ЗапретНаРедактирование = Истина;
            ЭтотОбъект.СправочникиЗаписаны = Истина;
            Записать(РежимЗаписиДокумента.Запись);
        Иначе
            Отказ = Истина;
        КонецЕсли;
    КонецЕсли;
КонецПроцедуры

// Получает значение реквизита хранилища "ТаблицаЗначений"
//
Функция ВернутьСодержимоеХранилищаТЗДанных() Экспорт
 	Возврат ТаблицаЗначений.Получить();	
КонецФункции

Процедура ЗаписатьСодержимоеХранилищаТЗДанных(ЗаписываемаяТаблица) Экспорт
	Хранилище = Новый ХранилищеЗначения(ЗаписываемаяТаблица, Новый СжатиеДанных(5));	
	ТаблицаЗначений = Хранилище;
КонецПроцедуры


Функция ЗаписатьСправочникиВФоне()
	тзДанные = ВернутьСодержимоеХранилищаТЗДанных();	
	Если тзДанные.Количество() = 0 Тогда
		Возврат Ложь;	
	КонецЕсли;
	
	//Проверка на заполнение обязательных полей
	ОбязательныеРеквизитыТЧ = Новый Массив();
	ОбязательныеРеквизитыТЧ.Добавить("Наименование");
	ОбязательныеРеквизитыТЧ.Добавить("Идентификатор");
	Если Константы.УчетПоДО.Получить() И ЭтотОбъект.КонтрольДО Тогда
		ОбязательныеРеквизитыТЧ.Добавить("НомерДО");
	КонецЕсли;
	Если ЭтотОбъект.КонтрольД Тогда
		ОбязательныеРеквизитыТЧ.Добавить("ИдентификаторД");
	КонецЕсли;
	Если ЭтотОбъект.КонтрольИД Тогда
		ОбязательныеРеквизитыТЧ.Добавить("ИдентификаторИД");
	КонецЕсли;
	Если ЭтотОбъект.КонтрольУ Тогда
		ОбязательныеРеквизитыТЧ.Добавить("ИдентификаторУ");
	КонецЕсли;
	Если ЭтотОбъект.КонтрольКА Тогда
		ОбязательныеРеквизитыТЧ.Добавить("ИдентификаторКА");
	КонецЕсли;
	Если ЭтотОбъект.КонтрольКР Тогда
		ОбязательныеРеквизитыТЧ.Добавить("ИдентификаторКР");
	КонецЕсли;

	

	Если НЕ РаботаСДокументами.ПроверитьЗаполнениеТабличнойЧасти(тзДанные, ОбязательныеРеквизитыТЧ) Тогда
		Возврат Ложь;
	КонецЕсли;	
	ЭтотОбъект.ЗапретНаРедактирование = Истина;
		
	Запись = РегистрыСведений.ОчередьФоновыхЗаданий.СоздатьМенеджерЗаписи(); 
	Запись.СсылкаНаДокумент = ЭтотОбъект.Ссылка;
	Запись.ДатаДобавленияВРегистр = ТекущаяДата();
	Запись.СтатусЗадания = Перечисления.СтатусыФоновыхЗаданий.ВОчереди;
	Попытка
		Запись.Записать();
	Исключение
		Сообщить(ОписаниеОшибки());
		Возврат Ложь;
	КонецПопытки;
	Возврат Истина;
КонецФункции

Функция ЗаписатьДолжниковНаСервере(ЧислоСообщений)
	тзДанные = ВернутьСодержимоеХранилищаТЗДанных();
	Если тзДанные.Количество() = 0 Тогда
		Возврат Ложь;	
	КонецЕсли;
	
	//Проверка на заполнение обязательных полей
	ОбязательныеРеквизитыТЧ = Новый Массив();
	ОбязательныеРеквизитыТЧ.Добавить("Наименование");
	ОбязательныеРеквизитыТЧ.Добавить("Идентификатор");
	Если Константы.УчетПоДО.Получить() И ЭтотОбъект.КонтрольДО Тогда
		ОбязательныеРеквизитыТЧ.Добавить("НомерДО");
	КонецЕсли;
	Если ЭтотОбъект.ЮрФизЛица.Пустая() Тогда
		ОбязательныеРеквизитыТЧ.Добавить("ТипДОЛ");
	КонецЕсли;
	Если ЭтотОбъект.ТипДолговыхОбязательств.Пустая() Тогда
		ОбязательныеРеквизитыТЧ.Добавить("ТипДО");
	КонецЕсли;
	Если ЭтотОбъект.КонтрольД Тогда
		ОбязательныеРеквизитыТЧ.Добавить("ИдентификаторД");
	КонецЕсли;
	Если ЭтотОбъект.КонтрольИД Тогда
		ОбязательныеРеквизитыТЧ.Добавить("ИдентификаторИД");
	КонецЕсли;
	Если ЭтотОбъект.КонтрольУ Тогда
		ОбязательныеРеквизитыТЧ.Добавить("ИдентификаторУ");
	КонецЕсли;
	Если ЭтотОбъект.КонтрольКА Тогда
		ОбязательныеРеквизитыТЧ.Добавить("ИдентификаторКА");
	КонецЕсли;
	Если ЭтотОбъект.КонтрольКР Тогда
		ОбязательныеРеквизитыТЧ.Добавить("ИдентификаторКР");
	КонецЕсли;

	Если НЕ РаботаСДокументами.ПроверитьЗаполнениеТабличнойЧасти(тзДанные, ОбязательныеРеквизитыТЧ) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если Не Константы.УчетПоДО.Получить() ИЛИ Не ЭтотОбъект.КонтрольДО Тогда
		СоздаватьДО = Ложь;
	Иначе
		СоздаватьДО = Истина;
	КонецЕсли;
	
	//Массив основных реквизитов
	Массив = Новый Массив;
	Массив.Добавить("НомерСтроки");	
	Массив.Добавить("Наименование");
	Массив.Добавить("Идентификатор");
	Массив.Добавить("ИдентификаторКА");
	Массив.Добавить("ИдентификаторКР");
	Если Константы.УчетПоУслугам.Получить() Тогда
		Массив.Добавить("ИдентификаторУ");
	КонецЕсли;
	Если Константы.УчетПоИД.Получить() Тогда
		Массив.Добавить("ИдентификаторИД");
	КонецЕсли;
	Если Константы.УчетПоДоговорам.Получить() Тогда
		Массив.Добавить("ИдентификаторД");
	КонецЕсли;
	
	Массив.Добавить("ВалютаДоговора");
	Массив.Добавить("НомерДО");
	Массив.Добавить("СсылкаДО");
	Массив.Добавить("ТипДОЛ");
	Массив.Добавить("ТипКА");
	Массив.Добавить("ТипКР");
	Массив.Добавить("ТипДО");	
	МассивСообщений = Новый Массив;
	
	МассивДопРеквизитов = Новый Массив;

	Если тзДанные.Колонки.Найти("СсылкаДО") = Неопределено Тогда
		тзДанные.Колонки.Объект.Имя = "СсылкаДО";
	КонецЕсли;	
	
	Для Каждого Колонка Из тзДанные.Колонки Цикл
		//Заполнение Свойств:
		Если Массив.Найти(Колонка.Имя) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		КодСвойства = СтрЗаменить(Сред(Колонка.Имя, 2), "_", " ");
		Свойство = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоКоду(КодСвойства);
		МассивДопРеквизитов.Добавить(Свойство);
	КонецЦикла;
	
		
	ч = 0;
	Для Каждого ТекСтрока Из тзДанные Цикл
		//Нов
		//Должник = Справочники.Контрагенты.ПустаяСсылка();
		ч = ч + 1;
		Если ч <= ЧислоСообщений Тогда
			ВыводитьСообщения1 = Истина;
		Иначе
			ВыводитьСообщения1 = Ложь;
		КонецЕсли;
		ТекСтрока.СсылкаДО = ФоновыеЗаданияМодуль.ЗаписатьДолжникаИДолговоеОбязательство(Массив, ТекСтрока, тзДанные, ЭтотОбъект.ЮрФизЛица, ЭтотОбъект.ТипКонтрагентов, ЭтотОбъект.ТипКредиторов, ЭтотОбъект.ТипДолговыхОбязательств,
				ЭтотОбъект.ОбновлятьРанееЗаписанные, МассивСообщений, ЭтотОбъект.Ссылка, МассивДопРеквизитов, ВыводитьСообщения1, СоздаватьДО);
	КонецЦикла;
	Если СоздаватьДО Тогда		
		Если Не ФоновыеЗаданияМодуль.СоздатьНаборДокументов(тзДанные, Ссылка) Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЕсли;
	ЗаписатьСодержимоеХранилищаТЗДанных(тзДанные);
	
	Если МассивСообщений.Количество() = 0 Тогда
		МассивСообщений.Добавить(Новый Структура("Текст, Объект, Поле, Путь",
				"Все справочники записаны!", ЭтотОбъект.Ссылка, Неопределено, Неопределено));
	КонецЕсли;
	Запись = РегистрыСведений.СообщенияПоЗагрузкеДанных.СоздатьМенеджерЗаписи();
	Запись.Документ = ЭтотОбъект.Ссылка;	
	Запись.МассивСообщений = Новый ХранилищеЗначения(МассивСообщений, Новый СжатиеДанных(5));
	Запись.Записать();
	
	Возврат Истина;		
КонецФункции

Процедура ОбработкаУдаленияПроведения(Отказ)
	Отказ = Истина;
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
//	Дата = ТекущаяДата();
КонецПроцедуры

