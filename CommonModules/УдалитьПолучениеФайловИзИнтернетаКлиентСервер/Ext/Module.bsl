
// Функция для получения файла из интернета.
//
// Параметры:
// URL           - строка - url файла в формате:
//                 [Протокол://]<Сервер>/<Путь к файлу на сервере>
// Пользователь  - строка - пользователь от имени которого установлено соединение
// Пароль        - строка - пароль пользователя от которого установлено соединение
// Порт          - число  - порт сервера с которым установлено соединение
// ЗащищенноеПассивноеСоединение
//
// НастройкаСохранения - соответствие - содержит параметры для сохранения скачанного файла
//                 ключи:
//                 МестоХранения - строка - может содержать 
//                        "Клиент" - клиент,
//                        "Сервер" - сервер,
//                        "ВременноеХранилище" - временное хранилище
//                 Путь - строка (необязательный параметр) - 
//                        путь к каталогу на клиенте либо на сервере либо адрес во временном хранилище
//                        если не задано будет сгенерировано автоматически
//
// Возвращаемое значение:
// структура
// успех  - булево - успех или неудача операции
// строка - строка - в случае успеха либо строка-путь сохранения файла
//                   либо адрес во временном хранилище
//                   в случае неуспеха сообщение об ошибке
//
Функция ПодготовитьПолучениеФайла(	знач URL,
									знач Пользователь			= Неопределено,
									знач Пароль					= Неопределено,
									знач Порт					= Неопределено,
									знач ЗащищенноеСоединение	= Ложь,
									знач ПассивноеСоединение	= Ложь,
									знач НастройкаСохранения) Экспорт
	
	НастройкаСоединения = Новый Соответствие;
	НастройкаСоединения.Вставить("Пользователь",	Пользователь);
	НастройкаСоединения.Вставить("Пароль",			Пароль);
	НастройкаСоединения.Вставить("Порт",			Порт);
	
	Протокол = РазделитьURL(URL).Протокол;
	
	Если Протокол = "ftp" Тогда
		НастройкаСоединения.Вставить("ПассивноеСоединение", ПассивноеСоединение);
	Иначе
		НастройкаСоединения.Вставить("ЗащищенноеСоединение", ЗащищенноеСоединение);
	КонецЕсли;
	
#Если НаКлиенте Тогда       
	НастройкаПроксиСервера = УдалитьПолучениеФайловИзИнтернета.ПолучитьНастройкуПроксиСервера();
#Иначе
	НастройкаПроксиСервера = УдалитьПолучениеФайловИзИнтернета.ПолучитьНастройкиПроксиНаСервере1СПредприятие();
#КонецЕсли
	
	Если НастройкаПроксиСервера <> Неопределено
	   И НастройкаПроксиСервера["ИспользоватьПрокси"] = Ложь Тогда
		НастройкаПроксиСервера = Неопределено;
	КонецЕсли;
	
	Результат = ПолучитьФайлИзИнтернет(URL, НастройкаСохранения, НастройкаСоединения, НастройкаПроксиСервера);
	
	Возврат Результат;
	
КонецФункции

// Функция для получения файла из интернета.
//
// Параметры:
// URL           - строка - url файла в формате:
//                 [Протокол://]<Сервер>/<Путь к файлу на сервере>
//
// НастройкаСоединения - Соответствие -
//                 ЗащищенноеСоединение* - булево - соединение защищенное
//                 ПассивноеСоединение*  - булево - соединение защищенное
//                 Пользователь - строка - пользователь от имени которого установлено соединение
//                 Пароль       - строка - пароль пользователя от которого установлено соединение
//                 Порт         - число  - порт сервера с которым установлено соединение
//                 * - взаимоисключающие ключи
//
// Прокси        - Соответствие -
//                 ключи:
//                 НеИспользоватьПроксиДляЛокальныхАдресов - строка - 
//                 Сервер       - адрес прокси-сервера
//                 Порт         - порт прокси-сервера
//                 Пользователь - имя пользователя для авторизации на прокси-сервере
//                 Пароль       - пароль пользователя
//
// НастройкаСохранения - соответствие - содержит параметры для сохранения скачанного файла
//                 ключи:
//                 МестоХранения - строка - может содержать 
//                        "Клиент" - клиент,
//                        "Сервер" - сервер,
//                        "ВременноеХранилище" - временное хранилище
//                 Путь - строка (необязательный параметр) - 
//                        путь к каталогу на клиенте либо на сервере либо адрес во временном хранилище
//                        если не задано будет сгенерировано автоматически
//
// Возвращаемое значение:
// структура
// успех  - булево - успех или неудача операции
// строка - строка - в случае успеха либо строка-путь сохранения файла
//                   либо адрес во временном хранилище
//                   в случае неуспеха сообщение об ошибке
//
Функция ПолучитьФайлИзИнтернет(знач URL,
                               знач НастройкаСохранения,
                               знач НастройкаСоединения = Неопределено,
                               знач Прокси = Неопределено)
	
	// Объявление переменных перед первым использованием в качестве
	// параметра метода Свойство, при анализе параметров получения файлов
	// из ПараметрыПолучения. Содержат значения переданных параметров получения файла
	Перем ИмяСервера, ИмяПользователя, Пароль, Порт,
	      ЗащищенноеСоединение,ПассивноеСоединение,
	      ПустьКФайлуНаСервере, Протокол;
	
	URLРазделенный = РазделитьURL(URL);
	
	ИмяСервера           = URLРазделенный.ИмяСервера;
	ПустьКФайлуНаСервере = URLРазделенный.ПустьКФайлуНаСервере;
	Протокол             = ?(URLРазделенный.Протокол=Неопределено, "", URLРазделенный.Протокол);
	
	ЗащищенноеСоединение = НастройкаСоединения.Получить("ЗащищенноеСоединение");
	ПассивноеСоединение  = НастройкаСоединения.Получить("ПассивноеСоединение");
	
	ИмяПользователя      = НастройкаСоединения.Получить("Пользователь");
	ПарольПользователя   = НастройкаСоединения.Получить("Пароль");
	Порт                 = НастройкаСоединения.Получить("Порт");
	
	Если Не ЗначениеЗаполнено(URLРазделенный.Протокол) Тогда
		Если ЗащищенноеСоединение <> Неопределено Тогда
			Если ЗащищенноеСоединение Тогда
				Протокол = "https";
			Иначе
				Протокол = "http";
			КонецЕсли;
		ИначеЕсли ПассивноеСоединение <> Неопределено Тогда
			Если ПассивноеСоединение Тогда
				Протокол = "ftp";
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Протокол = ?(ЗначениеЗаполнено(Протокол), Протокол, "http");
	
	Прокси = ?(Прокси = Неопределено, Неопределено, СформироватьПрокси(Прокси, Протокол));
	
	Если Протокол = "ftp" Тогда
		Попытка
			Соединение = Новый FTPСоединение(
				ИмяСервера,
				Порт,
				ИмяПользователя,
				ПарольПользователя,
				Прокси, ,
				ТаймаутСоединения.ДляМедленнойОперации(),
				ПассивноеСоединение);
		Исключение
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			СообщениеОбОшибке = НСтр("ru = 'Ошибка при создании FTP-соединения с сервером %1:'") + Символы.ПС + "%2";
			УдалитьПолучениеФайловИзИнтернета.ЗаписатьОшибкуВЖурналРегистрации(
				УдалитьСтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(СообщениеОбОшибке, ИмяСервера,
					ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке)));
			СообщениеОбОшибке = УдалитьСтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(СообщениеОбОшибке, ИмяСервера,
					ОбработкаОшибок.КраткоеПредставлениеОшибки(ИнформацияОбОшибке));
			Возврат СформироватьРезультат(Ложь, СообщениеОбОшибке);
		КонецПопытки;
	Иначе
		Попытка
			Соединение = Новый HTTPСоединение(ИмяСервера, Порт, ИмяПользователя, ПарольПользователя, Прокси, ЗащищенноеСоединение);
		Исключение
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			СообщениеОбОшибке = НСтр("ru = 'Ошибка при создании HTTP-соединения с сервером %1:'") + Символы.ПС + "%2";
			УдалитьПолучениеФайловИзИнтернета.ЗаписатьОшибкуВЖурналРегистрации(
				УдалитьСтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(СообщениеОбОшибке, ИмяСервера, 
					ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке)));
			СообщениеОбОшибке = УдалитьСтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(СообщениеОбОшибке, ИмяСервера, 
					ОбработкаОшибок.КраткоеПредставлениеОшибки(ИнформацияОбОшибке));
			Возврат СформироватьРезультат(Ложь, СообщениеОбОшибке);
		КонецПопытки;
	КонецЕсли;
	
	Если НастройкаСохранения["Путь"] <> Неопределено Тогда
		ПутьДляСохранения = НастройкаСохранения["Путь"];
	Иначе
#Если НЕ ВебКлиент Тогда
		ПутьДляСохранения = ПолучитьИмяВременногоФайла();
#КонецЕсли
	КонецЕсли;
	
	Попытка
		Соединение.Получить(ПустьКФайлуНаСервере, ПутьДляСохранения);
	Исключение
		ИнформацияОбОшибке = ИнформацияОбОшибке();
		СообщениеОбОшибке = НСтр("ru = 'Ошибка при получении файла с сервера %1:'") + Символы.ПС + "%2";
		УдалитьПолучениеФайловИзИнтернета.ЗаписатьОшибкуВЖурналРегистрации(
			УдалитьСтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(СообщениеОбОшибке, ИмяСервера, 
				ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке)));
		СообщениеОбОшибке = УдалитьСтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(СообщениеОбОшибке, ИмяСервера, 
				ОбработкаОшибок.КраткоеПредставлениеОшибки(ИнформацияОбОшибке));
		Возврат СформироватьРезультат(Ложь, СообщениеОбОшибке);
	КонецПопытки;
	
	// Если сохраняем файл в соответствии с настройкой 
	Если НастройкаСохранения["МестоХранения"] = "ВременноеХранилище" Тогда
		КлючУникальности = Новый УникальныйИдентификатор;
		Адрес = ПоместитьВоВременноеХранилище (ПутьДляСохранения, КлючУникальности);
		Возврат СформироватьРезультат(Истина, Адрес);
	ИначеЕсли НастройкаСохранения["МестоХранения"] = "Клиент"
	      ИЛИ НастройкаСохранения["МестоХранения"] = "Сервер" Тогда
		Возврат СформироватьРезультат(Истина, ПутьДляСохранения);
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

// Функция формирует прокси по настройкам прокси (передаваемому параметру)
//
// Параметры:
// 
// Прокси        - Соответствие -
//                 ключи:
//                 НеИспользоватьПроксиДляЛокальныхАдресов - строка - 
//                 Сервер       - адрес прокси-сервера
//                 Порт         - порт прокси-сервера
//                 Пользователь - имя пользователя для авторизации на прокси-сервере
//                 Пароль       - пароль пользователя
// Протокол      - строка - протокол для которого устанавливаются параметры прокси сервера
//                 например "http", "https", "ftp"
// 
Функция СформироватьПрокси(НастройкиПрокси, Протокол)
	
	Прокси = Новый ИнтернетПрокси;
	Прокси.НеИспользоватьПроксиДляЛокальныхАдресов = НастройкиПрокси["НеИспользоватьПроксиДляЛокальныхАдресов"];
	Прокси.Установить(Протокол, НастройкиПрокси["Сервер"], НастройкиПрокси["Порт"]);
	Прокси.Пользователь = НастройкиПрокси["Пользователь"];
	Прокси.Пароль       = НастройкиПрокси["Пароль"];
	
	Возврат Прокси;
	
КонецФункции

// Разделяем URL по составным частям (протокол, сервер и путь)
// Параметры:
// URL           - строка - правильный url к ресурсу в Интернет
//
// Возвращаемое значение:
// структура с полями:
// протокол   - строка - протокол доступа к ресурсу
// ИмяСервера - строка - сервер на котором располагается ресурс
// ПустьКФайлуНаСервере - строка - пусть к файлу на сервере
//
Функция РазделитьURL(знач URL)
	
	Результат = Новый Структура;

	// протокол по умолчанию
	Протокол = "http";
	
	URL = СокрЛП(URL);
	
	Если Лев(URL, 5) = "ftp://" Тогда
		URL = Прав(URL, СтрДлина(URL) - 7);
	КонецЕсли;
	
	Если Лев(URL, 7) = "http://" Тогда
		URL = Прав(URL, СтрДлина(URL) - 7);
		Протокол = "http";
	КонецЕсли;
	
	Если Лев(URL, 8) = "https://" Тогда
		URL = Прав(URL, СтрДлина(URL) - 8);
		Протокол = "https";
	КонецЕсли;

	Индекс = 1;
	ИмяСервера = "";
	
	Пока Индекс < СтрДлина(URL) Цикл
		_Символ = Сред(URL, Индекс, 1);
		Если _Символ = "/" Тогда
			Прервать;
		КонецЕсли;
		ИмяСервера = ИмяСервера + _Символ;
		Индекс = Индекс + 1;
	КонецЦикла;
	
	ПустьКФайлу = Прав(URL, СтрДлина(URL) - Индекс);
	
	Результат.Вставить("ИмяСервера", ИмяСервера);
	Результат.Вставить("ПустьКФайлуНаСервере", ПустьКФайлу);
	Результат.Вставить("Протокол", Протокол);
	
	Возврат Результат;
	
КонецФункции

// Функция, заполняющая структуру по параметрам.
//
// Параметры:
// УспехОперации - булево - успех или неуспех операции
// СообщениеПуть - строка - 
//
// Возвращаемое значение:
// стуктура :
//          поле успех - булево
//          поле путь  - строка
//
Функция СформироватьРезультат(знач Статус, знач СообщениеПуть)
	
	Результат = Новый Структура("Статус");
	
	Результат.Статус = Статус;

	Если Статус Тогда
		Результат.Вставить("Путь", СообщениеПуть);
	Иначе
		Результат.Вставить("СообщениеОбОшибке", СообщениеПуть);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции
