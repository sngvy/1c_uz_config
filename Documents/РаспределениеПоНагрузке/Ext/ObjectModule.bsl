
Процедура СортироватьОбъектыПоСуммам() Экспорт
	
	Если Константы.ИспользоватьСтандарныйУчетЗадолженности.Получить() Тогда
		СортироватьОбъектыПоСуммамОстатки();
	Иначе
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	РасчетыПоДоговорамОстатки.Займ КАК Займ,
		|	ЕСТЬNULL(РасчетыПоДоговорамОстатки.ОсновнойДолгОстаток + РасчетыПоДоговорамОстатки.ПроцентыОстаток + РасчетыПоДоговорамОстатки.ПроцентыНачисленныеВПериодПросрочкиОстаток + РасчетыПоДоговорамОстатки.ШтрафыОстаток + РасчетыПоДоговорамОстатки.ПениОстаток, 0) КАК РасчетыОстаток
		|ПОМЕСТИТЬ Расчеты
		|ИЗ
		|	РегистрНакопления.РасчетыПоДоговорам.Остатки(&ДатаОстатков) КАК РасчетыПоДоговорамОстатки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Займ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗадолженностьПоОбъектамВнесудебнаяОстатки.Объект КАК Объект,
		|	ЕСТЬNULL(ЗадолженностьПоОбъектамВнесудебнаяОстатки.СуммаДООстаток, 0) КАК ВнесудОстаток
		|ПОМЕСТИТЬ Внесудебка
		|ИЗ
		|	РегистрНакопления.ЗадолженностьПоОбъектамВнесудебная.Остатки(&ДатаОстатков) КАК ЗадолженностьПоОбъектамВнесудебнаяОстатки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Объект
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗадолженностьПоСудебнымРешениямОстатки.Займ КАК Займ,
		|	ЕСТЬNULL(ЗадолженностьПоСудебнымРешениямОстатки.СуммаОстаток, 0) КАК СудебкаОстаток
		|ПОМЕСТИТЬ Судебка
		|ИЗ
		|	РегистрНакопления.ЗадолженностьПоСудебнымРешениям.Остатки(&ДатаОстатков) КАК ЗадолженностьПоСудебнымРешениямОстатки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Займ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОбъектыВРаботеОстатки.Объект КАК Объект,
		|	ЕСТЬNULL(Расчеты.РасчетыОстаток, 0) + ЕСТЬNULL(Внесудебка.ВнесудОстаток, 0) + ЕСТЬNULL(Судебка.СудебкаОстаток, 0) КАК СуммаЗадолженности
		|ИЗ
		|	РегистрНакопления.ОбъектыВРаботе.Остатки(, Объект В (&Объекты)) КАК ОбъектыВРаботеОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ Расчеты КАК Расчеты
		|		ПО ОбъектыВРаботеОстатки.Объект = Расчеты.Займ
		|		ЛЕВОЕ СОЕДИНЕНИЕ Внесудебка КАК Внесудебка
		|		ПО ОбъектыВРаботеОстатки.Объект = Внесудебка.Объект
		|		ЛЕВОЕ СОЕДИНЕНИЕ Судебка КАК Судебка
		|		ПО ОбъектыВРаботеОстатки.Объект = Судебка.Займ
		|
		|УПОРЯДОЧИТЬ ПО
		|	СуммаЗадолженности УБЫВ";
		
		Запрос.УстановитьПараметр("ДатаОстатков", ТекущаяДатаСеанса());
		Запрос.УстановитьПараметр("Объекты", ЭтотОбъект.Объекты.ВыгрузитьКолонку("Объект"));
		ЭтотОбъект.Объекты.Загрузить(Запрос.Выполнить().Выгрузить());		
	КонецЕсли;	
	
КонецПроцедуры

Процедура СортироватьОбъектыПоСуммамОстатки()
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	Объекты.Объект КАК Объект
	                      |ПОМЕСТИТЬ ТаблицаОбъекты
	                      |ИЗ
	                      |	&Объекты КАК Объекты
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ТаблицаОбъекты.Объект КАК Объект,
	                      |	ЗадолженностьПоОбъектамОстатки.СуммаРеглОстаток КАК СуммаЗадолженности
	                      |ИЗ
	                      |	ТаблицаОбъекты КАК ТаблицаОбъекты
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗадолженностьПоОбъектам.Остатки(&ТекущаяДата) КАК ЗадолженностьПоОбъектамОстатки
	                      |		ПО ТаблицаОбъекты.Объект = ЗадолженностьПоОбъектамОстатки.Объект
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	СуммаЗадолженности УБЫВ");
	Запрос.УстановитьПараметр("Объекты", ЭтотОбъект.Объекты.Выгрузить());
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
	ЭтотОбъект.Объекты.Загрузить(Запрос.Выполнить().Выгрузить());
КонецПроцедуры

//Не используется

Процедура СортироватьОбъектыПоСуммамОстаткиДваРегистра()
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Объекты.Объект КАК Объект
		|ПОМЕСТИТЬ ТаблицаОбъекты
		|ИЗ
		|	&Объекты КАК Объекты
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Объекты.Объект
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаОбъекты.Объект КАК Объект,
		|	ЕСТЬNULL(ЗадолженностьПоОбъектамВнесудебнаяОстатки.СуммаДООстаток, 0) КАК СуммаВнесудебная,
		|	ЕСТЬNULL(ЗадолженностьПоСудебнымРешениямОстатки.СуммаОстаток, 0) КАК СуммаПризнанная,
		|	ЕСТЬNULL(ИсковыеТребования.ЦенаИска, 0) + ЕСТЬNULL(ИсковыеТребования.СуммаГоспошлина, 0) КАК СуммаПоданная,
		|	ЕСТЬNULL(ИсковыеТребования.ЦенаИска, 0) + ЕСТЬNULL(ИсковыеТребования.СуммаГоспошлина, 0) + ЕСТЬNULL(ЗадолженностьПоСудебнымРешениямОстатки.СуммаОстаток, 0) КАК СуммаСудебная
		|ПОМЕСТИТЬ Задолженность
		|ИЗ
		|	ТаблицаОбъекты КАК ТаблицаОбъекты
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗадолженностьПоОбъектамВнесудебная.Остатки(&ТекущаяДата) КАК ЗадолженностьПоОбъектамВнесудебнаяОстатки
		|		ПО ТаблицаОбъекты.Объект = ЗадолженностьПоОбъектамВнесудебнаяОстатки.Объект
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗадолженностьПоСудебнымРешениям.Остатки(&ТекущаяДата) КАК ЗадолженностьПоСудебнымРешениямОстатки
		|		ПО ТаблицаОбъекты.Объект = ЗадолженностьПоСудебнымРешениямОстатки.Займ
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ИсковыеТребования КАК ИсковыеТребования
		|		ПО ТаблицаОбъекты.Объект = ИсковыеТребования.Займ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Объект
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Задолженность.Объект КАК Объект,
		|	ВЫБОР
		|		КОГДА Задолженность.СуммаСудебная > 0
		|			ТОГДА Задолженность.СуммаСудебная
		|		ИНАЧЕ Задолженность.СуммаВнесудебная
		|	КОНЕЦ КАК СуммаЗадолженности
		|ИЗ
		|	Задолженность КАК Задолженность
		|
		|УПОРЯДОЧИТЬ ПО
		|	СуммаЗадолженности УБЫВ";
	
	Запрос.УстановитьПараметр("Объекты", ЭтотОбъект.Объекты.Выгрузить());
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
	ЭтотОбъект.Объекты.Загрузить(Запрос.Выполнить().Выгрузить());

КонецПроцедуры

Процедура СортироватьОбъектыПоСуммамПоГрафику()
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	Объекты.Объект
	                      |ПОМЕСТИТЬ ТаблицаОбъекты
	                      |ИЗ
	                      |	&Объекты КАК Объекты
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ТаблицаОбъекты.Объект,
	                      |	РасчетныеДанные.Значение КАК СуммаЗадолженности
	                      |ИЗ
	                      |	ТаблицаОбъекты КАК ТаблицаОбъекты
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РасчетныеДанные КАК РасчетныеДанные
	                      |		ПО ТаблицаОбъекты.Объект = РасчетныеДанные.Займ
	                      |ГДЕ
						  |РасчетныеДанные.Свойство = &Свойство
	                      |УПОРЯДОЧИТЬ ПО
	                      |	СуммаЗадолженности УБЫВ");
	Запрос.УстановитьПараметр("Объекты", ЭтотОбъект.Объекты.Выгрузить());
	Запрос.УстановитьПараметр("Свойство", ПланыВидовХарактеристик.РасчетныеХарактеристики.Сумма);
	ЭтотОбъект.Объекты.Загрузить(Запрос.Выполнить().Выгрузить());

КонецПроцедуры

Процедура СортироватьОбъектыПоСуммамГрафикИСудебныйРегистр()
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Объекты.Объект КАК Объект
		|ПОМЕСТИТЬ ТаблицаОбъекты
		|ИЗ
		|	&Объекты КАК Объекты
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Объекты.Объект
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаОбъекты.Объект КАК Объект,
		|	ЕСТЬNULL(РасчетныеДанные.Значение, 0) КАК СуммаВнесудебная,
		|	ЕСТЬNULL(ЗадолженностьПоСудебнымРешениямОстатки.СуммаОстаток, 0) КАК СуммаПризнанная,
		|	ЕСТЬNULL(ИсковыеТребованияОстатки.ЦенаИскаОстаток, 0) + ЕСТЬNULL(ИсковыеТребованияОстатки.СуммаГоспошлинаОстаток, 0) КАК СуммаПоданная,
		|	ЕСТЬNULL(ИсковыеТребованияОстатки.ЦенаИскаОстаток, 0) + ЕСТЬNULL(ИсковыеТребованияОстатки.СуммаГоспошлинаОстаток, 0) + ЕСТЬNULL(ЗадолженностьПоСудебнымРешениямОстатки.СуммаОстаток, 0) КАК СуммаСудебная
		|ПОМЕСТИТЬ Задолженность
		|ИЗ
		|	ТаблицаОбъекты КАК ТаблицаОбъекты
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РасчетныеДанные КАК РасчетныеДанные
		|		ПО ТаблицаОбъекты.Объект = РасчетныеДанные.Займ
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗадолженностьПоСудебнымРешениям.Остатки(&ТекущаяДата) КАК ЗадолженностьПоСудебнымРешениямОстатки
		|		ПО ТаблицаОбъекты.Объект = ЗадолженностьПоСудебнымРешениямОстатки.Займ
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ИсковыеТребования.Остатки(&ТекущаяДата) КАК ИсковыеТребованияОстатки
		|		ПО ТаблицаОбъекты.Объект = ИсковыеТребованияОстатки.Займ
		|ГДЕ
		|	РасчетныеДанные.Свойство = &Свойство
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Объект
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Задолженность.Объект КАК Объект,
		|	ВЫБОР
		|		КОГДА Задолженность.СуммаСудебная > 0
		|			ТОГДА Задолженность.СуммаСудебная
		|		ИНАЧЕ Задолженность.СуммаВнесудебная
		|	КОНЕЦ КАК СуммаЗадолженности
		|ИЗ
		|	Задолженность КАК Задолженность
		|
		|УПОРЯДОЧИТЬ ПО
		|	СуммаЗадолженности УБЫВ";
	
	Запрос.УстановитьПараметр("Объекты", ЭтотОбъект.Объекты.Выгрузить());
	Запрос.УстановитьПараметр("Свойство", ПланыВидовХарактеристик.РасчетныеХарактеристики.Сумма);
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
		
	ЭтотОбъект.Объекты.Загрузить(Запрос.Выполнить().Выгрузить());

	
КонецПроцедуры

//------------------


Функция ВыполнитьРаспределение() Экспорт
	Если Не ЭтотОбъект.РаспределятьПоДолям ИЛИ (ЭтотОбъект.РаспределятьПоДолям И СуммаДолей() = 100) Тогда
		Если ЭтотОбъект.ВариантРаспределения.Пустая() Тогда
			ЭтотОбъект.ВариантРаспределения = Перечисления.СпособыРаспределения.ПоровнуПоКоличествуИУбратьИзРаботы;			
		КонецЕсли;
		
		Для Каждого Элемент Из ЭтотОбъект.Сотрудники Цикл
			Элемент.КоличествоДОНовое = Элемент.КоличествоОбъектов;
			Элемент.СуммаЗадолженностиНовое = Элемент.СуммаЗадолженности;
			Элемент.КоличествоДОБезУчетаОбъектовВРаботе = 0;
			Элемент.СуммаЗадолженностиБезУчетаОбъектовВРаботе = 0;
		КонецЦикла;
		Для Каждого Элемент Из ЭтотОбъект.Объекты Цикл
			Элемент.НовыйСотрудник = Неопределено;
		КонецЦикла;
		
		СортироватьОбъектыПоСуммам();
		
		Если ЭтотОбъект.ВариантРаспределения = Перечисления.СпособыРаспределения.ПоровнуПоКоличеству ИЛИ ЭтотОбъект.ВариантРаспределения = Перечисления.СпособыРаспределения.ПоровнуПоКоличествуИУбратьИзРаботы Тогда	
			//ДолговоеОбязательство = НайтиДолговоеОбязательствоСМаксимальнойЗадолженностью();
			
			Для Каждого Элемент ИЗ ЭтотОбъект.Объекты Цикл
				ДолговоеОбязательство = Элемент.Объект;
				Сотрудник = ПолучитьТекущегоОтветственногоДО(ДолговоеОбязательство);
				ПрибавлятьКоличествоДО = Ложь;
				Если Сотрудник = Неопределено Тогда
					Сотрудник = НайтиСотрудникаСМинимальнойНагрузкойПоКоличеству();
					ПрибавлятьКоличествоДО = Истина;
				КонецЕсли;
				ПрисвоитьСотрудникуДО(Сотрудник, ДолговоеОбязательство, ПрибавлятьКоличествоДО);		
				//ДолговоеОбязательство = НайтиДолговоеОбязательствоСМаксимальнойЗадолженностью();
			КонецЦикла;
			
		ИначеЕсли ЭтотОбъект.ВариантРаспределения = Перечисления.СпособыРаспределения.ПоровнуПоСуммеДолга ИЛИ ЭтотОбъект.ВариантРаспределения = Перечисления.СпособыРаспределения.ПоровнуПоСуммеДолгаИУбратьИзРаботы Тогда 
			//ДолговоеОбязательство = НайтиДолговоеОбязательствоСМаксимальнойЗадолженностью();
			//Пока ДолговоеОбязательство <> Неопределено Цикл
			Для Каждого Элемент из ЭтотОбъект.Объекты Цикл
				ДолговоеОбязательство = Элемент.Объект;
				Сотрудник = ПолучитьТекущегоОтветственногоДО(ДолговоеОбязательство);
				ПрибавлятьКоличествоДО = Ложь;
				Если Сотрудник = Неопределено Тогда
					Сотрудник = НайтиСотрудникаСМинимальнойНагрузкойПоСумме();
					ПрибавлятьКоличествоДО = Истина;
				КонецЕсли;
				ПрисвоитьСотрудникуДО(Сотрудник, ДолговоеОбязательство, ПрибавлятьКоличествоДО);		
				ДолговоеОбязательство = НайтиДолговоеОбязательствоСМаксимальнойЗадолженностью();
			КонецЦикла;
		КонецЕсли;	
		Если ЭтотОбъект.НеУчитыватьОбъектыВРаботе Тогда
			Для Каждого Элемент Из ЭтотОбъект.Сотрудники Цикл
				Элемент.КоличествоДОНовое = Элемент.КоличествоДОНовое + Элемент.КоличествоДОБезУчетаОбъектовВРаботе;
				Элемент.СуммаЗадолженностиНовое = Элемент.СуммаЗадолженностиНовое + Элемент.СуммаЗадолженностиБезУчетаОбъектовВРаботе;
			КонецЦикла;
		КонецЕсли;	
		Возврат Истина;
	Иначе
		Сообщить("Сумма долей пользователей должна составлять 100%!");
		Возврат Ложь;
	КонецЕсли;
КонецФункции


Процедура ЗаполнитьНастройкиРаспределения() Экспорт
	Если Константы.ИспользоватьСтандарныйУчетЗадолженности.Получить() Тогда
		ЗаполнитьНастройкиРаспределенияОстатки();
	Иначе
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		| ТаблицаСотрудники.Сотрудник КАК Сотрудник
		|ПОМЕСТИТЬ СотрудникиДляРаспределения
		|ИЗ
		| &ТаблицаСотрудники КАК ТаблицаСотрудники
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		| РасчетыПоДоговорамОстатки.Займ КАК Займ,
		| ЕСТЬNULL(РасчетыПоДоговорамОстатки.ОсновнойДолгОстаток + РасчетыПоДоговорамОстатки.ПроцентыОстаток + РасчетыПоДоговорамОстатки.ПроцентыНачисленныеВПериодПросрочкиОстаток + РасчетыПоДоговорамОстатки.ШтрафыОстаток + РасчетыПоДоговорамОстатки.ПениОстаток, 0) КАК РасчетыОстаток
		|ПОМЕСТИТЬ Расчеты
		|ИЗ
		| РегистрНакопления.РасчетыПоДоговорам.Остатки(&ДатаОстатков, ) КАК РасчетыПоДоговорамОстатки
		|
		|ИНДЕКСИРОВАТЬ ПО
		| Займ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		| ЗадолженностьПоОбъектамВнесудебнаяОстатки.Объект КАК Объект,
		| ЕСТЬNULL(ЗадолженностьПоОбъектамВнесудебнаяОстатки.СуммаДООстаток, 0) КАК ВнесудОстаток
		|ПОМЕСТИТЬ Внесудебка
		|ИЗ
		| РегистрНакопления.ЗадолженностьПоОбъектамВнесудебная.Остатки(&ДатаОстатков, ) КАК ЗадолженностьПоОбъектамВнесудебнаяОстатки
		|
		|ИНДЕКСИРОВАТЬ ПО
		| Объект
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		| ЗадолженностьПоСудебнымРешениямОстатки.Займ КАК Займ,
		| ЕСТЬNULL(ЗадолженностьПоСудебнымРешениямОстатки.СуммаОстаток, 0) КАК СудебкаОстаток
		|ПОМЕСТИТЬ Судебка
		|ИЗ
		| РегистрНакопления.ЗадолженностьПоСудебнымРешениям.Остатки(&ДатаОстатков, ) КАК ЗадолженностьПоСудебнымРешениямОстатки
		|
		|ИНДЕКСИРОВАТЬ ПО
		| Займ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		| СотрудникиДляРаспределения.Сотрудник КАК Сотрудник,
		| СУММА(ЕСТЬNULL(Расчеты.РасчетыОстаток, 0) + ЕСТЬNULL(Внесудебка.ВнесудОстаток, 0) + ЕСТЬNULL(Судебка.СудебкаОстаток, 0)) КАК СуммаЗадолженности,
		| КОЛИЧЕСТВО(ОбъектыВРаботеОстатки.Объект) КАК КоличествоОбъектов
		|ИЗ
		| СотрудникиДляРаспределения КАК СотрудникиДляРаспределения
		|  ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОбъектыВРаботе.Остатки(, Сотрудник <> ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)) КАК ОбъектыВРаботеОстатки
		|   ЛЕВОЕ СОЕДИНЕНИЕ Расчеты КАК Расчеты
		|   ПО ОбъектыВРаботеОстатки.Объект = Расчеты.Займ
		|   ЛЕВОЕ СОЕДИНЕНИЕ Внесудебка КАК Внесудебка
		|   ПО ОбъектыВРаботеОстатки.Объект = Внесудебка.Объект
		|   ЛЕВОЕ СОЕДИНЕНИЕ Судебка КАК Судебка
		|   ПО ОбъектыВРаботеОстатки.Объект = Судебка.Займ
		|  ПО СотрудникиДляРаспределения.Сотрудник = ОбъектыВРаботеОстатки.Сотрудник
		|
		|СГРУППИРОВАТЬ ПО
		| СотрудникиДляРаспределения.Сотрудник";
		Запрос.УстановитьПараметр("ТаблицаСотрудники", ЭтотОбъект.Сотрудники.Выгрузить());
		Запрос.УстановитьПараметр("ДатаОстатков", ТекущаяДатаСеанса());
		
		ЭтотОбъект.Сотрудники.Загрузить(Запрос.Выполнить().Выгрузить());
	КонецЕсли;	
	
КонецПроцедуры


Процедура ЗаполнитьНастройкиРаспределенияОстатки() 
						  
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ТаблицаСотрудники.Сотрудник КАК Сотрудник
	                      |ПОМЕСТИТЬ СотрудникиДляРаспределения
	                      |ИЗ
	                      |	&ТаблицаСотрудники КАК ТаблицаСотрудники
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	СотрудникиДляРаспределения.Сотрудник КАК Сотрудник,
	                      |	СУММА(ЗадолженностьПоОбъектамОстатки.СуммаРеглОстаток) КАК СуммаЗадолженности,
	                      |	КОЛИЧЕСТВО(ОбъектыВРаботеОстатки.Объект) КАК КоличествоОбъектов
	                      |ИЗ
	                      |	СотрудникиДляРаспределения КАК СотрудникиДляРаспределения
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОбъектыВРаботе.Остатки(&ТекущаяДата) КАК ОбъектыВРаботеОстатки
	                      |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗадолженностьПоОбъектам.Остатки(&ТекущаяДата) КАК ЗадолженностьПоОбъектамОстатки
	                      |			ПО ОбъектыВРаботеОстатки.Объект = ЗадолженностьПоОбъектамОстатки.Объект
	                      |		ПО СотрудникиДляРаспределения.Сотрудник = ОбъектыВРаботеОстатки.Сотрудник
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	СотрудникиДляРаспределения.Сотрудник");					  
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ТаблицаСотрудники", ЭтотОбъект.Сотрудники.Выгрузить());
	Запрос.УстановитьПараметр("Подразделение", ЭтотОбъект.Ответственный.Подразделение);
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
	
	Запрос.УстановитьПараметр("Ответственный", ЭтотОбъект.Ответственный);
	ЭтотОбъект.Сотрудники.Загрузить(Запрос.Выполнить().Выгрузить());
КонецПроцедуры

//Не используется

Процедура ЗаполнитьНастройкиРаспределенияОстаткиДваРегистра()
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ОбъектыВРаботеОстатки.Объект КАК Объект,
	                      |	ОбъектыВРаботеОстатки.Сотрудник КАК Сотрудник
	                      |ПОМЕСТИТЬ ТаблицаОбъекты
	                      |ИЗ
	                      |	РегистрНакопления.ОбъектыВРаботе.Остатки(&ТекущаяДата) КАК ОбъектыВРаботеОстатки
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ТаблицаОбъекты.Объект КАК Объект,
	                      |	ЕСТЬNULL(ЗадолженностьПоОбъектамВнесудебнаяОстатки.СуммаДООстаток, 0) КАК СуммаВнесудебная,
	                      |	ЕСТЬNULL(ЗадолженностьПоСудебнымРешениямОстатки.СуммаОстаток, 0) КАК СуммаПризнанная,
	                      |	ЕСТЬNULL(ИсковыеТребования.ЦенаИска, 0) + ЕСТЬNULL(ИсковыеТребования.СуммаГоспошлина, 0) КАК СуммаПоданная,
	                      |	ЕСТЬNULL(ИсковыеТребования.ЦенаИска, 0) + ЕСТЬNULL(ИсковыеТребования.СуммаГоспошлина, 0) + ЕСТЬNULL(ЗадолженностьПоСудебнымРешениямОстатки.СуммаОстаток, 0) КАК СуммаСудебная,
	                      |	ТаблицаОбъекты.Сотрудник КАК Сотрудник
	                      |ПОМЕСТИТЬ Задолженность
	                      |ИЗ
	                      |	ТаблицаОбъекты КАК ТаблицаОбъекты
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗадолженностьПоОбъектамВнесудебная.Остатки(&ТекущаяДата) КАК ЗадолженностьПоОбъектамВнесудебнаяОстатки
	                      |		ПО ТаблицаОбъекты.Объект = ЗадолженностьПоОбъектамВнесудебнаяОстатки.Объект
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗадолженностьПоСудебнымРешениям.Остатки(&ТекущаяДата) КАК ЗадолженностьПоСудебнымРешениямОстатки
	                      |		ПО ТаблицаОбъекты.Объект = ЗадолженностьПоСудебнымРешениямОстатки.Займ
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ИсковыеТребования КАК ИсковыеТребования
	                      |		ПО ТаблицаОбъекты.Объект = ИсковыеТребования.Займ
	                      |
	                      |ИНДЕКСИРОВАТЬ ПО
	                      |	Объект
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	Задолженность.Сотрудник КАК Сотрудник,
	                      |	КОЛИЧЕСТВО(Задолженность.Объект) КАК КоличествоОбъектов,
	                      |	СУММА(ВЫБОР
	                      |			КОГДА Задолженность.СуммаСудебная > 0
	                      |				ТОГДА Задолженность.СуммаСудебная
	                      |			ИНАЧЕ Задолженность.СуммаВнесудебная
	                      |		КОНЕЦ) КАК СуммаЗадолженности
	                      |ИЗ
	                      |	Задолженность КАК Задолженность
	                      |ГДЕ
	                      |	Задолженность.Сотрудник В(&ТаблицаСотрудники)
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	Задолженность.Сотрудник");					  
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ТаблицаСотрудники", ЭтотОбъект.Сотрудники.ВыгрузитьКолонку("Сотрудник"));
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
	ЭтотОбъект.Сотрудники.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

Процедура ЗаполнитьНастройкиРаспределенияПоГрафику()
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ТаблицаСотрудники.Сотрудник КАК Сотрудник
	                      |ПОМЕСТИТЬ СотрудникиДляРаспределения
	                      |ИЗ
	                      |	&ТаблицаСотрудники КАК ТаблицаСотрудники
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	СотрудникиДляРаспределения.Сотрудник КАК Сотрудник,
	                      |	СУММА(ВЫРАЗИТЬ(РасчетныеДанные.Значение КАК ЧИСЛО(10, 2))) КАК СуммаЗадолженности,
	                      |	КОЛИЧЕСТВО(ОбъектыВРаботеОстатки.Объект) КАК КоличествоОбъектов
	                      |ИЗ
	                      |	СотрудникиДляРаспределения КАК СотрудникиДляРаспределения
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОбъектыВРаботе.Остатки(&ТекущаяДата) КАК ОбъектыВРаботеОстатки
	                      |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РасчетныеДанные КАК РасчетныеДанные
	                      |			ПО ОбъектыВРаботеОстатки.Объект = РасчетныеДанные.Займ
	                      |				И (РасчетныеДанные.Свойство = &Свойство)
	                      |		ПО СотрудникиДляРаспределения.Сотрудник = ОбъектыВРаботеОстатки.Сотрудник
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	СотрудникиДляРаспределения.Сотрудник");					  
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ТаблицаСотрудники", ЭтотОбъект.Сотрудники.Выгрузить());
	Запрос.УстановитьПараметр("Свойство", ПланыВидовХарактеристик.РасчетныеХарактеристики.Сумма);
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
	ЭтотОбъект.Сотрудники.Загрузить(Запрос.Выполнить().Выгрузить());
						  
КонецПроцедуры

Процедура ЗаполнитьНастройкиРаспределенияГрафикИСудебныйРегистр()
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОбъектыВРаботеОстатки.Объект КАК Объект,
	|	ОбъектыВРаботеОстатки.Сотрудник КАК Сотрудник
	|ПОМЕСТИТЬ ТаблицаОбъекты
	|ИЗ
	|	РегистрНакопления.ОбъектыВРаботе.Остатки(&ТекущаяДата) КАК ОбъектыВРаботеОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОбъекты.Объект КАК Объект,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(РасчетныеДанные.Значение, 0) КАК ЧИСЛО(10, 2)) КАК СуммаВнесудебная,
	|	ЕСТЬNULL(ЗадолженностьПоСудебнымРешениямОстатки.СуммаОстаток, 0) КАК СуммаПризнанная,
	|	ЕСТЬNULL(ИсковыеТребованияОстатки.ЦенаИскаОстаток, 0) + ЕСТЬNULL(ИсковыеТребованияОстатки.СуммаГоспошлинаОстаток, 0) КАК СуммаПоданная,
	|	ЕСТЬNULL(ИсковыеТребованияОстатки.ЦенаИскаОстаток, 0) + ЕСТЬNULL(ИсковыеТребованияОстатки.СуммаГоспошлинаОстаток, 0) + ЕСТЬNULL(ЗадолженностьПоСудебнымРешениямОстатки.СуммаОстаток, 0) КАК СуммаСудебная,
	|	ТаблицаОбъекты.Сотрудник КАК Сотрудник
	|ПОМЕСТИТЬ Задолженность
	|ИЗ
	|	ТаблицаОбъекты КАК ТаблицаОбъекты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РасчетныеДанные КАК РасчетныеДанные
	|		ПО ТаблицаОбъекты.Объект = РасчетныеДанные.Займ
	|			И (РасчетныеДанные.Свойство = &Свойство)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗадолженностьПоСудебнымРешениям.Остатки(&ТекущаяДата) КАК ЗадолженностьПоСудебнымРешениямОстатки
	|		ПО ТаблицаОбъекты.Объект = ЗадолженностьПоСудебнымРешениямОстатки.Займ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ИсковыеТребования.Остатки(&ТекущаяДата) КАК ИсковыеТребованияОстатки
	|		ПО ТаблицаОбъекты.Объект = ИсковыеТребованияОстатки.Займ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Объект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Задолженность.Сотрудник КАК Сотрудник,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Задолженность.Объект) КАК КоличествоОбъектов,
	|	СУММА(ВЫБОР
	|			КОГДА Задолженность.СуммаСудебная > 0
	|				ТОГДА Задолженность.СуммаСудебная
	|			ИНАЧЕ Задолженность.СуммаВнесудебная
	|		КОНЕЦ) КАК СуммаЗадолженности
	|ИЗ
	|	Задолженность КАК Задолженность
	|ГДЕ
	|	Задолженность.Сотрудник В(&ТаблицаСотрудники)
	|
	|СГРУППИРОВАТЬ ПО
	|	Задолженность.Сотрудник";
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Свойство", ПланыВидовХарактеристик.РасчетныеХарактеристики.Сумма);			  
	Запрос.УстановитьПараметр("ТаблицаСотрудники", ЭтотОбъект.Сотрудники.ВыгрузитьКолонку("Сотрудник"));
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
	ЭтотОбъект.Сотрудники.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

//------------------


Функция НайтиДолговоеОбязательствоСМаксимальнойЗадолженностью()
	Строки = ЭтотОбъект.Объекты.НайтиСтроки(Новый Структура("НовыйСотрудник", Справочники.Пользователи.ПустаяСсылка()));
	ДолговоеОбязательство = Неопределено;
	СуммаМакс = 0;
	Для Каждого Элемент Из Строки Цикл		
		Если ДолговоеОбязательство = Неопределено ИЛИ Элемент.СуммаЗадолженности > СуммаМакс Тогда
			ДолговоеОбязательство = Элемент.Объект;
			СуммаМакс = Элемент.СуммаЗадолженности;
		КонецЕсли;
	КонецЦикла;	
	Возврат ДолговоеОбязательство;
КонецФункции

Функция НайтиСотрудникаСМинимальнойНагрузкойПоКоличеству() Экспорт
	Сотрудник = Неопределено;
	КолМин = 0;
	СуммаМин = 0;
	Для Каждого Элемент Из ЭтотОбъект.Сотрудники Цикл
		Если ЭтотОбъект.НеУчитыватьОбъектыВРаботе Тогда
			КолДО = Элемент.КоличествоДОБезУчетаОбъектовВРаботе;
			Сумма = Элемент.СуммаЗадолженностиБезУчетаОбъектовВРаботе;
		Иначе
			КолДО = Элемент.КоличествоДОНовое;
			Сумма = Элемент.СуммаЗадолженностиНовое;
		КонецЕсли;
		Если ЭтотОбъект.РаспределятьПоДолям Тогда
			Множитель = Элемент.Доля;
		Иначе
			Множитель = 1;
		КонецЕсли;
		Если Множитель > 0 Тогда
			
			Если Сотрудник = Неопределено ИЛИ КолДО/Множитель < КолМин ИЛИ 
				(КолДО/Множитель = КолМин И Сумма/Множитель < СуммаМин) Тогда
				Сотрудник = Элемент.Сотрудник;
				КолМин = КолДО/Множитель;
				СуммаМин = Сумма/Множитель;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Возврат Сотрудник;	
КонецФункции

Функция НайтиСотрудникаСМинимальнойНагрузкойПоСумме() Экспорт
	Сотрудник = Неопределено;
	КолМин = 0;
	СуммаМин = 0;
	Для Каждого Элемент Из ЭтотОбъект.Сотрудники Цикл 
		Если ЭтотОбъект.НеУчитыватьОбъектыВРаботе Тогда
			КолДО = Элемент.КоличествоДОБезУчетаОбъектовВРаботе;
			Сумма = Элемент.СуммаЗадолженностиБезУчетаОбъектовВРаботе;
		Иначе
			КолДО = Элемент.КоличествоДОНовое;
			Сумма = Элемент.СуммаЗадолженностиНовое;
		КонецЕсли;
		Если ЭтотОбъект.РаспределятьПоДолям Тогда
			Множитель = Элемент.Доля;
		Иначе
			Множитель = 1;
		КонецЕсли;
		Если Множитель > 0 Тогда			
			Если Сотрудник = Неопределено ИЛИ Сумма/Множитель < СуммаМин ИЛИ 
				(Сумма/Множитель = СуммаМин И КолДО/Множитель < КолМин) Тогда
				Сотрудник = Элемент.Сотрудник;
				КолМин = КолДО/Множитель;
				СуммаМин = Сумма/Множитель;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Возврат Сотрудник;
КонецФункции

Функция СуммаДолей() Экспорт
	Сумма = 0;
	Для Каждого Элемент Из ЭтотОбъект.Сотрудники Цикл
		Сумма = Сумма + Элемент.Доля;
	КонецЦикла;
	Возврат Сумма;
КонецФункции

Функция ПолучитьТекущегоОтветственногоДО(ДолговоеОбязательство)
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ОбъектыВРаботеОстатки.Сотрудник КАК Ответственный
	                      |ИЗ
	                      |	РегистрНакопления.ОбъектыВРаботе.Остатки(, Объект = &ДО) КАК ОбъектыВРаботеОстатки");
	Запрос.УстановитьПараметр("ДО", ДолговоеОбязательство);
	Результат = Запрос.Выполнить().Выбрать();
	Сотрудник = Неопределено;
	Пока Результат.Следующий() Цикл
		Строки = ЭтотОбъект.Сотрудники.НайтиСтроки(Новый Структура("Сотрудник", Результат.Ответственный));
		Если Строки.Количество() > 0 Тогда
			Сотрудник = Результат.Ответственный;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Возврат Сотрудник;
	//Возврат Справочники.Пользователи.ПустаяСсылка();
	//Возврат Неопределено;
КонецФункции

Процедура ПрисвоитьСотрудникуДО(Сотрудник, ДолговоеОбязательство, ПрибавлятьКоличествоДО)
	СтрокаДО = ЭтотОбъект.Объекты.НайтиСтроки(Новый Структура("Объект", ДолговоеОбязательство))[0];
	СтрокаСотрудника = ЭтотОбъект.Сотрудники.НайтиСтроки(Новый Структура("Сотрудник", Сотрудник))[0];
	
	
	СтрокаДО.НовыйСотрудник = Сотрудник;
	Если ПрибавлятьКоличествоДО Тогда
		Если ЭтотОбъект.НеУчитыватьОбъектыВРаботе Тогда
			СтрокаСотрудника.КоличествоДОБезУчетаОбъектовВРаботе = СтрокаСотрудника.КоличествоДОБезУчетаОбъектовВРаботе + 1;
			СтрокаСотрудника.СуммаЗадолженностиБезУчетаОбъектовВРаботе = СтрокаСотрудника.СуммаЗадолженностиБезУчетаОбъектовВРаботе + СтрокаДО.СуммаЗадолженности;
		Иначе
			СтрокаСотрудника.КоличествоДОНовое = СтрокаСотрудника.КоличествоДОНовое + 1;
			СтрокаСотрудника.СуммаЗадолженностиНовое = СтрокаСотрудника.СуммаЗадолженностиНовое + СтрокаДО.СуммаЗадолженности;
		КонецЕсли;
	Иначе
		СтрокаДО.УжеВРаботе = Истина;
	КонецЕсли;
КонецПроцедуры


Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ТаблицаДолжников.Объект,
	                      |	ТаблицаДолжников.НовыйСотрудник
	                      |ПОМЕСТИТЬ ТаблицаДолжников
	                      |ИЗ
	                      |	&ВыбранныеОбъекты КАК ТаблицаДолжников
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	МАКСИМУМ(ЕСТЬNULL(ОбъектыВРаботеОстатки.Сотрудник, ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка))) КАК Ответственный,
	                      |	ТаблицаДолжников.Объект,
	                      |	ТаблицаДолжников.НовыйСотрудник КАК НовыйСотрудник
	                      |ИЗ
	                      |	ТаблицаДолжников КАК ТаблицаДолжников
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ОбъектыВРаботе.Остатки(&Момент, Подразделение = &Подразделение) КАК ОбъектыВРаботеОстатки
	                      |		ПО ТаблицаДолжников.Объект = ОбъектыВРаботеОстатки.Объект
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	ТаблицаДолжников.Объект,
	                      |	ТаблицаДолжников.НовыйСотрудник
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Ответственный,
	                      |	НовыйСотрудник
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |УНИЧТОЖИТЬ ТаблицаДолжников");
						  
	Запрос.УстановитьПараметр("ВыбранныеОбъекты", ЭтотОбъект.Объекты.Выгрузить());
	Запрос.УстановитьПараметр("Момент", Новый Граница(КонецДня(ТекущаяДатаСеанса()), ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("Подразделение", ЭтотОбъект.Подразделение);	
	Результат = Запрос.ВыполнитьПакет();
	ТЗ = Результат[1].Выгрузить();
	
	ДокументОбъект = Неопределено;
	СтарыйОтветственный = Неопределено;
	НовыйОтветственный = Неопределено; 
	Для Каждого Элемент Из ТЗ Цикл
		Если Элемент.Ответственный = Элемент.НовыйСотрудник Тогда
			Продолжить;
		КонецЕсли;
		
		Если СтарыйОтветственный <> Элемент.Ответственный ИЛИ НовыйОтветственный <> Элемент.НовыйСотрудник Тогда
			Если ДокументОбъект <> Неопределено Тогда
				Попытка
					ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
				Исключение
					Отказ = Истина;
					Возврат;
				КонецПопытки;
			КонецЕсли;
			ДокументОбъект = Документы.АктПередачи.СоздатьДокумент();
			ДокументОбъект.Дата = ТекущаяДатаСеанса();
			ДокументОбъект.Организация = Элемент.НовыйСотрудник.Организация;
			//ДокументОбъект.СотрудникПередающий = Элемент.Ответственный;
			ДокументОбъект.СотрудникПринимающий = Элемент.НовыйСотрудник;
			//ДокументОбъект.ПодразделениеПередающее = Элемент.Ответственный.Подразделение;
			ДокументОбъект.ПодразделениеПринимающее = Элемент.НовыйСотрудник.Подразделение;
			ДокументОбъект.Автор = ЭтотОбъект.Ссылка;
			ДокументОбъект.ТипСотрудникаПринимающего = ТипСотрудника;
			Если ЭтотОбъект.ВариантРаспределения = Перечисления.СпособыРаспределения.ПоровнуПоКоличествуИУбратьИзРаботы 
				ИЛИ ЭтотОбъект.ВариантРаспределения = Перечисления.СпособыРаспределения.ПоровнуПоСуммеДолгаИУбратьИзРаботы Тогда
				ДокументОбъект.СотрудникПередающий = ЭтотОбъект.Ответственный;
				ДокументОбъект.ТипСотрудникаПередающего = ЭтотОбъект.ТипСотрудника;
				ДокументОбъект.ПодразделениеПередающее = ЭтотОбъект.Ответственный.Подразделение;
			КонецЕсли;
		КонецЕсли;		
		ДокументОбъект.Объекты.Добавить().Объект = Элемент.Объект;		
	КонецЦикла;
	
	Если ДокументОбъект <> Неопределено Тогда
		Попытка
			ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
		Исключение
			Отказ = Истина;
		КонецПопытки;
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	АктПередачи.Ссылка,
	                      |	АктПередачи.ДокументОснование
	                      |ПОМЕСТИТЬ Таблица
	                      |ИЗ
	                      |	Документ.АктПередачи КАК АктПередачи
	                      |ГДЕ
	                      |	АктПередачи.Автор = &Автор
	                      |	И АктПередачи.Проведен
	                      |	И НЕ АктПередачи.ПометкаУдаления
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	Таблица.Ссылка
	                      |ИЗ
	                      |	Таблица КАК Таблица
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ Таблица КАК ТаблицаОсн
	                      |		ПО Таблица.Ссылка = ТаблицаОсн.ДокументОснование
	                      |ГДЕ
	                      |	ТаблицаОсн.Ссылка ЕСТЬ NULL 
	                      |	И Таблица.ДокументОснование = НЕОПРЕДЕЛЕНО");
	Запрос.УстановитьПараметр("Автор", Ссылка);			  
	Результат = Запрос.Выполнить().Выбрать();
	Пока Результат.Следующий() Цикл
		Док = Документы.АктПередачи.СоздатьДокумент();
		Док.Дата = ТекущаяДатаСеанса();
		Док.Организация = Результат.Ссылка.Организация;
		Док.Автор = Ссылка;
		Док.ДокументОснование = Результат.Ссылка;
		Док.СотрудникПередающий = Результат.Ссылка.СотрудникПринимающий;
		Док.СотрудникПринимающий = Результат.Ссылка.СотрудникПередающий;
		Док.ПодразделениеПередающее = Результат.Ссылка.ПодразделениеПринимающее;
		Док.ПодразделениеПринимающее = Результат.Ссылка.ПодразделениеПередающее;
		Док.ТипСотрудникаПередающего = Результат.Ссылка.ТипСотрудникаПринимающего;
		Док.ТипСотрудникаПринимающего = Результат.Ссылка.ТипСотрудникаПередающего;
		Док.НазначитьГлавнымГруппы = Результат.Ссылка.БылГлавнымГруппы;
		
		Док.Объекты.Загрузить(Результат.Ссылка.Объекты.Выгрузить());
		
		Попытка
			Док.Записать(РежимЗаписиДокумента.Проведение);
		Исключение
			Сообщить(ОписаниеОшибки());
			Отказ = Истина;
			Возврат;
		КонецПопытки;
	КонецЦикла;
КонецПроцедуры


