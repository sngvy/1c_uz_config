
//Шаблон Автоинформирования
Процедура ЗаписатьФайлТСИ(ФайлТСИ, СсылкаНаДокумент) Экспорт
	Если ФайлТСИ.КоличествоСтрок() = 0 Тогда
		Возврат;
	КонецЕсли;
		
	СсылкаСправочникаFTP = Константы.FTPСоединение.Получить();
	Если СсылкаСправочникаFTP.Пустая() Тогда
		ИмяФайла = СокрЛП(Константы.КаталогДляЗаданийАвтоинформирования.Получить());
	Иначе
		ИмяФайла = КаталогВременныхФайлов();
	КонецЕсли;
	Если Прав(ИмяФайла, 1) <> "\" Тогда
		ИмяФайла = ИмяФайла + "\";
	КонецЕсли;
	
	СтрокаДокумент = СтрЗаменить(Строка(СсылкаНаДокумент), ":", ".");
	ИмяФайла = ИмяФайла + "[" + Константы.ИмяИсточникаАИ.Получить() + "] " + СтрокаДокумент + ".tsi";
	Попытка
		ФайлТСИ.Записать(ИмяФайла);
	Исключение
		Сообщить("Не удалось записать файл """ + ИмяФайла + """");
		Возврат;
	КонецПопытки;
	
	Если НЕ СсылкаСправочникаFTP.Пустая() Тогда
		Попытка
			FTPПапка = Новый FTPСоединение(СсылкаСправочникаFTP.Сервер,,СсылкаСправочникаFTP.Пользователь,
					СсылкаСправочникаFTP.Пароль);			
		Исключение
			Сообщить("Не удалось установить FTP соединение!");
			Возврат;
		КонецПопытки;   
		FTPПапка.УстановитьТекущийКаталог(Константы.КаталогДляЗаданийАвтоинформирования.Получить());
		//УИД = Строка(Новый УникальныйИдентификатор());
		//FTPПапка.Записать(ИмяФайла, УИД + ".tsi");
		FTPПапка.Записать(ИмяФайла, "[" + Константы.ИмяИсточникаАИ.Получить() + "] " + СтрокаДокумент + ".tsi");
		УдалитьФайлы(ИмяФайла);
		//ИмяФайла = УИД + ".tsi";
		ИмяФайла = "[" + Константы.ИмяИсточникаАИ.Получить() + "] " + СтрокаДокумент + ".tsi";
  	КонецЕсли;

	//Добавить запись в регистр сведений
	Запись = РегистрыСведений.ХранилищеДанныхАвтоинформирования.СоздатьМенеджерЗаписи();
	Запись.Документ = СсылкаНаДокумент;
	Запись.ИмяФайла = ИмяФайла;
	Запись.ТекстАвтоинформирования = Новый ХранилищеЗначения(ФайлТСИ.ПолучитьТекст(), Новый СжатиеДанных(5));
	Запись.Записать();
КонецПроцедуры

//Шаблон Автоинформирования
Процедура ДобавитьЗаписьВФайлТСИ(ФайлТСИ, Объект, Шаблон, УИД, СпособИнформирования, ВидКИ, Отказ, ДатаАктуальности = ""
		) Экспорт
		
	Если СпособИнформирования = Перечисления.ВариантыДействийДляСкоринга.ГолосовоеСообщение ИЛИ
			СпособИнформирования = Перечисления.ВариантыДействийДляСкоринга.SMSОповещение Тогда	
		Текст = Шаблон.ШаблонТекста;
		Для Каждого Элемент Из Шаблон.Настройка Цикл
			Если Элемент.Используется Тогда
				Если Элемент.ТипПоля = ПредопределенноеЗначение("Перечисление.ТипыЗначенийДляШаблонов.Текст") Тогда
					СтрокаЗамены = Элемент.Значение;
					
				ИначеЕсли Элемент.ТипПоля = ПредопределенноеЗначение("Перечисление.ТипыЗначенийДляШаблонов.Реквизит") Тогда	
					
					//Массив = Элемент.Хранилище.Получить();
					Массив = УЭДСервер.ПолучитьМассивИзСтроки(Элемент.СтрокаХранилище);
					
					СтрокаЗамены = Справочники.ШаблоныТекстаДляАвтоинформирования.РазобратьСтроку(
							Элемент.СтрокаДляПолученияЗначения, Элемент.Значение, Объект, Массив);
							
				ИначеЕсли Элемент.ТипПоля = ПредопределенноеЗначение("Перечисление.ТипыЗначенийДляШаблонов.Файл") И 
						Не Элемент.Значение.Пустая() Тогда	
					СтрокаЗамены = "{" + Элемент.Значение.Путь + "}";			
				КонецЕсли;			
							
				Если Не Элемент.Функция.Пустая() Тогда
					СтрокаЗамены = Справочники.ШаблоныТекстаДляАвтоинформирования.ВычислитьФункцию(Элемент.Функция.Функция, 
							Объект, СтрокаЗамены);	
				КонецЕсли; 		
								
				Текст = СтрЗаменить(Текст, Элемент.Поле, СтрокаЗамены);
			КонецЕсли;
		КонецЦикла;
		Текст = СтрЗаменить(Текст, Символы.ПС, " ");
		Текст = СтрЗаменить(Текст, Символы.НПП, "");
	КонецЕсли;
	
	
	ТелефонАдрес = ПолучитьСтрокуТелефонАдрес(Объект, ВидКИ);
		
	
	Если СпособИнформирования = Перечисления.ВариантыДействийДляСкоринга.ГолосовоеСообщение Тогда
		ТелефонАдрес = ПодготовитьТелефон(ТелефонАдрес);
		Если ТелефонАдрес = "" Тогда
			Отказ = Истина;
			Возврат;
		КонецЕсли;                  
		ФайлТСИ.ДобавитьСтроку(УИД + "~~" + ТелефонАдрес + "~1~2~0~1~~~" + ДатаАктуальности);
		ФайлТСИ.ДобавитьСтроку(Текст);
		
	ИначеЕсли СпособИнформирования = Перечисления.ВариантыДействийДляСкоринга.SMSОповещение Тогда
		ТелефонАдрес = ПодготовитьТелефон(ТелефонАдрес);
		Если ТелефонАдрес = "" Тогда
			Отказ = Истина;
			Возврат;
		КонецЕсли;
			
		Если СтрДлина(ТелефонАдрес) = 11 Тогда
			ТелефонАдрес = "7" + Сред(ТелефонАдрес, 2);
		КонецЕсли;
		ФайлТСИ.ДобавитьСтроку(УИД + "~~" + ТелефонАдрес + "~2~2~0~2~~~" + ДатаАктуальности);
		ФайлТСИ.ДобавитьСтроку(Текст);
		
	ИначеЕсли СпособИнформирования = Перечисления.ВариантыДействийДляСкоринга.EMailРассылка Тогда
		//Надо бы еще заголовок письма и важность
		//Поддержку форматирования ???	
		ТекстПисьма = Справочники.ШаблоныТекстаДляАвтоинформирования.ЗаполнитьHTMLШаблон(Шаблон, Объект);		
		ФайлТСИ.ДобавитьСтроку(УИД + "~~" + ТелефонАдрес + "~4~2~0~3~1~" + Шаблон.ЗаголовокEMail + "~" + ДатаАктуальности);
		СтрокаНомер = "<ТЕКСТ_ПИСЬМА = " + Формат(ФайлТСИ.КоличествоСтрок(), "ЧГ=") + ">";
		ФайлТСИ.ДобавитьСтроку(СтрокаНомер);
		ФайлТСИ.ДобавитьСтроку(ТекстПисьма);
		ФайлТСИ.ДобавитьСтроку(СтрокаНомер);
	КонецЕсли;
КонецПроцедуры

Функция ПодготовитьТелефон(Знач Телефон) Экспорт
	Номер = Найти(Телефон, ";");
	Если Номер > 0 Тогда
		Телефон = Лев(Телефон, Номер - 1);
	КонецЕсли;
	Телефон = СтрЗаменить(Телефон, "+", "");
	Телефон = СтрЗаменить(Телефон, "-", "");
	Телефон = СтрЗаменить(Телефон, " ", "");
	Телефон = СтрЗаменить(Телефон, "(", "");
	Телефон = СтрЗаменить(Телефон, ")", "");
	Возврат Телефон;
КонецФункции

Функция ПолучитьСтрокуТелефонАдрес(Объект, ВидКИ)
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	Таблица.Свойство
	                      |ПОМЕСТИТЬ ТаблицаСвойств
	                      |ИЗ
	                      |	&ТаблицаСвойств КАК Таблица
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	КонтрагентыДополнительныеРеквизиты.Значение,
	                      |	ВЫРАЗИТЬ(ТаблицаСвойств.Свойство КАК ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения).ВидСтроки КАК ВидСтроки
	                      |ИЗ
	                      |	Справочник.Контрагенты.ДополнительныеРеквизиты КАК КонтрагентыДополнительныеРеквизиты
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаСвойств КАК ТаблицаСвойств
	                      |		ПО (КонтрагентыДополнительныеРеквизиты.Ссылка В (&Объект))
	                      |			И КонтрагентыДополнительныеРеквизиты.Свойство = ТаблицаСвойств.Свойство
	                      |
	                      |ОБЪЕДИНИТЬ ВСЕ
	                      |
	                      |ВЫБРАТЬ
	                      |	ДополнительныеСведения.Значение,
	                      |	ВЫРАЗИТЬ(ТаблицаСвойств.Свойство КАК ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения).ВидСтроки
						  |ИЗ
	                      |	РегистрСведений.ДополнительныеСведения КАК ДополнительныеСведения
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаСвойств КАК ТаблицаСвойств
	                      |		ПО (ДополнительныеСведения.Объект В (&Объект))
	                      |			И ДополнительныеСведения.Свойство = ТаблицаСвойств.Свойство
	                      |");
	Запрос.УстановитьПараметр("ТаблицаСвойств", ВидКИ.ТелефоныАдреса.Выгрузить());						  
	
	
	Если ТипЗнч(Объект) = Тип("СправочникСсылка.Контрагенты") Тогда
		Запрос.УстановитьПараметр("Объект", Объект);
				
	ИначеЕсли ТипЗнч(Объект) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
   		Запрос.УстановитьПараметр("Объект", Объект.Контрагенты.Выгрузить().ВыгрузитьКолонку("Контрагент"));	
		
	ИначеЕсли ТипЗнч(Объект) = Тип("СправочникСсылка.УслугиПоДоговору") Тогда
		Запрос.УстановитьПараметр("Объект", Объект.Контрагент);
		
	ИначеЕсли ТипЗнч(Объект) = Тип("СправочникСсылка.ДолговыеОбязательства") Тогда
		Массив = Новый Массив();
		Для Каждого Элемент Из Объект.Контрагенты Цикл
			Если (ВидКИ.Должники И Элемент.ВидКонтрагента = Перечисления.ВидыКонтрагентов.Должник) ИЛИ
					(ВидКИ.Контрагенты И Элемент.ВидКонтрагента = Перечисления.ВидыКонтрагентов.Контрагент) ИЛИ
					(ВидКИ.Кредиторы И Элемент.ВидКонтрагента = Перечисления.ВидыКонтрагентов.Кредитор) Тогда
				Массив.Добавить(Элемент.Значение);
			КонецЕсли;			
		КонецЦикла;	
		
		Запрос.УстановитьПараметр("Объект", Массив);
				
	ИначеЕсли ТипЗнч(Объект) = Тип("СправочникСсылка.ИсполнительныеДокументы") Тогда
		Массив = Новый Массив();
		Если ВидКИ.Должники Тогда
			Массив.Добавить(Объект.Должник);
		КонецЕсли;
		Если ВидКИ.Кредиторы Тогда 
		    Массив.Добавить(Объект.Взыскатель);
		КонецЕсли;	
		Если ВидКИ.Контрагенты Тогда
			Строки = Объект.Контрагенты.НайтиСтроки(Новый Структура("ВидКонтрагента", Перечисления.ВидыКонтрагентов.Контрагент));
			Для Каждого Элемент Из Строки Цикл
				Массив.Добавить(Элемент.Значение);			
			КонецЦикла;
		КонецЕсли;
		
		Запрос.УстановитьПараметр("Объект", Массив);
		
	Иначе
		Возврат "";
	КонецЕсли;
	
	
	ТелефонАдрес = "";
	Результат = Запрос.Выполнить().Выбрать();
	Пока Результат.Следующий() Цикл
		Если Результат.ВидСтроки = Перечисления.ВидыТипаСтрока.Строка Тогда
			ТелефонАдрес = ТелефонАдрес + СокрЛП(Результат.Значение) + ";";
		Иначе	
			Номер = Найти(Результат.Значение, ";");
			Стр = Лев(Результат.Значение, Номер - 1);
			Номер = Найти(Стр, ",");
			Если Номер > 0 Тогда
				Стр = Лев(Стр, Номер - 1);
				ТелефонАдрес = ТелефонАдрес + СокрЛП(Стр) + ";";
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

	Возврат ТелефонАдрес;
КонецФункции
