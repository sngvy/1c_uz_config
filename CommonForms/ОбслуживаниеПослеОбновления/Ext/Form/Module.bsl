
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПодключитьОбработчикОжидания("ОбслуживаниеПослеОбновления", 1, Истина);
КонецПроцедуры

&НаКлиенте
Процедура ОбслуживаниеПослеОбновления();
	Прогресс = 0;
	Пока Не Прогресс = 25 Цикл
		Прогресс = Прогресс + 1;
	КонецЦикла;
	ПересчетТекущихИтоговРегистровПослеОбновления();	
	Прогресс = 50;
	Пауза(1);
	ФормаРабСтол = ПолучитьФорму("ОбщаяФорма.РабочийСтолМероприятия");
	ФормаРабСтол.Элементы.СписокДО.Обновить();
	ФормаРабСтол.Элементы.Мероприятия.Обновить();
	Прогресс = 75;
	Пауза(1);
	ФормаРабСтол.Элементы.ОбещанияСегодня.Обновить();
	ФормаРабСтол.Элементы.ОбещанияМесяц.Обновить();
	ФормаРабСтол.Элементы.ПогашенияМесяц.Обновить();
	Прогресс = 100;
	Пауза(1);
	ЭтаФорма.Закрыть();
	// Сообщить о завершении обновления
	ФормаЗавершение = ПолучитьФорму("ОбщаяФорма.ЗавершениеОбновления");
	ФормаЗавершение.Открыть();
КонецПроцедуры

&НаСервере
Процедура ПересчетТекущихИтоговРегистровПослеОбновления()
	// Из БСП
	Для каждого Рег из Метаданные.РегистрыНакопления Цикл
		Если Рег.ВидРегистра = Метаданные.СвойстваОбъектов.ВидРегистраНакопления.Остатки Тогда
			РегистрыНакопления[Рег.Имя].ПересчитатьТекущиеИтоги();
		КонецЕсли;
	КонецЦикла;
	Для каждого Рег из Метаданные.РегистрыБухгалтерии Цикл
		РегистрыБухгалтерии[Рег.Имя].ПересчитатьТекущиеИтоги();
	КонецЦикла;
КонецПроцедуры

Процедура Пауза(Время)
	ВремяЗавершения = ТекущаяДата() + Время;
	Пока ТекущаяДата() < ВремяЗавершения Цикл
	КонецЦикла;
КонецПроцедуры

