
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ДоговорМикрозайма.Ссылка КАК Ссылка
	                      |ИЗ
	                      |	Документ.ДоговорМикрозайма КАК ДоговорМикрозайма
	                      |ГДЕ
	                      |	ДоговорМикрозайма.Займ = &Займ
	                      |	И ДоговорМикрозайма.Ссылка <> &Ссылка
	                      |	И ДоговорМикрозайма.Проведен = ИСТИНА");
	Запрос.УстановитьПараметр("Займ", ЭтотОбъект.Займ);
	Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
	Результат = Запрос.Выполнить().Выбрать();
	Если Результат.Следующий() Тогда
		Отказ = Истина;
		Сообщить("По данному займу уже есть первичный договор!");
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	Если ДанныеЗаполнения <> Неопределено Тогда
		Займ = ДанныеЗаполнения;
	КонецЕсли;
КонецПроцедуры


Процедура ПередУдалением(Отказ)
	НаборЗаписей = РегистрыСведений.РасчетныеДанные.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Займ.Установить(ЭтотОбъект.Займ);
	НаборЗаписей.Записать();
	
	КредитныеИстории.УдалитьСобытияИсточника(ЭтотОбъект.Займ, ЭтотОбъект.Ссылка);
	
КонецПроцедуры


Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	Если ЭтотОбъект.ГрафикПлатежей.Количество() = 0 Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	ДатаПоследнегоДопСоглашения = РасчетЗадолженностиМФО.ДатаПоследнегоДопСоглашения(ЭтотОбъект.Займ);
	Если ДатаПоследнегоДопСоглашения > ЭтотОбъект.ДатаДоговора Тогда
		Отказ = Истина;
		Сообщить("Существует действующее доп.соглашение с более поздней датой. Проведение невозможно");
		Возврат;
	КонецЕсли;
	ДатаРасчета = РасчетЗадолженностиМФО.ПолучитьДатуРасчетаСУчетомГоризонта(НачалоДня(ТекущаяДатаСеанса()));
	ДатаДопСоглашения = РасчетЗадолженностиМФО.ПолучитьДатуДопСоглашения(ЭтотОбъект.Ссылка);
	Если ДатаДопСоглашения = Неопределено Тогда
		РасчетнаяДата = Макс(ДатаРасчета, ЭтотОбъект.ДатаПогашения);
	Иначе
		РасчетнаяДата = ДатаДопСоглашения;
	КонецЕсли;
	
	
	Остатки = РасчетЗадолженностиМФО.ПолучитьОстаткиПоДоговору(ЭтотОбъект.Ссылка, НачалоДня(ТекущаяДатаСеанса()));
	ТаблицаПлатежей = РасчетЗадолженностиМФО.ПолучитьИсториюПлатежей(ЭтотОбъект);
	РассчитанныйГрафик = РасчетЗадолженностиМФО.РасчитатьГрафикПлатежейИНачисленийНачальныеОстатки(ЭтотОбъект, РасчетнаяДата, ТаблицаПлатежей, Остатки);
	
	// 1. Очистка старых движений регистра
	Движения.ПериодыПросрочки.Очистить();
	Движения.ПериодыПросрочки.Записывать = Истина;
	Движения.РасчетыПоДоговорам.Очистить();
	Движения.РасчетыПоДоговорам.Записывать = Истина;
	Движения.Записать();
	
	Движения.РасчетыПоДоговорам.Записывать = Истина;
	// регистр ПериодыПросрочки
	Движения.ПериодыПросрочки.Записывать = Истина;
	
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	СУММА(ДоговорМикрозаймаГрафикПлатежей.ОплатаОсновнойДолг) КАК ОплатаОсновнойДолг,
	                      |	СУММА(ДоговорМикрозаймаГрафикПлатежей.ОплатаПроценты) КАК ОплатаПроценты
	                      |ИЗ
	                      |	Документ.ДоговорМикрозайма.ГрафикПлатежей КАК ДоговорМикрозаймаГрафикПлатежей
	                      |ГДЕ
	                      |	ДоговорМикрозаймаГрафикПлатежей.Ссылка = &Ссылка");
	Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
	Результат = Запрос.Выполнить().Выбрать();
	Если Результат.Следующий() И Не ЭтотОбъект.УчитыватьОстаткиНаДатуЦессии Тогда
		Движение = Движения.РасчетыПоДоговорам.Добавить();
		Движение.Займ = ЭтотОбъект.Займ;
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.ВидДвиженияЗадолженности = Перечисления.ВидыДвиженийПоРасчетам.Начисление;
		Движение.ОсновнойДолг = Результат.ОплатаОсновнойДолг;
		Движение.Проценты = Результат.ОплатаПроценты;
		Движение.Период = ЭтотОбъект.ДатаВыдачиЗайма;
	КонецЕсли;
	
	ДатаВыхода = Неопределено;
	ДниПросрочкиФИФО = 0;
	ДатаВыходаФИФО = Неопределено;
	СуммаНаСчете = 0;

	Если ЭтотОбъект.УчитыватьОстаткиНаДатуЦессии Тогда
		Движение = Движения.РасчетыПоДоговорам.Добавить();
		Движение.Займ = ЭтотОбъект.Займ;
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.ВидДвиженияЗадолженности = Перечисления.ВидыДвиженийПоРасчетам.Начисление;
		Движение.ОсновнойДолгГрафик = ЭтотОбъект.ОстаткиОсновнойДолг;
		Движение.ПроцентыГрафик = ЭтотОбъект.ОстаткиПроценты + ЭтотОбъект.ОстаткиПросроченныеПроценты;
		Движение.ПроцентыНачисленныеВПериодПросрочки = ЭтотОбъект.ОстаткиПросроченныеПроценты;
		Движение.Штрафы = ЭтотОбъект.ОстаткиШтрафы;
		Движение.Пени = ЭтотОбъект.ОстаткиПени;
		Движение.ПроцентыНачисления = Движение.ПроцентыГрафик;
		Движение.ШтрафыНачисления = Движение.Штрафы;
		Движение.ПениНачисления = Движение.Пени;
		Движение.Период = ЭтотОбъект.ОстаткиДата;			
	КонецЕсли;
	
	Для Каждого стр из РассчитанныйГрафик Цикл
		
		Если стр.ПлановыйГрафик_ОплатаОсновнойДолг <> 0 ИЛИ стр.Проценты <> 0 ИЛИ стр.ПросроченныеПроценты <> 0 ИЛИ стр.Штрафы <> 0 ИЛИ стр.Пени <> 0 Тогда
			Движение = Движения.РасчетыПоДоговорам.Добавить();
			Движение.Займ = ЭтотОбъект.Займ;
			Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
			Движение.ВидДвиженияЗадолженности = Перечисления.ВидыДвиженийПоРасчетам.Начисление;
			Движение.ОсновнойДолгГрафик = стр.ПлановыйГрафик_ОплатаОсновнойДолг;
			Движение.ПроцентыГрафик = стр.Проценты + стр.ПросроченныеПроценты;
			Движение.ПроцентыНачисленныеВПериодПросрочки = стр.ПросроченныеПроценты;
			Движение.Штрафы = стр.Штрафы;
			Движение.Пени = стр.Пени;
			Движение.ПроцентыНачисления = Движение.ПроцентыГрафик;
			Движение.ШтрафыНачисления = Движение.Штрафы;
			Движение.ПениНачисления = Движение.Пени;
			Движение.Период = стр.Дата;	
		КонецЕсли;
		
		Если стр.КорректировкаПроценты > 0 Тогда
			Движение = Движения.РасчетыПоДоговорам.Добавить();
			Движение.Займ = ЭтотОбъект.Займ;
			Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
			Движение.ВидДвиженияЗадолженности = Перечисления.ВидыДвиженийПоРасчетам.Корректировка;
			Движение.Проценты = стр.КорректировкаПроценты;			
			Движение.Период = стр.Дата;
		КонецЕсли;
		
		Если стр.ОплатаОсновнойДолг <> 0 ИЛИ стр.ОплатаПроценты <> 0 ИЛИ стр.ОплатаПросроченныеПроценты <> 0 ИЛИ стр.ОплатаШтрафы <> 0 ИЛИ стр.ОплатаПени <> 0 Тогда
			Движение = Движения.РасчетыПоДоговорам.Добавить();
			Движение.Займ = ЭтотОбъект.Займ;
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.ВидДвиженияЗадолженности = Перечисления.ВидыДвиженийПоРасчетам.Оплата;
			Движение.ОсновнойДолг = стр.ОплатаОсновнойДолг;
			Движение.ОсновнойДолгГрафик = стр.ОплатаОсновнойДолг;
			Движение.Проценты = стр.ОплатаПроценты + стр.ОплатаПросроченныеПроценты;
			Движение.ПроцентыГрафик = стр.ОплатаПроценты + стр.ОплатаПросроченныеПроценты;
			Движение.ПроцентыНачисленныеВПериодПросрочки = стр.ОплатаПросроченныеПроценты;		
			Движение.Штрафы = стр.ОплатаШтрафы;
			Движение.Пени = стр.ОплатаПени;
			Движение.Период = стр.Дата;
			
		КонецЕсли;
		Если стр.Переплата <> СуммаНаСчете Тогда
			Движение = Движения.РасчетыПоДоговорам.Добавить();
			Движение.Займ = ЭтотОбъект.Займ;
			Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
			Движение.ВидДвиженияЗадолженности = Перечисления.ВидыДвиженийПоРасчетам.РасчетныйСчет;
			Движение.РасчетныйСчет = стр.Переплата - СуммаНаСчете;
			Движение.Период = стр.Дата;
		КонецЕсли;
		
		Если стр.ДниПросрочки = 1 Тогда
			ДвижениеПериод = Движения.ПериодыПросрочки.Добавить();
			ДвижениеПериод.ДатаПросрочки = стр.Дата - 24 * 3600;
			ДвижениеПериод.Период = ЭтотОбъект.ДатаДоговора;
			ДвижениеПериод.МетодРасчета = Перечисления.МетодыРасчетаДнейПросрочки.LIFO;
			ДвижениеПериод.Займ = ЭтотОбъект.Займ;
			
			ДатаВыхода = стр.Дата;
		ИначеЕсли стр.ДниПросрочки = 0 И ДатаВыхода <> Неопределено Тогда
			ДвижениеПериод.ДатаПогашения = стр.Дата - 24 * 3600;
			ДатаВыхода = Неопределено;
		КонецЕсли;
		
		Если стр.ДниПросрочки_ФИФО < ДниПросрочкиФИФО Тогда
			ДвижениеПериодФИФО = Движения.ПериодыПросрочки.Добавить();
			ДвижениеПериодФИФО.МетодРасчета = Перечисления.МетодыРасчетаДнейПросрочки.FIFO;
			ДвижениеПериодФИФО.ДатаПросрочки = стр.Дата - (ДниПросрочкиФИФО + 1) * 24 * 3600;
			ДвижениеПериодФИФО.Период = ЭтотОбъект.ДатаДоговора;
			ДвижениеПериодФИФО.ДатаПогашения = стр.Дата - 24 * 3600;
			ДвижениеПериодФИФО.Займ = ЭтотОбъект.Займ;
		КонецЕсли;
			
		ДниПросрочкиФИФО = стр.ДниПросрочки_ФИФО;
		СуммаНаСчете = стр.Переплата;
	КонецЦикла;
	
	Если стр.ДниПросрочки_ФИФО > 0 Тогда
		ДвижениеПериодФИФО = Движения.ПериодыПросрочки.Добавить();
		ДвижениеПериодФИФО.МетодРасчета = Перечисления.МетодыРасчетаДнейПросрочки.FIFO;
		ДвижениеПериодФИФО.ДатаПросрочки = стр.Дата - (ДниПросрочкиФИФО)* 24 * 3600;
		ДвижениеПериодФИФО.Период = ЭтотОбъект.ДатаДоговора;
		ДвижениеПериодФИФО.Займ = ЭтотОбъект.Займ;
	КонецЕсли;  
	
	Движения.Записать();
	
	СобытиеЗафиксировано = КредитныеИстории.СобытиеСделкиЗафиксированоИсточником(ЭтотОбъект.Займ, ЭтотОбъект.Ссылка, "1.4");
	
	Если ЭтотОбъект.ДатаВыдачиЗайма >= НачалоДня(ТекущаяДатаСеанса()) И НЕ СобытиеЗафиксировано И ЭтотОбъект.Одобрено И Не ЭтотОбъект.УчитыватьОстаткиНаДатуЦессии Тогда 
		КредитныеИстории.ЗаписатьСобытиеСделки(ЭтотОбъект.Займ, ЭтотОбъект.ДатаВыдачиЗайма, ЭтотОбъект.Ссылка, "1.4");
	КонецЕсли;
	
	СобытиеЗафиксировано = КредитныеИстории.СобытиеСделкиЗафиксированоИсточником(ЭтотОбъект.Займ, ЭтотОбъект.Ссылка, "2.2");
	
	Если ЭтотОбъект.ДатаВыдачиЗайма >= НачалоДня(ТекущаяДатаСеанса()) И НЕ СобытиеЗафиксировано И ЭтотОбъект.Одобрено И Не ЭтотОбъект.УчитыватьОстаткиНаДатуЦессии Тогда 
		КредитныеИстории.ЗаписатьСобытиеСделки(ЭтотОбъект.Займ, ЭтотОбъект.ДатаВыдачиЗайма, ЭтотОбъект.Ссылка, "2.2");
	КонецЕсли;
	
	СобытиеЗафиксировано = КредитныеИстории.СобытиеСделкиЗафиксированоИсточником(ЭтотОбъект.Займ, ЭтотОбъект.Ссылка, "1.3");
	
	Если СобытиеЗафиксировано И Не ЭтотОбъект.УчитыватьОстаткиНаДатуЦессии Тогда
		КредитныеИстории.УдалитьСобытиеСделки(ЭтотОбъект.Займ, ЭтотОбъект.Ссылка, "1.3");
	КонецЕсли; 
	
	Движения.РасчетыПоДоговорам.Записать();	
	ОбъектыСервер.ЗаписатьТекущиеПараметрыЗадолженностиОбработчик(ЭтотОбъект);
	
	
КонецПроцедуры


Процедура ОбработкаУдаленияПроведения(Отказ) 
	СобытиеЗафиксировано = КредитныеИстории.СобытиеСделкиЗафиксированоИсточником(ЭтотОбъект.Займ, ЭтотОбъект.Ссылка, "1.3");
	Если НЕ СобытиеЗафиксировано И Не ЭтотОбъект.УчитыватьОстаткиНаДатуЦессии Тогда 
		КредитныеИстории.ЗаписатьСобытиеСделки(ЭтотОбъект.Займ, ЭтотОбъект.ДатаВыдачиЗайма, ЭтотОбъект.Ссылка,"1.3"); 
	КонецЕсли;
	
	ЭтотОбъект.Движения.РасчетыПоДоговорам.Записать();  
	объектысервер.УдалитьСтадииОтменаПроведения(ЭтотОбъект);
	ОбъектыСервер.ЗаписатьТекущиеПараметрыЗадолженностиОбработчик(ЭтотОбъект);
	
	
КонецПроцедуры


Процедура ПриЗаписи(Отказ)
	
	Если ЭтотОбъект.УчитыватьОстаткиНаДатуЦессии Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтотОбъект.ДатаВыдачиЗайма < НачалоДня(ТекущаяДатаСеанса()) Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтотОбъект.Проведен Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЭтотОбъект.UIDНБКИ) Тогда
		Возврат;
	КонецЕсли;
	
	КодСобытия = "1.1";
	Если ЭтотОбъект.Одобрено Тогда
	
		КодСобытия = "1.2";
	
	КонецЕсли;
	
	СобытиеЗафиксировано = КредитныеИстории.СобытиеСделкиЗафиксированоИсточником(ЭтотОбъект.Займ, ЭтотОбъект.Ссылка, КодСобытия);
	Если НЕ СобытиеЗафиксировано Тогда
		КредитныеИстории.ЗаписатьСобытиеСделки(ЭтотОбъект.Займ, ЭтотОбъект.ДатаВыдачиЗайма, ЭтотОбъект.Ссылка, КодСобытия);
	КонецЕсли;

		//Если НЕ ЭтотОбъект.Одобрено Тогда
		//	СобытиеЗафиксировано = КредитныеИстории.СобытиеСделкиЗафиксированоИсточником(ЭтотОбъект.Займ, ЭтотОбъект.Ссылка, "1.1");
		//	Если НЕ СобытиеЗафиксировано Тогда
		//		КредитныеИстории.ЗаписатьСобытиеСделки(ЭтотОбъект.Займ, ЭтотОбъект.ДатаВыдачиЗайма, ЭтотОбъект.Ссылка, "1.1");
		//	КонецЕсли;
		//КонецЕсли;
		//
		//Если ЭтотОбъект.Одобрено Тогда
		//	СобытиеЗафиксировано = КредитныеИстории.СобытиеСделкиЗафиксированоИсточником(ЭтотОбъект.Займ, ЭтотОбъект.Ссылка, "1.2");
		//	Если НЕ СобытиеЗафиксировано Тогда
		//		КредитныеИстории.ЗаписатьСобытиеСделки(ЭтотОбъект.Займ, ЭтотОбъект.ДатаВыдачиЗайма, ЭтотОбъект.Ссылка, "1.2");
		//	КонецЕсли;
		//КонецЕсли;

	
КонецПроцедуры


