
&НаКлиенте
Процедура ДеревоВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Выбрать(Неопределено);
	//Чуров
	//ПоказатьЗначение(,Дерево.НайтиПоИдентификатору(ВыбраннаяСтрока).Ссылка);
	//ОткрытьЗначение(Дерево.НайтиПоИдентификатору(ВыбраннаяСтрока).Ссылка);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ОбновитьДерево();
КонецПроцедуры

&НаСервере
Процедура ОбновитьДерево()
	Дерево.ПолучитьЭлементы().Очистить();	
	ОбновитьДеревоРекурсивно(Дерево.ПолучитьЭлементы(), ПланыВидовХарактеристик.ТипыСотрудников.ПустаяСсылка());
КонецПроцедуры

&НаСервере
Процедура ОбновитьДеревоРекурсивно(ЭлементыДерева, Родитель)
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ТипыСотрудников.Ссылка,
	                      |	ТипыСотрудников.Код,
	                      |	ТипыСотрудников.Наименование КАК Наименование,
	                      |	ТипыСотрудников.Предопределенный,
	                      |	ТипыСотрудников.ПометкаУдаления
	                      |ИЗ
	                      |	ПланВидовХарактеристик.ТипыСотрудников КАК ТипыСотрудников
	                      |ГДЕ
	                      |	ТипыСотрудников.Родитель_ = &Родитель
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Наименование");
	Запрос.УстановитьПараметр("Родитель", Родитель);
	Результат = Запрос.Выполнить().Выбрать();
	Пока Результат.Следующий() Цикл
		Нов = ЭлементыДерева.Добавить();
		Нов.Ссылка = Результат.Ссылка;
		Нов.Код = Результат.Код;
		Нов.Наименование = Результат.Наименование;
		Нов.Родитель = Родитель;
		Если Результат.ПометкаУдаления Тогда
			Картинка = 8;
		Иначе 
			Картинка = 7;
		КонецЕсли;
		Нов.Картинка = Картинка;
		ОбновитьДеревоРекурсивно(Нов.ПолучитьЭлементы(), Результат.Ссылка);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр)
	Если ИмяСобытия = "Обновить" Тогда
		ВначалеСоздать = Ложь;
		Если ДобавитьВДерево(Параметр, ВначалеСоздать) = 1 Тогда // Добавили новый элемент
			ВначалеСоздать = Истина;
			ДобавитьВДерево(Параметр, ВначалеСоздать);		
			Элементы.Дерево.Развернуть(Дерево.ПолучитьЭлементы()[0].ПолучитьИдентификатор(), Истина);	
			ВначалеСоздать = Ложь;
			ДобавитьВДерево(Параметр, ВначалеСоздать);		
		Иначе
			Элементы.Дерево.Развернуть(Дерево.ПолучитьЭлементы()[0].ПолучитьИдентификатор(), Истина);
			ДобавитьВДерево(Параметр, ВначалеСоздать);
		КонецЕсли;
	КонецЕсли;		
КонецПроцедуры


&НаКлиенте
Процедура Выбрать(Команда)
	ТекущиеДанные = Элементы.Дерево.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		ОповеститьОВыборе(ТекущиеДанные.Ссылка);
	Иначе
		Сообщить("Элемент не выбран!");
	КонецЕсли;          
КонецПроцедуры

&НаКлиенте
Процедура ДеревоПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Отказ = Истина;	
	Форма = ПолучитьФорму("ПланВидовХарактеристик.ТипыСотрудников.Форма.ФормаЭлемента",, ЭтаФорма);
	ТекущиеДанные = Элементы.Дерево.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		Если Копирование Тогда
			Форма.Объект.Родитель_ = ТекущиеДанные.Родитель;
			Форма.Объект.Наименование = ТекущиеДанные.Наименование;
		Иначе	
			Форма.Объект.Родитель_ = ТекущиеДанные.Ссылка;
		КонецЕсли;
	КонецЕсли;	
	//Чуров
	ОткрытьФорму(Форма);
	//Форма.Открыть();
КонецПроцедуры

&НаКлиенте
Процедура ДеревоПередНачаломИзменения(Элемент, Отказ)
	Отказ = Истина;	
	ТекущиеДанные = Элементы.Дерево.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		//Чуров
		//ПоказатьЗначение(,ТекущиеДанные.Ссылка);
		ОткрытьЗначение(ТекущиеДанные.Ссылка);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоПередУдалением(Элемент, Отказ)
	//Чуров
	// код дублирует стандартную обработку
	
	//Отказ = Истина;	
	//ТекущиеДанные = Элементы.Дерево.ТекущиеДанные;	
	//Если ТекущиеДанные.Картинка = 7 Тогда
	//	Ответ = Вопрос("Пометить " + """" + Элемент.ТекущиеДанные.Наименование + """" + " на удаление?", 
	//			РежимДиалогаВопрос.ДаНет, 20);
	//Иначе
	//	Ответ = Вопрос("Снять с " + """" + Элемент.ТекущиеДанные.Наименование + """" + " пометку на удаление?", 
	//			РежимДиалогаВопрос.ДаНет, 20);		
	//КонецЕсли;		
	//
	//Если Не Ответ = КодВозвратаДиалога.Да Тогда
	//	Возврат;	
	//КонецЕсли;
	//Если ТекущиеДанные <> Неопределено Тогда
	//	Если УстановитьПометкуУдаления(ТекущиеДанные.Ссылка) Тогда
	//		ТекущиеДанные.Картинка = 8;
	//	Иначе 
	//		ТекущиеДанные.Картинка = 7;
	//	КонецЕсли;
	//КонецЕсли;
КонецПроцедуры

&НаСервере
Функция  УстановитьПометкуУдаления(Ссылка)
	Об = Ссылка.ПолучитьОбъект();
	Об.УстановитьПометкуУдаления(Не Об.ПометкаУдаления);
	ПомУдаления = Об.ПометкаУдаления;
	Возврат ПомУдаления;
КонецФункции

&НаСервере
Функция ДобавитьВДерево(СсылкаНового, ВначалеСоздать) 
	Если ВначалеСоздать Тогда
		Дерево.ПолучитьЭлементы().Очистить();
		ОбновитьДер(Дерево.ПолучитьЭлементы(), ПланыВидовХарактеристик.ТипыСотрудников.ПустаяСсылка(), СсылкаНового);	
		Возврат 0;	
	КонецЕсли;
	Сч = ОбновитьДВО(Дерево.ПолучитьЭлементы(), ПланыВидовХарактеристик.ТипыСотрудников.ПустаяСсылка(), СсылкаНового);	
	Если Сч = Неопределено Тогда
		Сч = 1;
	КонецЕсли;
	Возврат Сч;		
КонецФункции

&НаСервере
Функция ОбновитьДВО(ЭлементыДерева, Родитель, СсылкаНового) 
	Для Каждого Эл Из ЭлементыДерева Цикл	
		Если Эл.Ссылка = СсылкаНового Тогда
			Если СокрЛП(СсылкаНового.Код) = "" Тогда // т.е элемент удалили через форму. 
				СсылкаНового = Эл.Родитель;  // нужен, чтобы поставить курсор на родителя                         				
				Дерево.ПолучитьЭлементы().Очистить();
				ОбновитьДер(Дерево.ПолучитьЭлементы(), ПланыВидовХарактеристик.ТипыСотрудников.ПустаяСсылка(), СсылкаНового);	
				Возврат 0;
			КонецЕсли;		
			Эл.Ссылка = СсылкаНового;
			Эл.Код = СсылкаНового.Код;
			Эл.Наименование = СсылкаНового.Наименование;
			ИД = Эл.ПолучитьИдентификатор();
			Если Эл.Родитель <> СсылкаНового.Родитель_ Тогда // т.е. поменяли элемент в дереве.
				Дерево.ПолучитьЭлементы().Очистить();	
				ОбновитьДер(Дерево.ПолучитьЭлементы(), ПланыВидовХарактеристик.ТипыСотрудников.ПустаяСсылка(), СсылкаНового);
				Возврат 0;	
			КонецЕсли;
			Элементы.Дерево.ТекущаяСтрока = ИД;
			Если СсылкаНового.ПометкаУдаления Тогда
				Картинка = 8;
			Иначе 
				Картинка = 7;
			КонецЕсли;
				Эл.Картинка = Картинка;
			Возврат 0;
		КонецЕсли;
		Если ОбновитьДВО(Эл.ПолучитьЭлементы(), Родитель, СсылкаНового) = 0 Тогда
			Возврат 0;	
		КонецЕсли;
	КонецЦикла;	
КонецФункции

&НаСервере
Процедура ОбновитьДер(ЭлементыДерева, Родитель, СсылкаНового) 	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ТипыСотрудников.Ссылка,
	                      |	ТипыСотрудников.Код,
	                      |	ТипыСотрудников.Наименование КАК Наименование,
	                      |	ТипыСотрудников.Предопределенный,
	                      |	ТипыСотрудников.ПометкаУдаления
	                      |ИЗ
	                      |	ПланВидовХарактеристик.ТипыСотрудников КАК ТипыСотрудников
	                      |ГДЕ
	                      |	ТипыСотрудников.Родитель_ = &Родитель
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Наименование");
	Запрос.УстановитьПараметр("Родитель", Родитель);
	Результат = Запрос.Выполнить().Выбрать();
	Пока Результат.Следующий() Цикл
		Нов = ЭлементыДерева.Добавить();
		ИД = Нов.ПолучитьИдентификатор();
		Нов.Ссылка = Результат.Ссылка;
		Нов.Код = Результат.Код;
		Нов.Наименование = Результат.Наименование;
		Нов.Родитель = Родитель;
		Если Результат.ПометкаУдаления Тогда
			Картинка = 8;
		Иначе 
			Картинка = 7;
		КонецЕсли;
		Нов.Картинка = Картинка;
		Если Результат.Ссылка = СсылкаНового Тогда
			Элементы.Дерево.ТекущаяСтрока = ИД;	
		КонецЕсли;
		ОбновитьДер(Нов.ПолучитьЭлементы(), Результат.Ссылка, СсылкаНового);
	КонецЦикла;	
КонецПроцедуры
