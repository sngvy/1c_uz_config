	
Перем ТекстИзменений;	
	
Процедура ПередЗаписью(Отказ)
	////Если Не Ссылка.Пустая() Тогда
	////	Запрос = Новый Запрос("ВЫБРАТЬ
	////						  |	ДолговыеОбязательства.Организация
	////						  |ИЗ
	////						  |	Справочник.ДолговыеОбязательства КАК ДолговыеОбязательства
	////						  |ГДЕ
	////						  |	ДолговыеОбязательства.Ссылка = &Ссылка");
	////	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	////	Если Организация <> Запрос.Выполнить().Выгрузить()[0].Организация Тогда
	////		Сообщить("Нельзя изменять организацию!");
	////		Отказ = Истина;
	////	КонецЕсли;
	////КонецЕсли;
	
	Если ВалютаДоговора.Пустая() Тогда
		ВалютаДоговора = Константы.ВалютаРегламентированногоУчета.Получить();
		УдалитьОбщегоНазначенияКлиентСервер.СообщитьПользователю("ДО: " + Ссылка + 
				": т.к. валюта долгового обязательства не была заполнена, то проставлена валюта регламентированного учета", 
				Ссылка,,,);
		//Сообщить(, СтатусСообщения.Внимание); 	
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ЭтотОбъект.ДатаСоздания) Тогда
		ЭтотОбъект.ДатаСоздания = ТекущаяДата();
	КонецЕсли;
	
	//Если Не РежимОбновления Тогда
	   //Отказ = Не КонтрольВозможностиИзмененияВалютыДО(Истина); 001	
	//КонецЕсли;
	
	//
	ЭтотОбъект.ВладелецДолжник = "";
	ЭтотОбъект.ВладелецКонтрагент = "";
	ЭтотОбъект.ВладелецКредитор = "";
	
	ЭтотОбъект.Должник = Неопределено;
	ЭтотОбъект.Контрагент = Неопределено;
	ЭтотОбъект.Кредитор = Неопределено;
	
	Для Каждого Элемент Из ЭтотОбъект.Контрагенты Цикл
		Если Элемент.ВидКонтрагента = Перечисления.ВидыКонтрагентов.Должник Тогда
			ЭтотОбъект.ВладелецДолжник = ЭтотОбъект.ВладелецДолжник + "; " + Элемент.Значение.Наименование;
			Если ЭтотОбъект.Должник.Пустая() Тогда
				ЭтотОбъект.Должник = Элемент.Значение;
			КонецЕсли;
		ИначеЕсли Элемент.ВидКонтрагента = Перечисления.ВидыКонтрагентов.Контрагент Тогда
			ЭтотОбъект.ВладелецКонтрагент = ЭтотОбъект.ВладелецКонтрагент + "; " + Элемент.Значение.Наименование;
			Если ЭтотОбъект.Контрагент.Пустая() Тогда
				ЭтотОбъект.Контрагент = Элемент.Значение;
			КонецЕсли;
		ИначеЕсли Элемент.ВидКонтрагента = Перечисления.ВидыКонтрагентов.Кредитор Тогда
			ЭтотОбъект.ВладелецКредитор = ЭтотОбъект.ВладелецКредитор + "; " + Элемент.Значение.Наименование;
			Если ЭтотОбъект.Кредитор.Пустая() Тогда
				ЭтотОбъект.Кредитор = Элемент.Значение;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;	
	ЭтотОбъект.ВладелецДолжник = Сред(ЭтотОбъект.ВладелецДолжник, 3);
	ЭтотОбъект.ВладелецКонтрагент = Сред(ЭтотОбъект.ВладелецКонтрагент, 3);
	ЭтотОбъект.ВладелецКредитор = Сред(ЭтотОбъект.ВладелецКредитор, 3);
	
	//
	Если ЭтотОбъект.Должник.Пустая() Тогда
		Отказ = Истина;
		Сообщить("Должник должен быть заполнен!");
		Возврат;
	КонецЕсли;
	
	
	//
	ЭтотОбъект.ВладелецУслуга = "";
	Для Каждого Элемент Из ЭтотОбъект.Услуги Цикл
		ЭтотОбъект.ВладелецУслуга = ЭтотОбъект.ВладелецУслуга + "; " + Элемент.Значение.Наименование; 		
	КонецЦикла;	
	ЭтотОбъект.ВладелецУслуга = Сред(ЭтотОбъект.ВладелецУслуга, 3);	
	
	//
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	Таблица.Значение КАК Услуга
	                      |ПОМЕСТИТЬ Таблица
	                      |ИЗ
	                      |	&Таблица КАК Таблица
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ РАЗЛИЧНЫЕ
	                      |	Таблица.Услуга.Владелец.Наименование КАК Наименование
	                      |ИЗ
	                      |	Таблица КАК Таблица
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Наименование");
	Запрос.УстановитьПараметр("Таблица", Услуги.Выгрузить());
	Результат = Запрос.Выполнить().Выбрать();
	ЭтотОбъект.ВладелецДоговор = "";
	Пока Результат.Следующий() Цикл
		ЭтотОбъект.ВладелецДоговор = ЭтотОбъект.ВладелецДоговор + "; " + Результат.Наименование; 
	КонецЦикла;
	ЭтотОбъект.ВладелецДоговор = Сред(ЭтотОбъект.ВладелецДоговор, 3);
	
	//
	ТекстИзменений = ОбъектыСервер.ПроверитьИзмененияВОбъекте(ЭтотОбъект);
КонецПроцедуры

Функция КонтрольВозможностиИзмененияВалютыДО(Сообщать) Экспорт
	УспешностьПроверки = Истина;	

	Если ЭтоНовый() Тогда
		Возврат УспешностьПроверки;	
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	АктуальнаяЗадолженностьОстатки.СуммаРеглОстаток
	               |ИЗ
	               //|	РегистрНакопления.АктуальнаяЗадолженность.Остатки КАК АктуальнаяЗадолженностьОстатки
				   |	РегистрНакопления.ЗадолженностьПоДолговомуОбязательству.Остатки КАК АктуальнаяЗадолженностьОстатки
				   |ГДЕ
	               |	АктуальнаяЗадолженностьОстатки.ДолговоеОбязательство = &ДолговоеОбязательство";
	
	Запрос.УстановитьПараметр("ДолговоеОбязательство", Ссылка);
	
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		Если Сообщать Тогда
			Выборка = Результат.Выбрать();
			Выборка.Следующий();
			Сообщить(""+Ссылка+": невозможно изменение валюты ДО, т.к. по данному обязательству присутствует остаток (в валюте РУ): "+Выборка.СуммаРеглОстаток, СтатусСообщения.Внимание); 	
			УспешностьПроверки=Ложь;		
		КонецЕсли;      	 	
	КонецЕсли;
	
	Возврат УспешностьПроверки;
КонецФункции

// Процедура - обработчик события "ОбработкаЗаполнения".
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	//ОсновнойМенеджер = ПараметрыСеанса.ТекущийПользователь;
	//ДатаРегистрации = ТекущаяДата();
	
	//Если ДанныеЗаполнения = Неопределено Тогда
		Если ВалютаДоговора.Пустая() Тогда
			ВалютаДоговора = Константы.ВалютаРегламентированногоУчета.Получить();
			//Сообщить("ДО: "+Ссылка+": т.к. валюта долгового обязательства не была заполнена,
			//	то проставлена валюта регламентированного учета", СтатусСообщения.Внимание); 	
		КонецЕсли;      	
	//КонецЕсли;

	// Выполним заполнение контактной информации
	//УправлениеКонтактнойИнформацией.ОбработкаЗаполненияКИ(ЭтотОбъект, ДанныеЗаполнения);

	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") И ДанныеЗаполнения.Свойство("Наименование") Тогда
		//создание из взаимодействия по описанию участника
		Наименование = ДанныеЗаполнения.Наименование;
	КонецЕсли;
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	Справочники.Пользователи.ОтслеживаниеИзменений(Отказ, Ссылка, ТекстИзменений);
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	ЭтотОбъект.КодДО = "";
КонецПроцедуры
