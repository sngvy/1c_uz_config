///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ ОЖИДАНИЯ

// Выполнить завершение текущего сеанса, если установлена блокировка соединений 
// с информационной базой.
//
Процедура КонтрольРежимаЗавершенияРаботыПользователей() Экспорт

	// Получим текущее значение параметров блокировки
	ТекущийРежим = СоединенияИБ.ПараметрыБлокировкиСеансов();
	БлокировкаУстановлена = ТекущийРежим.Установлена;
	
	Если НЕ БлокировкаУстановлена Тогда
		Возврат;	
	КонецЕсли;
		
	ВремяНачалаБлокировки = ТекущийРежим.Начало;
	ВремяОкончанияБлокировки = ТекущийРежим.Конец;
	
	ИнтервалПредупреждения    = ТекущийРежим.ИнтервалОжиданияЗавершенияРаботыПользователей;
	ИнтервалЗакрытьСЗапросом  = 0;
	ИнтервалЗакрытьБезЗапроса = - ИнтервалПредупреждения / 5;
	ИнтервалПрекратить        = - ИнтервалПредупреждения / 2.5;
	ТекущийМомент             = ТекущаяДата();
	
	Если ВремяОкончанияБлокировки <> '00010101' И ТекущийМомент > ВремяОкончанияБлокировки Тогда
		Возврат;
	КонецЕсли;
	
	ТекстСообщения = СоединенияИБКлиентСервер.ИзвлечьСообщениеБлокировки(ТекущийРежим.Сообщение);
	
	Если НЕ ЗначениеЗаполнено(ВремяНачалаБлокировки)
	 ИЛИ ВремяНачалаБлокировки - ТекущийМомент <= ИнтервалПрекратить Тогда
		
		ЗавершитьРаботуСистемы(Истина);
		
	ИначеЕсли ВремяНачалаБлокировки - ТекущийМомент <= ИнтервалЗакрытьБезЗапроса Тогда
		//Чуров
		ПоказатьПредупреждение(,НСтр("ru = 'Работа системы завершается.'"), 30);
		//Предупреждение(НСтр("ru = 'Работа системы завершается.'"), 30);
		ЗавершитьРаботуСистемы(Ложь);
		
	ИначеЕсли ВремяНачалаБлокировки - ТекущийМомент <= ИнтервалЗакрытьСЗапросом Тогда
		
		//Чуров
		ПоказатьПредупреждение(,НСтр("ru = 'Работа системы завершается.'"), 30);
		//Предупреждение(НСтр("ru = 'Работа системы завершается.'"), 30);
		ЗавершитьРаботуСистемы(Истина);
		
	ИначеЕсли ВремяНачалаБлокировки - ТекущийМомент <= ИнтервалПредупреждения Тогда
		
		ТекстСообщения = УдалитьСтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		                   НСтр("ru = 'Работа системы будет завершена в %1.'"),
		                   ВремяНачалаБлокировки);
		//Чуров
		ПоказатьПредупреждение(,ТекстСообщения, 30);
		//Предупреждение(ТекстСообщения, 30);
		
	КонецЕсли;
	
КонецПроцедуры

// Выполнить завершение активных сеансов, если превышено время ожидания, а затем
// завершить текущий сеанс.
//
Процедура ЗавершитьРаботуПользователей() Экспорт

	// Получим текущее значение параметров блокировки
	ТекущийРежим = СоединенияИБ.ПараметрыБлокировкиСеансов();
	
	КоличествоСеансов = ТекущийРежим.КоличествоСеансов;
	Если КоличествоСеансов <= 1 Тогда
		// Отключены все пользователи, кроме текущего сеанса
		// В последнюю очередь завершается сеанс, запущенный с параметром "ЗавершитьРаботуПользователей".
		// Такой порядок отключений необходим для обновления конфигурации с помощью пакетного файла
		ЗавершитьРаботуСистемы(Ложь);
		Возврат;
	КонецЕсли; 
	
	БлокировкаУстановлена = ТекущийРежим.Установлена;
	Если НЕ БлокировкаУстановлена Тогда
		Возврат;
	КонецЕсли;
	
	ВремяНачалаБлокировки = ТекущийРежим.Начало;
	ИнтервалОтключения = - ТекущийРежим.ИнтервалОжиданияЗавершенияРаботыПользователей;
	ТекущийМомент = ТекущаяДата();
	ПринудительноеЗавершение = НЕ ЗначениеЗаполнено(ВремяНачалаБлокировки)
		ИЛИ ВремяНачалаБлокировки - ТекущийМомент <= ИнтервалОтключения;
		
	Если НЕ ПринудительноеЗавершение Тогда
		
		ТекстСообщения = НСтр("ru = 'Активных соединений: %1.
			|Следующая проверка соединений будет выполнена через минуту.'");
		ТекстСообщения = УдалитьСтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ТекстСообщения, КоличествоСеансов);
		Состояние(НСтр("ru = 'Выполняется завершение сеансов'"), , 
			ТекстСообщения, БиблиотекаКартинок.Информация32);
			
		Возврат;
	КонецЕсли;
	
	// после начала блокировки сеансы всех пользователей должны быть отключены	
	// если этого не произошло пробуем принудительно прервать соединения
	ОтключитьОбработчикОжидания("ЗавершитьРаботуПользователей");
	
	Результат = СоединенияИБ.ОтключитьСоединенияИБПоПараметрамЗапуска(ПараметрЗапуска);
	Если Результат Тогда	
		Состояние(НСтр("ru = 'Завершение сеансов выполнено успешно'"), , 
			НСтр("ru = 'Работа системы завершается...'"), БиблиотекаКартинок.Информация32);
		ЗавершитьРаботуСистемы(Ложь);
	Иначе
		Состояние(НСтр("ru = 'Завершение сеансов не выполнено!'"), 
			НСтр("ru = 'Подробности см. в Журнале регистрации.'"), 
			БиблиотекаКартинок.Предупреждение32);
	КонецЕсли;
	
КонецПроцедуры
