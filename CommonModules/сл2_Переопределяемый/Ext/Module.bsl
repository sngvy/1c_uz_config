
// Вызывается при инициализации клиента лицензирования
//
// Параметры:
//  ПараметрыИнициализации - Структура - Открытые параметры инициализации клиента лицензирования. 
Процедура ИнициализацияПродукта(ПараметрыИнициализации) Экспорт

	// В продукте доступен выбор версии продукта (например, ПРОФ, Стандарт и т.д.)
	// Вместе с этим параметром, должен быть заполнен обработчик ниже ПриОткрытииФормыВыбораВерсииПродукта()
	ПараметрыИнициализации.ДоступенВыборВерсииПродукта = Истина;
	
	// Инициализация тестового продукта
	//МодульПервогоПродуктаСервер.ИнициализацияПродукта();
	бит_сл_тс.ИнициализацияРешения();
	// Инициализация УЗ продукта
	сл2_МодульПродуктаУЗ.ИнициализацияПродукта();
	
КонецПроцедуры

// Вызывается при нажатии гиперссылки "Изменить версию продукта", формы системы лицензирования (при наличии в продукте такой функциональности)
Процедура ПриОткрытииФормыВыбораВерсииПродукта() Экспорт

	// Последовательность действий в форме константы:
	// Сохранение выбранной версии продукта в константу.
	// Применение изменений в клиент лицензирования.
	// Оповещение обработки клиента лицензирования об изменении версии продукта, для обновления состояния
	ОткрытьФорму("ОбщаяФорма.ФормаКонстант");
	
КонецПроцедуры

// Вызывается при нажатии на кнопку обновить формы клиента лицензирования перед обновлением лицензии.
Процедура ПередОбновлениемСостояния() Экспорт
	
	// Обработчик не заполнен, вставьте код сюда.	
	
КонецПроцедуры 

// Вызывается при нажатии на кнопку обновить формы клиента лицензирования после обновления лицензии.
// Если требуется наличие дополнительных параметров лицензии, в этом обработчике можно 
// добавить вызов метода из вашего серверного модуля, где реализована 
// логика лицензирования для перепроверки наличия требуемых 
// параметров лицензии и обновления видимости разделов конфигурации.
Процедура ПослеОбновленияСостояния() Экспорт
	
	// Обработчик не заполнен, вставьте код сюда.
	
КонецПроцедуры

Процедура ИнициализациияЛицензирования() Экспорт

	ТипИнициализации = сл2_МодульПродуктаУЗ.ОпределитьТекущийСпособИнициализации();
	
	Если ТипИнициализации = ПредопределенноеЗначение("Перечисление.СистемыЛицензирования.СЛ_1") Тогда
	
		//бит_сл_клиент.ИнициализацияКлиентаЛицензирования();
		бит_сл_тс.ИнициализацияРешения();
		
	ИначеЕсли ТипИнициализации = ПредопределенноеЗначение("Перечисление.СистемыЛицензирования.СЛ_2") Тогда
		
		сл2_Клиент.Инициализация();
		
	Иначе
		ОткрытьФорму("Перечисление.СистемыЛицензирования.Форма.ФормаВыбораЛицензирования");
	КонецЕсли;

КонецПроцедуры

Процедура ИнициализацияРешенияСЛ_1() Экспорт

	ТребуетсяОбновитьИнтерфейс = сл2_МодульПродуктаУЗ.ИнициализацияРешенияСЛ_1();
	Если ТребуетсяОбновитьИнтерфейс Тогда
	
		ОбновитьИнтерфейс();
	
	КонецЕсли;

КонецПроцедуры // ()