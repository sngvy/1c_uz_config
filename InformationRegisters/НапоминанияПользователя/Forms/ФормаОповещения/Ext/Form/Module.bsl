&НаКлиенте
Перем Отказ Экспорт;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("Сообщения") Тогда		
		Список.ОсновнаяТаблица = "Задача.Сообщения";
		Список.ТекстЗапроса = ТекстЗапросаСообщения();
	КонецЕсли;
	Для Каждого Элемент Из Список.Параметры.Элементы Цикл
		Если Строка(Элемент.Параметр) = "Ответственный" Тогда
			Элемент.Значение = ПараметрыСеанса.ТекущийПользователь;
			Элемент.Использование = Истина;
		ИначеЕсли Строка(Элемент.Параметр) = "ТекущаяДата" Тогда
			Элемент.Значение = ТекущаяДата();
			Элемент.Использование = Истина;
		КонецЕсли;
	КонецЦикла;
	НапомнитьЧерез = Перечисления.НапоминанияИнтервалыПереноса.Минут15;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ,ЗавершениеРаботы,ТекстПредупреждения, СтандартнаяОбработка)
	//ПеренестиНапоминание(Отказ);
	
	Если Не ЗавершениеРаботы = Истина Тогда
		ПеренестиНапоминание(Отказ);
	Иначе
		Отказ = Истина;
		ТекстПредупреждения = "Выполняется закрытие окна напоминаний!";
		ПодключитьОбработчикОжидания("ПеренестиНапоминаниеЗавершение",1,Истина);
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиНапоминаниеЗавершение()Экспорт
	ПеренестиНапоминание(Отказ);
КонецПроцедуры	

&НаСервере
Процедура ПеренестиНапоминание(Отказ)
	УстановитьПривилегированныйРежим(Истина);
	
	Набор = РегистрыСведений.НапоминанияПользователя.СоздатьМенеджерЗаписи();
	Набор.Пользователь = ПараметрыСеанса.ТекущийПользователь;
	Набор.Прочитать();
	
	Набор.Пользователь = ПараметрыСеанса.ТекущийПользователь;	
	Набор.ДатаСледующегоНапоминания = ТекущаяДата() + Перечисления.НапоминанияИнтервалыПереноса.ПолучитьВСекундах(
	НапомнитьЧерез);
	
	Попытка
		Набор.Записать();
	Исключение
		Отказ = Истина;
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ТекстЗапросаСообщения()

	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	Сообщения.Ссылка КАК Ссылка,
		|	Сообщения.ПланируемаяДата КАК ПланируемаяДата
		|ИЗ
		|	РегистрСведений.СообщенияКПросмотру КАК СообщенияКПросмотру
		|		ЛЕВОЕ СОЕДИНЕНИЕ Задача.Сообщения КАК Сообщения
		|		ПО СообщенияКПросмотру.Сообщение = Сообщения.Ссылка
		|ГДЕ
		|	СообщенияКПросмотру.Ответственный = &Ответственный";
	
	Возврат ТекстЗапроса;

КонецФункции // ТекстЗапросаСообщения()
