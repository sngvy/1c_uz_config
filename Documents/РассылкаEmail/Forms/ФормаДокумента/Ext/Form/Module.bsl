
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Параметры.Ключ.Пустая() Тогда
	
		Объект.ВидКИ = ОбъектыСервер.ПолучитьЗначениеКонстанты("EmailАдресДолжника");
		Объект.Шаблон =  ОбъектыСервер.ПолучитьЗначениеКонстанты("ШаблонПисьмаEmail");
		Объект.УчетнаяЗаписьОтправителя = ОбъектыСервер.ПолучитьЗначениеКонстанты("УчеткаEMailРассылок");
	
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ДействиеПриИзменении(Элемент)
//	Элементы.ОбъектыДействие.Видимость = Объект.Действие.Пустая();
	Если Объект.Действие = ПредопределенноеЗначение("Перечисление.ВариантыДействийДляСкоринга.SMSОповещение") Тогда
		Элементы.УчетнаяЗаписьОтправителя.Доступность = Истина;
		Элементы.УчетнаяЗаписьОтправителя.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.УчетныеЗаписиSMS4B");
	ИначеЕсли Объект.Действие = ПредопределенноеЗначение("Перечисление.ВариантыДействийДляСкоринга.EMailРассылка") Тогда
		Элементы.УчетнаяЗаписьОтправителя.Доступность = Истина;
		Элементы.УчетнаяЗаписьОтправителя.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.УчетныеЗаписиЭлектроннойПочты");
	ИначеЕсли Объект.Действие = ПредопределенноеЗначение("Перечисление.ВариантыДействийДляСкоринга.ПустаяСсылка") Тогда
		Объект.УчетнаяЗаписьОтправителя = ПредопределенноеЗначение("Справочник.УчетныеЗаписиSMS4B.ПустаяСсылка");
		Элементы.УчетнаяЗаписьОтправителя.Доступность = Ложь;	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВидКИПриИзменении(Элемент)
	ИзменитьВидКИ();
КонецПроцедуры

&НаСервере
Процедура ИзменитьВидКИ()
	Для Каждого Элемент ИЗ Объект.Объекты Цикл
		Элемент.Контакт = Автоинформирование.ПолучитьКонтакт(Элемент.Объект, Объект.ВидКИ);		 
	КонецЦикла;	
КонецПроцедуры

&НаСервере
Процедура ИзменитьШаблон()
	Для Каждого Элемент ИЗ Объект.Объекты Цикл
		Элемент.Текст = Автоинформирование.ПолучитьПодсказку(Элемент.Объект, Объект.Шаблон);		 
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура ШаблонПриИзменении(Элемент)
	ИзменитьШаблон();
КонецПроцедуры

&НаСервере
Процедура ПодборВтаблЧасть(Результат)
	Об = РеквизитФормыВЗначение("Объект");		
	РаботаСДокументами.ЗанестиРезультатПодбораВТабличнуюЧасть(Об.Объекты, Результат);
	ЗначениеВРеквизитФормы(Об, "Объект");
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ОбъектыСервер.ОграничитьТипОбъекта(Элементы.ОбъектыОбъект);
	
	//
	Если Объект.Ссылка.Пустая() Тогда
		Пользователи.ЗаполнитьРеквизитыПоДаннымПользователя(Объект);
	КонецЕсли;
	
	ОбъектыСервер.РасширитьТабличнуюЧасть(Объект.Объекты);
	Элементы.ОбъектыПодборПоНастройкам.Видимость = Константы.ИспользоватьНастройкиПодбораОбъектовУчета.Получить();
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ОбъектыСервер.РасширитьТабличнуюЧасть(Объект.Объекты);
КонецПроцедуры

&НаКлиенте
Процедура ОбъектыОбъектПриИзменении(Элемент)
	ОбъектыКлиент.РасширитьТекущуюСтроку(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ОбъектыПолеПриИзменении(Элемент)
	ОбъектыКлиент.РасширитьТекущуюСтрокуОбъект(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура Подбор(Команда)
	ОбъектыКлиент.Подбор(ЭтаФорма);
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ОбъектыПриИзменении(Элемент)
	Если Не Элемент.ТекущиеДанные = Неопределено И Не Элемент.ТекущиеДанные.Объект = Неопределено Тогда
		Элемент.ТекущиеДанные.Контакт = ПолучитьКонтактСервер(Элемент.ТекущиеДанные.Объект, Объект.ВидКИ);
		Элемент.ТекущиеДанные.Текст = ПолучитьПодсказкуСервер(Элемент.ТекущиеДанные.Объект, Объект.Шаблон);
	КонецЕсли;
КонецПроцедуры

&НаСервере 
Функция ПолучитьКонтактСервер(ДО, ВидКИ)
	Возврат Автоинформирование.ПолучитьКонтакт(ДО, ВидКИ);
КонецФункции

&НаСервере 
Функция ПолучитьПодсказкуСервер(ДО, ВидКИ)
	Возврат Автоинформирование.ПолучитьПодсказку(ДО, ВидКИ);
КонецФункции


&НаКлиенте
Процедура ЗаполнитьДанные(Команда)
	Для Каждого Элемент ИЗ Объект.Объекты Цикл
		Если ЗначениеЗаполнено(Элемент.Объект) Тогда
			Элемент.Контакт = ПолучитьКонтактСервер(Элемент.Объект, Объект.ВидКИ);
			Элемент.Текст = ПолучитьПодсказкуСервер(Элемент.Объект, Объект.Шаблон);	
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПодборИзФайла(Команда)
	ОбъектыКлиент.ПодборИзДОК(ЭтаФорма);
КонецПроцедуры

//&НаСервере
//Процедура ОтправитьEmailНаСервере()
//	Если Не ЗначениеЗаполнено(Объект.Шаблон) Тогда
//		Сообщить("Выберите шаблон!");	
//		Возврат;
//	КонецЕсли;
//	Если Не ЗначениеЗаполнено(Объект.УчетнаяЗаписьОтправителя) Тогда
//		Сообщить("Выберите учетную запись отправки!");
//		Возврат;
//	КонецЕсли;
//	Если Объект.Объекты.Количество() = 0 Тогда
//		Сообщить("Выберите хотя бы одно долговое обязательство для отправки e-mail сообщений!");
//		Возврат;
//	КонецЕсли;	
//	Шаблон = Объект.Шаблон.ЗаголовокEMail;
//	Автор = Объект.Автор;
//	УчетнаяЗаписьОтправителя = Объект.УчетнаяЗаписьОтправителя;
//	Для Каждого стр из Объект.Объекты Цикл
//		Если типЗнч(Стр.Объект) <> Тип("СправочникСсылка.ДолговыеОбязательства") Тогда
//			Сообщить("Данный документ рассылает e-mail по долговым обязательтвам! По объекту "+Стр.Объект.Наименование+" ничего не отправлено!");
//			Продолжить;
//		Иначе
//			//++КазанцевЯА
//			//Рассылка.ОтправитьЕмаилПоДО(Объект.УчетнаяЗаписьОтправителя,Стр.Контакт,Стр.Текст,Объект.Шаблон,Стр.Объект);
//			ЭлПИ = Документы.ЭлектронноеПисьмоИсходящее.СоздатьДокумент();
//			ЭлПИ.Дата = ТекущаяДата();
//			ЭлПИ.Кодировка = "UTF-8";
//			//ЭлПИ.ТипТекста = Перечисления.ТипыТекстовЭлектронныхПисем.ПростойТекст;
//			ЭлПИ.ТипТекста = Перечисления.ТипыТекстовЭлектронныхПисем.HTML;
//			ЭлПИ.Тема = Шаблон;
//			//ШаблонОбъект = Объект.Шаблон.ПолучитьОбъект();
//			Текст = Справочники.ШаблоныТекстаДляАвтоинформирования.ЗаполнитьHTMLШаблон(Объект.Шаблон, Стр.Объект);
//			//СтруктураПисьма = Новый Структура("ТекстHTML, Кодировка", Текст, ЭлПИ.Кодировка);
//			ЭлПИ.Текст = Текст;
//			ЭлПИ.ТекстHTML = Текст;
//			ЭлПИ.СтатусПисьма = Перечисления.СтатусыИсходящегоЭлектронногоПисьма.Исходящее;
//			ЭлПИ.Важность = Перечисления.ВариантыВажностиВзаимодействия.Обычная;
//			ЭлПИ.Ответственный = Автор;
//			ЭлПИ.Автор = Автор;
//			ЭлПИ.УчетнаяЗапись = УчетнаяЗаписьОтправителя;
//			ЭлПИ.ОтправительПредставление = УчетнаяЗаписьОтправителя;
//			СтрПолучатели = ЭлПИ.ПолучателиПисьма.Добавить();
//			СтрПолучатели.Адрес = Стр.Контакт;
//			СтрПолучатели.Контакт = Стр.Объект;
//			ЭлПИ.Записать();
//			Стр.ЭлектронноеПисьмоИсходящее = ЭлПИ.Ссылка;
//			
//			
//			//
//			СтруктураПисьма = Новый Структура;
//			СтруктураПисьма.Вставить("GUID", Строка(Новый УникальныйИдентификатор));
//			СтруктураПисьма.Вставить("Объект", Стр.Объект);
//			СтруктураПисьма.Вставить("ПочтаПолучателя", Стр.Контакт);
//			СтруктураПисьма.Вставить("ПочтаОтправителя", УчетнаяЗаписьОтправителя.Пользователь);
//			СтруктураПисьма.Вставить("ТекстПисьма", Текст);
//			СтруктураПисьма.Вставить("ДатаОтправки", ТекущаяДатаСеанса());
//			
//			МенеджерЗаписи = РегистрыСведений.РСЕмаилСообщения.СоздатьМенеджерЗаписи();	
//			МенеджерЗаписи.GUID = СтруктураПисьма.GUID;
//			МенеджерЗаписи.Объект = СтруктураПисьма.Объект ;
//			МенеджерЗаписи.ПочтаПолучателя = СтруктураПисьма.ПочтаПолучателя;
//			МенеджерЗаписи.ПочтаОтправителя = СтруктураПисьма.ПочтаОтправителя;
//			МенеджерЗаписи.ТекстПисьма = СтруктураПисьма.ТекстПисьма;
//			МенеджерЗаписи.ДатаОтправки = СтруктураПисьма.ДатаОтправки;
//			//МенеджерЗаписи.Отправлено = СтруктураПисьма.Отправлено;
//			МенеджерЗаписи.Записать();
//			//
//			//РаботаСПочтовымиСообщениями.ОтправитьПочтовоеСообщение(Константы.УчеткаEMailРассылок.Получить(),ПараметрыПисьма);
//			//--КазанцевЯА
//		КонецЕсли;
//	КонецЦикла;
//	ЭтотОбъект.Записать();
//КонецПроцедуры

&НаСервере
Функция ОтправитьEmailНаСервере()

	Если Не ЗначениеЗаполнено(Объект.Шаблон) Тогда
		Возврат "Выберите шаблон!";
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Объект.УчетнаяЗаписьОтправителя) Тогда
		Возврат "Выберите учетную запись отправки!";
	КонецЕсли;
	Если Объект.Объекты.Количество() = 0 Тогда
		Возврат "Выберите хотя бы одно долговое обязательство для отправки e-mail сообщений!";
	КонецЕсли;
	
	СообщитьОНеОтправленных = Новый Массив;
	СообщитьОНеОтправленных.Добавить("Данный документ рассылает e-mail по долговым обязательтвам!");
	СообщитьОНеОтправленных.Добавить("Не отправлены сообщения по объектам:");
	
	Тема = Объект.Шаблон.ЗаголовокEMail;
	Автор = Объект.Автор;
	УчетнаяЗаписьОтправителя = Объект.УчетнаяЗаписьОтправителя;
	Шаблон = Объект.Шаблон;
	
	ОшибкиОтправки = Новый Массив;
	Для Каждого Сообщение из Объект.Объекты Цикл
		
		Если ТипЗнч(Сообщение.Объект) <> Тип("СправочникСсылка.ДолговыеОбязательства") Тогда
		
			СообщитьОНеОтправленных.Добавить(Строка(Сообщение.Объект));
			Продолжить;
		
		КонецЕсли;
		
		СтруктураПисьма = Новый Структура;
		СтруктураПисьма.Вставить("GUID", Строка(Новый УникальныйИдентификатор));
		СтруктураПисьма.Вставить("Объект", Сообщение.Объект);
		Контакты = Новый Массив;
		Контакты.Добавить(Сообщение.Контакт);
		СтруктураПисьма.Вставить("ПочтаПолучателя", Контакты);
		СтруктураПисьма.Вставить("ПочтаОтправителя", УчетнаяЗаписьОтправителя.Пользователь);
		СтруктураПисьма.Вставить("ДатаОтправки", ТекущаяДатаСеанса());
		
		СтруктураПисьма.Вставить("Тема", Тема);
		СтруктураПисьма.Вставить("Автор", Автор);
		СтруктураПисьма.Вставить("УчетнаяЗапись", УчетнаяЗаписьОтправителя);
		СтруктураПисьма.Вставить("Шаблон", Шаблон);
		
		Попытка
		
			Сообщение.ЭлектронноеПисьмоИсходящее = Документы.ЭлектронноеПисьмоИсходящее.СформироватьОбычноеИсходящее(СтруктураПисьма);
		
		Исключение
			ОшибкиОтправки.Добавить("Не удалось отправить письмо: " + ОписаниеОшибки());
		КонецПопытки;

	КонецЦикла;
	
	ЭтотОбъект.Записать();
	
	ТекстОбОшибках = "";
	Если ОшибкиОтправки.Количество() <> 0 Тогда
	
		ТекстОбОшибках = СтрСоединить(ОшибкиОтправки, Символы.ПС);
	
	КонецЕсли;
	
	Если СообщитьОНеОтправленных.Количество() > 2 Тогда
	
		ТекстОбОшибках = ?(ТекстОбОшибках = "", "", Символы.ПС);
		ТекстОбОшибках = ТекстОбОшибках + СтрСоединить(СообщитьОНеОтправленных, Символы.ПС);
	
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекстОбОшибках) Тогда
	
		Возврат ТекстОбОшибках;
	
	КонецЕсли;
	
	Возврат "Все письма отправлены!"

КонецФункции

&НаКлиенте
Процедура ОтправитьEmail(Команда)

	ОтветПользователю = ОтправитьEmailНаСервере();
	Если ЗначениеЗаполнено(ОтветПользователю) Тогда
	
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ОтветПользователю;
		Сообщение.Сообщить();
	
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПодборПоНастройкам(Команда)
	ОбъектыКлиент.ПодборПоНастройкам(ЭтаФорма);
КонецПроцедуры
