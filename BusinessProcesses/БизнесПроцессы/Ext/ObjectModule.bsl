
Процедура ЗапуститьБизнесПроцесс(Отказ) Экспорт
	ФункционалБП.ЗапуститьБизнесПроцессБП(Отказ, ЭтотОбъект);
КонецПроцедуры

Процедура ЗапуститьБизнесПроцессСТочки(Отказ, ТСТочка, ТСОбъектРодитель, ТССхема, ТСТипМероприятия, ТСМассив, 
		ТСИсполнитель) Экспорт
	ФункционалБП.ЗапуститьБизнесПроцессСТочкиБП(Отказ, ТСТочка, ТСОбъектРодитель, ТССхема, ТСТипМероприятия, ТСМассив, 
			ТСИсполнитель, ЭтотОбъект);
КонецПроцедуры

Процедура ЗавершитьБизнесПроцесс(Отказ, ЭлементВыход) Экспорт
	ФункционалБП.ЗавершитьБизнесПроцессБП(Отказ, ЭлементВыход, ЭтотОбъект);
КонецПроцедуры

Процедура ПродолжитьВыполнениеБП(Отказ, ИсточникСобытия = Неопределено) Экспорт
	ФункционалБП.ПродолжитьВыполнениеБПБП(Отказ, ИсточникСобытия, ЭтотОбъект);
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	// Отрабатывает, когда заполняем по кнопке "На основании".
	ЭтотОбъект.Объект = ДанныеЗаполнения;
	
	Если Не ЗначениеЗаполнено(ЭтотОбъект.Объект) Тогда
	
		Возврат;
	
	КонецЕсли;
	
	// Отрабатывает когда уже есть бизнес- процессы и Выборка попадает на Исполнительный документ, который
	// не интересует, а интересует его владелец, т.е Долговое обязательство.
	Попытка
		Если ТипЗнч(ДанныеЗаполнения.Ссылка.Владелец) = Тип("СправочникСсылка.ДолговыеОбязательства") Тогда
			ЭтотОбъект.Объект = ДанныеЗаполнения.Ссылка.Владелец;		
		КонецЕсли;	
	Исключение
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не удалось установить Владельца Исполнительного документа: " + КраткоеПредставлениеОшибки(ОписаниеОшибки());
		Сообщение.Сообщить();
	КонецПопытки;

	// Отрабатывает, когда первый раз создаём БП, а также когда выборка попадает на Долговое обязательство,
	// а не на Исполнительные документы.
	Попытка
		Если ТипЗнч(ДанныеЗаполнения.Ссылка) = Тип("СправочникСсылка.ДолговыеОбязательства") Тогда 
			ЭтотОбъект.Объект = ДанныеЗаполнения;		
		КонецЕсли;
	Исключение
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не удалось установить Долговое обязательство: " + КраткоеПредставлениеОшибки(ОписаниеОшибки());
		Сообщение.Сообщить();
	КонецПопытки;
КонецПроцедуры

Процедура ПередУдалением(Отказ)
	ФункционалБП.ПередУдалениемБП(Отказ, ЭтотОбъект);
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	//
	Справочники.ФункцииДополнительныхСвойств.ПроставитьЗначенияДопСвойств(ЭтотОбъект, 
			Перечисления.ИнициаторыСобытийДляДопСвойств.БизнесПроцесс);
КонецПроцедуры

Процедура ПродолжитьВыполнениеБП2(Отказ) Экспорт
	ФункционалБП.ПродолжитьВыполнениеБПБП2(Отказ, ЭтотОбъект);
КонецПроцедуры
