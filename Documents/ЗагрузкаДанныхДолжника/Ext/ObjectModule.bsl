
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
    Если ЭтотОбъект.ЗапретНаРедактирование Тогда
        Отказ = Истина;
    ИначеЕсли ЭтотОбъект.ПоставитьВОчередь Тогда
        Если ЗаписатьСправочникиВФоне() Тогда    
            ЭтотОбъект.ЗапретНаРедактирование = Истина;
            Записать(РежимЗаписиДокумента.Запись);
        Иначе
            Отказ = Истина;
        КонецЕсли;
    Иначе
        Если ЗаписатьДолжниковНаСервере() Тогда
            ЭтотОбъект.ЗапретНаРедактирование = Истина;
            ЭтотОбъект.СправочникиЗаписаны = Истина;
            Записать(РежимЗаписиДокумента.Запись);
        Иначе
            Отказ = Истина;
        КонецЕсли;
    КонецЕсли;
КонецПроцедуры

// Получает значение реквизита хранилища "ТаблицаЗначений"
//
Функция ВернутьСодержимоеХранилищаТЗДанных() Экспорт
 	Возврат ТаблицаЗначений.Получить();	
КонецФункции

Процедура ЗаписатьСодержимоеХранилищаТЗДанных(ЗаписываемаяТаблица) Экспорт
	Хранилище = Новый ХранилищеЗначения(ЗаписываемаяТаблица, Новый СжатиеДанных(5));	
	ТаблицаЗначений = Хранилище;
КонецПроцедуры


Функция ЗаписатьСправочникиВФоне()
	тзДанные = ВернутьСодержимоеХранилищаТЗДанных();	
	Если тзДанные.Количество() = 0 Тогда
		Возврат Ложь;	
	КонецЕсли;
	
	//Проверка на заполнение обязательных полей
	ОбязательныеРеквизитыТЧ = Новый Массив();
	ОбязательныеРеквизитыТЧ.Добавить("Наименование");
	ОбязательныеРеквизитыТЧ.Добавить("Идентификатор");
	ОбязательныеРеквизитыТЧ.Добавить("НомерДО");
	Если НЕ РаботаСДокументами.ПроверитьЗаполнениеТабличнойЧасти(тзДанные, ОбязательныеРеквизитыТЧ) Тогда
		Возврат Ложь;
	КонецЕсли;	
	ЭтотОбъект.ЗапретНаРедактирование = Истина;
		
	Запись = РегистрыСведений.ОчередьФоновыхЗаданий.СоздатьМенеджерЗаписи(); 
	Запись.СсылкаНаДокумент = ЭтотОбъект.Ссылка;
	Запись.ДатаДобавленияВРегистр = ТекущаяДата();
	Запись.СтатусЗадания = Перечисления.СтатусыФоновыхЗаданий.ВОчереди;	
	Запись.Записать();
	Возврат Истина;
КонецФункции

Функция ЗаписатьДолжниковНаСервере()
	тзДанные = ВернутьСодержимоеХранилищаТЗДанных();
	Если тзДанные.Количество() = 0 Тогда
		Возврат Ложь;	
	КонецЕсли;
	
	//Проверка на заполнение обязательных полей
	ОбязательныеРеквизитыТЧ = Новый Массив();
	ОбязательныеРеквизитыТЧ.Добавить("Наименование");
	ОбязательныеРеквизитыТЧ.Добавить("Идентификатор");
	ОбязательныеРеквизитыТЧ.Добавить("НомерДО");
	Если ЭтотОбъект.ЮрФизЛица.Пустая() Тогда
		ОбязательныеРеквизитыТЧ.Добавить("ТипКА");
	КонецЕсли;
	Если ЭтотОбъект.ТипДолговыхОбязательств.Пустая() Тогда
		ОбязательныеРеквизитыТЧ.Добавить("ТипДО");
	КонецЕсли;
	Если НЕ РаботаСДокументами.ПроверитьЗаполнениеТабличнойЧасти(тзДанные, ОбязательныеРеквизитыТЧ) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	//Массив основных реквизитов
	Массив = Новый Массив;
	Массив.Добавить("НомерСтроки");
	Массив.Добавить("Наименование");
	Массив.Добавить("Идентификатор");
	Массив.Добавить("ВалютаДоговора");
	Массив.Добавить("НомерДО");
	Массив.Добавить("СсылкаДО");
	Массив.Добавить("ТипКА");
	Массив.Добавить("ТипДО");
	
	МассивСообщений = Новый Массив;
	
	Для Каждого ТекСтрока Из тзДанные Цикл
		Должник = ФоновыеЗаданияМодуль.ЗаписатьДолжника(Массив, ТекСтрока, тзДанные, ЭтотОбъект.ЮрФизЛица, 
				ЭтотОбъект.ОбновлятьРанееЗаписанные, МассивСообщений, ЭтотОбъект.Ссылка);
		ТекСтрока.СсылкаДО = ФоновыеЗаданияМодуль.ЗаписатьДолговоеОбязательство(Массив, Должник, ТекСтрока, 
				тзДанные, ЭтотОбъект.ТипДолговыхОбязательств, ЭтотОбъект.ОбновлятьРанееЗаписанные, МассивСообщений, 
				ЭтотОбъект.Ссылка);			
	КонецЦикла;
					
	ЗаписатьСодержимоеХранилищаТЗДанных(тзДанные);
	
	Если МассивСообщений.Количество() = 0 Тогда
		МассивСообщений.Добавить(Новый Структура("Текст, Объект, Поле, Путь",
				"Все справочники записаны!", ЭтотОбъект.Ссылка, Неопределено, Неопределено));
	КонецЕсли;
	Запись = РегистрыСведений.СообщенияПоЗагрузкеДанных.СоздатьМенеджерЗаписи();
	Запись.Документ = ЭтотОбъект.Ссылка;	
	Запись.МассивСообщений = Новый ХранилищеЗначения(МассивСообщений, Новый СжатиеДанных(5));
	Попытка
		Запись.Записать();
	Исключение
		Сообщить(ОписаниеОшибки());
		Возврат Ложь;
	КонецПопытки;
	
	Возврат Истина;		
КонецФункции

Процедура ОбработкаУдаленияПроведения(Отказ)
	Отказ = Истина;
КонецПроцедуры
