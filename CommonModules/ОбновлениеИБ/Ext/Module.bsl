
&НаСервере
Процедура ВыполнитьОбновлениеИнформационнойБазы() Экспорт
	ВерсияТекущая    = Константы.НомерВерсииКонфигурации.Получить(); 
	ВерсияМетаданных = СокрЛП(Метаданные.Версия);
	
	Если ВерсияТекущая <> ВерсияМетаданных Тогда
		//РаботаСЦКТСервер.СкопироватьКомпоненты(Истина); //надо бы это дело на клиента перенести, 
		//  но не понятно, как версию компонент отслеживать???
										  
		Если ВерсияТекущая = "" Тогда
			ЗаполнитьПредопределенныеДанные();
			Константы.НомерВерсииКонфигурации.Установить(ВерсияМетаданных);
		КонецЕсли;
		
		Если ВерсияТекущая <> "" 
				И Строка(ВычислитьСтаршуюВерсию(ВерсияТекущая, ВерсияМетаданных)) = ВерсияМетаданных
				И Строка(ВычислитьСтаршуюВерсию(ВерсияТекущая, "3.2.6.38")) = "3.2.6.38" Тогда			
			ОбновитьСправочник_тсВидыПечатныхДокументов();
		КонецЕсли;	
		
		ВерсияТекущая = Константы.НомерВерсииКонфигурации.Получить();
		ВерсияМетаданных = "3.2.7.47";
		Если ВерсияТекущая <> "" И ВерсияТекущая = "3.2.6.38" И ВерсияМетаданных = "3.2.7.47" Тогда		
			СтрСообщения = "обновление информационной базы с версии " + ВерсияТекущая + " на версию " + ВерсияМетаданных;
			Сообщить("Выполняется " + СтрСообщения);
			
			ВыполнитьЗаменуХранилищУЭД();
			Константы.НомерВерсииКонфигурации.Установить(ВерсияМетаданных);
			
			ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, , , "Выполнено " + СтрСообщения);
		КонецЕсли;	
		
		ВерсияТекущая = Константы.НомерВерсииКонфигурации.Получить();
		ВерсияМетаданных = "3.2.7.54";
		Если ВерсияТекущая <> "" И ВерсияТекущая = "3.2.7.47" И ВерсияМетаданных = "3.2.7.54" Тогда		
			СтрСообщения = "обновление информационной базы с версии " + ВерсияТекущая + " на версию " + ВерсияМетаданных;
			Сообщить("Выполняется " + СтрСообщения);
			
			РегистрыНакопления.ОбъектыВРаботе.ПринятьУбратьВРаботу(ПараметрыСеанса.ТекущийПользователь);
			Константы.НомерВерсииКонфигурации.Установить(ВерсияМетаданных);
			
			ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, , , "Выполнено " + СтрСообщения);
		КонецЕсли;
		
		ВерсияТекущая = Константы.НомерВерсииКонфигурации.Получить();
		ВерсияМетаданных = "3.2.7.55";
		Если ВерсияТекущая <> "" И ВерсияТекущая = "3.2.7.54" И ВерсияМетаданных = "3.2.7.55" Тогда
			СтрСообщения = "обновление информационной базы с версии " + ВерсияТекущая + " на версию " + ВерсияМетаданных;
			Сообщить("Выполняется " + СтрСообщения);
			
			Константы.НомерВерсииКонфигурации.Установить(ВерсияМетаданных);
			
			ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, , , "Выполнено " + СтрСообщения);
		КонецЕсли;
		
		ВерсияТекущая = Константы.НомерВерсииКонфигурации.Получить();
		ВерсияМетаданных = "3.2.7.56";
		Если ВерсияТекущая <> "" И ВерсияТекущая = "3.2.7.55" И ВерсияМетаданных = "3.2.7.56" Тогда
			СтрСообщения = "обновление информационной базы с версии " + ВерсияТекущая + " на версию " + ВерсияМетаданных;
			Сообщить("Выполняется " + СтрСообщения);
			
			НачатьТранзакцию();
			Попытка
				ОбновитьНастройкиСоответствий();
				Константы.НомерВерсииКонфигурации.Установить(ВерсияМетаданных);
				
				ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, , , "Выполнено " + СтрСообщения);
				ЗафиксироватьТранзакцию();
			Исключение
				ОтменитьТранзакцию();
				ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Ошибка, , , "Ошибка! Не выполнено " + СтрСообщения);
				Сообщить("Ошибка! Не выполнено " + СтрСообщения);
			КонецПопытки;
		КонецЕсли;
		
		ВерсияТекущая = Константы.НомерВерсииКонфигурации.Получить();
		ВерсияМетаданных = "3.2.7.58";	
		Если ВерсияТекущая <> "" И ВерсияТекущая = "3.2.7.56" И ВерсияМетаданных = "3.2.7.58" Тогда
			СтрСообщения = "обновление информационной базы с версии " + ВерсияТекущая + " на версию " + ВерсияМетаданных;
			Сообщить("Выполняется " + СтрСообщения);
			
			Константы.НомерВерсииКонфигурации.Установить(ВерсияМетаданных);
			
			ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, , , "Выполнено " + СтрСообщения);
		КонецЕсли;
		
		ВерсияТекущая = Константы.НомерВерсииКонфигурации.Получить();
		ВерсияМетаданных = "3.2.7.59";	
		Если ВерсияТекущая <> "" И ВерсияТекущая = "3.2.7.58" И ВерсияМетаданных = "3.2.7.59" Тогда
			СтрСообщения = "обновление информационной базы с версии " + ВерсияТекущая + " на версию " + ВерсияМетаданных;
			Сообщить("Выполняется " + СтрСообщения);
			
			Константы.НомерВерсииКонфигурации.Установить(ВерсияМетаданных);
			
			ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, , , "Выполнено " + СтрСообщения);
		КонецЕсли;		
		
		ВерсияТекущая = Константы.НомерВерсииКонфигурации.Получить();
		ВерсияМетаданных = "3.2.7.60";	
		Если ВерсияТекущая <> "" И ВерсияТекущая = "3.2.7.59" И ВерсияМетаданных = "3.2.7.60" Тогда
			СтрСообщения = "обновление информационной базы с версии " + ВерсияТекущая + " на версию " + ВерсияМетаданных;
			Сообщить("Выполняется " + СтрСообщения);
			
			Константы.НомерВерсииКонфигурации.Установить(ВерсияМетаданных);
			
			ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, , , "Выполнено " + СтрСообщения);
		КонецЕсли;
		
		ВерсияТекущая = Константы.НомерВерсииКонфигурации.Получить();
		ВерсияМетаданных = "3.2.7.61";
		Если ВерсияТекущая <> "" И ВерсияТекущая = "3.2.7.60" И ВерсияМетаданных = "3.2.7.61" Тогда		
			СтрСообщения = "обновление информационной базы с версии " + ВерсияТекущая + " на версию " + ВерсияМетаданных;
			Сообщить("Выполняется " + СтрСообщения);
			
			Константы.НомерВерсииКонфигурации.Установить(ВерсияМетаданных);
			
			ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, , , "Выполнено " + СтрСообщения);
		КонецЕсли;
		
		ВерсияТекущая = Константы.НомерВерсииКонфигурации.Получить();
		ВерсияМетаданных = "3.2.7.62";
		Если ВерсияТекущая <> "" И ВерсияТекущая = "3.2.7.61" И ВерсияМетаданных = "3.2.7.62" Тогда		
			СтрСообщения = "обновление информационной базы с версии " + ВерсияТекущая + " на версию " + ВерсияМетаданных;
			Сообщить("Выполняется " + СтрСообщения);
			
			Константы.НомерВерсииКонфигурации.Установить(ВерсияМетаданных);
			
			ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, , , "Выполнено " + СтрСообщения);
		КонецЕсли;
		
		ВерсияТекущая = Константы.НомерВерсииКонфигурации.Получить();
		ВерсияМетаданных = "3.2.7.63";
		Если ВерсияТекущая <> "" И ВерсияТекущая = "3.2.7.62" И ВерсияМетаданных = "3.2.7.63" Тогда		
			СтрСообщения = "обновление информационной базы с версии " + ВерсияТекущая + " на версию " + ВерсияМетаданных;
			Сообщить("Выполняется " + СтрСообщения);
			
			Константы.НомерВерсииКонфигурации.Установить(ВерсияМетаданных);
			
			ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, , , "Выполнено " + СтрСообщения);
		КонецЕсли;
		
		ВерсияТекущая = Константы.НомерВерсииКонфигурации.Получить();
		ВерсияМетаданных = "3.2.7.64";
		Если ВерсияТекущая <> "" И ВерсияТекущая = "3.2.7.63" И ВерсияМетаданных = "3.2.7.64" Тогда		
			СтрСообщения = "обновление информационной базы с версии " + ВерсияТекущая + " на версию " + ВерсияМетаданных;
			Сообщить("Выполняется " + СтрСообщения);
			
			Константы.НомерВерсииКонфигурации.Установить(ВерсияМетаданных);
			
			ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, , , "Выполнено " + СтрСообщения);
		КонецЕсли;
		
		ВерсияТекущая = Константы.НомерВерсииКонфигурации.Получить();
		ВерсияМетаданных = "3.2.7.65";
		Если ВерсияТекущая <> "" И ВерсияТекущая = "3.2.7.64" И ВерсияМетаданных = "3.2.7.65" Тогда		
			СтрСообщения = "обновление информационной базы с версии " + ВерсияТекущая + " на версию " + ВерсияМетаданных;
			Сообщить("Выполняется " + СтрСообщения);
			
			Константы.НомерВерсииКонфигурации.Установить(ВерсияМетаданных);
			
			ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, , , "Выполнено " + СтрСообщения);
		КонецЕсли;
		
		ВерсияТекущая = Константы.НомерВерсииКонфигурации.Получить();
		ВерсияМетаданных = "3.2.7.66";
		Если ВерсияТекущая <> "" И ВерсияТекущая = "3.2.7.65" И ВерсияМетаданных = "3.2.7.66" Тогда		
			СтрСообщения = "обновление информационной базы с версии " + ВерсияТекущая + " на версию " + ВерсияМетаданных;
			Сообщить("Выполняется " + СтрСообщения);
			
			Константы.НомерВерсииКонфигурации.Установить(ВерсияМетаданных);
			
			ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, , , "Выполнено " + СтрСообщения);
		КонецЕсли;

		ВерсияТекущая = Константы.НомерВерсииКонфигурации.Получить();
		ВерсияМетаданных = "3.2.7.67";
		Если ВерсияТекущая <> "" И ВерсияТекущая = "3.2.7.66" И ВерсияМетаданных = "3.2.7.67" Тогда		
			СтрСообщения = "обновление информационной базы с версии " + ВерсияТекущая + " на версию " + ВерсияМетаданных;
			Сообщить("Выполняется " + СтрСообщения);
			
			Константы.НомерВерсииКонфигурации.Установить(ВерсияМетаданных);
			
			ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, , , "Выполнено " + СтрСообщения);
		КонецЕсли;		
		
		ВерсияТекущая = Константы.НомерВерсииКонфигурации.Получить();
		ВерсияМетаданных = "3.2.7.68";
		Если ВерсияТекущая <> "" И ВерсияТекущая = "3.2.7.67" И ВерсияМетаданных = "3.2.7.68" Тогда		
			СтрСообщения = "обновление информационной базы с версии " + ВерсияТекущая + " на версию " + ВерсияМетаданных;
			Сообщить("Выполняется " + СтрСообщения);
			
			Константы.НомерВерсииКонфигурации.Установить(ВерсияМетаданных);
			
			ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, , , "Выполнено " + СтрСообщения);
		КонецЕсли;	
			
		ВерсияТекущая = Константы.НомерВерсииКонфигурации.Получить();
		ВерсияМетаданных = "3.2.7.69";
		Если ВерсияТекущая <> "" И ВерсияТекущая = "3.2.7.68" И ВерсияМетаданных = "3.2.7.69" Тогда		
			СтрСообщения = "обновление информационной базы с версии " + ВерсияТекущая + " на версию " + ВерсияМетаданных;
			Сообщить("Выполняется " + СтрСообщения);
			
			Константы.НомерВерсииКонфигурации.Установить(ВерсияМетаданных);
			
			ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, , , "Выполнено " + СтрСообщения);
		КонецЕсли;
		
		ВерсияТекущая = Константы.НомерВерсииКонфигурации.Получить();
		ВерсияМетаданных = "3.2.7.70";
		Если ВерсияТекущая <> "" И ВерсияТекущая = "3.2.7.69" И ВерсияМетаданных = "3.2.7.70" Тогда		
			СтрСообщения = "обновление информационной базы с версии " + ВерсияТекущая + " на версию " + ВерсияМетаданных;
			Сообщить("Выполняется " + СтрСообщения);
			
			Константы.НомерВерсииКонфигурации.Установить(ВерсияМетаданных);
			
			ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, , , "Выполнено " + СтрСообщения);
		КонецЕсли;

		ВерсияТекущая = Константы.НомерВерсииКонфигурации.Получить();
		ВерсияМетаданных = "3.2.7.71";
		Если ВерсияТекущая <> "" И ВерсияТекущая = "3.2.7.70" И ВерсияМетаданных = "3.2.7.71" Тогда		
			СтрСообщения = "обновление информационной базы с версии " + ВерсияТекущая + " на версию " + ВерсияМетаданных;
			Сообщить("Выполняется " + СтрСообщения);
			
			Константы.НомерВерсииКонфигурации.Установить(ВерсияМетаданных);
			
			ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, , , "Выполнено " + СтрСообщения);
		КонецЕсли;
		
		ВерсияТекущая = Константы.НомерВерсииКонфигурации.Получить();
		ВерсияМетаданных = "3.2.7.72";
		Если ВерсияТекущая <> "" И ВерсияТекущая = "3.2.7.71" И ВерсияМетаданных = "3.2.7.72" Тогда		
			СтрСообщения = "обновление информационной базы с версии " + ВерсияТекущая + " на версию " + ВерсияМетаданных;
			Сообщить("Выполняется " + СтрСообщения);
			
			Константы.НомерВерсииКонфигурации.Установить(ВерсияМетаданных);
			
			ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, , , "Выполнено " + СтрСообщения);
		КонецЕсли;
		
		ВерсияТекущая = Константы.НомерВерсииКонфигурации.Получить();
		ВерсияМетаданных = "3.2.7.73";
		Если ВерсияТекущая <> "" И ВерсияТекущая = "3.2.7.72" И ВерсияМетаданных = "3.2.7.73" Тогда		
			СтрСообщения = "обновление информационной базы с версии " + ВерсияТекущая + " на версию " + ВерсияМетаданных;
			Сообщить("Выполняется " + СтрСообщения);
			
			Константы.НомерВерсииКонфигурации.Установить(ВерсияМетаданных);
			
			ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, , , "Выполнено " + СтрСообщения);
		КонецЕсли;		
		
		ВерсияТекущая = Константы.НомерВерсииКонфигурации.Получить();
		ВерсияМетаданных = "3.2.7.74";
		Если ВерсияТекущая <> "" И ВерсияТекущая = "3.2.7.73" И ВерсияМетаданных = "3.2.7.74" Тогда		
			СтрСообщения = "обновление информационной базы с версии " + ВерсияТекущая + " на версию " + ВерсияМетаданных;
			Сообщить("Выполняется " + СтрСообщения);
			
			Константы.НомерВерсииКонфигурации.Установить(ВерсияМетаданных);
			
			ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, , , "Выполнено " + СтрСообщения);
		КонецЕсли;	
		
		ВерсияТекущая = Константы.НомерВерсииКонфигурации.Получить();
		ВерсияМетаданных = "3.2.7.75";
		Если ВерсияТекущая <> "" И ВерсияТекущая = "3.2.7.74" И ВерсияМетаданных = "3.2.7.75" Тогда		
			СтрСообщения = "обновление информационной базы с версии " + ВерсияТекущая + " на версию " + ВерсияМетаданных;
			Сообщить("Выполняется " + СтрСообщения);
			УстановитьПоДляПечати();
			Константы.НомерВерсииКонфигурации.Установить(ВерсияМетаданных);
			
			ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, , , "Выполнено " + СтрСообщения);
		КонецЕсли;		
		
		ВерсияТекущая = Константы.НомерВерсииКонфигурации.Получить();
		ВерсияМетаданных = "3.2.7.76";
		Если ВерсияТекущая <> "" И ВерсияТекущая = "3.2.7.75" И ВерсияМетаданных = "3.2.7.76" Тогда		
			СтрСообщения = "обновление информационной базы с версии " + ВерсияТекущая + " на версию " + ВерсияМетаданных;
			Сообщить("Выполняется " + СтрСообщения);
			
			Константы.НомерВерсииКонфигурации.Установить(ВерсияМетаданных);
			
			ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, , , "Выполнено " + СтрСообщения);
		КонецЕсли;		
		
		ВерсияТекущая = Константы.НомерВерсииКонфигурации.Получить();
		ВерсияМетаданных = "3.3.0.1";
		Если ВерсияТекущая <> "" И ВерсияТекущая = "3.2.7.76" И ВерсияМетаданных = "3.3.0.1" Тогда		
			СтрСообщения = "обновление информационной базы с версии " + ВерсияТекущая + " на версию " + ВерсияМетаданных;
			Сообщить("Выполняется " + СтрСообщения);
			
			УстановитьПередающихСотрудниковНастройкиАвтораспределения();
			
			Константы.НомерВерсииКонфигурации.Установить(ВерсияМетаданных);
			
			ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, , , "Выполнено " + СтрСообщения);
		КонецЕсли;	
		
		ВерсияТекущая = Константы.НомерВерсииКонфигурации.Получить();
		ВерсияМетаданных = "3.3.0.2";
		Если ВерсияТекущая <> "" И ВерсияТекущая = "3.3.0.1" И ВерсияМетаданных = "3.3.0.2" Тогда		
			СтрСообщения = "обновление информационной базы с версии " + ВерсияТекущая + " на версию " + ВерсияМетаданных;
			Сообщить("Выполняется " + СтрСообщения);
			
			КонвертацияТелефонныхНомеров();
			
			Константы.НомерВерсииКонфигурации.Установить(ВерсияМетаданных);
			
			ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, , , "Выполнено " + СтрСообщения);
		КонецЕсли;		
		
		ВерсияТекущая = Константы.НомерВерсииКонфигурации.Получить();
		ВерсияМетаданных = "3.3.0.3";
		Если ВерсияТекущая <> "" И ВерсияТекущая = "3.3.0.2" И ВерсияМетаданных = "3.3.0.3" Тогда		
			СтрСообщения = "обновление информационной базы с версии " + ВерсияТекущая + " на версию " + ВерсияМетаданных;
			Сообщить("Выполняется " + СтрСообщения);
						
			Константы.НомерВерсииКонфигурации.Установить(ВерсияМетаданных);
			
			ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, , , "Выполнено " + СтрСообщения);
		КонецЕсли;
		
		ВерсияТекущая = Константы.НомерВерсииКонфигурации.Получить();
		ВерсияМетаданных = "3.3.0.4";
		Если ВерсияТекущая <> "" И ВерсияТекущая = "3.3.0.3" И ВерсияМетаданных = "3.3.0.4" Тогда		
			СтрСообщения = "обновление информационной базы с версии " + ВерсияТекущая + " на версию " + ВерсияМетаданных;
			Сообщить("Выполняется " + СтрСообщения);
						
			Константы.НомерВерсииКонфигурации.Установить(ВерсияМетаданных);
			
			ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, , , "Выполнено " + СтрСообщения);
		КонецЕсли;
		
		ВерсияТекущая = Константы.НомерВерсииКонфигурации.Получить();
		ВерсияМетаданных = "3.3.0.5";
		Если ВерсияТекущая <> "" И ВерсияТекущая = "3.3.0.4" И ВерсияМетаданных = "3.3.0.5" Тогда		
			СтрСообщения = "обновление информационной базы с версии " + ВерсияТекущая + " на версию " + ВерсияМетаданных;
			Сообщить("Выполняется " + СтрСообщения);
						
			Константы.НомерВерсииКонфигурации.Установить(ВерсияМетаданных);
			
			ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, , , "Выполнено " + СтрСообщения);
		КонецЕсли;
		
		ВерсияТекущая = Константы.НомерВерсииКонфигурации.Получить();
		ВерсияМетаданных = "3.3.0.6";
		Если ВерсияТекущая <> "" И ВерсияТекущая = "3.3.0.5" И ВерсияМетаданных = "3.3.0.6" Тогда		
			СтрСообщения = "обновление информационной базы с версии " + ВерсияТекущая + " на версию " + ВерсияМетаданных;
			Сообщить("Выполняется " + СтрСообщения);
						
			Константы.НомерВерсииКонфигурации.Установить(ВерсияМетаданных);
			
			ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, , , "Выполнено " + СтрСообщения);
		КонецЕсли;
		
		ВерсияТекущая = Константы.НомерВерсииКонфигурации.Получить();
		ВерсияМетаданных = "3.3.0.7";
		Если ВерсияТекущая <> "" И ВерсияТекущая = "3.3.0.6" И ВерсияМетаданных = "3.3.0.7" Тогда		
			СтрСообщения = "обновление информационной базы с версии " + ВерсияТекущая + " на версию " + ВерсияМетаданных;
			Сообщить("Выполняется " + СтрСообщения);
			
			Константы.НомерВерсииКонфигурации.Установить(ВерсияМетаданных);
			
			ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, , , "Выполнено " + СтрСообщения);
		КонецЕсли;
		
		ВерсияТекущая = Константы.НомерВерсииКонфигурации.Получить();
		ВерсияМетаданных = "3.3.0.8";
		Если ВерсияТекущая <> "" И ВерсияТекущая = "3.3.0.7" И ВерсияМетаданных = "3.3.0.8" Тогда		
			СтрСообщения = "обновление информационной базы с версии " + ВерсияТекущая + " на версию " + ВерсияМетаданных;
			Сообщить("Выполняется " + СтрСообщения);
			
			Константы.НомерВерсииКонфигурации.Установить(ВерсияМетаданных);
			
			ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, , , "Выполнено " + СтрСообщения);
		КонецЕсли;
		
		ВерсияТекущая = Константы.НомерВерсииКонфигурации.Получить();
		ВерсияМетаданных = "3.3.1.1";
		Если ВерсияТекущая <> "" И ВерсияТекущая = "3.3.0.8" И ВерсияМетаданных = "3.3.1.1" Тогда		
			СтрСообщения = "обновление информационной базы с версии " + ВерсияТекущая + " на версию " + ВерсияМетаданных;
			Сообщить("Выполняется " + СтрСообщения);
			
			Константы.НомерВерсииКонфигурации.Установить(ВерсияМетаданных);
			
			ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, , , "Выполнено " + СтрСообщения);
		КонецЕсли;
		
		ВерсияТекущая = Константы.НомерВерсииКонфигурации.Получить();
		ВерсияМетаданных = "3.3.1.2";
		Если ВерсияТекущая <> "" И ВерсияТекущая = "3.3.1.1" И ВерсияМетаданных = "3.3.1.2" Тогда		
			СтрСообщения = "обновление информационной базы с версии " + ВерсияТекущая + " на версию " + ВерсияМетаданных;
			Сообщить("Выполняется " + СтрСообщения);
			
			Константы.НомерВерсииКонфигурации.Установить(ВерсияМетаданных);
			
			ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, , , "Выполнено " + СтрСообщения);
		КонецЕсли;
		
		ВерсияТекущая = Константы.НомерВерсииКонфигурации.Получить();
		ВерсияМетаданных = "3.3.1.3";
		Если ВерсияТекущая <> "" И ВерсияТекущая = "3.3.1.2" И ВерсияМетаданных = "3.3.1.3" Тогда		
			СтрСообщения = "обновление информационной базы с версии " + ВерсияТекущая + " на версию " + ВерсияМетаданных;
			Сообщить("Выполняется " + СтрСообщения);
			
			Константы.НомерВерсииКонфигурации.Установить(ВерсияМетаданных);
			
			ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, , , "Выполнено " + СтрСообщения);
		КонецЕсли;
		
		ВерсияТекущая = Константы.НомерВерсииКонфигурации.Получить();
		ВерсияМетаданных = "3.3.1.4";
		Если ВерсияТекущая <> "" И ВерсияТекущая = "3.3.1.3" И ВерсияМетаданных = "3.3.1.4" Тогда		
			СтрСообщения = "обновление информационной базы с версии " + ВерсияТекущая + " на версию " + ВерсияМетаданных;
			Сообщить("Выполняется " + СтрСообщения);
			
			Константы.НомерВерсииКонфигурации.Установить(ВерсияМетаданных);
			
			ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, , , "Выполнено " + СтрСообщения);
		КонецЕсли;
		
		ВерсияТекущая = Константы.НомерВерсииКонфигурации.Получить();
		ВерсияМетаданных = "3.3.1.5";
		Если ВерсияТекущая <> "" И ВерсияТекущая = "3.3.1.4" И ВерсияМетаданных = "3.3.1.5" Тогда		
			СтрСообщения = "обновление информационной базы с версии " + ВерсияТекущая + " на версию " + ВерсияМетаданных;
			Сообщить("Выполняется " + СтрСообщения);
			
			Константы.НомерВерсииКонфигурации.Установить(ВерсияМетаданных);
			
			ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, , , "Выполнено " + СтрСообщения);
		КонецЕсли;
		
		ВерсияТекущая = Константы.НомерВерсииКонфигурации.Получить();
		ВерсияМетаданных = "3.3.1.6";
		Если ВерсияТекущая <> "" И ВерсияТекущая = "3.3.1.5" И ВерсияМетаданных = "3.3.1.6" Тогда		
			СтрСообщения = "обновление информационной базы с версии " + ВерсияТекущая + " на версию " + ВерсияМетаданных;
			Сообщить("Выполняется " + СтрСообщения);
			
			Константы.НомерВерсииКонфигурации.Установить(ВерсияМетаданных);
			
			ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, , , "Выполнено " + СтрСообщения);
		КонецЕсли;
		
		ВерсияТекущая = Константы.НомерВерсииКонфигурации.Получить();
		ВерсияМетаданных = "3.3.1.7";
		Если ВерсияТекущая <> "" И ВерсияТекущая = "3.3.1.6" И ВерсияМетаданных = "3.3.1.7" Тогда		
			СтрСообщения = "обновление информационной базы с версии " + ВерсияТекущая + " на версию " + ВерсияМетаданных;
			Сообщить("Выполняется " + СтрСообщения);
			
			Константы.НомерВерсииКонфигурации.Установить(ВерсияМетаданных);
			
			ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, , , "Выполнено " + СтрСообщения);
		КонецЕсли;
		
		ВерсияТекущая = Константы.НомерВерсииКонфигурации.Получить();
		ВерсияМетаданных = "3.3.1.8";
		Если ВерсияТекущая <> "" И ВерсияТекущая = "3.3.1.7" И ВерсияМетаданных = "3.3.1.8" Тогда		
			СтрСообщения = "обновление информационной базы с версии " + ВерсияТекущая + " на версию " + ВерсияМетаданных;
			Сообщить("Выполняется " + СтрСообщения);
			
			Константы.НомерВерсииКонфигурации.Установить(ВерсияМетаданных);
			
			ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, , , "Выполнено " + СтрСообщения);
		КонецЕсли;
		
		ВерсияТекущая = Константы.НомерВерсииКонфигурации.Получить();
		ВерсияМетаданных = "3.4.0.1";
		Если ВерсияТекущая <> "" И ВерсияТекущая = "3.3.1.8" И ВерсияМетаданных = "3.4.0.1" Тогда		
			СтрСообщения = "обновление информационной базы с версии " + ВерсияТекущая + " на версию " + ВерсияМетаданных;
			Сообщить("Выполняется " + СтрСообщения);
			
			//Константы.ГоризонтРасчетаНачисленийМикрозаймов.Установить(Перечисления.ВидыГоризонтаРасчета.ДоКонцаГода);
			//Константы.РасчетНачислений.Установить(Истина);
			
			Константы.НомерВерсииКонфигурации.Установить(ВерсияМетаданных);
			
			ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, , , "Выполнено " + СтрСообщения);
		КонецЕсли;		
		
		ВерсияТекущая = Константы.НомерВерсииКонфигурации.Получить();
		ВерсияМетаданных = "3.4.0.2";
		Если ВерсияТекущая <> "" И ВерсияТекущая = "3.4.0.1" И ВерсияМетаданных = "3.4.0.2" Тогда		
			СтрСообщения = "обновление информационной базы с версии " + ВерсияТекущая + " на версию " + ВерсияМетаданных;
			Сообщить("Выполняется " + СтрСообщения);
						
			Константы.НомерВерсииКонфигурации.Установить(ВерсияМетаданных);
			
			ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, , , "Выполнено " + СтрСообщения);
		КонецЕсли;		
		
		ВерсияТекущая = Константы.НомерВерсииКонфигурации.Получить();
		ВерсияМетаданных = "3.4.0.3";
		Если ВерсияТекущая <> "" И ВерсияТекущая = "3.4.0.2" И ВерсияМетаданных = "3.4.0.3" Тогда		
			СтрСообщения = "обновление информационной базы с версии " + ВерсияТекущая + " на версию " + ВерсияМетаданных;
			Сообщить("Выполняется " + СтрСообщения);
						
			Константы.НомерВерсииКонфигурации.Установить(ВерсияМетаданных);
			
			ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, , , "Выполнено " + СтрСообщения);
		КонецЕсли;	
		
		ВерсияТекущая = Константы.НомерВерсииКонфигурации.Получить();
		ВерсияМетаданных = "3.4.0.4";
		Если ВерсияТекущая <> "" И ВерсияТекущая = "3.4.0.3" И ВерсияМетаданных = "3.4.0.4" Тогда		
			СтрСообщения = "обновление информационной базы с версии " + ВерсияТекущая + " на версию " + ВерсияМетаданных;
			Сообщить("Выполняется " + СтрСообщения);
						
			Константы.НомерВерсииКонфигурации.Установить(ВерсияМетаданных);
			
			ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, , , "Выполнено " + СтрСообщения);
		КонецЕсли;		
		
		ВерсияТекущая = Константы.НомерВерсииКонфигурации.Получить();
		ВерсияМетаданных = "3.4.0.5";
		Если ВерсияТекущая <> "" И ВерсияТекущая = "3.4.0.4" И ВерсияМетаданных = "3.4.0.5" Тогда		
			СтрСообщения = "обновление информационной базы с версии " + ВерсияТекущая + " на версию " + ВерсияМетаданных;
			Сообщить("Выполняется " + СтрСообщения);
						
			Константы.НомерВерсииКонфигурации.Установить(ВерсияМетаданных);
			
			ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, , , "Выполнено " + СтрСообщения);
		КонецЕсли;	
		
		ВерсияТекущая = Константы.НомерВерсииКонфигурации.Получить();
		ВерсияМетаданных = "3.5.0.1";
		Если ВерсияТекущая <> "" И ВерсияТекущая = "3.4.0.5" И ВерсияМетаданных = "3.5.0.1" Тогда		
			СтрСообщения = "обновление информационной базы с версии " + ВерсияТекущая + " на версию " + ВерсияМетаданных;
			Сообщить("Выполняется " + СтрСообщения);
						
			Константы.НомерВерсииКонфигурации.Установить(ВерсияМетаданных);
			
			ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, , , "Выполнено " + СтрСообщения);
		КонецЕсли;	
		
		ВерсияТекущая = Константы.НомерВерсииКонфигурации.Получить();
		ВерсияМетаданных = "3.5.0.2";
		Если ВерсияТекущая <> "" И ВерсияТекущая = "3.5.0.1" И ВерсияМетаданных = "3.5.0.2" Тогда		
			СтрСообщения = "обновление информационной базы с версии " + ВерсияТекущая + " на версию " + ВерсияМетаданных;
			Сообщить("Выполняется " + СтрСообщения);
						
			Константы.НомерВерсииКонфигурации.Установить(ВерсияМетаданных);
			
			ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, , , "Выполнено " + СтрСообщения);
		КонецЕсли;	
		
		ВерсияТекущая = Константы.НомерВерсииКонфигурации.Получить();
		ВерсияМетаданных = "3.5.0.3";
		Если ВерсияТекущая <> "" И ВерсияТекущая = "3.5.0.2" И ВерсияМетаданных = "3.5.0.3" Тогда		
			СтрСообщения = "обновление информационной базы с версии " + ВерсияТекущая + " на версию " + ВерсияМетаданных;
			Сообщить("Выполняется " + СтрСообщения);
			
			Константы.НомерВерсииКонфигурации.Установить(ВерсияМетаданных);
			
			ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, , , "Выполнено " + СтрСообщения);
		КонецЕсли;
		
		ВерсияТекущая = Константы.НомерВерсииКонфигурации.Получить();
		ВерсияМетаданных = "3.5.0.4";
		Если ВерсияТекущая <> "" И ВерсияТекущая = "3.5.0.3" И ВерсияМетаданных = "3.5.0.4" Тогда		
			СтрСообщения = "обновление информационной базы с версии " + ВерсияТекущая + " на версию " + ВерсияМетаданных;
			Сообщить("Выполняется " + СтрСообщения);
			
			Константы.НомерВерсииКонфигурации.Установить(ВерсияМетаданных);
			
			ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, , , "Выполнено " + СтрСообщения);
		КонецЕсли;
		
		ВерсияТекущая = Константы.НомерВерсииКонфигурации.Получить();
		ВерсияМетаданных = "3.5.0.5";
		Если ВерсияТекущая <> "" И ВерсияТекущая = "3.5.0.4" И ВерсияМетаданных = "3.5.0.5" Тогда		
			СтрСообщения = "обновление информационной базы с версии " + ВерсияТекущая + " на версию " + ВерсияМетаданных;
			Сообщить("Выполняется " + СтрСообщения);
			
			Константы.НомерВерсииКонфигурации.Установить(ВерсияМетаданных);
			
			ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, , , "Выполнено " + СтрСообщения);
		КонецЕсли;
		
		ВерсияТекущая = Константы.НомерВерсииКонфигурации.Получить();
		ВерсияМетаданных = "3.5.0.6";
		Если ВерсияТекущая <> "" И ВерсияТекущая = "3.5.0.5" И ВерсияМетаданных = "3.5.0.6" Тогда		
			СтрСообщения = "обновление информационной базы с версии " + ВерсияТекущая + " на версию " + ВерсияМетаданных;
			Сообщить("Выполняется " + СтрСообщения);
			
			Константы.НомерВерсииКонфигурации.Установить(ВерсияМетаданных);
			
			ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, , , "Выполнено " + СтрСообщения);
		КонецЕсли;  
		
		ВерсияТекущая = Константы.НомерВерсииКонфигурации.Получить();
		ВерсияМетаданных = "3.5.1.18";
		Если ВерсияТекущая <> "" И ВерсияТекущая = "3.5.0.6" И ВерсияМетаданных = "3.5.1.18" Тогда		
			СтрСообщения = "обновление информационной базы с версии " + ВерсияТекущая + " на версию " + ВерсияМетаданных;
			Сообщить("Выполняется " + СтрСообщения);
			
			Константы.НомерВерсииКонфигурации.Установить(ВерсияМетаданных);
			
			ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, , , "Выполнено " + СтрСообщения);
		КонецЕсли;
		
		ВерсияТекущая = Константы.НомерВерсииКонфигурации.Получить();
		ВерсияМетаданных = "3.5.2.18";
		Если ВерсияТекущая <> "" И ВерсияТекущая = "3.5.1.18" И ВерсияМетаданных = "3.5.2.18" Тогда		
			СтрСообщения = "обновление информационной базы с версии " + ВерсияТекущая + " на версию " + ВерсияМетаданных;
			Сообщить("Выполняется " + СтрСообщения);
			
			Константы.НомерВерсииКонфигурации.Установить(ВерсияМетаданных);
			
			ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, , , "Выполнено " + СтрСообщения);
		КонецЕсли;
		
		ВерсияТекущая = Константы.НомерВерсииКонфигурации.Получить();
		ВерсияМетаданных = "3.5.3.18";
		Если ВерсияТекущая <> "" И ВерсияТекущая = "3.5.2.18" И ВерсияМетаданных = "3.5.3.18" Тогда		
			СтрСообщения = "обновление информационной базы с версии " + ВерсияТекущая + " на версию " + ВерсияМетаданных;
			Сообщить("Выполняется " + СтрСообщения);
			
			Константы.НомерВерсииКонфигурации.Установить(ВерсияМетаданных);
			
			ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, , , "Выполнено " + СтрСообщения);
		КонецЕсли;  
		
		ВерсияТекущая = Константы.НомерВерсииКонфигурации.Получить();
		ВерсияМетаданных = "3.5.4.18";
		Если ВерсияТекущая <> "" И ВерсияТекущая = "3.5.3.18" И ВерсияМетаданных = "3.5.4.18" Тогда		
			СтрСообщения = "обновление информационной базы с версии " + ВерсияТекущая + " на версию " + ВерсияМетаданных;
			Сообщить("Выполняется " + СтрСообщения);
			ОбъектыСервер.ФССП_РеквизитДатаВозбуждения();
			Константы.НомерВерсииКонфигурации.Установить(ВерсияМетаданных);	
			ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, , , "Выполнено " + СтрСообщения);
		КонецЕсли; 
		
		ВерсияТекущая = Константы.НомерВерсииКонфигурации.Получить();
		ВерсияМетаданных = "3.5.5.18";
		Если ВерсияТекущая <> "" И ВерсияТекущая = "3.5.4.18" И ВерсияМетаданных = "3.5.5.18" Тогда		
			СтрСообщения = "обновление информационной базы с версии " + ВерсияТекущая + " на версию " + ВерсияМетаданных;
			Сообщить("Выполняется " + СтрСообщения);
			Константы.НомерВерсииКонфигурации.Установить(ВерсияМетаданных);
			Константы.ИспользоватьСтандарныйУчетЗадолженности.Установить(Истина);
			ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, , , "Выполнено " + СтрСообщения);
		КонецЕсли;  
		
		ВерсияТекущая = Константы.НомерВерсииКонфигурации.Получить();
		ВерсияМетаданных = "3.6.1.18";
		Если ВерсияТекущая <> "" И ВерсияТекущая = "3.5.5.18" И ВерсияМетаданных = "3.6.1.18" Тогда		
			СтрСообщения = "обновление информационной базы с версии " + ВерсияТекущая + " на версию " + ВерсияМетаданных;
			Сообщить("Выполняется " + СтрСообщения);
			ОтправкаSMSПереопределяемый.ЗаполнитьНовыеНастройкиSMS4B();    
			Константы.ИспользоватьПрочиеВзаимодействия.Установить(Истина);
			Если ЗначениеЗаполнено(Константы.ЧасовойПояс.Получить()) Тогда
				КалендарныеГрафикиПереопределяемый.ЗаполнитьКалендарьПо230ФЗ();
			КонецЕсли;
			Константы.НомерВерсииКонфигурации.Установить(ВерсияМетаданных);
			Константы.ИспользоватьСтандарныйУчетЗадолженности.Установить(Истина);
			ЗаписьЖурналаРегистрации("ИнформационнаяБаза.ОбновлениеИБ", УровеньЖурналаРегистрации.Информация, , , "Выполнено " + СтрСообщения);
		КонецЕсли; 
         		
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ВыполнитьЗаменуХранилищУЭД()
	ВыборкаСправочников = Справочники.тсШаблоныПечатныхДокументов.Выбрать();
	Пока ВыборкаСправочников.Следующий() Цикл
		Справочник = ВыборкаСправочников.ПолучитьОбъект();
		Для Каждого Стр ИЗ Справочник.РеквизитыИСвойства Цикл
			МассивДанных = Стр.Хранилище.Получить();
			Стр.СтрокаХранилище = "";
			Для Каждого СтрМ Из МассивДанных Цикл
				Стр.СтрокаХранилище = Стр.СтрокаХранилище + "[" + СтрМ + "]";
			КонецЦикла;
		КонецЦикла;
		Попытка
			Справочник.Записать();
			Сообщить("Операция замены хранилища значений в справочнике " + Справочник.Наименование + " прошла успешно!");
		Исключение
			Сообщить("Операция замены хранилища значений в справочнике " + Справочник.Наименование + " прошла с ошибкой!");
		КонецПопытки;
	КонецЦикла;
КонецПроцедуры


&НаСервере
Процедура ЗаполнитьПредопределенныеДанные() Экспорт
	ЗаполнитьПредопределенныеДанныеДляВсехЭлементов("Справочники");
	ЗаполнитьПредопределенныеДанныеДляВсехЭлементов("ПланыВидовХарактеристик");
	ЗаполнитьПредопределенныеДанныеДляВсехЭлементов("Документы");
	ЗаполнитьПредопределенныеДанныеДляВсехЭлементов("БизнесПроцессы");
	ЗаполнитьПредопределенныеДанныеДляВсехЭлементов("Задачи");
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПредопределенныеДанныеДляВсехЭлементов(Имя)
	ТипОТ = Вычислить(Имя + ".ТипВсеСсылки()");	
	Для Каждого ЭлТип Из ТипОТ.Типы() Цикл 
		Попытка      
			Стр = Метаданные.НайтиПоТипу(ЭлТип).ПолноеИмя();
			Номер = Найти(Стр, ".");
			Выполнить(Имя + Сред(Стр, Номер) + ".ЗаполнитьПредопределенныеЭлементы();");
		Исключение
		КонецПопытки;
	КонецЦикла;	
КонецПроцедуры


&НаСервере
Функция ВычислитьСтаршуюВерсию(Версия1,Версия2)
	// 1. Первый уровень
	Номер_1 = Найти(Версия1, ".");
	Колво_1 = СтрДлина(Версия1);
	ПервыйУровень_Версия1 = Число(Лев(Версия1,Номер_1-1));
	
	Номер_2 = Найти(Версия2, ".");
	Колво_2 = СтрДлина(Версия2);
	ПервыйУровень_Версия2 = Число(Лев(Версия2,Номер_2-1));
	
	Если ПервыйУровень_Версия1>ПервыйУровень_Версия2 Тогда
		Возврат Версия1;
	ИначеЕсли ПервыйУровень_Версия1<ПервыйУровень_Версия2 Тогда
		Возврат Версия2;
	КонецЕсли;
	
	// 2. Второй уровень
	Версия1_2 = Прав(Версия1, Колво_1-Номер_1);
	Номер_1_2 = Найти(Версия1_2, ".");
	Колво_1_2 = СтрДлина(Версия1_2);
	ВторойУровень_Версия1 = Число(Лев(Версия1_2,Номер_1_2-1));
	
	Версия2_2 = Прав(Версия2, Колво_2-Номер_2);
	Номер_2_2 = Найти(Версия2_2, ".");
	Колво_2_2 = СтрДлина(Версия2_2);
	ВторойУровень_Версия2 = Число(Лев(Версия2_2,Номер_2_2-1));
	
	Если ВторойУровень_Версия1>ВторойУровень_Версия2 Тогда
		Возврат Версия1;
	ИначеЕсли ВторойУровень_Версия1<ВторойУровень_Версия2 Тогда
		Возврат Версия2;
	КонецЕсли;
	
	// 3. Третий Уровень
	Версия1_3 = Прав(Версия1_2, Колво_1_2-Номер_1_2);
	Номер_1_3 = Найти(Версия1_3, ".");
	Колво_1_3 = СтрДлина(Версия1_3);
	ТретийУровень_Версия1 = Число(Лев(Версия1_3,Номер_1_3-1));
	
	Версия2_3 = Прав(Версия2_2, Колво_2_2-Номер_2_2);
	Номер_2_3 = Найти(Версия2_3, ".");
	Колво_2_3 = СтрДлина(Версия2_3);
	ТретийУровень_Версия2 = Число(Лев(Версия2_3,Номер_2_3-1));
	
	Если ТретийУровень_Версия1>ТретийУровень_Версия2 Тогда
		Возврат Версия1;
	ИначеЕсли ТретийУровень_Версия1<ТретийУровень_Версия2 Тогда
		Возврат Версия2;
	КонецЕсли;
	
	// 4. Четвертый Уровень
	Версия1_4 = Прав(Версия1_3, Колво_1_3-Номер_1_3);
	Номер_1_4 = Найти(Версия1_4, ".");
	Колво_1_4 = СтрДлина(Версия1_4);
	ЧетвертыйУровень_Версия1 = Число(Версия1_4);
	
	Версия2_4 = Прав(Версия2_3, Колво_2_3-Номер_2_3);
	Номер_2_4 = Найти(Версия2_4, ".");
	Колво_2_4 = СтрДлина(Версия2_4);
	ЧетвертыйУровень_Версия2 = Число(Версия2_4);
	
	Если ЧетвертыйУровень_Версия1>ЧетвертыйУровень_Версия2 Тогда
		Возврат Версия1;
	ИначеЕсли ЧетвертыйУровень_Версия1<ЧетвертыйУровень_Версия2 Тогда
		Возврат Версия2;
	ИначеЕсли ЧетвертыйУровень_Версия1=ЧетвертыйУровень_Версия2 Тогда	
		Возврат "Равны";
	Иначе 
		Возврат "Ошибка";
	КонецЕсли;
КонецФункции

&НаСервере
Процедура ОбновитьСправочник_тсВидыПечатныхДокументов()
	ВыборкаСправочников = Справочники.тсВидыПечатныхДокументов.Выбрать();
	Пока ВыборкаСправочников.Следующий() Цикл
		Если ВыборкаСправочников.ОткрыватьПослеФормирования = Ложь Тогда
			Справочник = ВыборкаСправочников.ПолучитьОбъект();
			Справочник.ОткрыватьПослеФормирования = Истина;
			Попытка
				Справочник.Записать();
			Исключение
			КонецПопытки;
		КонецЕсли;
	КонецЦикла;			
КонецПроцедуры

&НаСервере
Процедура ОбновитьНастройкиСоответствий() Экспорт
 	Запрос = Новый Запрос("ВЫБРАТЬ
 	                      |	ФорматыЗагрузки.Ссылка
 	                      |ИЗ
 	                      |	Справочник.ФорматыЗагрузки КАК ФорматыЗагрузки");	
	Результат = Запрос.Выполнить().Выбрать();
	Пока Результат.Следующий() Цикл
		ФорматОбъект = Результат.Ссылка.ПолучитьОбъект();
		Для Каждого Строка ИЗ ФорматОбъект.ВыборСоответствий Цикл
			Если ТипЗнч(Строка.ИмяДанных) = Тип("ПланВидовХарактеристикСсылка.ДополнительныеРеквизитыИСведения") Тогда
				Строка.ИмяКолонки = "_" + СтрЗаменить(Строка.ИмяДанных.Код, " ", "_");
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;	
	
	Запрос = Новый Запрос("ВЫБРАТЬ
 	                      |	ЗагрузкаДанных.Ссылка
 	                      |ИЗ
 	                      |	Документ.ЗагрузкаДанных КАК ЗагрузкаДанных");	
	Результат = Запрос.Выполнить().Выбрать();
	Пока Результат.Следующий() Цикл
		Документ = Результат.Ссылка.ПолучитьОбъект();
		Для Каждого Строка ИЗ Документ.ВыборСоответствий Цикл
			Если ТипЗнч(Строка.ИмяДанных) = Тип("ПланВидовХарактеристикСсылка.ДополнительныеРеквизитыИСведения") Тогда
				Строка.ИмяКолонки = "_" + СтрЗаменить(Строка.ИмяДанных.Код, " ", "_");
			КонецЕсли;
		КонецЦикла;
		//док = Документы.ЗагрузкаДанных.СоздатьДокумент();
	    
		документ.Записать(РежимЗаписиДокумента.Запись);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура УстановитьПоДляПечати()
	Константы.ТипШаблонаДляПечати.Установить(Перечисления.ТипыЭлДок.Word);	
КонецПроцедуры

&НаСервере
Процедура УстановитьПередающихСотрудниковНастройкиАвтораспределения()
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	РаспределениеПоСотрудникам.Ссылка КАК Ссылка
	                      |ИЗ
	                      |	Справочник.РаспределениеПоСотрудникам КАК РаспределениеПоСотрудникам
	                      |ГДЕ
	                      |	РаспределениеПоСотрудникам.СпособРаспределения = &СпособРаспределения");
	Запрос.УстановитьПараметр("СпособРаспределения", Перечисления.СпособыРаспределения.АктПередачи);
	Результат = Запрос.Выполнить().Выбрать();
	Пока Результат.Следующий() Цикл
		СправочникОбъект = Результат.Ссылка.ПолучитьОбъект();
		СправочникОбъект.ПользовательПередающий = СправочникОбъект.Пользователь;
		СправочникОбъект.ТипСотрудникаПередающего = СправочникОбъект.ТипСотрудника;
		СправочникОбъект.Записать();
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура КонвертацияТелефонныхНомеров()
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	КонтрагентыТелефоны.Ссылка КАК Ссылка,
	                      |	КонтрагентыТелефоны.НомерСтроки КАК НомерСтроки,
	                      |	КонтрагентыТелефоны.Номер КАК Номер
	                      |ИЗ
	                      |	Справочник.Контрагенты.Телефоны КАК КонтрагентыТелефоны
	                      |ГДЕ
	                      |	КонтрагентыТелефоны.Ссылка.ПометкаУдаления = ЛОЖЬ
	                      |	И КонтрагентыТелефоны.НомерДляПоиска = """"");
	Результат = Запрос.Выполнить().Выбрать();
	Пока Результат.Следующий() Цикл
		Должник = Результат.Ссылка.ПолучитьОбъект();
		НайденнаяСтрока = Должник.Телефоны[Результат.НомерСтроки - 1];
		УдалитьУправлениеКонтактнойИнформацией.РазбитьНомерТелефонаНаСоставляющие(НайденнаяСтрока, Результат.Номер);
		Должник.Записать();
	КонецЦикла;
КонецПроцедуры