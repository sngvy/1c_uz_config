
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	СтрокаМероприятияОтбор = Мероприятия.Отбор;
	СтрокаДООтбор = СписокДО.Отбор;
	
	//ЗаполнитьДерево();
	//
	//Элементы.Дерево.ТекущаяСтрока = НайтиЭлементВДереве(Дерево.ПолучитьЭлементы(), ПараметрыСеанса.ТекущийПользователь); 
	
	//
//	СписокДО.Параметры.УстановитьЗначениеПараметра("Организация", Неопределено); 		
//	СписокДО.Параметры.УстановитьЗначениеПараметра("Подразделение", Неопределено); 		
//	СписокДО.Параметры.УстановитьЗначениеПараметра("Сотрудник", Неопределено);
////	СписокДО.Параметры.УстановитьЗначениеПараметра("СотрудникИзмененные", УдалитьОбщегоНазначения.ТекущийПользователь());
//	Мероприятия.Параметры.УстановитьЗначениеПараметра("Объект", Неопределено); 			
//	События.Параметры.УстановитьЗначениеПараметра("Объект", Неопределено); 
//	Категории.Параметры.УстановитьЗначениеПараметра("Объект", Неопределено); 	
	
	//Установить отбор в Сообщения
	Поле = Сообщения.Параметры.Элементы.Найти("Сотрудник");
	Поле.Значение = УдалитьОбщегоНазначения.ТекущийПользователь();
	Поле.Использование = Истина;	
	
	//Установить отбор в Сообщения1
	Поле = Сообщения1.Параметры.Элементы.Найти("Сотрудник");
	Поле.Значение = УдалитьОбщегоНазначения.ТекущийПользователь();
	Поле.Использование = Истина;	
	
	//Установить отбор в списке входящих
	СписокВходящих.КомпоновщикНастроек.Настройки.Отбор.Элементы[0].ПравоеЗначение = ПараметрыСеанса.ТекущийПользователь;
	
	//Установить отбор в списке исходящих
	СписокВходящих.КомпоновщикНастроек.Настройки.Отбор.Элементы[0].ПравоеЗначение = ПараметрыСеанса.ТекущийПользователь;	
КонецПроцедуры

&НаСервере
Функция НайтиЭлементВДереве(ЭлементДерева, Значение)
	Результат = -1;
	Для Каждого Элемент Из ЭлементДерева Цикл
		Если Элемент.Ссылка = Значение Тогда
			Результат = Элемент.ПолучитьИдентификатор();
			Прервать;
		Иначе
			Результат = НайтиЭлементВДереве(Элемент.ПолучитьЭлементы(), Значение);
			Если Результат > -1 Тогда
				Прервать;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Возврат Результат;
КонецФункции

&НаСервере
Процедура ЗаполнитьДерево()
	//Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 2
	//                      |	Организации.Ссылка
	//                      |ИЗ
	//                      |	Справочник.Организации КАК Организации");
	//Если Запрос.Выполнить().Выгрузить().Количество() > 1 Тогда
	//	//добавляем корневой элемент
	//	Корень = Дерево.ПолучитьЭлементы().Добавить();
	//	Корень.Ссылка = "Все организации";
	//	Корень = Корень.ПолучитьЭлементы();
	//Иначе
	//	Корень = Дерево.ПолучитьЭлементы();
	//КонецЕсли;
	//
	////
	//Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	//               |	Организации.Ссылка КАК Организация,
	//               |	ЕСТЬNULL(ПодразделенияОрганизаций.Ссылка, НЕОПРЕДЕЛЕНО) КАК Подразделение,
	//               |	ЕСТЬNULL(Пользователи.Ссылка, НЕОПРЕДЕЛЕНО) КАК Пользователь,
	//               |	ЕСТЬNULL(Пользователи.Отдел, НЕОПРЕДЕЛЕНО) КАК Отдел
	//               |ИЗ
	//               |	Справочник.Организации КАК Организации
	//               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
	//               |			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Пользователи КАК Пользователи
	//               |			ПО (Пользователи.Подразделение = ПодразделенияОрганизаций.Ссылка)
	//               |				И ((НЕ Пользователи.Уволен))
	//               |		ПО (ПодразделенияОрганизаций.Владелец = Организации.Ссылка)
	//               |
	//               |УПОРЯДОЧИТЬ ПО
	//               |	Организации.Наименование,
	//               |	ПодразделенияОрганизаций.Наименование,
	//               |	Пользователи.Отдел.Наименование,
	//               |	Пользователи.Наименование";
	//Результат = Запрос.Выполнить().Выбрать();
	//ТекОрг = Неопределено;  
	//ТекПодр = Неопределено;
	//ТекОтд = Неопределено;
	//КореньОрг = Неопределено;
	//КореньПодр = Неопределено;
	//КореньОтд = Неопределено;
	//Пока Результат.Следующий() Цикл
	//	Если ТекОрг <> Результат.Организация Тогда		
	//		КореньОрг = Корень.Добавить();
	//		ТекОрг = Результат.Организация;
	//		КореньОрг.Ссылка = ТекОрг;
	//		КореньОрг = КореньОрг.ПолучитьЭлементы();
	//		
	//		ТекПодр = Неопределено;
	//		ТекОтд = Неопределено;
	//		КореньПодр = Неопределено;
	//		КореньОтд = Неопределено;
	//	КонецЕсли;
	//	
	//	Если ТекПодр <> Результат.Подразделение Тогда	
	//		КореньПодр = КореньОрг.Добавить();
	//		ТекПодр = Результат.Подразделение;
	//		КореньПодр.Ссылка = ТекПодр;
	//		КореньПодр = КореньПодр.ПолучитьЭлементы();
	//		
	//		ТекОтд = Неопределено;
	//		КореньОтд = Неопределено;
	//	КонецЕсли;
	//	
	//	Если ТекОтд <> Результат.Отдел И Не Результат.Отдел.Пустая() Тогда	
	//		КореньОтд = КореньПодр.Добавить();
	//		ТекОтд = Результат.Отдел;
	//		КореньОтд.Ссылка = ТекОтд;
	//		КореньОтд = КореньОтд.ПолучитьЭлементы();
	//	КонецЕсли;
	//	
	//	Если Результат.Пользователь <> Неопределено Тогда
	//		Если Результат.Отдел.Пустая() Тогда
	//			КореньПодр.Добавить().Ссылка = Результат.Пользователь;
	//		Иначе
	//			КореньОтд.Добавить().Ссылка = Результат.Пользователь;
	//		КонецЕсли;
	//	КонецЕсли;
	//КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоПриАктивизацииСтроки(Элемент)
	
	//Отбор_ДО();
	Элементы.СписокДО.Обновить();
	
	Отбор_Мероприятия();
	Отбор_События();
	Отбор_Категории();
	
КонецПроцедуры

&НаКлиенте
Процедура Отбор_ДО()
	
	Если Элементы.Дерево.ТекущиеДанные <> Неопределено Тогда
		Ссылка = Элементы.Дерево.ТекущиеДанные.Ссылка;			
		
		// Организация
		Если ТипЗнч(Ссылка) = Тип("СправочникСсылка.Организации") Тогда
			СписокДО.Параметры.УстановитьЗначениеПараметра("Организация", Ссылка); 		
			СписокДО.Параметры.УстановитьЗначениеПараметра("Подразделение", ПредопределенноеЗначение("Справочник.ПодразделенияОрганизаций.ПустаяСсылка")); 		
			СписокДО.Параметры.УстановитьЗначениеПараметра("Сотрудник", ПредопределенноеЗначение("Справочник.Пользователи.ПустаяСсылка")); 		
			
			// Подразделение
		ИначеЕсли ТипЗнч(Ссылка) = Тип("СправочникСсылка.ПодразделенияОрганизаций") Тогда
			СписокДО.Параметры.УстановитьЗначениеПараметра("Организация", Неопределено); 		
			СписокДО.Параметры.УстановитьЗначениеПараметра("Подразделение", Ссылка); 		
			СписокДО.Параметры.УстановитьЗначениеПараметра("Сотрудник", ПредопределенноеЗначение("Справочник.Пользователи.ПустаяСсылка")); 		

			// Сотрудник
		ИначеЕсли ТипЗнч(Ссылка) = Тип("СправочникСсылка.Пользователи") Тогда
			
			СписокДО.Параметры.УстановитьЗначениеПараметра("Организация", Неопределено); 		
			СписокДО.Параметры.УстановитьЗначениеПараметра("Подразделение", Неопределено); 		
			СписокДО.Параметры.УстановитьЗначениеПараметра("Сотрудник", Ссылка); 		
			
			// Отделы
		ИначеЕсли ТипЗнч(Ссылка) = Тип("СправочникСсылка.Отделы") Тогда
			//!!! пока работает как подразделение
			Ссылка = ОбъектыСервер.РазыменоватьСсылку(Ссылка, "Владелец");
			СписокДО.Параметры.УстановитьЗначениеПараметра("Организация", Неопределено); 		
			СписокДО.Параметры.УстановитьЗначениеПараметра("Подразделение", Ссылка); 		
			СписокДО.Параметры.УстановитьЗначениеПараметра("Сотрудник", ПредопределенноеЗначение("Справочник.Пользователи.ПустаяСсылка")); 		
			
		ИначеЕсли Ссылка = "Все организации" Тогда
		КонецЕсли;
	Иначе
		СписокДО.Параметры.УстановитьЗначениеПараметра("Организация", Неопределено); 		
		СписокДО.Параметры.УстановитьЗначениеПараметра("Подразделение", Неопределено); 		
		СписокДО.Параметры.УстановитьЗначениеПараметра("Сотрудник", Неопределено); 		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Отбор_Мероприятия()
	
	// ДО
	Если Элементы.СписокДО.ТекущиеДанные <> Неопределено Тогда
		ТекущееДО = Элементы.СписокДО.ТекущиеДанные.Объект;
		МассивОбъектов = ПолучитьМассивИсполнительныхДокументов(ТекущееДО);
	Иначе
		МассивОбъектов = Неопределено;
	КонецЕсли;
	Мероприятия.Параметры.УстановитьЗначениеПараметра("Объект", МассивОбъектов); 			
	
КонецПроцедуры

&НаКлиенте
Процедура Отбор_События()

	ТекущееДО = Неопределено;
	Если Элементы.СписокДО.ТекущиеДанные <> Неопределено Тогда
		ТекущееДО = Элементы.СписокДО.ТекущиеДанные.Объект;
	КонецЕсли;
	События.Параметры.УстановитьЗначениеПараметра("Объект", ТекущееДО); 			
	
КонецПроцедуры

&НаКлиенте
Процедура Отбор_Категории()
	
	ТекущееДО = Неопределено;
	Если Элементы.СписокДО.ТекущиеДанные <> Неопределено Тогда
		ТекущееДО = Элементы.СписокДО.ТекущиеДанные.Объект;
	КонецЕсли;
	Категории.Параметры.УстановитьЗначениеПараметра("Объект", ТекущееДО); 			
	
КонецПроцедуры

&НаКлиенте
Процедура МероприятияОтборПриИзменении(Элемент)
	СтрокаМероприятияОтбор = Мероприятия.Отбор;
КонецПроцедуры

&НаКлиенте
Процедура МероприятияОтборПриАктивизацииПоля(Элемент)
	СтрокаМероприятияОтбор = Мероприятия.Отбор;
КонецПроцедуры

&НаКлиенте
Процедура СписокДООтборПриИзменении(Элемент)
	ЧтобыКирпичНеВыскакивал();
КонецПроцедуры

&НаКлиенте
Процедура СписокДООтборПриАктивизацииПоля(Элемент)
	ЧтобыКирпичНеВыскакивал();	
КонецПроцедуры

&НаКлиенте
Процедура СписокДООтборПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	ЧтобыКирпичНеВыскакивал();	
КонецПроцедуры

&НаКлиенте
Процедура ЧтобыКирпичНеВыскакивал()
	СтрокаДООтбор = СписокДО.Отбор;
	ВсеЭлементы = СписокДО.Отбор.Элементы;
	Для Каждого Эл Из ВсеЭлементы Цикл
		Попытка
			Если Не ЗначениеЗаполнено(Строка(Эл.ЛевоеЗначение)) Тогда
				Эл.Использование = Ложь; 
			КонецЕсли;
		Исключение
		КонецПопытки;
		Попытка
			Если ЗначениеЗаполнено(Эл.ТипГруппы)  Тогда
				Эл.Использование = Истина; 
			КонецЕсли;
		Исключение
		КонецПопытки;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СписокДОПриАктивизацииСтроки(Элемент)
	
	//Отбор_Мероприятия();
	ДеревоПриАктивизацииСтроки(Элемент);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьМассивИсполнительныхДокументов(ДО)
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ИсполнительныеДокументы.Ссылка
	                      |ИЗ
	                      |	Справочник.ИсполнительныеДокументы КАК ИсполнительныеДокументы
	                      |ГДЕ
	                      |	ИсполнительныеДокументы.Владелец = &ДО");
	Запрос.УстановитьПараметр("ДО", ДО);
	Массив = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	Массив.Добавить(ДО);
	Возврат Массив;
КонецФункции

&НаКлиенте
Процедура СписокДОВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	#Если ВебКлиент Тогда
		СтандартнаяОбработка = Ложь;      
		Попытка
			ПоказатьЗначение(,Элемент.ТекущиеДанные[Сред(Поле.Имя, 9)]);	
			//ОткрытьЗначение(Элемент.ТекущиеДанные[Сред(Поле.Имя, 9)]);
		Исключение
			ПоказатьЗначение(,Элемент.ТекущиеДанные.Объект);	
			//ОткрытьЗначение(Элемент.ТекущиеДанные.Объект);
		КонецПопытки;
	#Иначе	
		
		СтандартнаяОбработка = Ложь;      
		Попытка
			//++ Чуров А.И.
			//ПоказатьЗначение(,Элемент.ТекущиеДанные[Сред(Поле.Имя, 9)]);	
			ОткрытьЗначение(Элемент.ТекущиеДанные[Сред(Поле.Имя, 9)]);
			//
		Исключение
			//++ Чуров А.И.
			//ПоказатьЗначение(,Элемент.ТекущиеДанные.Объект);	
			ОткрытьЗначение(Элемент.ТекущиеДанные.Объект);
			//
		КонецПопытки;
	#КонецЕсли
КонецПроцедуры

&НаКлиенте
Процедура МероприятияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	//СтандартнаяОбработка = Ложь;
	//ОткрытьЗначение(Элемент.ТекущиеДанные[Сред(Поле.Имя, 12)]);
КонецПроцедуры

&НаКлиенте
Процедура ДеревоВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	#Если ВебКлиент Тогда
		СтандартнаяОбработка = Ложь;
		Если Элементы.Дерево.ТекущиеДанные <> Неопределено Тогда 
			ПоказатьЗначение(,Элементы.Дерево.ТекущиеДанные.Ссылка);
		КонецЕсли;
	#КонецЕсли
	
	СтандартнаяОбработка = Ложь;
	Если Элементы.Дерево.ТекущиеДанные <> Неопределено Тогда 
		ОткрытьЗначение(Элементы.Дерево.ТекущиеДанные.Ссылка);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Отладка(Команда)
	ОтладкаНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОтладкаНаСервере()
	Результат = Справочники.Контрагенты.Выбрать();
	Пока Результат.Следующий() Цикл 
		Об = Результат.Ссылка.ПолучитьОбъект();
		Об.УстановитьПометкуУдаления(Истина);
	КонецЦикла;
КонецПроцедуры

//Отбор
&НаКлиенте
Процедура ДобавитьЭлементВМассив(Массив, ЭлементыДерева)
	Для Каждого Элемент Из ЭлементыДерева Цикл	   
		Если ТипЗнч(Элемент) = Тип("ЭлементОтбораКомпоновкиДанных") Тогда 
			Стр = Новый Структура("ВидСравнения, Использование, Поле, Значение, Значение2, РасшифровкаПоля, ТипПоля", 
					Элемент.ВидСравнения, Элемент.Использование, Элемент.ЛевоеЗначение, Элемент.ПравоеЗначение, Элемент.ПравоеЗначение,
					"", ?(ТипЗнч(Элемент.ПравоеЗначение)=Тип("СписокЗначений"),Элемент.ПравоеЗначение.ТипЗначения,ТипЗнч(Элемент.ПравоеЗначение))); //
		ИначеЕсли ТипЗнч(Элемент) = Тип("ГруппаЭлементовОтбораКомпоновкиДанных") Тогда
			Стр = Новый Структура("Использование, Поле, Элементы", Элемент.Использование, Элемент.ТипГруппы, Новый Массив());			
			ДобавитьЭлементВМассив(Стр.Элементы, Элемент.Элементы);					
		КонецЕсли;
		Массив.Добавить(Стр);
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьЭлементВОтбор(Массив, ЭлементыДерева)
	Для Каждого Элемент Из Массив Цикл
		Если ТипЗнч(Элемент.Поле) = Тип("ПолеКомпоновкиДанных") Тогда
			Нов = ЭлементыДерева.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			Нов.ВидСравнения    = Элемент.ВидСравнения;
			Нов.Использование   = Элемент.Использование; 				
			Нов.ПравоеЗначение        = Элемент.Значение;
			Нов.ЛевоеЗначение            = Элемент.Поле;
			//Нов.РасшифровкаПоля = Элемент.РасшифровкаПоля; 
			//Нов.ТипПоля         = Элемент.ТипПоля;
					
		ИначеЕсли ТипЗнч(Элемент.Поле) = Тип("ТипГруппыЭлементовОтбораКомпоновкиДанных") Тогда
			Нов = ЭлементыДерева.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных")); 
			Нов.Использование = Элемент.Использование; 
			Нов.ТипГруппы          = Элемент.Поле;
			ДобавитьЭлементВОтбор(Элемент.Элементы, Нов.Элементы);			
		КонецЕсли; 
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура НастройкаПодборПриИзменении(Элемент)
	Если НастройкаПодбор.Пустая() Тогда
		Отбор = СписокДО.Отбор.Элементы;
		Отбор.Очистить();
		
		//Условие_Организация = Отбор.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		//Условие_Организация.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Организация");
		//Условие_Организация.ПравоеЗначение = ПредопределенноеЗначение("Справочник.Организации.ПустаяСсылка");
		//Условие_Организация.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		//Условие_Организация.Использование = Истина;
		//
		//Условие_Подразделения = Отбор.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		//Условие_Подразделения.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Подразделение");
		//Условие_Подразделения.ПравоеЗначение = ПредопределенноеЗначение("Справочник.ПодразделенияОрганизаций.ПустаяСсылка");
		//Условие_Подразделения.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		//Условие_Подразделения.Использование = Истина;

		//Условие_Сотрудник = Отбор.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		//Условие_Сотрудник.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Сотрудник");
		//Условие_Сотрудник.ПравоеЗначение = ПредопределенноеЗначение("Справочник.Пользователи.ПустаяСсылка");
		//Условие_Сотрудник.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		//Условие_Сотрудник.Использование = Истина;
		
	Иначе	
		Массив = ОбъектыСервер.РазыменоватьСсылку(НастройкаПодбор, "Настройка.Получить()");
		Если Массив <> Неопределено Тогда
			СписокДО.Отбор.Элементы.Очистить();
			ДобавитьЭлементВОтбор(Массив, СписокДО.Отбор.Элементы);						
		КонецЕсли;
	КонецЕсли;
	СтрокаДООтбор = СписокДО.Отбор;
	ДеревоПриАктивизацииСтроки(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура СоздатьНовыйОтбор(Команда)
	Массив = Новый Массив();
	Отбор = СписокДО.Отбор;
	ДобавитьЭлементВМассив(Массив, Отбор.Элементы);
	Форма = ПолучитьФорму("Справочник.НастройкиПодборДО.Форма.ФормаЭлемента", Новый Структура("Настройка", Массив), 
			ЭтаФорма);
	Форма.Объект.Назначение = ПредопределенноеЗначение("Перечисление.НазначениеНастроекОтбора.РабочийСтолДО");
	Если Элементы.Дерево.ТекущиеДанные <> Неопределено И 
			ТипЗнч(Элементы.Дерево.ТекущиеДанные.Ссылка) = Тип("СправочникСсылка.Пользователи") Тогда
		Форма.Объект.Пользователь = Элементы.Дерево.ТекущиеДанные.Ссылка;
	КонецЕсли;	
	
	//Чуров
	//ОткрытьФорму(форма);	
	#Если ВебКлиент Тогда
		ОткрытьФорму(Форма);
	#Иначе
		Форма.ОткрытьМодально();
	#КонецЕсли
	Если Не Форма.Объект.Ссылка.Пустая() Тогда
		НастройкаПодбор = Форма.Объект.Ссылка;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьИзмененияОтбора(Команда)
	Если Не НастройкаПодбор.Пустая() Тогда
		Массив = Новый Массив();
		Отбор = СписокДО.Отбор;
		ДобавитьЭлементВМассив(Массив, Отбор.Элементы);
		СохранитьОтборы_НаСервере(Массив);
	Иначе
		Сообщить("Не выбран элемент отбора!");
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура СохранитьОтборы_НаСервере(Массив)
	НастройкаПодбор_Объект = НастройкаПодбор.ПолучитьОбъект();
	НастройкаПодбор_Объект.Назначение = ПредопределенноеЗначение("Перечисление.НазначениеНастроекОтбора.РабочийСтолДО");
	НастройкаПодбор_Объект.ЗаписатьСодержимоеХранилища(Новый ХранилищеЗначения(Массив));
	НастройкаПодбор_Объект.Записать();	
КонецПроцедуры

&НаКлиенте
Процедура ПозвонитьДолжнику(Команда)
	Если Элементы.СписокДО.ТекущиеДанные <> Неопределено Тогда
		К = ПолучитьОбъектЗвонка(Элементы.СписокДО.ТекущиеДанные.Объект);
		Если ТипЗнч(К) = Тип("СправочникСсылка.ДолговыеОбязательства") Тогда
			Контрагент = ПолучитьДолжника(К);
		Иначе
			Контрагент = К;
		КонецЕсли;
		ФормаВыбораНомера = ПолучитьФорму("ОбщаяФорма.ФормаВыбораТелефонногоНомера");	
		ФормаВыбораНомера.Контрагент = Контрагент;
		//Чуров
		РезультатНомер = ОткрытьФорму(ФормаВыбораНомера);
		//РезультатНомер = ФормаВыбораНомера.ОткрытьМодально();
		
		Ф = ПолучитьФорму("Обработка.бтБИТфон.форма");
		Ф.НомерЛиния1 = РезультатНомер;
				
		НоваяЗадача = ПолучитьФорму("Задача.Мероприятие.ФормаОбъекта");
		НоваяЗадача.Объект.Объект = К;
		НоваяЗадача.Объект.ТипМероприятия = ПредопределенноеЗначение("Справочник.ТипыМероприятий.ТелефонныйЗвонокИсходящий");
		НоваяЗадача.Объект.Контакт = РезультатНомер;
		НоваяЗадача.КонтрагентКЛ = Контрагент;
		//Чуров
		ОткрытьФорму(НоваяЗадача);	
		//НоваяЗадача.Открыть();	
		//Чуров
		ОткрытьФорму(Ф);
		//Ф.Открыть();

	КонецЕсли;	
КонецПроцедуры

&НаСервере
Функция ПолучитьОбъектЗвонка(Об)
	Если Не Константы.ДетализацияПоКА.Получить() Тогда
		Возврат Об;
	Иначе
		Возврат Об.Должник;
	КонецЕсли;
КонецФункции

&НаСервере
Функция ПолучитьДолжника(Об)
	Возврат Об.Должник;
КонецФункции

