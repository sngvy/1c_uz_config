

#Область Интерфейс

// По Полному имени файла, проверяет его наличие и выделяет Полное имя
Функция Создать(ПолноеИмя) Экспорт

	Файл = Новый Файл(ПолноеИмя);
	Если Не Файл.Существует() ИЛИ Файл.ЭтоКаталог() Тогда
	
		ВызватьИсключение ИсключениеНетФайла(ПолноеИмя);
	
	КонецЕсли;
	
	Данные = Новый Структура;
	Данные.Вставить("ПолноеИмя", Файл.ПолноеИмя);
	Данные.Вставить("Файл", Файл);
	
	Возврат Данные;

КонецФункции // ()

// По типу файла, подготавливает диалог для пользователя
Функция Выбрать(ТипФайла) Экспорт

	ПараметрыДиалога = Новый ПараметрыДиалогаПомещенияФайлов;
	ПараметрыДиалога.Фильтр = УправлениеФайловаяСистема.ПолучитьФильтр(ТипФайла);
	
	ПараметрыДиалога.МножественныйВыбор = Ложь;
	ПараметрыДиалога.Заголовок = "Выберете " + Строка(ТипФайла);
	
	Данные = Новый Структура;
	Данные.Вставить("Диалог", ПараметрыДиалога);
	
	Возврат Данные;

КонецФункции // ()

// Возвращает Обещание по переданным данным: Тип - ОписаниеФайла
Асинх Функция ПоместитьВХранилище(Данные, УИДФормы) Экспорт

	УказательНаФайл = Неопределено;
	Результат = Данные.Свойство("Диалог", УказательНаФайл);
	Если Не Результат Тогда
	
		Результат = Данные.Свойство("ПолноеИмя", УказательНаФайл);
	
	КонецЕсли;
	
	Если Не Результат Тогда
	
		ВызватьИсключение ИсключениеНекорректныеДанныеПомещения(Данные);
	
	КонецЕсли;
	
	ОписаниеОповещенияОХодеВыполнения = ОписаниеХодаВыполнения();
	ОписаниеОповещенияПередНачалом = ОписаниеОНачалеВыполнения();
	
	ОбещаниеФайла = ПоместитьФайлНаСерверАсинх(
		ОписаниеОповещенияОХодеВыполнения,
		ОписаниеОповещенияПередНачалом,
		,
		УказательНаФайл,
		УИДФормы
	);
	
	Возврат ОбещаниеФайла;

КонецФункции // ()

// Комбинация Выбрать с ПоместитьВХранилище для Табличного документа
Асинх Функция ВыбратьИПоместитьНаСерверТабличныйДокумент(ИдентификаторФормы) Экспорт

	ТипФайла = ПредопределенноеЗначение("Перечисление.ТипыФайловДляВыбора.ТабличныйДокумент");
	Возврат ВыбратьИПоместитьНаСерверФайл(ТипФайла, ИдентификаторФормы);

КонецФункции // ()

// Комбинация Выбрать с ПоместитьВХранилище для Файла базы данных
Асинх Функция ВыбратьИПоместитьНаСерверФайлБазыДанных(ИдентификаторФормы) Экспорт

	ТипФайла = ПредопределенноеЗначение("Перечисление.ТипыФайловДляВыбора.ФайлБазыДанных");
	Возврат ВыбратьИПоместитьНаСерверФайл(ТипФайла, ИдентификаторФормы);

КонецФункции // ()

#КонецОбласти

#Область Технический

Асинх Функция ВыбратьИПоместитьНаСерверФайл(ТипФайла, ИдентификаторФормы)

	ЧитаемыйФайл = Выбрать(ТипФайла);
	Попытка
	
		ОписаниеФайла = ПоместитьВХранилище(ЧитаемыйФайл, ИдентификаторФормы);
	
	Исключение
		ВызватьИсключение "Не удалось поместить файл на сервер: " + ОписаниеОшибки();
	КонецПопытки;
	
	Возврат ОписаниеФайла;

КонецФункции // ()

#КонецОбласти

#Область Оповещения

Функция ОписаниеХодаВыполнения()

	Возврат Новый ОписаниеОповещения(
		"ОтображениеПомещения",
		УправлениеЧтениеФайловКлиент,
		,
		"ОшибкаВПроцессеПомещения",
		УправлениеЧтениеФайловКлиент
	);

КонецФункции // ()

#Область ТехническийХодВыполнения

Функция ОтображениеПомещения(ПомещаемыйФайл, Помещено, ОтказОтПомещенияФайла, ДополнительныеПараметры) Экспорт

	Состояние(
		"Прогрес передачи файла на сервер",
		Помещено,
		"Загружается файл: " + ПомещаемыйФайл["Имя"],
		БиблиотекаКартинок.бит_Запись
	);

КонецФункции // ()

Функция ОшибкаВПроцессеПомещения(ИнформацияОбОшибке, СтандартнаяОбработка, ДополнительныеПараметры) Экспорт

	Состояние(
		"Прогрес передачи файла на сервер",
		0,
		"Ошибка в процессе: " + ИнформацияОбОшибке.Описание,
		БиблиотекаКартинок.Ошибка32
	);

КонецФункции // ()

#КонецОбласти

Функция ОписаниеОНачалеВыполнения() Экспорт

	Возврат Новый ОписаниеОповещения(
		"ОтображениеНачала",
		УправлениеЧтениеФайловКлиент,
		,
		"ОшибкаВПроцессеПомещения",
		УправлениеЧтениеФайловКлиент
	);

КонецФункции // ()

#Область ТехническийНачалоВыполнения

Функция ОтображениеНачала(ПомещаемыйФайл, ОтказОтПомещенияФайла, ДополнительныеПараметры) Экспорт

	Состояние(
		"Прогрес передачи файла на сервер",
		0,
		"Старт загрузки файла: " + ПомещаемыйФайл["Имя"],
		БиблиотекаКартинок.бит_НачатьРазговор
	);

КонецФункции // ()

#КонецОбласти

#КонецОбласти

#Область Исключения

Функция ИсключениеНетФайла(Путь)

	Возврат "Файла на клиенте не существует: " + Путь;

КонецФункции // ()

Функция ИсключениеНекорректныеДанныеПомещения(Данные)

	Если ТипЗнч(Данные) <> Тип("Структура") Тогда
	
		Возврат "Не корректный тип данных";
	
	КонецЕсли;
	
	ПередаваемыеДанные = Новый Массив;
	
	ПередаваемыеДанные.Добавить();
	Для каждого Элемент Из Данные Цикл
	
		ПередаваемыеДанные.Добавить(Элемент.Ключ);
	
	КонецЦикла;
	Ключи = СтрСоединить(ПередаваемыеДанные, ", ");
	
	Возврат "В структуре с полями: "
		+ Ключи
		+ " должен быть указан Путь(ПолноеИмяФайла) или диалог для пользователя(Диалог)";

КонецФункции // ()

#КонецОбласти


