
#Область ПользовательскиеФункции

Функция ЗначениеСвойства(Настройка) Экспорт

	Свойство = Настройка.Свойство;
	Контрагент = Настройка.ОбъектВх;
	
	Возврат ПланыВидовХарактеристик.ОбщиеСвойстваГосуслуги.ЗначениеСвойства(Свойство, Контрагент);

КонецФункции // ()

Функция ЗначениеСвойстваВЧисло(Настройка) Экспорт

	Значение = ЗначениеСвойства(Настройка);
	ОписаниеТипа = Новый ОписаниеТипов("Число");
	Возврат КонвертироватьСтрокуВТип(Значение, ОписаниеТипа);

КонецФункции // (

Функция ЗначениеСвойстваВДату(Настройка) Экспорт

	Значение = ЗначениеСвойства(Настройка);
	ОписаниеТипа = Новый ОписаниеТипов("Дата");
	Возврат КонвертироватьСтрокуВТип(Значение, ОписаниеТипа);

КонецФункции

Функция ТекущееЗначение(Настройка) Экспорт

	Свойство = Настройка.СвойствоНазначение;
	Контрагент = Настройка.ОбъектВх;
	
	Возврат ОбъектыСервер.ПолучитьЗначениеСвойства(Контрагент, Свойство.Код);

КонецФункции // (




#КонецОбласти

#Область ТехническийИнтерфейс

Процедура ПеренестиЗначения() Экспорт

	НоваяДата = ТекущаяДата();
	ДатаПоследнегоОбновления = Константы.ДатаПоследнегоОбновленияРеквизитовПоГосуслугам.Получить();
	Контрагенты = КонтрагентыСАктуальнымиОбновлениями(ДатаПоследнегоОбновления);
	
	Настройки = АктуальныеДанныеНастроек();
	
	НачатьТранзакцию();
	
	Попытка
	
		Для каждого Контрагент Из Контрагенты Цикл
		
			ПеренестиЗначенияПоКонтрагенту(Контрагент, Настройки);
		
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
	
	Исключение
		ОтменитьТранзакцию();
		Возврат;
	КонецПопытки;
	
	Константы.ДатаПоследнегоОбновленияРеквизитовПоГосуслугам.Установить(НоваяДата);

КонецПроцедуры

Функция ВычислитьФункциюПоТипу(Настройка) Экспорт

	Варианты = Перечисления.СтандартныеФункцииКонвертации;
	ТипНастройки = Настройка.СтандартныеФункции;
	Если ТипНастройки = Варианты.Перенести Тогда
	
		Возврат ЗначениеСвойства(Настройка);
	
	ИначеЕсли ТипНастройки = Варианты.ВЧисло Тогда
	
		Возврат ЗначениеСвойстваВЧисло(Настройка);
	
	ИначеЕсли ТипНастройки = Варианты.ВДату Тогда
	
		Возврат ЗначениеСвойстваВДату(Настройка);
	
	ИначеЕсли ТипНастройки = Варианты.СвояКонвертация Тогда
	
		Возврат ВычислитьПользовательскуюФункцию(Настройка);
	
	Иначе
	
		ВызватьИсключение УправленияСообщениями.ПредупреждениеОшибкаСистемы("Нет такой функции");
	
	КонецЕсли;

КонецФункции // ()

Функция ПолучитьДанныеНастройки(Настройка, Менеджер, ОбъектВх = Неопределено) Экспорт

	ДанныеНастройки = Новый Структура;
	ДанныеНастройки.Вставить("Менеджер", Менеджер);
	ДанныеНастройки.Вставить("ОбъектВх", ОбъектВх);
	ДанныеНастройки.Вставить("Свойство", Настройка.Свойство);
	ДанныеНастройки.Вставить("СвойствоНазначение", Настройка.СвойствоНазначение);
	
	ВызовВТестовомРежиме = ?(ЗначениеЗаполнено(ОбъектВх), Истина, Ложь);
	ТекстФункции = ?(ВызовВТестовомРежиме, Настройка.Функция, ПреобразоватьВБоевойВызов(Настройка.Функция));
	ДанныеНастройки.Вставить("Функция", ТекстФункции);
	ДанныеНастройки.Вставить("СтандартныеФункции", Настройка.СтандартныеФункции);
	
	Возврат ДанныеНастройки;

КонецФункции // ()

#КонецОбласти

#Область Техническая

Функция КонвертироватьСтрокуВТип(Значение, ОписаниеТипа)

	Возврат ОписаниеТипа.ПривестиЗначение(Значение);

КонецФункции // ()
// Менеджер и Объект снова
Функция ВычислитьПользовательскуюФункцию(Настройка)
	
	Запрос = Настройка.Функция;
	ОбъектВх = Настройка.ОбъектВх;
	Свойство = Настройка.Свойство;
	СвойствоНазначение = Настройка.СвойствоНазначение;
	Менеджер = Настройка.Менеджер;
	
	Возврат ВычислитьФункцию(Настройка, Менеджер, ОбъектВх, Свойство, СвойствоНазначение, Запрос);

КонецФункции

Функция ВычислитьФункцию(Настройка,
						Знач Менеджер,
						Знач ОбъектВх,
						Знач Свойство,
						Знач СвойствоНазначение,
						Знач Запрос)

	Значение = Неопределено;
	Попытка
		Выполнить(Запрос);
	Исключение
		ВызватьИсключение УправленияСообщениями.ПредупреждениеОбПользовательскойОшибке(
			"Ошибка в выполнении функции: " + ОписаниеОшибки()
		);
	КонецПопытки;
	
	Возврат Значение;

КонецФункции // ()


Функция АктуальныеДанныеНастроек()

	АктуальныеНастройки = АктуальныеНастройки();
	
	Настройки = Новый Массив;
	Для каждого Настройка Из АктуальныеНастройки Цикл
	
		ДанныеНастройки = ПолучитьДанныеНастройки(
			Настройка,
			Справочники.ФункцииКонвертацииСвойств
		);
		
		Настройки.Добавить(ДанныеНастройки);
	
	КонецЦикла;
	
	Возврат Настройки;

КонецФункции // ()




#Область ВспомогательныйФормированиеНастроек

Функция ПреобразоватьВБоевойВызов(Знач Запрос)

	Запрос = СтрЗаменить(Запрос, "Менеджер.ЗначениеСвойства()",       "Менеджер.ЗначениеСвойства(Настройка)");
	Запрос = СтрЗаменить(Запрос, "Менеджер.ЗначениеСвойстваВЧисло()", "Менеджер.ЗначениеСвойстваВЧисло(Настройка)");
	Запрос = СтрЗаменить(Запрос, "Менеджер.ЗначениеСвойстваВДату()",  "Менеджер.ЗначениеСвойстваВДату(Настройка)");
	Запрос = СтрЗаменить(Запрос, "Менеджер.ТекущееЗначение()",        "Менеджер.ТекущееЗначение(Настройка)");
	
	Возврат Запрос;

КонецФункции // ()


#КонецОбласти

Функция АктуальныеНастройки()

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ФункцииКонвертацииСвойств.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ФункцииКонвертацииСвойств КАК ФункцииКонвертацииСвойств
		|ГДЕ
		|	ФункцииКонвертацииСвойств.ПометкаУдаления = ЛОЖЬ
		|	И ФункцииКонвертацииСвойств.Используется = ИСТИНА";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Ссылка");

КонецФункции // ()

Процедура ПеренестиЗначенияПоКонтрагенту(Контрагент, Настройки)

	НовыеЗначения = Новый Соответствие;
	
	Отчет = Новый Массив;
	Для каждого Настройка Из Настройки Цикл
	
		Настройка["ОбъектВх"] = Контрагент;
		Попытка
		
			Значение = ВычислитьФункциюПоТипу(Настройка);
		
		Исключение
			Отчет.Добавить("Не удалось рассчитать значение: " + ОписаниеОшибки());
		КонецПопытки;
		
		СвойствоНазначение = Настройка.СвойствоНазначение;
		НовыеЗначения.Вставить(СвойствоНазначение, Значение);
	
	КонецЦикла;
	
	Если Отчет.Количество() > 0 Тогда
	
		ЗаписьЖурналаРегистрации(
			"Ошибка переноса данных из Госуслуг",
			УровеньЖурналаРегистрации.Ошибка,
			,
			Контрагент,
			СтрСоединить(Отчет, Символы.ПС)
		);
		Возврат;
	
	КонецЕсли;
	
	Для каждого НовоеЗначение Из НовыеЗначения Цикл
	
		ОбъектыСервер.ЗаписатьЗначениеСвойства(
			Контрагент,
			НовоеЗначение.Ключ.Код,
			НовоеЗначение.Значение
		);
	
	КонецЦикла;

КонецПроцедуры

Функция КонтрагентыСАктуальнымиОбновлениями(ДатаПоследнегоОбновления)

	Возврат РегистрыСведений.ОбщиеСведения.КонтрагентыСНовымиДанными(ДатаПоследнегоОбновления);

КонецФункции // ()


#КонецОбласти